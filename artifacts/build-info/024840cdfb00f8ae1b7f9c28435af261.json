{
	"id": "024840cdfb00f8ae1b7f9c28435af261",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"Pratice2nd.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.7;\n\n\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\";\nimport \"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\";\nimport \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\";\nimport \"./Ownable.sol\";\n\n\ncontract TwoFactor is Ownable, ERC721Holder, ERC1155Holder {\n    \n    function _transferERC721FundsToAddress(\n        address toAddress,\n        address tokenAddress,\n        uint256 tokenId\n    ) private {\n        IERC721(tokenAddress).safeTransferFrom(address(this), toAddress, tokenId);\n    }\n}"
			},
			"Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.7;\nimport \"@openzeppelin/contracts/utils/Context.sol\";\n/** \n * @dev This contract module is inspired from \n * https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\n * OpenZepplin Ownable contract. The code is forked from Ownable except \n * 2 functions i.e. renounce and transfer ownership. In our usecase, we do not require users \n * to transfer or renounce ownership as it is always aligned with the original user.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(\n        address indexed previousOwner,\n        address indexed newOwner\n    );\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}"
			},
			"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC1155/utils/ERC1155Holder.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./ERC1155Receiver.sol\";\n\n/**\n * Simple implementation of `ERC1155Receiver` that will allow a contract to hold ERC1155 tokens.\n *\n * IMPORTANT: When inheriting this contract, you must include a way to use the received tokens, otherwise they will be\n * stuck.\n *\n * @dev _Available since v3.1._\n */\ncontract ERC1155Holder is ERC1155Receiver {\n    function onERC1155Received(\n        address,\n        address,\n        uint256,\n        uint256,\n        bytes memory\n    ) public virtual override returns (bytes4) {\n        return this.onERC1155Received.selector;\n    }\n\n    function onERC1155BatchReceived(\n        address,\n        address,\n        uint256[] memory,\n        uint256[] memory,\n        bytes memory\n    ) public virtual override returns (bytes4) {\n        return this.onERC1155BatchReceived.selector;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/IERC1155.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\n *\n * _Available since v3.1._\n */\ninterface IERC1155 is IERC165 {\n    /**\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    event TransferBatch(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256[] ids,\n        uint256[] values\n    );\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) external view returns (uint256);\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids)\n        external\n        view\n        returns (uint256[] memory);\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the caller.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address account, address operator) external view returns (bool);\n\n    /**\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata amounts,\n        bytes calldata data\n    ) external;\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/utils/ERC721Holder.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC721Receiver.sol\";\n\n/**\n * @dev Implementation of the {IERC721Receiver} interface.\n *\n * Accepts all token transfers.\n * Make sure the contract is able to use its token with {IERC721-safeTransferFrom}, {IERC721-approve} or {IERC721-setApprovalForAll}.\n */\ncontract ERC721Holder is IERC721Receiver {\n    /**\n     * @dev See {IERC721Receiver-onERC721Received}.\n     *\n     * Always returns `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address,\n        address,\n        uint256,\n        bytes memory\n    ) public virtual override returns (bytes4) {\n        return this.onERC721Received.selector;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/utils/ERC1155Receiver.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC1155Receiver.sol\";\nimport \"../../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev _Available since v3.1._\n */\nabstract contract ERC1155Receiver is ERC165, IERC1155Receiver {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return interfaceId == type(IERC1155Receiver).interfaceId || super.supportsInterface(interfaceId);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC1155/IERC1155Receiver.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev _Available since v3.1._\n */\ninterface IERC1155Receiver is IERC165 {\n    /**\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\n     *\n     * NOTE: To accept the transfer, this must return\n     * `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n     * (i.e. 0xf23a6e61, or its own function selector).\n     *\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param id The ID of the token being transferred\n     * @param value The amount of tokens being transferred\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n     */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n\n    /**\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\n     * been updated.\n     *\n     * NOTE: To accept the transfer(s), this must return\n     * `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n     * (i.e. 0xbc197c81, or its own function selector).\n     *\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n     */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"IERC1155": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._",
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":\"IERC1155\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x8e93de94c9062ebc94fb7e2e3929b0781ac6a2b7772e2f7a59045861c93e5be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f920a631bf986c610fe573d3c70a2bb6f224f86f4a8550016470c7ee476c9ab5\",\"dweb:/ipfs/QmYzsyVMfnaREKHcHv5RPS8Xg5r1Q38E2SDsGBTnXeFWzb\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"IERC1155Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "_Available since v3.1._",
						"kind": "dev",
						"methods": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
								"details": "Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"ids": "An array containing ids of each token being transferred (order and length must match values array)",
									"operator": "The address which initiated the batch transfer (i.e. msg.sender)",
									"values": "An array containing amounts of each token being transferred (order and length must match ids array)"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
								}
							},
							"onERC1155Received(address,address,uint256,uint256,bytes)": {
								"details": "Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"id": "The ID of the token being transferred",
									"operator": "The address which initiated the transfer (i.e. msg.sender)",
									"value": "The amount of tokens being transferred"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"_Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol": {
				"ERC1155Holder": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "_Available since v3.1._",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":451:973  contract ERC1155Holder is ERC1155Receiver {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":451:973  contract ERC1155Holder is ERC1155Receiver {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xbc197c81\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xf23a6e61\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":387:608  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_3:\n      tag_6\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      tag_9\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":724:971  function onERC1155BatchReceived(... */\n    tag_4:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":499:718  function onERC1155Received(... */\n    tag_5:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":387:608  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_9:\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":489:493  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":527:561  type(IERC1155Receiver).interfaceId */\n      0x4e2312e000000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":512:561  interfaceId == type(IERC1155Receiver).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":512:523  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":512:561  interfaceId == type(IERC1155Receiver).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":512:601  interfaceId == type(IERC1155Receiver).interfaceId || super.supportsInterface(interfaceId) */\n      dup1\n      tag_24\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":565:601  super.supportsInterface(interfaceId) */\n      tag_25\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":589:600  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":565:588  super.supportsInterface */\n      tag_26\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":565:601  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_25:\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":512:601  interfaceId == type(IERC1155Receiver).interfaceId || super.supportsInterface(interfaceId) */\n    tag_24:\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":505:601  return interfaceId == type(IERC1155Receiver).interfaceId || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":387:608  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":724:971  function onERC1155BatchReceived(... */\n    tag_15:\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":903:909  bytes4 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":928:964  this.onERC1155BatchReceived.selector */\n      shl(0xe0, 0xbc197c81)\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":921:964  return this.onERC1155BatchReceived.selector */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":724:971  function onERC1155BatchReceived(... */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":499:718  function onERC1155Received(... */\n    tag_21:\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":655:661  bytes4 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":680:711  this.onERC1155Received.selector */\n      shl(0xe0, 0xf23a6e61)\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":673:711  return this.onERC1155Received.selector */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":499:718  function onERC1155Received(... */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_26:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":914:918  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":952:977  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:948  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":930:977  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24:746   */\n    tag_31:\n        /* \"#utility.yul\":120:125   */\n      0x00\n        /* \"#utility.yul\":145:226   */\n      tag_33\n        /* \"#utility.yul\":161:225   */\n      tag_34\n        /* \"#utility.yul\":218:224   */\n      dup5\n        /* \"#utility.yul\":161:225   */\n      tag_35\n      jump\t// in\n    tag_34:\n        /* \"#utility.yul\":145:226   */\n      tag_36\n      jump\t// in\n    tag_33:\n        /* \"#utility.yul\":136:226   */\n      swap1\n      pop\n        /* \"#utility.yul\":246:251   */\n      dup1\n        /* \"#utility.yul\":275:281   */\n      dup4\n        /* \"#utility.yul\":268:273   */\n      dup3\n        /* \"#utility.yul\":261:282   */\n      mstore\n        /* \"#utility.yul\":309:313   */\n      0x20\n        /* \"#utility.yul\":302:307   */\n      dup3\n        /* \"#utility.yul\":298:314   */\n      add\n        /* \"#utility.yul\":291:314   */\n      swap1\n      pop\n        /* \"#utility.yul\":335:341   */\n      dup3\n        /* \"#utility.yul\":385:388   */\n      dup6\n        /* \"#utility.yul\":377:381   */\n      0x20\n        /* \"#utility.yul\":369:375   */\n      dup7\n        /* \"#utility.yul\":365:382   */\n      mul\n        /* \"#utility.yul\":360:363   */\n      dup3\n        /* \"#utility.yul\":356:383   */\n      add\n        /* \"#utility.yul\":353:389   */\n      gt\n        /* \"#utility.yul\":350:493   */\n      iszero\n      tag_37\n      jumpi\n        /* \"#utility.yul\":404:483   */\n      tag_38\n      tag_39\n      jump\t// in\n    tag_38:\n        /* \"#utility.yul\":350:493   */\n    tag_37:\n        /* \"#utility.yul\":517:518   */\n      0x00\n        /* \"#utility.yul\":502:740   */\n    tag_40:\n        /* \"#utility.yul\":527:533   */\n      dup6\n        /* \"#utility.yul\":524:525   */\n      dup2\n        /* \"#utility.yul\":521:534   */\n      lt\n        /* \"#utility.yul\":502:740   */\n      iszero\n      tag_42\n      jumpi\n        /* \"#utility.yul\":595:598   */\n      dup2\n        /* \"#utility.yul\":624:661   */\n      tag_43\n        /* \"#utility.yul\":657:660   */\n      dup9\n        /* \"#utility.yul\":645:655   */\n      dup3\n        /* \"#utility.yul\":624:661   */\n      tag_44\n      jump\t// in\n    tag_43:\n        /* \"#utility.yul\":619:622   */\n      dup5\n        /* \"#utility.yul\":612:662   */\n      mstore\n        /* \"#utility.yul\":691:695   */\n      0x20\n        /* \"#utility.yul\":686:689   */\n      dup5\n        /* \"#utility.yul\":682:696   */\n      add\n        /* \"#utility.yul\":675:696   */\n      swap4\n      pop\n        /* \"#utility.yul\":725:729   */\n      0x20\n        /* \"#utility.yul\":720:723   */\n      dup4\n        /* \"#utility.yul\":716:730   */\n      add\n        /* \"#utility.yul\":709:730   */\n      swap3\n      pop\n        /* \"#utility.yul\":562:740   */\n      pop\n        /* \"#utility.yul\":549:550   */\n      0x01\n        /* \"#utility.yul\":546:547   */\n      dup2\n        /* \"#utility.yul\":542:551   */\n      add\n        /* \"#utility.yul\":537:551   */\n      swap1\n      pop\n        /* \"#utility.yul\":502:740   */\n      jump(tag_40)\n    tag_42:\n        /* \"#utility.yul\":506:520   */\n      pop\n        /* \"#utility.yul\":126:746   */\n      pop\n      pop\n        /* \"#utility.yul\":24:746   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":752:1162   */\n    tag_45:\n        /* \"#utility.yul\":829:834   */\n      0x00\n        /* \"#utility.yul\":854:919   */\n      tag_47\n        /* \"#utility.yul\":870:918   */\n      tag_48\n        /* \"#utility.yul\":911:917   */\n      dup5\n        /* \"#utility.yul\":870:918   */\n      tag_49\n      jump\t// in\n    tag_48:\n        /* \"#utility.yul\":854:919   */\n      tag_36\n      jump\t// in\n    tag_47:\n        /* \"#utility.yul\":845:919   */\n      swap1\n      pop\n        /* \"#utility.yul\":942:948   */\n      dup3\n        /* \"#utility.yul\":935:940   */\n      dup2\n        /* \"#utility.yul\":928:949   */\n      mstore\n        /* \"#utility.yul\":980:984   */\n      0x20\n        /* \"#utility.yul\":973:978   */\n      dup2\n        /* \"#utility.yul\":969:985   */\n      add\n        /* \"#utility.yul\":1018:1021   */\n      dup5\n        /* \"#utility.yul\":1009:1015   */\n      dup5\n        /* \"#utility.yul\":1004:1007   */\n      dup5\n        /* \"#utility.yul\":1000:1016   */\n      add\n        /* \"#utility.yul\":997:1022   */\n      gt\n        /* \"#utility.yul\":994:1106   */\n      iszero\n      tag_50\n      jumpi\n        /* \"#utility.yul\":1025:1104   */\n      tag_51\n      tag_52\n      jump\t// in\n    tag_51:\n        /* \"#utility.yul\":994:1106   */\n    tag_50:\n        /* \"#utility.yul\":1115:1156   */\n      tag_53\n        /* \"#utility.yul\":1149:1155   */\n      dup5\n        /* \"#utility.yul\":1144:1147   */\n      dup3\n        /* \"#utility.yul\":1139:1142   */\n      dup6\n        /* \"#utility.yul\":1115:1156   */\n      tag_54\n      jump\t// in\n    tag_53:\n        /* \"#utility.yul\":835:1162   */\n      pop\n        /* \"#utility.yul\":752:1162   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1168:1307   */\n    tag_55:\n        /* \"#utility.yul\":1214:1219   */\n      0x00\n        /* \"#utility.yul\":1252:1258   */\n      dup2\n        /* \"#utility.yul\":1239:1259   */\n      calldataload\n        /* \"#utility.yul\":1230:1259   */\n      swap1\n      pop\n        /* \"#utility.yul\":1268:1301   */\n      tag_57\n        /* \"#utility.yul\":1295:1300   */\n      dup2\n        /* \"#utility.yul\":1268:1301   */\n      tag_58\n      jump\t// in\n    tag_57:\n        /* \"#utility.yul\":1168:1307   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1330:1700   */\n    tag_59:\n        /* \"#utility.yul\":1401:1406   */\n      0x00\n        /* \"#utility.yul\":1450:1453   */\n      dup3\n        /* \"#utility.yul\":1443:1447   */\n      0x1f\n        /* \"#utility.yul\":1435:1441   */\n      dup4\n        /* \"#utility.yul\":1431:1448   */\n      add\n        /* \"#utility.yul\":1427:1454   */\n      slt\n        /* \"#utility.yul\":1417:1539   */\n      tag_61\n      jumpi\n        /* \"#utility.yul\":1458:1537   */\n      tag_62\n      tag_63\n      jump\t// in\n    tag_62:\n        /* \"#utility.yul\":1417:1539   */\n    tag_61:\n        /* \"#utility.yul\":1575:1581   */\n      dup2\n        /* \"#utility.yul\":1562:1582   */\n      calldataload\n        /* \"#utility.yul\":1600:1694   */\n      tag_64\n        /* \"#utility.yul\":1690:1693   */\n      dup5\n        /* \"#utility.yul\":1682:1688   */\n      dup3\n        /* \"#utility.yul\":1675:1679   */\n      0x20\n        /* \"#utility.yul\":1667:1673   */\n      dup7\n        /* \"#utility.yul\":1663:1680   */\n      add\n        /* \"#utility.yul\":1600:1694   */\n      tag_31\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":1591:1694   */\n      swap2\n      pop\n        /* \"#utility.yul\":1407:1700   */\n      pop\n        /* \"#utility.yul\":1330:1700   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1706:1843   */\n    tag_65:\n        /* \"#utility.yul\":1751:1756   */\n      0x00\n        /* \"#utility.yul\":1789:1795   */\n      dup2\n        /* \"#utility.yul\":1776:1796   */\n      calldataload\n        /* \"#utility.yul\":1767:1796   */\n      swap1\n      pop\n        /* \"#utility.yul\":1805:1837   */\n      tag_67\n        /* \"#utility.yul\":1831:1836   */\n      dup2\n        /* \"#utility.yul\":1805:1837   */\n      tag_68\n      jump\t// in\n    tag_67:\n        /* \"#utility.yul\":1706:1843   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1862:2200   */\n    tag_69:\n        /* \"#utility.yul\":1917:1922   */\n      0x00\n        /* \"#utility.yul\":1966:1969   */\n      dup3\n        /* \"#utility.yul\":1959:1963   */\n      0x1f\n        /* \"#utility.yul\":1951:1957   */\n      dup4\n        /* \"#utility.yul\":1947:1964   */\n      add\n        /* \"#utility.yul\":1943:1970   */\n      slt\n        /* \"#utility.yul\":1933:2055   */\n      tag_71\n      jumpi\n        /* \"#utility.yul\":1974:2053   */\n      tag_72\n      tag_63\n      jump\t// in\n    tag_72:\n        /* \"#utility.yul\":1933:2055   */\n    tag_71:\n        /* \"#utility.yul\":2091:2097   */\n      dup2\n        /* \"#utility.yul\":2078:2098   */\n      calldataload\n        /* \"#utility.yul\":2116:2194   */\n      tag_73\n        /* \"#utility.yul\":2190:2193   */\n      dup5\n        /* \"#utility.yul\":2182:2188   */\n      dup3\n        /* \"#utility.yul\":2175:2179   */\n      0x20\n        /* \"#utility.yul\":2167:2173   */\n      dup7\n        /* \"#utility.yul\":2163:2180   */\n      add\n        /* \"#utility.yul\":2116:2194   */\n      tag_45\n      jump\t// in\n    tag_73:\n        /* \"#utility.yul\":2107:2194   */\n      swap2\n      pop\n        /* \"#utility.yul\":1923:2200   */\n      pop\n        /* \"#utility.yul\":1862:2200   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2206:2345   */\n    tag_44:\n        /* \"#utility.yul\":2252:2257   */\n      0x00\n        /* \"#utility.yul\":2290:2296   */\n      dup2\n        /* \"#utility.yul\":2277:2297   */\n      calldataload\n        /* \"#utility.yul\":2268:2297   */\n      swap1\n      pop\n        /* \"#utility.yul\":2306:2339   */\n      tag_75\n        /* \"#utility.yul\":2333:2338   */\n      dup2\n        /* \"#utility.yul\":2306:2339   */\n      tag_76\n      jump\t// in\n    tag_75:\n        /* \"#utility.yul\":2206:2345   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2351:3860   */\n    tag_14:\n        /* \"#utility.yul\":2505:2511   */\n      0x00\n        /* \"#utility.yul\":2513:2519   */\n      dup1\n        /* \"#utility.yul\":2521:2527   */\n      0x00\n        /* \"#utility.yul\":2529:2535   */\n      dup1\n        /* \"#utility.yul\":2537:2543   */\n      0x00\n        /* \"#utility.yul\":2586:2589   */\n      0xa0\n        /* \"#utility.yul\":2574:2583   */\n      dup7\n        /* \"#utility.yul\":2565:2572   */\n      dup9\n        /* \"#utility.yul\":2561:2584   */\n      sub\n        /* \"#utility.yul\":2557:2590   */\n      slt\n        /* \"#utility.yul\":2554:2674   */\n      iszero\n      tag_78\n      jumpi\n        /* \"#utility.yul\":2593:2672   */\n      tag_79\n      tag_80\n      jump\t// in\n    tag_79:\n        /* \"#utility.yul\":2554:2674   */\n    tag_78:\n        /* \"#utility.yul\":2713:2714   */\n      0x00\n        /* \"#utility.yul\":2738:2791   */\n      tag_81\n        /* \"#utility.yul\":2783:2790   */\n      dup9\n        /* \"#utility.yul\":2774:2780   */\n      dup3\n        /* \"#utility.yul\":2763:2772   */\n      dup10\n        /* \"#utility.yul\":2759:2781   */\n      add\n        /* \"#utility.yul\":2738:2791   */\n      tag_55\n      jump\t// in\n    tag_81:\n        /* \"#utility.yul\":2728:2791   */\n      swap6\n      pop\n        /* \"#utility.yul\":2684:2801   */\n      pop\n        /* \"#utility.yul\":2840:2842   */\n      0x20\n        /* \"#utility.yul\":2866:2919   */\n      tag_82\n        /* \"#utility.yul\":2911:2918   */\n      dup9\n        /* \"#utility.yul\":2902:2908   */\n      dup3\n        /* \"#utility.yul\":2891:2900   */\n      dup10\n        /* \"#utility.yul\":2887:2909   */\n      add\n        /* \"#utility.yul\":2866:2919   */\n      tag_55\n      jump\t// in\n    tag_82:\n        /* \"#utility.yul\":2856:2919   */\n      swap5\n      pop\n        /* \"#utility.yul\":2811:2929   */\n      pop\n        /* \"#utility.yul\":2996:2998   */\n      0x40\n        /* \"#utility.yul\":2985:2994   */\n      dup7\n        /* \"#utility.yul\":2981:2999   */\n      add\n        /* \"#utility.yul\":2968:3000   */\n      calldataload\n        /* \"#utility.yul\":3027:3045   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3019:3025   */\n      dup2\n        /* \"#utility.yul\":3016:3046   */\n      gt\n        /* \"#utility.yul\":3013:3130   */\n      iszero\n      tag_83\n      jumpi\n        /* \"#utility.yul\":3049:3128   */\n      tag_84\n      tag_85\n      jump\t// in\n    tag_84:\n        /* \"#utility.yul\":3013:3130   */\n    tag_83:\n        /* \"#utility.yul\":3154:3232   */\n      tag_86\n        /* \"#utility.yul\":3224:3231   */\n      dup9\n        /* \"#utility.yul\":3215:3221   */\n      dup3\n        /* \"#utility.yul\":3204:3213   */\n      dup10\n        /* \"#utility.yul\":3200:3222   */\n      add\n        /* \"#utility.yul\":3154:3232   */\n      tag_59\n      jump\t// in\n    tag_86:\n        /* \"#utility.yul\":3144:3232   */\n      swap4\n      pop\n        /* \"#utility.yul\":2939:3242   */\n      pop\n        /* \"#utility.yul\":3309:3311   */\n      0x60\n        /* \"#utility.yul\":3298:3307   */\n      dup7\n        /* \"#utility.yul\":3294:3312   */\n      add\n        /* \"#utility.yul\":3281:3313   */\n      calldataload\n        /* \"#utility.yul\":3340:3358   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3332:3338   */\n      dup2\n        /* \"#utility.yul\":3329:3359   */\n      gt\n        /* \"#utility.yul\":3326:3443   */\n      iszero\n      tag_87\n      jumpi\n        /* \"#utility.yul\":3362:3441   */\n      tag_88\n      tag_85\n      jump\t// in\n    tag_88:\n        /* \"#utility.yul\":3326:3443   */\n    tag_87:\n        /* \"#utility.yul\":3467:3545   */\n      tag_89\n        /* \"#utility.yul\":3537:3544   */\n      dup9\n        /* \"#utility.yul\":3528:3534   */\n      dup3\n        /* \"#utility.yul\":3517:3526   */\n      dup10\n        /* \"#utility.yul\":3513:3535   */\n      add\n        /* \"#utility.yul\":3467:3545   */\n      tag_59\n      jump\t// in\n    tag_89:\n        /* \"#utility.yul\":3457:3545   */\n      swap3\n      pop\n        /* \"#utility.yul\":3252:3555   */\n      pop\n        /* \"#utility.yul\":3622:3625   */\n      0x80\n        /* \"#utility.yul\":3611:3620   */\n      dup7\n        /* \"#utility.yul\":3607:3626   */\n      add\n        /* \"#utility.yul\":3594:3627   */\n      calldataload\n        /* \"#utility.yul\":3654:3672   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3646:3652   */\n      dup2\n        /* \"#utility.yul\":3643:3673   */\n      gt\n        /* \"#utility.yul\":3640:3757   */\n      iszero\n      tag_90\n      jumpi\n        /* \"#utility.yul\":3676:3755   */\n      tag_91\n      tag_85\n      jump\t// in\n    tag_91:\n        /* \"#utility.yul\":3640:3757   */\n    tag_90:\n        /* \"#utility.yul\":3781:3843   */\n      tag_92\n        /* \"#utility.yul\":3835:3842   */\n      dup9\n        /* \"#utility.yul\":3826:3832   */\n      dup3\n        /* \"#utility.yul\":3815:3824   */\n      dup10\n        /* \"#utility.yul\":3811:3833   */\n      add\n        /* \"#utility.yul\":3781:3843   */\n      tag_69\n      jump\t// in\n    tag_92:\n        /* \"#utility.yul\":3771:3843   */\n      swap2\n      pop\n        /* \"#utility.yul\":3565:3853   */\n      pop\n        /* \"#utility.yul\":2351:3860   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3866:4955   */\n    tag_20:\n        /* \"#utility.yul\":3970:3976   */\n      0x00\n        /* \"#utility.yul\":3978:3984   */\n      dup1\n        /* \"#utility.yul\":3986:3992   */\n      0x00\n        /* \"#utility.yul\":3994:4000   */\n      dup1\n        /* \"#utility.yul\":4002:4008   */\n      0x00\n        /* \"#utility.yul\":4051:4054   */\n      0xa0\n        /* \"#utility.yul\":4039:4048   */\n      dup7\n        /* \"#utility.yul\":4030:4037   */\n      dup9\n        /* \"#utility.yul\":4026:4049   */\n      sub\n        /* \"#utility.yul\":4022:4055   */\n      slt\n        /* \"#utility.yul\":4019:4139   */\n      iszero\n      tag_94\n      jumpi\n        /* \"#utility.yul\":4058:4137   */\n      tag_95\n      tag_80\n      jump\t// in\n    tag_95:\n        /* \"#utility.yul\":4019:4139   */\n    tag_94:\n        /* \"#utility.yul\":4178:4179   */\n      0x00\n        /* \"#utility.yul\":4203:4256   */\n      tag_96\n        /* \"#utility.yul\":4248:4255   */\n      dup9\n        /* \"#utility.yul\":4239:4245   */\n      dup3\n        /* \"#utility.yul\":4228:4237   */\n      dup10\n        /* \"#utility.yul\":4224:4246   */\n      add\n        /* \"#utility.yul\":4203:4256   */\n      tag_55\n      jump\t// in\n    tag_96:\n        /* \"#utility.yul\":4193:4256   */\n      swap6\n      pop\n        /* \"#utility.yul\":4149:4266   */\n      pop\n        /* \"#utility.yul\":4305:4307   */\n      0x20\n        /* \"#utility.yul\":4331:4384   */\n      tag_97\n        /* \"#utility.yul\":4376:4383   */\n      dup9\n        /* \"#utility.yul\":4367:4373   */\n      dup3\n        /* \"#utility.yul\":4356:4365   */\n      dup10\n        /* \"#utility.yul\":4352:4374   */\n      add\n        /* \"#utility.yul\":4331:4384   */\n      tag_55\n      jump\t// in\n    tag_97:\n        /* \"#utility.yul\":4321:4384   */\n      swap5\n      pop\n        /* \"#utility.yul\":4276:4394   */\n      pop\n        /* \"#utility.yul\":4433:4435   */\n      0x40\n        /* \"#utility.yul\":4459:4512   */\n      tag_98\n        /* \"#utility.yul\":4504:4511   */\n      dup9\n        /* \"#utility.yul\":4495:4501   */\n      dup3\n        /* \"#utility.yul\":4484:4493   */\n      dup10\n        /* \"#utility.yul\":4480:4502   */\n      add\n        /* \"#utility.yul\":4459:4512   */\n      tag_44\n      jump\t// in\n    tag_98:\n        /* \"#utility.yul\":4449:4512   */\n      swap4\n      pop\n        /* \"#utility.yul\":4404:4522   */\n      pop\n        /* \"#utility.yul\":4561:4563   */\n      0x60\n        /* \"#utility.yul\":4587:4640   */\n      tag_99\n        /* \"#utility.yul\":4632:4639   */\n      dup9\n        /* \"#utility.yul\":4623:4629   */\n      dup3\n        /* \"#utility.yul\":4612:4621   */\n      dup10\n        /* \"#utility.yul\":4608:4630   */\n      add\n        /* \"#utility.yul\":4587:4640   */\n      tag_44\n      jump\t// in\n    tag_99:\n        /* \"#utility.yul\":4577:4640   */\n      swap3\n      pop\n        /* \"#utility.yul\":4532:4650   */\n      pop\n        /* \"#utility.yul\":4717:4720   */\n      0x80\n        /* \"#utility.yul\":4706:4715   */\n      dup7\n        /* \"#utility.yul\":4702:4721   */\n      add\n        /* \"#utility.yul\":4689:4722   */\n      calldataload\n        /* \"#utility.yul\":4749:4767   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4741:4747   */\n      dup2\n        /* \"#utility.yul\":4738:4768   */\n      gt\n        /* \"#utility.yul\":4735:4852   */\n      iszero\n      tag_100\n      jumpi\n        /* \"#utility.yul\":4771:4850   */\n      tag_101\n      tag_85\n      jump\t// in\n    tag_101:\n        /* \"#utility.yul\":4735:4852   */\n    tag_100:\n        /* \"#utility.yul\":4876:4938   */\n      tag_102\n        /* \"#utility.yul\":4930:4937   */\n      dup9\n        /* \"#utility.yul\":4921:4927   */\n      dup3\n        /* \"#utility.yul\":4910:4919   */\n      dup10\n        /* \"#utility.yul\":4906:4928   */\n      add\n        /* \"#utility.yul\":4876:4938   */\n      tag_69\n      jump\t// in\n    tag_102:\n        /* \"#utility.yul\":4866:4938   */\n      swap2\n      pop\n        /* \"#utility.yul\":4660:4948   */\n      pop\n        /* \"#utility.yul\":3866:4955   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4961:5288   */\n    tag_8:\n        /* \"#utility.yul\":5019:5025   */\n      0x00\n        /* \"#utility.yul\":5068:5070   */\n      0x20\n        /* \"#utility.yul\":5056:5065   */\n      dup3\n        /* \"#utility.yul\":5047:5054   */\n      dup5\n        /* \"#utility.yul\":5043:5066   */\n      sub\n        /* \"#utility.yul\":5039:5071   */\n      slt\n        /* \"#utility.yul\":5036:5155   */\n      iszero\n      tag_104\n      jumpi\n        /* \"#utility.yul\":5074:5153   */\n      tag_105\n      tag_80\n      jump\t// in\n    tag_105:\n        /* \"#utility.yul\":5036:5155   */\n    tag_104:\n        /* \"#utility.yul\":5194:5195   */\n      0x00\n        /* \"#utility.yul\":5219:5271   */\n      tag_106\n        /* \"#utility.yul\":5263:5270   */\n      dup5\n        /* \"#utility.yul\":5254:5260   */\n      dup3\n        /* \"#utility.yul\":5243:5252   */\n      dup6\n        /* \"#utility.yul\":5239:5261   */\n      add\n        /* \"#utility.yul\":5219:5271   */\n      tag_65\n      jump\t// in\n    tag_106:\n        /* \"#utility.yul\":5209:5271   */\n      swap2\n      pop\n        /* \"#utility.yul\":5165:5281   */\n      pop\n        /* \"#utility.yul\":4961:5288   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5294:5403   */\n    tag_107:\n        /* \"#utility.yul\":5375:5396   */\n      tag_109\n        /* \"#utility.yul\":5390:5395   */\n      dup2\n        /* \"#utility.yul\":5375:5396   */\n      tag_110\n      jump\t// in\n    tag_109:\n        /* \"#utility.yul\":5370:5373   */\n      dup3\n        /* \"#utility.yul\":5363:5397   */\n      mstore\n        /* \"#utility.yul\":5294:5403   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5409:5524   */\n    tag_111:\n        /* \"#utility.yul\":5494:5517   */\n      tag_113\n        /* \"#utility.yul\":5511:5516   */\n      dup2\n        /* \"#utility.yul\":5494:5517   */\n      tag_114\n      jump\t// in\n    tag_113:\n        /* \"#utility.yul\":5489:5492   */\n      dup3\n        /* \"#utility.yul\":5482:5518   */\n      mstore\n        /* \"#utility.yul\":5409:5524   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5530:5740   */\n    tag_11:\n        /* \"#utility.yul\":5617:5621   */\n      0x00\n        /* \"#utility.yul\":5655:5657   */\n      0x20\n        /* \"#utility.yul\":5644:5653   */\n      dup3\n        /* \"#utility.yul\":5640:5658   */\n      add\n        /* \"#utility.yul\":5632:5658   */\n      swap1\n      pop\n        /* \"#utility.yul\":5668:5733   */\n      tag_116\n        /* \"#utility.yul\":5730:5731   */\n      0x00\n        /* \"#utility.yul\":5719:5728   */\n      dup4\n        /* \"#utility.yul\":5715:5732   */\n      add\n        /* \"#utility.yul\":5706:5712   */\n      dup5\n        /* \"#utility.yul\":5668:5733   */\n      tag_107\n      jump\t// in\n    tag_116:\n        /* \"#utility.yul\":5530:5740   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5746:5964   */\n    tag_17:\n        /* \"#utility.yul\":5837:5841   */\n      0x00\n        /* \"#utility.yul\":5875:5877   */\n      0x20\n        /* \"#utility.yul\":5864:5873   */\n      dup3\n        /* \"#utility.yul\":5860:5878   */\n      add\n        /* \"#utility.yul\":5852:5878   */\n      swap1\n      pop\n        /* \"#utility.yul\":5888:5957   */\n      tag_118\n        /* \"#utility.yul\":5954:5955   */\n      0x00\n        /* \"#utility.yul\":5943:5952   */\n      dup4\n        /* \"#utility.yul\":5939:5956   */\n      add\n        /* \"#utility.yul\":5930:5936   */\n      dup5\n        /* \"#utility.yul\":5888:5957   */\n      tag_111\n      jump\t// in\n    tag_118:\n        /* \"#utility.yul\":5746:5964   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5970:6099   */\n    tag_36:\n        /* \"#utility.yul\":6004:6010   */\n      0x00\n        /* \"#utility.yul\":6031:6051   */\n      tag_120\n      tag_121\n      jump\t// in\n    tag_120:\n        /* \"#utility.yul\":6021:6051   */\n      swap1\n      pop\n        /* \"#utility.yul\":6060:6093   */\n      tag_122\n        /* \"#utility.yul\":6088:6092   */\n      dup3\n        /* \"#utility.yul\":6080:6086   */\n      dup3\n        /* \"#utility.yul\":6060:6093   */\n      tag_123\n      jump\t// in\n    tag_122:\n        /* \"#utility.yul\":5970:6099   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6105:6180   */\n    tag_121:\n        /* \"#utility.yul\":6138:6144   */\n      0x00\n        /* \"#utility.yul\":6171:6173   */\n      0x40\n        /* \"#utility.yul\":6165:6174   */\n      mload\n        /* \"#utility.yul\":6155:6174   */\n      swap1\n      pop\n        /* \"#utility.yul\":6105:6180   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":6186:6497   */\n    tag_35:\n        /* \"#utility.yul\":6263:6267   */\n      0x00\n        /* \"#utility.yul\":6353:6371   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6345:6351   */\n      dup3\n        /* \"#utility.yul\":6342:6372   */\n      gt\n        /* \"#utility.yul\":6339:6395   */\n      iszero\n      tag_126\n      jumpi\n        /* \"#utility.yul\":6375:6393   */\n      tag_127\n      tag_128\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":6339:6395   */\n    tag_126:\n        /* \"#utility.yul\":6425:6429   */\n      0x20\n        /* \"#utility.yul\":6417:6423   */\n      dup3\n        /* \"#utility.yul\":6413:6430   */\n      mul\n        /* \"#utility.yul\":6405:6430   */\n      swap1\n      pop\n        /* \"#utility.yul\":6485:6489   */\n      0x20\n        /* \"#utility.yul\":6479:6483   */\n      dup2\n        /* \"#utility.yul\":6475:6490   */\n      add\n        /* \"#utility.yul\":6467:6490   */\n      swap1\n      pop\n        /* \"#utility.yul\":6186:6497   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6503:6810   */\n    tag_49:\n        /* \"#utility.yul\":6564:6568   */\n      0x00\n        /* \"#utility.yul\":6654:6672   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6646:6652   */\n      dup3\n        /* \"#utility.yul\":6643:6673   */\n      gt\n        /* \"#utility.yul\":6640:6696   */\n      iszero\n      tag_130\n      jumpi\n        /* \"#utility.yul\":6676:6694   */\n      tag_131\n      tag_128\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":6640:6696   */\n    tag_130:\n        /* \"#utility.yul\":6714:6743   */\n      tag_132\n        /* \"#utility.yul\":6736:6742   */\n      dup3\n        /* \"#utility.yul\":6714:6743   */\n      tag_133\n      jump\t// in\n    tag_132:\n        /* \"#utility.yul\":6706:6743   */\n      swap1\n      pop\n        /* \"#utility.yul\":6798:6802   */\n      0x20\n        /* \"#utility.yul\":6792:6796   */\n      dup2\n        /* \"#utility.yul\":6788:6803   */\n      add\n        /* \"#utility.yul\":6780:6803   */\n      swap1\n      pop\n        /* \"#utility.yul\":6503:6810   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6816:6912   */\n    tag_134:\n        /* \"#utility.yul\":6853:6860   */\n      0x00\n        /* \"#utility.yul\":6882:6906   */\n      tag_136\n        /* \"#utility.yul\":6900:6905   */\n      dup3\n        /* \"#utility.yul\":6882:6906   */\n      tag_137\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":6871:6906   */\n      swap1\n      pop\n        /* \"#utility.yul\":6816:6912   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6918:7008   */\n    tag_110:\n        /* \"#utility.yul\":6952:6959   */\n      0x00\n        /* \"#utility.yul\":6995:7000   */\n      dup2\n        /* \"#utility.yul\":6988:7001   */\n      iszero\n        /* \"#utility.yul\":6981:7002   */\n      iszero\n        /* \"#utility.yul\":6970:7002   */\n      swap1\n      pop\n        /* \"#utility.yul\":6918:7008   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7014:7163   */\n    tag_114:\n        /* \"#utility.yul\":7050:7057   */\n      0x00\n        /* \"#utility.yul\":7090:7156   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7083:7088   */\n      dup3\n        /* \"#utility.yul\":7079:7157   */\n      and\n        /* \"#utility.yul\":7068:7157   */\n      swap1\n      pop\n        /* \"#utility.yul\":7014:7163   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7169:7295   */\n    tag_137:\n        /* \"#utility.yul\":7206:7213   */\n      0x00\n        /* \"#utility.yul\":7246:7288   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":7239:7244   */\n      dup3\n        /* \"#utility.yul\":7235:7289   */\n      and\n        /* \"#utility.yul\":7224:7289   */\n      swap1\n      pop\n        /* \"#utility.yul\":7169:7295   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7301:7378   */\n    tag_141:\n        /* \"#utility.yul\":7338:7345   */\n      0x00\n        /* \"#utility.yul\":7367:7372   */\n      dup2\n        /* \"#utility.yul\":7356:7372   */\n      swap1\n      pop\n        /* \"#utility.yul\":7301:7378   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7384:7538   */\n    tag_54:\n        /* \"#utility.yul\":7468:7474   */\n      dup3\n        /* \"#utility.yul\":7463:7466   */\n      dup2\n        /* \"#utility.yul\":7458:7461   */\n      dup4\n        /* \"#utility.yul\":7445:7475   */\n      calldatacopy\n        /* \"#utility.yul\":7530:7531   */\n      0x00\n        /* \"#utility.yul\":7521:7527   */\n      dup4\n        /* \"#utility.yul\":7516:7519   */\n      dup4\n        /* \"#utility.yul\":7512:7528   */\n      add\n        /* \"#utility.yul\":7505:7532   */\n      mstore\n        /* \"#utility.yul\":7384:7538   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7544:7825   */\n    tag_123:\n        /* \"#utility.yul\":7627:7654   */\n      tag_145\n        /* \"#utility.yul\":7649:7653   */\n      dup3\n        /* \"#utility.yul\":7627:7654   */\n      tag_133\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":7619:7625   */\n      dup2\n        /* \"#utility.yul\":7615:7655   */\n      add\n        /* \"#utility.yul\":7757:7763   */\n      dup2\n        /* \"#utility.yul\":7745:7755   */\n      dup2\n        /* \"#utility.yul\":7742:7764   */\n      lt\n        /* \"#utility.yul\":7721:7739   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7709:7719   */\n      dup3\n        /* \"#utility.yul\":7706:7740   */\n      gt\n        /* \"#utility.yul\":7703:7765   */\n      or\n        /* \"#utility.yul\":7700:7788   */\n      iszero\n      tag_146\n      jumpi\n        /* \"#utility.yul\":7768:7786   */\n      tag_147\n      tag_128\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":7700:7788   */\n    tag_146:\n        /* \"#utility.yul\":7808:7818   */\n      dup1\n        /* \"#utility.yul\":7804:7806   */\n      0x40\n        /* \"#utility.yul\":7797:7819   */\n      mstore\n        /* \"#utility.yul\":7587:7825   */\n      pop\n        /* \"#utility.yul\":7544:7825   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7831:8011   */\n    tag_128:\n        /* \"#utility.yul\":7879:7956   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7876:7877   */\n      0x00\n        /* \"#utility.yul\":7869:7957   */\n      mstore\n        /* \"#utility.yul\":7976:7980   */\n      0x41\n        /* \"#utility.yul\":7973:7974   */\n      0x04\n        /* \"#utility.yul\":7966:7981   */\n      mstore\n        /* \"#utility.yul\":8000:8004   */\n      0x24\n        /* \"#utility.yul\":7997:7998   */\n      0x00\n        /* \"#utility.yul\":7990:8005   */\n      revert\n        /* \"#utility.yul\":8017:8134   */\n    tag_63:\n        /* \"#utility.yul\":8126:8127   */\n      0x00\n        /* \"#utility.yul\":8123:8124   */\n      dup1\n        /* \"#utility.yul\":8116:8128   */\n      revert\n        /* \"#utility.yul\":8140:8257   */\n    tag_39:\n        /* \"#utility.yul\":8249:8250   */\n      0x00\n        /* \"#utility.yul\":8246:8247   */\n      dup1\n        /* \"#utility.yul\":8239:8251   */\n      revert\n        /* \"#utility.yul\":8263:8380   */\n    tag_52:\n        /* \"#utility.yul\":8372:8373   */\n      0x00\n        /* \"#utility.yul\":8369:8370   */\n      dup1\n        /* \"#utility.yul\":8362:8374   */\n      revert\n        /* \"#utility.yul\":8386:8503   */\n    tag_85:\n        /* \"#utility.yul\":8495:8496   */\n      0x00\n        /* \"#utility.yul\":8492:8493   */\n      dup1\n        /* \"#utility.yul\":8485:8497   */\n      revert\n        /* \"#utility.yul\":8509:8626   */\n    tag_80:\n        /* \"#utility.yul\":8618:8619   */\n      0x00\n        /* \"#utility.yul\":8615:8616   */\n      dup1\n        /* \"#utility.yul\":8608:8620   */\n      revert\n        /* \"#utility.yul\":8632:8734   */\n    tag_133:\n        /* \"#utility.yul\":8673:8679   */\n      0x00\n        /* \"#utility.yul\":8724:8726   */\n      0x1f\n        /* \"#utility.yul\":8720:8727   */\n      not\n        /* \"#utility.yul\":8715:8717   */\n      0x1f\n        /* \"#utility.yul\":8708:8713   */\n      dup4\n        /* \"#utility.yul\":8704:8718   */\n      add\n        /* \"#utility.yul\":8700:8728   */\n      and\n        /* \"#utility.yul\":8690:8728   */\n      swap1\n      pop\n        /* \"#utility.yul\":8632:8734   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8740:8862   */\n    tag_58:\n        /* \"#utility.yul\":8813:8837   */\n      tag_156\n        /* \"#utility.yul\":8831:8836   */\n      dup2\n        /* \"#utility.yul\":8813:8837   */\n      tag_134\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":8806:8811   */\n      dup2\n        /* \"#utility.yul\":8803:8838   */\n      eq\n        /* \"#utility.yul\":8793:8856   */\n      tag_157\n      jumpi\n        /* \"#utility.yul\":8852:8853   */\n      0x00\n        /* \"#utility.yul\":8849:8850   */\n      dup1\n        /* \"#utility.yul\":8842:8854   */\n      revert\n        /* \"#utility.yul\":8793:8856   */\n    tag_157:\n        /* \"#utility.yul\":8740:8862   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8868:8988   */\n    tag_68:\n        /* \"#utility.yul\":8940:8963   */\n      tag_159\n        /* \"#utility.yul\":8957:8962   */\n      dup2\n        /* \"#utility.yul\":8940:8963   */\n      tag_114\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":8933:8938   */\n      dup2\n        /* \"#utility.yul\":8930:8964   */\n      eq\n        /* \"#utility.yul\":8920:8982   */\n      tag_160\n      jumpi\n        /* \"#utility.yul\":8978:8979   */\n      0x00\n        /* \"#utility.yul\":8975:8976   */\n      dup1\n        /* \"#utility.yul\":8968:8980   */\n      revert\n        /* \"#utility.yul\":8920:8982   */\n    tag_160:\n        /* \"#utility.yul\":8868:8988   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8994:9116   */\n    tag_76:\n        /* \"#utility.yul\":9067:9091   */\n      tag_162\n        /* \"#utility.yul\":9085:9090   */\n      dup2\n        /* \"#utility.yul\":9067:9091   */\n      tag_141\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":9060:9065   */\n      dup2\n        /* \"#utility.yul\":9057:9092   */\n      eq\n        /* \"#utility.yul\":9047:9110   */\n      tag_163\n      jumpi\n        /* \"#utility.yul\":9106:9107   */\n      0x00\n        /* \"#utility.yul\":9103:9104   */\n      dup1\n        /* \"#utility.yul\":9096:9108   */\n      revert\n        /* \"#utility.yul\":9047:9110   */\n    tag_163:\n        /* \"#utility.yul\":8994:9116   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212205c38a71feef050dfade62137089f79984c2ea208278ab8984649ed46135259f464736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610722806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806301ffc9a714610046578063bc197c8114610076578063f23a6e61146100a6575b600080fd5b610060600480360381019061005b9190610497565b6100d6565b60405161006d91906104e2565b60405180910390f35b610090600480360381019061008b9190610331565b610150565b60405161009d91906104fd565b60405180910390f35b6100c060048036038101906100bb9190610400565b610165565b6040516100cd91906104fd565b60405180910390f35b60007f4e2312e0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061014957506101488261017a565b5b9050919050565b600063bc197c8160e01b905095945050505050565b600063f23a6e6160e01b905095945050505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60006101f76101f28461053d565b610518565b9050808382526020820190508285602086028201111561021a57610219610682565b5b60005b8581101561024a5781610230888261031c565b84526020840193506020830192505060018101905061021d565b5050509392505050565b600061026761026284610569565b610518565b90508281526020810184848401111561028357610282610687565b5b61028e84828561060e565b509392505050565b6000813590506102a5816106a7565b92915050565b600082601f8301126102c0576102bf61067d565b5b81356102d08482602086016101e4565b91505092915050565b6000813590506102e8816106be565b92915050565b600082601f8301126103035761030261067d565b5b8135610313848260208601610254565b91505092915050565b60008135905061032b816106d5565b92915050565b600080600080600060a0868803121561034d5761034c610691565b5b600061035b88828901610296565b955050602061036c88828901610296565b945050604086013567ffffffffffffffff81111561038d5761038c61068c565b5b610399888289016102ab565b935050606086013567ffffffffffffffff8111156103ba576103b961068c565b5b6103c6888289016102ab565b925050608086013567ffffffffffffffff8111156103e7576103e661068c565b5b6103f3888289016102ee565b9150509295509295909350565b600080600080600060a0868803121561041c5761041b610691565b5b600061042a88828901610296565b955050602061043b88828901610296565b945050604061044c8882890161031c565b935050606061045d8882890161031c565b925050608086013567ffffffffffffffff81111561047e5761047d61068c565b5b61048a888289016102ee565b9150509295509295909350565b6000602082840312156104ad576104ac610691565b5b60006104bb848285016102d9565b91505092915050565b6104cd816105ac565b82525050565b6104dc816105b8565b82525050565b60006020820190506104f760008301846104c4565b92915050565b600060208201905061051260008301846104d3565b92915050565b6000610522610533565b905061052e828261061d565b919050565b6000604051905090565b600067ffffffffffffffff8211156105585761055761064e565b5b602082029050602081019050919050565b600067ffffffffffffffff8211156105845761058361064e565b5b61058d82610696565b9050602081019050919050565b60006105a5826105e4565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b61062682610696565b810181811067ffffffffffffffff821117156106455761064461064e565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b6106b08161059a565b81146106bb57600080fd5b50565b6106c7816105b8565b81146106d257600080fd5b50565b6106de81610604565b81146106e957600080fd5b5056fea26469706673582212205c38a71feef050dfade62137089f79984c2ea208278ab8984649ed46135259f464736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x722 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0xBC197C81 EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0xA6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x497 JUMP JUMPDEST PUSH2 0xD6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D SWAP2 SWAP1 PUSH2 0x4E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x90 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x331 JUMP JUMPDEST PUSH2 0x150 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9D SWAP2 SWAP1 PUSH2 0x4FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBB SWAP2 SWAP1 PUSH2 0x400 JUMP JUMPDEST PUSH2 0x165 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCD SWAP2 SWAP1 PUSH2 0x4FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x4E2312E000000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x149 JUMPI POP PUSH2 0x148 DUP3 PUSH2 0x17A JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F7 PUSH2 0x1F2 DUP5 PUSH2 0x53D JUMP JUMPDEST PUSH2 0x518 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x21A JUMPI PUSH2 0x219 PUSH2 0x682 JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x24A JUMPI DUP2 PUSH2 0x230 DUP9 DUP3 PUSH2 0x31C JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x21D JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x267 PUSH2 0x262 DUP5 PUSH2 0x569 JUMP JUMPDEST PUSH2 0x518 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x283 JUMPI PUSH2 0x282 PUSH2 0x687 JUMP JUMPDEST JUMPDEST PUSH2 0x28E DUP5 DUP3 DUP6 PUSH2 0x60E JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2A5 DUP2 PUSH2 0x6A7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2C0 JUMPI PUSH2 0x2BF PUSH2 0x67D JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2D0 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1E4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2E8 DUP2 PUSH2 0x6BE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x303 JUMPI PUSH2 0x302 PUSH2 0x67D JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x313 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x254 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x32B DUP2 PUSH2 0x6D5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x34D JUMPI PUSH2 0x34C PUSH2 0x691 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x35B DUP9 DUP3 DUP10 ADD PUSH2 0x296 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x36C DUP9 DUP3 DUP10 ADD PUSH2 0x296 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x38D JUMPI PUSH2 0x38C PUSH2 0x68C JUMP JUMPDEST JUMPDEST PUSH2 0x399 DUP9 DUP3 DUP10 ADD PUSH2 0x2AB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3BA JUMPI PUSH2 0x3B9 PUSH2 0x68C JUMP JUMPDEST JUMPDEST PUSH2 0x3C6 DUP9 DUP3 DUP10 ADD PUSH2 0x2AB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3E7 JUMPI PUSH2 0x3E6 PUSH2 0x68C JUMP JUMPDEST JUMPDEST PUSH2 0x3F3 DUP9 DUP3 DUP10 ADD PUSH2 0x2EE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x41C JUMPI PUSH2 0x41B PUSH2 0x691 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x42A DUP9 DUP3 DUP10 ADD PUSH2 0x296 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x43B DUP9 DUP3 DUP10 ADD PUSH2 0x296 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x44C DUP9 DUP3 DUP10 ADD PUSH2 0x31C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x45D DUP9 DUP3 DUP10 ADD PUSH2 0x31C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x47E JUMPI PUSH2 0x47D PUSH2 0x68C JUMP JUMPDEST JUMPDEST PUSH2 0x48A DUP9 DUP3 DUP10 ADD PUSH2 0x2EE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4AD JUMPI PUSH2 0x4AC PUSH2 0x691 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4BB DUP5 DUP3 DUP6 ADD PUSH2 0x2D9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4CD DUP2 PUSH2 0x5AC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x4DC DUP2 PUSH2 0x5B8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4F7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4C4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x512 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4D3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x522 PUSH2 0x533 JUMP JUMPDEST SWAP1 POP PUSH2 0x52E DUP3 DUP3 PUSH2 0x61D JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x558 JUMPI PUSH2 0x557 PUSH2 0x64E JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x584 JUMPI PUSH2 0x583 PUSH2 0x64E JUMP JUMPDEST JUMPDEST PUSH2 0x58D DUP3 PUSH2 0x696 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5A5 DUP3 PUSH2 0x5E4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH2 0x626 DUP3 PUSH2 0x696 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x645 JUMPI PUSH2 0x644 PUSH2 0x64E JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6B0 DUP2 PUSH2 0x59A JUMP JUMPDEST DUP2 EQ PUSH2 0x6BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x6C7 DUP2 PUSH2 0x5B8 JUMP JUMPDEST DUP2 EQ PUSH2 0x6D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x6DE DUP2 PUSH2 0x604 JUMP JUMPDEST DUP2 EQ PUSH2 0x6E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5C CODESIZE 0xA7 0x1F 0xEE CREATE POP 0xDF 0xAD 0xE6 0x21 CALLDATACOPY ADDMOD SWAP16 PUSH26 0x984C2EA208278AB8984649ED46135259F464736F6C6343000807 STOP CALLER ",
							"sourceMap": "451:522:2:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@onERC1155BatchReceived_212": {
									"entryPoint": 336,
									"id": 212,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"@onERC1155Received_189": {
									"entryPoint": 357,
									"id": 189,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"@supportsInterface_246": {
									"entryPoint": 214,
									"id": 246,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_453": {
									"entryPoint": 378,
									"id": 453,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 484,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 596,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 662,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 683,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 729,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 750,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 796,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr": {
									"entryPoint": 817,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr": {
									"entryPoint": 1024,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 1175,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 1220,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes4_to_t_bytes4_fromStack": {
									"entryPoint": 1235,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 1250,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
									"entryPoint": 1277,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 1304,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 1331,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 1341,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 1385,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1434,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 1452,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 1464,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1508,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1540,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory": {
									"entryPoint": 1550,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"finalize_allocation": {
									"entryPoint": 1565,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1614,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 1661,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 1666,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 1671,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 1676,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1681,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 1686,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 1703,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 1726,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1749,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:9119:12",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "126:620:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "136:90:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "218:6:12"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "161:56:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "161:64:12"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "145:15:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "145:81:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "136:5:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "235:16:12",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "246:5:12"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "239:3:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "268:5:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "275:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "261:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "261:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "261:21:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "291:23:12",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "302:5:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "309:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "298:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "298:16:12"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "291:3:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "324:17:12",
															"value": {
																"name": "offset",
																"nodeType": "YulIdentifier",
																"src": "335:6:12"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "328:3:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "390:103:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "404:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "404:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "404:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "360:3:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "369:6:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "377:4:12",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "365:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "365:17:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "356:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "356:27:12"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "385:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "353:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "353:36:12"
															},
															"nodeType": "YulIf",
															"src": "350:143:12"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "562:178:12",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "577:21:12",
																		"value": {
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "595:3:12"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "581:10:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "619:3:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "645:10:12"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "657:3:12"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_uint256",
																						"nodeType": "YulIdentifier",
																						"src": "624:20:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "624:37:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "612:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "612:50:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "612:50:12"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "675:21:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "686:3:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "691:4:12",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "682:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "682:14:12"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "675:3:12"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "709:21:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "720:3:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "725:4:12",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "716:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "716:14:12"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "709:3:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "524:1:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "527:6:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "521:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "521:13:12"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "535:18:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "537:14:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "546:1:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "549:1:12",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "542:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "542:9:12"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "537:1:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "506:14:12",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "508:10:12",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "517:1:12",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "512:1:12",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "502:238:12"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "96:6:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "104:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "112:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "120:5:12",
														"type": ""
													}
												],
												"src": "24:722:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "835:327:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "845:74:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "911:6:12"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "870:40:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "870:48:12"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "854:15:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "854:65:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "845:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "935:5:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "942:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "928:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "928:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "928:21:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "958:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "973:5:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "980:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "969:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "969:16:12"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "962:3:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1023:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "1025:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1025:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1025:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "1004:3:12"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1009:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1000:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1000:16:12"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1018:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "997:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "997:25:12"
															},
															"nodeType": "YulIf",
															"src": "994:112:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "1139:3:12"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "1144:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1149:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1115:23:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1115:41:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1115:41:12"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "808:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "813:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "821:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "829:5:12",
														"type": ""
													}
												],
												"src": "752:410:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1220:87:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1230:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1252:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1239:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1239:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1230:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1295:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1268:26:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1268:33:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1268:33:12"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1198:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1206:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1214:5:12",
														"type": ""
													}
												],
												"src": "1168:139:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1407:293:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1456:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "1458:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1458:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1458:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1435:6:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1443:4:12",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1431:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1431:17:12"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "1450:3:12"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1427:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1427:27:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1420:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1420:35:12"
															},
															"nodeType": "YulIf",
															"src": "1417:122:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1548:34:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1575:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1562:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1562:20:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1552:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1591:103:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1667:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1675:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1663:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1663:17:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1682:6:12"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1690:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "1600:62:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1600:94:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1591:5:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1385:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1393:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1401:5:12",
														"type": ""
													}
												],
												"src": "1330:370:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1757:86:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1767:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1789:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1776:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1776:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1767:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1831:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "1805:25:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1805:32:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1805:32:12"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1735:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1743:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1751:5:12",
														"type": ""
													}
												],
												"src": "1706:137:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1923:277:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1972:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "1974:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1974:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1974:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1951:6:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1959:4:12",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1947:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1947:17:12"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "1966:3:12"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1943:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1943:27:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1936:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1936:35:12"
															},
															"nodeType": "YulIf",
															"src": "1933:122:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2064:34:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2091:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2078:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2078:20:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2068:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2107:87:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2167:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2175:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2163:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2163:17:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2182:6:12"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2190:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2116:46:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2116:78:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2107:5:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1901:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1909:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1917:5:12",
														"type": ""
													}
												],
												"src": "1862:338:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2258:87:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2268:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2290:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2277:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2277:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2268:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2333:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2306:26:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2306:33:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2306:33:12"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2236:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2244:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2252:5:12",
														"type": ""
													}
												],
												"src": "2206:139:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2544:1316:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2591:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2593:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2593:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2593:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2565:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2574:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2561:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2561:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2586:3:12",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2557:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2557:33:12"
															},
															"nodeType": "YulIf",
															"src": "2554:120:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "2684:117:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2699:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2713:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2703:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2728:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2763:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2774:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2759:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2759:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2783:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2738:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2738:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2728:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2811:118:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2826:16:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2840:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2830:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2856:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2891:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2902:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2887:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2887:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2911:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2866:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2866:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2856:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2939:303:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2954:46:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2985:9:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2996:2:12",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2981:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2981:18:12"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "2968:12:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2968:32:12"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2958:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3047:83:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3049:77:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3049:79:12"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3049:79:12"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3019:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3027:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3016:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3016:30:12"
																	},
																	"nodeType": "YulIf",
																	"src": "3013:117:12"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3144:88:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3204:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3215:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3200:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3200:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3224:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "3154:45:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3154:78:12"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "3144:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3252:303:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3267:46:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3298:9:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3309:2:12",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3294:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3294:18:12"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "3281:12:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3281:32:12"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3271:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3360:83:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3362:77:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3362:79:12"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3362:79:12"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3332:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3340:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3329:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3329:30:12"
																	},
																	"nodeType": "YulIf",
																	"src": "3326:117:12"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3457:88:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3517:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3528:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3513:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3513:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3537:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "3467:45:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3467:78:12"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "3457:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3565:288:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3580:47:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3611:9:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3622:3:12",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3607:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3607:19:12"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "3594:12:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3594:33:12"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3584:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3674:83:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3676:77:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3676:79:12"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3676:79:12"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3646:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3654:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3643:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3643:30:12"
																	},
																	"nodeType": "YulIf",
																	"src": "3640:117:12"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3771:72:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3815:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3826:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3811:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3811:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3835:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "3781:29:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3781:62:12"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "3771:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2482:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2493:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2505:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2513:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2521:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "2529:6:12",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "2537:6:12",
														"type": ""
													}
												],
												"src": "2351:1509:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4009:946:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4056:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4058:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4058:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4058:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4030:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4039:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4026:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4026:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4051:3:12",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4022:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4022:33:12"
															},
															"nodeType": "YulIf",
															"src": "4019:120:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "4149:117:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4164:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4178:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4168:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4193:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4228:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4239:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4224:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4224:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4248:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4203:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4203:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4193:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4276:118:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4291:16:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4305:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4295:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4321:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4356:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4367:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4352:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4352:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4376:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4331:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4331:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4321:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4404:118:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4419:16:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4433:2:12",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4423:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4449:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4484:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4495:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4480:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4480:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4504:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4459:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4459:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "4449:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4532:118:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4547:16:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4561:2:12",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4551:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4577:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4612:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4623:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4608:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4608:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4632:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4587:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4587:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "4577:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4660:288:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4675:47:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4706:9:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4717:3:12",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4702:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4702:19:12"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "4689:12:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4689:33:12"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4679:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "4769:83:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "4771:77:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4771:79:12"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4771:79:12"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4741:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4749:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4738:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4738:30:12"
																	},
																	"nodeType": "YulIf",
																	"src": "4735:117:12"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4866:72:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4910:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4921:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4906:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4906:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4930:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "4876:29:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4876:62:12"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "4866:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3947:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3958:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3970:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3978:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3986:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3994:6:12",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "4002:6:12",
														"type": ""
													}
												],
												"src": "3866:1089:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5026:262:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5072:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5074:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5074:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5074:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5047:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5056:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5043:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5043:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5068:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5039:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5039:32:12"
															},
															"nodeType": "YulIf",
															"src": "5036:119:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "5165:116:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5180:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5194:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5184:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5209:62:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5243:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5254:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5239:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5239:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5263:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "5219:19:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5219:52:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5209:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4996:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5007:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5019:6:12",
														"type": ""
													}
												],
												"src": "4961:327:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5353:50:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5370:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5390:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "5375:14:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5375:21:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5363:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5363:34:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5363:34:12"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5341:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5348:3:12",
														"type": ""
													}
												],
												"src": "5294:109:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5472:52:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5489:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5511:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "5494:16:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5494:23:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5482:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5482:36:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5482:36:12"
														}
													]
												},
												"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5460:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5467:3:12",
														"type": ""
													}
												],
												"src": "5409:115:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5622:118:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5632:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5644:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5655:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5640:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5640:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5632:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5706:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5719:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5730:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5715:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5715:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5668:37:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5668:65:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5668:65:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5594:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5606:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5617:4:12",
														"type": ""
													}
												],
												"src": "5530:210:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5842:122:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5852:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5864:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5875:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5860:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5860:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5852:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5930:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5943:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5954:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5939:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5939:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5888:41:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5888:69:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5888:69:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5814:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5826:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5837:4:12",
														"type": ""
													}
												],
												"src": "5746:218:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6011:88:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6021:30:12",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "6031:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6031:20:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "6021:6:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "6080:6:12"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "6088:4:12"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "6060:19:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6060:33:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6060:33:12"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "5995:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6004:6:12",
														"type": ""
													}
												],
												"src": "5970:129:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6145:35:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6155:19:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6171:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6165:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6165:9:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "6155:6:12"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6138:6:12",
														"type": ""
													}
												],
												"src": "6105:75:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6268:229:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6373:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "6375:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6375:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6375:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6345:6:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6353:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6342:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6342:30:12"
															},
															"nodeType": "YulIf",
															"src": "6339:56:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6405:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6417:6:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6425:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "6413:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6413:17:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "6405:4:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6467:23:12",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "6479:4:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6485:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6475:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6475:15:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "6467:4:12"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6252:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "6263:4:12",
														"type": ""
													}
												],
												"src": "6186:311:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6569:241:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6674:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "6676:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6676:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6676:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6646:6:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6654:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6643:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6643:30:12"
															},
															"nodeType": "YulIf",
															"src": "6640:56:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6706:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6736:6:12"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "6714:21:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6714:29:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "6706:4:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6780:23:12",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "6792:4:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6798:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6788:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6788:15:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "6780:4:12"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6553:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "6564:4:12",
														"type": ""
													}
												],
												"src": "6503:307:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6861:51:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6871:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6900:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "6882:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6882:24:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "6871:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6843:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "6853:7:12",
														"type": ""
													}
												],
												"src": "6816:96:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6960:48:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6970:32:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6995:5:12"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "6988:6:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6988:13:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6981:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6981:21:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "6970:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6942:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "6952:7:12",
														"type": ""
													}
												],
												"src": "6918:90:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7058:105:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7068:89:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7083:5:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7090:66:12",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "7079:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7079:78:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "7068:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7040:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "7050:7:12",
														"type": ""
													}
												],
												"src": "7014:149:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7214:81:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7224:65:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7239:5:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7246:42:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "7235:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7235:54:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "7224:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7196:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "7206:7:12",
														"type": ""
													}
												],
												"src": "7169:126:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7346:32:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7356:16:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "7367:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "7356:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7328:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "7338:7:12",
														"type": ""
													}
												],
												"src": "7301:77:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7435:103:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "7458:3:12"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "7463:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7468:6:12"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "7445:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7445:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7445:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "7516:3:12"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "7521:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7512:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7512:16:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7530:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7505:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7505:27:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7505:27:12"
														}
													]
												},
												"name": "copy_calldata_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "7417:3:12",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "7422:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7427:6:12",
														"type": ""
													}
												],
												"src": "7384:154:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7587:238:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7597:58:12",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "7619:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "7649:4:12"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "7627:21:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7627:27:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7615:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7615:40:12"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "7601:10:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7766:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7768:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7768:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7768:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "7709:10:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7721:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "7706:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7706:34:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "7745:10:12"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7757:6:12"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "7742:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7742:22:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7703:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7703:62:12"
															},
															"nodeType": "YulIf",
															"src": "7700:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7804:2:12",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "7808:10:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7797:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7797:22:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7797:22:12"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7573:6:12",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7581:4:12",
														"type": ""
													}
												],
												"src": "7544:281:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7859:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7876:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7879:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7869:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7869:88:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7869:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7973:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7976:4:12",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7966:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7966:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7966:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7997:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8000:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7990:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7990:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7990:15:12"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "7831:180:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8106:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8123:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8126:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8116:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8116:12:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8116:12:12"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "8017:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8229:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8246:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8249:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8239:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8239:12:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8239:12:12"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nodeType": "YulFunctionDefinition",
												"src": "8140:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8352:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8369:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8372:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8362:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8362:12:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8362:12:12"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "8263:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8475:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8492:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8495:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8485:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8485:12:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8485:12:12"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "8386:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8598:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8615:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8618:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8608:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8608:12:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8608:12:12"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "8509:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8680:54:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8690:38:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8708:5:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8715:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8704:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8704:14:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8724:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "8720:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8720:7:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "8700:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8700:28:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "8690:6:12"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8663:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "8673:6:12",
														"type": ""
													}
												],
												"src": "8632:102:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8783:79:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8840:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8849:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8852:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8842:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8842:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8842:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8806:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "8831:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "8813:17:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8813:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "8803:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8803:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8796:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8796:43:12"
															},
															"nodeType": "YulIf",
															"src": "8793:63:12"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8776:5:12",
														"type": ""
													}
												],
												"src": "8740:122:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8910:78:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8966:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8975:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8978:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8968:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8968:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8968:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8933:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "8957:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nodeType": "YulIdentifier",
																					"src": "8940:16:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8940:23:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "8930:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8930:34:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8923:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8923:42:12"
															},
															"nodeType": "YulIf",
															"src": "8920:62:12"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8903:5:12",
														"type": ""
													}
												],
												"src": "8868:120:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9037:79:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9094:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9103:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9106:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9096:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9096:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9096:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9060:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "9085:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "9067:17:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9067:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "9057:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9057:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9050:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9050:43:12"
															},
															"nodeType": "YulIf",
															"src": "9047:63:12"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9030:5:12",
														"type": ""
													}
												],
												"src": "8994:122:12"
											}
										]
									},
									"contents": "{\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let src := offset\n        if gt(add(src, mul(length, 0x20)), end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n            src := add(src, 0x20)\n        }\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes4(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c806301ffc9a714610046578063bc197c8114610076578063f23a6e61146100a6575b600080fd5b610060600480360381019061005b9190610497565b6100d6565b60405161006d91906104e2565b60405180910390f35b610090600480360381019061008b9190610331565b610150565b60405161009d91906104fd565b60405180910390f35b6100c060048036038101906100bb9190610400565b610165565b6040516100cd91906104fd565b60405180910390f35b60007f4e2312e0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061014957506101488261017a565b5b9050919050565b600063bc197c8160e01b905095945050505050565b600063f23a6e6160e01b905095945050505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60006101f76101f28461053d565b610518565b9050808382526020820190508285602086028201111561021a57610219610682565b5b60005b8581101561024a5781610230888261031c565b84526020840193506020830192505060018101905061021d565b5050509392505050565b600061026761026284610569565b610518565b90508281526020810184848401111561028357610282610687565b5b61028e84828561060e565b509392505050565b6000813590506102a5816106a7565b92915050565b600082601f8301126102c0576102bf61067d565b5b81356102d08482602086016101e4565b91505092915050565b6000813590506102e8816106be565b92915050565b600082601f8301126103035761030261067d565b5b8135610313848260208601610254565b91505092915050565b60008135905061032b816106d5565b92915050565b600080600080600060a0868803121561034d5761034c610691565b5b600061035b88828901610296565b955050602061036c88828901610296565b945050604086013567ffffffffffffffff81111561038d5761038c61068c565b5b610399888289016102ab565b935050606086013567ffffffffffffffff8111156103ba576103b961068c565b5b6103c6888289016102ab565b925050608086013567ffffffffffffffff8111156103e7576103e661068c565b5b6103f3888289016102ee565b9150509295509295909350565b600080600080600060a0868803121561041c5761041b610691565b5b600061042a88828901610296565b955050602061043b88828901610296565b945050604061044c8882890161031c565b935050606061045d8882890161031c565b925050608086013567ffffffffffffffff81111561047e5761047d61068c565b5b61048a888289016102ee565b9150509295509295909350565b6000602082840312156104ad576104ac610691565b5b60006104bb848285016102d9565b91505092915050565b6104cd816105ac565b82525050565b6104dc816105b8565b82525050565b60006020820190506104f760008301846104c4565b92915050565b600060208201905061051260008301846104d3565b92915050565b6000610522610533565b905061052e828261061d565b919050565b6000604051905090565b600067ffffffffffffffff8211156105585761055761064e565b5b602082029050602081019050919050565b600067ffffffffffffffff8211156105845761058361064e565b5b61058d82610696565b9050602081019050919050565b60006105a5826105e4565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b61062682610696565b810181811067ffffffffffffffff821117156106455761064461064e565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b6106b08161059a565b81146106bb57600080fd5b50565b6106c7816105b8565b81146106d257600080fd5b50565b6106de81610604565b81146106e957600080fd5b5056fea26469706673582212205c38a71feef050dfade62137089f79984c2ea208278ab8984649ed46135259f464736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0xBC197C81 EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0xA6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x497 JUMP JUMPDEST PUSH2 0xD6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D SWAP2 SWAP1 PUSH2 0x4E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x90 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x331 JUMP JUMPDEST PUSH2 0x150 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9D SWAP2 SWAP1 PUSH2 0x4FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBB SWAP2 SWAP1 PUSH2 0x400 JUMP JUMPDEST PUSH2 0x165 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCD SWAP2 SWAP1 PUSH2 0x4FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x4E2312E000000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x149 JUMPI POP PUSH2 0x148 DUP3 PUSH2 0x17A JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F7 PUSH2 0x1F2 DUP5 PUSH2 0x53D JUMP JUMPDEST PUSH2 0x518 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x21A JUMPI PUSH2 0x219 PUSH2 0x682 JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x24A JUMPI DUP2 PUSH2 0x230 DUP9 DUP3 PUSH2 0x31C JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x21D JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x267 PUSH2 0x262 DUP5 PUSH2 0x569 JUMP JUMPDEST PUSH2 0x518 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x283 JUMPI PUSH2 0x282 PUSH2 0x687 JUMP JUMPDEST JUMPDEST PUSH2 0x28E DUP5 DUP3 DUP6 PUSH2 0x60E JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2A5 DUP2 PUSH2 0x6A7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2C0 JUMPI PUSH2 0x2BF PUSH2 0x67D JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2D0 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1E4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2E8 DUP2 PUSH2 0x6BE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x303 JUMPI PUSH2 0x302 PUSH2 0x67D JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x313 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x254 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x32B DUP2 PUSH2 0x6D5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x34D JUMPI PUSH2 0x34C PUSH2 0x691 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x35B DUP9 DUP3 DUP10 ADD PUSH2 0x296 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x36C DUP9 DUP3 DUP10 ADD PUSH2 0x296 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x38D JUMPI PUSH2 0x38C PUSH2 0x68C JUMP JUMPDEST JUMPDEST PUSH2 0x399 DUP9 DUP3 DUP10 ADD PUSH2 0x2AB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3BA JUMPI PUSH2 0x3B9 PUSH2 0x68C JUMP JUMPDEST JUMPDEST PUSH2 0x3C6 DUP9 DUP3 DUP10 ADD PUSH2 0x2AB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3E7 JUMPI PUSH2 0x3E6 PUSH2 0x68C JUMP JUMPDEST JUMPDEST PUSH2 0x3F3 DUP9 DUP3 DUP10 ADD PUSH2 0x2EE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x41C JUMPI PUSH2 0x41B PUSH2 0x691 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x42A DUP9 DUP3 DUP10 ADD PUSH2 0x296 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x43B DUP9 DUP3 DUP10 ADD PUSH2 0x296 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x44C DUP9 DUP3 DUP10 ADD PUSH2 0x31C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x45D DUP9 DUP3 DUP10 ADD PUSH2 0x31C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x47E JUMPI PUSH2 0x47D PUSH2 0x68C JUMP JUMPDEST JUMPDEST PUSH2 0x48A DUP9 DUP3 DUP10 ADD PUSH2 0x2EE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4AD JUMPI PUSH2 0x4AC PUSH2 0x691 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4BB DUP5 DUP3 DUP6 ADD PUSH2 0x2D9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4CD DUP2 PUSH2 0x5AC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x4DC DUP2 PUSH2 0x5B8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4F7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4C4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x512 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4D3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x522 PUSH2 0x533 JUMP JUMPDEST SWAP1 POP PUSH2 0x52E DUP3 DUP3 PUSH2 0x61D JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x558 JUMPI PUSH2 0x557 PUSH2 0x64E JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x584 JUMPI PUSH2 0x583 PUSH2 0x64E JUMP JUMPDEST JUMPDEST PUSH2 0x58D DUP3 PUSH2 0x696 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5A5 DUP3 PUSH2 0x5E4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH2 0x626 DUP3 PUSH2 0x696 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x645 JUMPI PUSH2 0x644 PUSH2 0x64E JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6B0 DUP2 PUSH2 0x59A JUMP JUMPDEST DUP2 EQ PUSH2 0x6BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x6C7 DUP2 PUSH2 0x5B8 JUMP JUMPDEST DUP2 EQ PUSH2 0x6D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x6DE DUP2 PUSH2 0x604 JUMP JUMPDEST DUP2 EQ PUSH2 0x6E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5C CODESIZE 0xA7 0x1F 0xEE CREATE POP 0xDF 0xAD 0xE6 0x21 CALLDATACOPY ADDMOD SWAP16 PUSH26 0x984C2EA208278AB8984649ED46135259F464736F6C6343000807 STOP CALLER ",
							"sourceMap": "451:522:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;387:221:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;724:247:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;499:219;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;387:221:3;489:4;527:34;512:49;;;:11;:49;;;;:89;;;;565:36;589:11;565:23;:36::i;:::-;512:89;505:96;;387:221;;;:::o;724:247:2:-;903:6;928:36;;;921:43;;724:247;;;;;;;:::o;499:219::-;655:6;680:31;;;673:38;;499:219;;;;;;;:::o;829:155:8:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;24:722:12:-;120:5;145:81;161:64;218:6;161:64;:::i;:::-;145:81;:::i;:::-;136:90;;246:5;275:6;268:5;261:21;309:4;302:5;298:16;291:23;;335:6;385:3;377:4;369:6;365:17;360:3;356:27;353:36;350:143;;;404:79;;:::i;:::-;350:143;517:1;502:238;527:6;524:1;521:13;502:238;;;595:3;624:37;657:3;645:10;624:37;:::i;:::-;619:3;612:50;691:4;686:3;682:14;675:21;;725:4;720:3;716:14;709:21;;562:178;549:1;546;542:9;537:14;;502:238;;;506:14;126:620;;24:722;;;;;:::o;752:410::-;829:5;854:65;870:48;911:6;870:48;:::i;:::-;854:65;:::i;:::-;845:74;;942:6;935:5;928:21;980:4;973:5;969:16;1018:3;1009:6;1004:3;1000:16;997:25;994:112;;;1025:79;;:::i;:::-;994:112;1115:41;1149:6;1144:3;1139;1115:41;:::i;:::-;835:327;752:410;;;;;:::o;1168:139::-;1214:5;1252:6;1239:20;1230:29;;1268:33;1295:5;1268:33;:::i;:::-;1168:139;;;;:::o;1330:370::-;1401:5;1450:3;1443:4;1435:6;1431:17;1427:27;1417:122;;1458:79;;:::i;:::-;1417:122;1575:6;1562:20;1600:94;1690:3;1682:6;1675:4;1667:6;1663:17;1600:94;:::i;:::-;1591:103;;1407:293;1330:370;;;;:::o;1706:137::-;1751:5;1789:6;1776:20;1767:29;;1805:32;1831:5;1805:32;:::i;:::-;1706:137;;;;:::o;1862:338::-;1917:5;1966:3;1959:4;1951:6;1947:17;1943:27;1933:122;;1974:79;;:::i;:::-;1933:122;2091:6;2078:20;2116:78;2190:3;2182:6;2175:4;2167:6;2163:17;2116:78;:::i;:::-;2107:87;;1923:277;1862:338;;;;:::o;2206:139::-;2252:5;2290:6;2277:20;2268:29;;2306:33;2333:5;2306:33;:::i;:::-;2206:139;;;;:::o;2351:1509::-;2505:6;2513;2521;2529;2537;2586:3;2574:9;2565:7;2561:23;2557:33;2554:120;;;2593:79;;:::i;:::-;2554:120;2713:1;2738:53;2783:7;2774:6;2763:9;2759:22;2738:53;:::i;:::-;2728:63;;2684:117;2840:2;2866:53;2911:7;2902:6;2891:9;2887:22;2866:53;:::i;:::-;2856:63;;2811:118;2996:2;2985:9;2981:18;2968:32;3027:18;3019:6;3016:30;3013:117;;;3049:79;;:::i;:::-;3013:117;3154:78;3224:7;3215:6;3204:9;3200:22;3154:78;:::i;:::-;3144:88;;2939:303;3309:2;3298:9;3294:18;3281:32;3340:18;3332:6;3329:30;3326:117;;;3362:79;;:::i;:::-;3326:117;3467:78;3537:7;3528:6;3517:9;3513:22;3467:78;:::i;:::-;3457:88;;3252:303;3622:3;3611:9;3607:19;3594:33;3654:18;3646:6;3643:30;3640:117;;;3676:79;;:::i;:::-;3640:117;3781:62;3835:7;3826:6;3815:9;3811:22;3781:62;:::i;:::-;3771:72;;3565:288;2351:1509;;;;;;;;:::o;3866:1089::-;3970:6;3978;3986;3994;4002;4051:3;4039:9;4030:7;4026:23;4022:33;4019:120;;;4058:79;;:::i;:::-;4019:120;4178:1;4203:53;4248:7;4239:6;4228:9;4224:22;4203:53;:::i;:::-;4193:63;;4149:117;4305:2;4331:53;4376:7;4367:6;4356:9;4352:22;4331:53;:::i;:::-;4321:63;;4276:118;4433:2;4459:53;4504:7;4495:6;4484:9;4480:22;4459:53;:::i;:::-;4449:63;;4404:118;4561:2;4587:53;4632:7;4623:6;4612:9;4608:22;4587:53;:::i;:::-;4577:63;;4532:118;4717:3;4706:9;4702:19;4689:33;4749:18;4741:6;4738:30;4735:117;;;4771:79;;:::i;:::-;4735:117;4876:62;4930:7;4921:6;4910:9;4906:22;4876:62;:::i;:::-;4866:72;;4660:288;3866:1089;;;;;;;;:::o;4961:327::-;5019:6;5068:2;5056:9;5047:7;5043:23;5039:32;5036:119;;;5074:79;;:::i;:::-;5036:119;5194:1;5219:52;5263:7;5254:6;5243:9;5239:22;5219:52;:::i;:::-;5209:62;;5165:116;4961:327;;;;:::o;5294:109::-;5375:21;5390:5;5375:21;:::i;:::-;5370:3;5363:34;5294:109;;:::o;5409:115::-;5494:23;5511:5;5494:23;:::i;:::-;5489:3;5482:36;5409:115;;:::o;5530:210::-;5617:4;5655:2;5644:9;5640:18;5632:26;;5668:65;5730:1;5719:9;5715:17;5706:6;5668:65;:::i;:::-;5530:210;;;;:::o;5746:218::-;5837:4;5875:2;5864:9;5860:18;5852:26;;5888:69;5954:1;5943:9;5939:17;5930:6;5888:69;:::i;:::-;5746:218;;;;:::o;5970:129::-;6004:6;6031:20;;:::i;:::-;6021:30;;6060:33;6088:4;6080:6;6060:33;:::i;:::-;5970:129;;;:::o;6105:75::-;6138:6;6171:2;6165:9;6155:19;;6105:75;:::o;6186:311::-;6263:4;6353:18;6345:6;6342:30;6339:56;;;6375:18;;:::i;:::-;6339:56;6425:4;6417:6;6413:17;6405:25;;6485:4;6479;6475:15;6467:23;;6186:311;;;:::o;6503:307::-;6564:4;6654:18;6646:6;6643:30;6640:56;;;6676:18;;:::i;:::-;6640:56;6714:29;6736:6;6714:29;:::i;:::-;6706:37;;6798:4;6792;6788:15;6780:23;;6503:307;;;:::o;6816:96::-;6853:7;6882:24;6900:5;6882:24;:::i;:::-;6871:35;;6816:96;;;:::o;6918:90::-;6952:7;6995:5;6988:13;6981:21;6970:32;;6918:90;;;:::o;7014:149::-;7050:7;7090:66;7083:5;7079:78;7068:89;;7014:149;;;:::o;7169:126::-;7206:7;7246:42;7239:5;7235:54;7224:65;;7169:126;;;:::o;7301:77::-;7338:7;7367:5;7356:16;;7301:77;;;:::o;7384:154::-;7468:6;7463:3;7458;7445:30;7530:1;7521:6;7516:3;7512:16;7505:27;7384:154;;;:::o;7544:281::-;7627:27;7649:4;7627:27;:::i;:::-;7619:6;7615:40;7757:6;7745:10;7742:22;7721:18;7709:10;7706:34;7703:62;7700:88;;;7768:18;;:::i;:::-;7700:88;7808:10;7804:2;7797:22;7587:238;7544:281;;:::o;7831:180::-;7879:77;7876:1;7869:88;7976:4;7973:1;7966:15;8000:4;7997:1;7990:15;8017:117;8126:1;8123;8116:12;8140:117;8249:1;8246;8239:12;8263:117;8372:1;8369;8362:12;8386:117;8495:1;8492;8485:12;8509:117;8618:1;8615;8608:12;8632:102;8673:6;8724:2;8720:7;8715:2;8708:5;8704:14;8700:28;8690:38;;8632:102;;;:::o;8740:122::-;8813:24;8831:5;8813:24;:::i;:::-;8806:5;8803:35;8793:63;;8852:1;8849;8842:12;8793:63;8740:122;:::o;8868:120::-;8940:23;8957:5;8940:23;:::i;:::-;8933:5;8930:34;8920:62;;8978:1;8975;8968:12;8920:62;8868:120;:::o;8994:122::-;9067:24;9085:5;9067:24;:::i;:::-;9060:5;9057:35;9047:63;;9106:1;9103;9096:12;9047:63;8994:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "365200",
								"executionCost": "405",
								"totalCost": "365605"
							},
							"external": {
								"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "infinite",
								"onERC1155Received(address,address,uint256,uint256,bytes)": "infinite",
								"supportsInterface(bytes4)": "705"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 451,
									"end": 973,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 451,
									"end": 973,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 451,
									"end": 973,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 451,
									"end": 973,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 451,
									"end": 973,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 451,
									"end": 973,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 451,
									"end": 973,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 451,
									"end": 973,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 451,
									"end": 973,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 451,
									"end": 973,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 451,
									"end": 973,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 451,
									"end": 973,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 451,
									"end": 973,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 451,
									"end": 973,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 451,
									"end": 973,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 451,
									"end": 973,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 451,
									"end": 973,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 451,
									"end": 973,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 451,
									"end": 973,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 451,
									"end": 973,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 451,
									"end": 973,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205c38a71feef050dfade62137089f79984c2ea208278ab8984649ed46135259f464736f6c63430008070033",
									".code": [
										{
											"begin": 451,
											"end": 973,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 451,
											"end": 973,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 451,
											"end": 973,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 451,
											"end": 973,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 451,
											"end": 973,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 451,
											"end": 973,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 451,
											"end": 973,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 451,
											"end": 973,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 451,
											"end": 973,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 451,
											"end": 973,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 451,
											"end": 973,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 451,
											"end": 973,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 451,
											"end": 973,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 451,
											"end": 973,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 451,
											"end": 973,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 451,
											"end": 973,
											"name": "PUSH",
											"source": 2,
											"value": "1FFC9A7"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 451,
											"end": 973,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 451,
											"end": 973,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 451,
											"end": 973,
											"name": "PUSH",
											"source": 2,
											"value": "BC197C81"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 451,
											"end": 973,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 451,
											"end": 973,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 451,
											"end": 973,
											"name": "PUSH",
											"source": 2,
											"value": "F23A6E61"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 451,
											"end": 973,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 451,
											"end": 973,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 451,
											"end": 973,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 451,
											"end": 973,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 387,
											"end": 608,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 724,
											"end": 971,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 387,
											"end": 608,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 489,
											"end": 493,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 527,
											"end": 561,
											"name": "PUSH",
											"source": 3,
											"value": "4E2312E000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 512,
											"end": 561,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 512,
											"end": 561,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 512,
											"end": 561,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 512,
											"end": 523,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 512,
											"end": 561,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 512,
											"end": 561,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 512,
											"end": 561,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 512,
											"end": 561,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 512,
											"end": 601,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 512,
											"end": 601,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 512,
											"end": 601,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 512,
											"end": 601,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 565,
											"end": 601,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 589,
											"end": 600,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 565,
											"end": 588,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 565,
											"end": 601,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 565,
											"end": 601,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 565,
											"end": 601,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 512,
											"end": 601,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 512,
											"end": 601,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 505,
											"end": 601,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 505,
											"end": 601,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 903,
											"end": 909,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 928,
											"end": 964,
											"name": "PUSH",
											"source": 2,
											"value": "BC197C81"
										},
										{
											"begin": 928,
											"end": 964,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 928,
											"end": 964,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 921,
											"end": 964,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 921,
											"end": 964,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 655,
											"end": 661,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 711,
											"name": "PUSH",
											"source": 2,
											"value": "F23A6E61"
										},
										{
											"begin": 680,
											"end": 711,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 680,
											"end": 711,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 673,
											"end": 711,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 673,
											"end": 711,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "tag",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 914,
											"end": 918,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 952,
											"end": 977,
											"name": "PUSH",
											"source": 8,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 937,
											"end": 948,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 937,
											"end": 977,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 937,
											"end": 977,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 930,
											"end": 977,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 930,
											"end": 977,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 829,
											"end": 984,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 829,
											"end": 984,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 24,
											"end": 746,
											"name": "tag",
											"source": 12,
											"value": "31"
										},
										{
											"begin": 24,
											"end": 746,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 120,
											"end": 125,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 145,
											"end": 226,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "33"
										},
										{
											"begin": 161,
											"end": 225,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "34"
										},
										{
											"begin": 218,
											"end": 224,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 161,
											"end": 225,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "35"
										},
										{
											"begin": 161,
											"end": 225,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 161,
											"end": 225,
											"name": "tag",
											"source": 12,
											"value": "34"
										},
										{
											"begin": 161,
											"end": 225,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 145,
											"end": 226,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "36"
										},
										{
											"begin": 145,
											"end": 226,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 145,
											"end": 226,
											"name": "tag",
											"source": 12,
											"value": "33"
										},
										{
											"begin": 145,
											"end": 226,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 136,
											"end": 226,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 136,
											"end": 226,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 246,
											"end": 251,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 275,
											"end": 281,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 268,
											"end": 273,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 261,
											"end": 282,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 309,
											"end": 313,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 302,
											"end": 307,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 298,
											"end": 314,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 291,
											"end": 314,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 291,
											"end": 314,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 335,
											"end": 341,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 385,
											"end": 388,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 377,
											"end": 381,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 369,
											"end": 375,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 365,
											"end": 382,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 360,
											"end": 363,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 356,
											"end": 383,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 353,
											"end": 389,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 350,
											"end": 493,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 350,
											"end": 493,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "37"
										},
										{
											"begin": 350,
											"end": 493,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 404,
											"end": 483,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "38"
										},
										{
											"begin": 404,
											"end": 483,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "39"
										},
										{
											"begin": 404,
											"end": 483,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 404,
											"end": 483,
											"name": "tag",
											"source": 12,
											"value": "38"
										},
										{
											"begin": 404,
											"end": 483,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 350,
											"end": 493,
											"name": "tag",
											"source": 12,
											"value": "37"
										},
										{
											"begin": 350,
											"end": 493,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 517,
											"end": 518,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 502,
											"end": 740,
											"name": "tag",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 502,
											"end": 740,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 527,
											"end": 533,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 524,
											"end": 525,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 521,
											"end": 534,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 502,
											"end": 740,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 502,
											"end": 740,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "42"
										},
										{
											"begin": 502,
											"end": 740,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 595,
											"end": 598,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 624,
											"end": 661,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "43"
										},
										{
											"begin": 657,
											"end": 660,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 645,
											"end": 655,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 624,
											"end": 661,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 624,
											"end": 661,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 624,
											"end": 661,
											"name": "tag",
											"source": 12,
											"value": "43"
										},
										{
											"begin": 624,
											"end": 661,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 619,
											"end": 622,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 612,
											"end": 662,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 691,
											"end": 695,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 686,
											"end": 689,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 682,
											"end": 696,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 675,
											"end": 696,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 675,
											"end": 696,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 725,
											"end": 729,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 720,
											"end": 723,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 716,
											"end": 730,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 709,
											"end": 730,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 709,
											"end": 730,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 562,
											"end": 740,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 549,
											"end": 550,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 546,
											"end": 547,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 542,
											"end": 551,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 537,
											"end": 551,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 537,
											"end": 551,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 502,
											"end": 740,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 502,
											"end": 740,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 502,
											"end": 740,
											"name": "tag",
											"source": 12,
											"value": "42"
										},
										{
											"begin": 502,
											"end": 740,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 506,
											"end": 520,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 126,
											"end": 746,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 126,
											"end": 746,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24,
											"end": 746,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 24,
											"end": 746,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 24,
											"end": 746,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24,
											"end": 746,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24,
											"end": 746,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24,
											"end": 746,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 752,
											"end": 1162,
											"name": "tag",
											"source": 12,
											"value": "45"
										},
										{
											"begin": 752,
											"end": 1162,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 829,
											"end": 834,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 854,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "47"
										},
										{
											"begin": 870,
											"end": 918,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "48"
										},
										{
											"begin": 911,
											"end": 917,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 870,
											"end": 918,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "49"
										},
										{
											"begin": 870,
											"end": 918,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 870,
											"end": 918,
											"name": "tag",
											"source": 12,
											"value": "48"
										},
										{
											"begin": 870,
											"end": 918,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 854,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "36"
										},
										{
											"begin": 854,
											"end": 919,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 854,
											"end": 919,
											"name": "tag",
											"source": 12,
											"value": "47"
										},
										{
											"begin": 854,
											"end": 919,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 845,
											"end": 919,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 845,
											"end": 919,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 942,
											"end": 948,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 935,
											"end": 940,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 928,
											"end": 949,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 980,
											"end": 984,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 973,
											"end": 978,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 969,
											"end": 985,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1018,
											"end": 1021,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1009,
											"end": 1015,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1004,
											"end": 1007,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1000,
											"end": 1016,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 997,
											"end": 1022,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 994,
											"end": 1106,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 994,
											"end": 1106,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "50"
										},
										{
											"begin": 994,
											"end": 1106,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1025,
											"end": 1104,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "51"
										},
										{
											"begin": 1025,
											"end": 1104,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "52"
										},
										{
											"begin": 1025,
											"end": 1104,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 1025,
											"end": 1104,
											"name": "tag",
											"source": 12,
											"value": "51"
										},
										{
											"begin": 1025,
											"end": 1104,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 994,
											"end": 1106,
											"name": "tag",
											"source": 12,
											"value": "50"
										},
										{
											"begin": 994,
											"end": 1106,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1115,
											"end": 1156,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "53"
										},
										{
											"begin": 1149,
											"end": 1155,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1144,
											"end": 1147,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1139,
											"end": 1142,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1115,
											"end": 1156,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "54"
										},
										{
											"begin": 1115,
											"end": 1156,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 1115,
											"end": 1156,
											"name": "tag",
											"source": 12,
											"value": "53"
										},
										{
											"begin": 1115,
											"end": 1156,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 835,
											"end": 1162,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 752,
											"end": 1162,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 752,
											"end": 1162,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 752,
											"end": 1162,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 752,
											"end": 1162,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 752,
											"end": 1162,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 752,
											"end": 1162,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 1168,
											"end": 1307,
											"name": "tag",
											"source": 12,
											"value": "55"
										},
										{
											"begin": 1168,
											"end": 1307,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1214,
											"end": 1219,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1252,
											"end": 1258,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1239,
											"end": 1259,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 1230,
											"end": 1259,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1230,
											"end": 1259,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1301,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "57"
										},
										{
											"begin": 1295,
											"end": 1300,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1301,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "58"
										},
										{
											"begin": 1268,
											"end": 1301,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 1268,
											"end": 1301,
											"name": "tag",
											"source": 12,
											"value": "57"
										},
										{
											"begin": 1268,
											"end": 1301,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1168,
											"end": 1307,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1168,
											"end": 1307,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1168,
											"end": 1307,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1168,
											"end": 1307,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1168,
											"end": 1307,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 1330,
											"end": 1700,
											"name": "tag",
											"source": 12,
											"value": "59"
										},
										{
											"begin": 1330,
											"end": 1700,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1401,
											"end": 1406,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1450,
											"end": 1453,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1443,
											"end": 1447,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 1435,
											"end": 1441,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1431,
											"end": 1448,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1427,
											"end": 1454,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 1417,
											"end": 1539,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "61"
										},
										{
											"begin": 1417,
											"end": 1539,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1458,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "62"
										},
										{
											"begin": 1458,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "63"
										},
										{
											"begin": 1458,
											"end": 1537,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 1458,
											"end": 1537,
											"name": "tag",
											"source": 12,
											"value": "62"
										},
										{
											"begin": 1458,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1417,
											"end": 1539,
											"name": "tag",
											"source": 12,
											"value": "61"
										},
										{
											"begin": 1417,
											"end": 1539,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1575,
											"end": 1581,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1562,
											"end": 1582,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 1600,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 1690,
											"end": 1693,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1682,
											"end": 1688,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1675,
											"end": 1679,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1667,
											"end": 1673,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 1663,
											"end": 1680,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1600,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "31"
										},
										{
											"begin": 1600,
											"end": 1694,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 1600,
											"end": 1694,
											"name": "tag",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 1600,
											"end": 1694,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1591,
											"end": 1694,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1591,
											"end": 1694,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1407,
											"end": 1700,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1330,
											"end": 1700,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1330,
											"end": 1700,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1330,
											"end": 1700,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1330,
											"end": 1700,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1330,
											"end": 1700,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 1706,
											"end": 1843,
											"name": "tag",
											"source": 12,
											"value": "65"
										},
										{
											"begin": 1706,
											"end": 1843,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1751,
											"end": 1756,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1789,
											"end": 1795,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1776,
											"end": 1796,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 1767,
											"end": 1796,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1767,
											"end": 1796,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1805,
											"end": 1837,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "67"
										},
										{
											"begin": 1831,
											"end": 1836,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1805,
											"end": 1837,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "68"
										},
										{
											"begin": 1805,
											"end": 1837,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 1805,
											"end": 1837,
											"name": "tag",
											"source": 12,
											"value": "67"
										},
										{
											"begin": 1805,
											"end": 1837,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1706,
											"end": 1843,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1706,
											"end": 1843,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1706,
											"end": 1843,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1706,
											"end": 1843,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1706,
											"end": 1843,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 1862,
											"end": 2200,
											"name": "tag",
											"source": 12,
											"value": "69"
										},
										{
											"begin": 1862,
											"end": 2200,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1917,
											"end": 1922,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1966,
											"end": 1969,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1959,
											"end": 1963,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 1951,
											"end": 1957,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1947,
											"end": 1964,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1943,
											"end": 1970,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 1933,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "71"
										},
										{
											"begin": 1933,
											"end": 2055,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1974,
											"end": 2053,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "72"
										},
										{
											"begin": 1974,
											"end": 2053,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "63"
										},
										{
											"begin": 1974,
											"end": 2053,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 1974,
											"end": 2053,
											"name": "tag",
											"source": 12,
											"value": "72"
										},
										{
											"begin": 1974,
											"end": 2053,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1933,
											"end": 2055,
											"name": "tag",
											"source": 12,
											"value": "71"
										},
										{
											"begin": 1933,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2091,
											"end": 2097,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 2116,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "73"
										},
										{
											"begin": 2190,
											"end": 2193,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2182,
											"end": 2188,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2175,
											"end": 2179,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2167,
											"end": 2173,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 2163,
											"end": 2180,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2116,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "45"
										},
										{
											"begin": 2116,
											"end": 2194,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 2116,
											"end": 2194,
											"name": "tag",
											"source": 12,
											"value": "73"
										},
										{
											"begin": 2116,
											"end": 2194,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2107,
											"end": 2194,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2107,
											"end": 2194,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1923,
											"end": 2200,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1862,
											"end": 2200,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1862,
											"end": 2200,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1862,
											"end": 2200,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1862,
											"end": 2200,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1862,
											"end": 2200,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 2206,
											"end": 2345,
											"name": "tag",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 2206,
											"end": 2345,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2252,
											"end": 2257,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2290,
											"end": 2296,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2277,
											"end": 2297,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 2268,
											"end": 2297,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2268,
											"end": 2297,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2306,
											"end": 2339,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "75"
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2306,
											"end": 2339,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "76"
										},
										{
											"begin": 2306,
											"end": 2339,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 2306,
											"end": 2339,
											"name": "tag",
											"source": 12,
											"value": "75"
										},
										{
											"begin": 2306,
											"end": 2339,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2206,
											"end": 2345,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2206,
											"end": 2345,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2206,
											"end": 2345,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2206,
											"end": 2345,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2206,
											"end": 2345,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 2351,
											"end": 3860,
											"name": "tag",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 2351,
											"end": 3860,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2505,
											"end": 2511,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2513,
											"end": 2519,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2521,
											"end": 2527,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2529,
											"end": 2535,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2537,
											"end": 2543,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2586,
											"end": 2589,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 2574,
											"end": 2583,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 2565,
											"end": 2572,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 2561,
											"end": 2584,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2557,
											"end": 2590,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 2554,
											"end": 2674,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2554,
											"end": 2674,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "78"
										},
										{
											"begin": 2554,
											"end": 2674,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2593,
											"end": 2672,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "79"
										},
										{
											"begin": 2593,
											"end": 2672,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 2593,
											"end": 2672,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 2593,
											"end": 2672,
											"name": "tag",
											"source": 12,
											"value": "79"
										},
										{
											"begin": 2593,
											"end": 2672,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2554,
											"end": 2674,
											"name": "tag",
											"source": 12,
											"value": "78"
										},
										{
											"begin": 2554,
											"end": 2674,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2713,
											"end": 2714,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2738,
											"end": 2791,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "81"
										},
										{
											"begin": 2783,
											"end": 2790,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 2774,
											"end": 2780,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2763,
											"end": 2772,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 2759,
											"end": 2781,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2738,
											"end": 2791,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "55"
										},
										{
											"begin": 2738,
											"end": 2791,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 2738,
											"end": 2791,
											"name": "tag",
											"source": 12,
											"value": "81"
										},
										{
											"begin": 2738,
											"end": 2791,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2728,
											"end": 2791,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 2728,
											"end": 2791,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2684,
											"end": 2801,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2840,
											"end": 2842,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2866,
											"end": 2919,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "82"
										},
										{
											"begin": 2911,
											"end": 2918,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 2902,
											"end": 2908,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2891,
											"end": 2900,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 2887,
											"end": 2909,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2866,
											"end": 2919,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "55"
										},
										{
											"begin": 2866,
											"end": 2919,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 2866,
											"end": 2919,
											"name": "tag",
											"source": 12,
											"value": "82"
										},
										{
											"begin": 2866,
											"end": 2919,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2856,
											"end": 2919,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 2856,
											"end": 2919,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2811,
											"end": 2929,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2996,
											"end": 2998,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2985,
											"end": 2994,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 2981,
											"end": 2999,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2968,
											"end": 3000,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3027,
											"end": 3045,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3019,
											"end": 3025,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3016,
											"end": 3046,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 3013,
											"end": 3130,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3013,
											"end": 3130,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "83"
										},
										{
											"begin": 3013,
											"end": 3130,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3049,
											"end": 3128,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 3049,
											"end": 3128,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "85"
										},
										{
											"begin": 3049,
											"end": 3128,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 3049,
											"end": 3128,
											"name": "tag",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 3049,
											"end": 3128,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3013,
											"end": 3130,
											"name": "tag",
											"source": 12,
											"value": "83"
										},
										{
											"begin": 3013,
											"end": 3130,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3154,
											"end": 3232,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "86"
										},
										{
											"begin": 3224,
											"end": 3231,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 3215,
											"end": 3221,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3204,
											"end": 3213,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 3200,
											"end": 3222,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3154,
											"end": 3232,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "59"
										},
										{
											"begin": 3154,
											"end": 3232,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 3154,
											"end": 3232,
											"name": "tag",
											"source": 12,
											"value": "86"
										},
										{
											"begin": 3154,
											"end": 3232,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3144,
											"end": 3232,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 3144,
											"end": 3232,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2939,
											"end": 3242,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3309,
											"end": 3311,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 3298,
											"end": 3307,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 3294,
											"end": 3312,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3281,
											"end": 3313,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3340,
											"end": 3358,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3332,
											"end": 3338,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3329,
											"end": 3359,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 3326,
											"end": 3443,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3326,
											"end": 3443,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "87"
										},
										{
											"begin": 3326,
											"end": 3443,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3362,
											"end": 3441,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "88"
										},
										{
											"begin": 3362,
											"end": 3441,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "85"
										},
										{
											"begin": 3362,
											"end": 3441,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 3362,
											"end": 3441,
											"name": "tag",
											"source": 12,
											"value": "88"
										},
										{
											"begin": 3362,
											"end": 3441,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3326,
											"end": 3443,
											"name": "tag",
											"source": 12,
											"value": "87"
										},
										{
											"begin": 3326,
											"end": 3443,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3467,
											"end": 3545,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "89"
										},
										{
											"begin": 3537,
											"end": 3544,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 3528,
											"end": 3534,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3517,
											"end": 3526,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 3513,
											"end": 3535,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3467,
											"end": 3545,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "59"
										},
										{
											"begin": 3467,
											"end": 3545,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 3467,
											"end": 3545,
											"name": "tag",
											"source": 12,
											"value": "89"
										},
										{
											"begin": 3467,
											"end": 3545,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3457,
											"end": 3545,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3457,
											"end": 3545,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3252,
											"end": 3555,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3622,
											"end": 3625,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 3611,
											"end": 3620,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 3607,
											"end": 3626,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3594,
											"end": 3627,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3654,
											"end": 3672,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3646,
											"end": 3652,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3643,
											"end": 3673,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 3640,
											"end": 3757,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3640,
											"end": 3757,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "90"
										},
										{
											"begin": 3640,
											"end": 3757,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3676,
											"end": 3755,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "91"
										},
										{
											"begin": 3676,
											"end": 3755,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "85"
										},
										{
											"begin": 3676,
											"end": 3755,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 3676,
											"end": 3755,
											"name": "tag",
											"source": 12,
											"value": "91"
										},
										{
											"begin": 3676,
											"end": 3755,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3640,
											"end": 3757,
											"name": "tag",
											"source": 12,
											"value": "90"
										},
										{
											"begin": 3640,
											"end": 3757,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3781,
											"end": 3843,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "92"
										},
										{
											"begin": 3835,
											"end": 3842,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 3826,
											"end": 3832,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3815,
											"end": 3824,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 3811,
											"end": 3833,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3781,
											"end": 3843,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "69"
										},
										{
											"begin": 3781,
											"end": 3843,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 3781,
											"end": 3843,
											"name": "tag",
											"source": 12,
											"value": "92"
										},
										{
											"begin": 3781,
											"end": 3843,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3771,
											"end": 3843,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3771,
											"end": 3843,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3565,
											"end": 3853,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2351,
											"end": 3860,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2351,
											"end": 3860,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 2351,
											"end": 3860,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2351,
											"end": 3860,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2351,
											"end": 3860,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 2351,
											"end": 3860,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2351,
											"end": 3860,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 2351,
											"end": 3860,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2351,
											"end": 3860,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 3866,
											"end": 4955,
											"name": "tag",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3866,
											"end": 4955,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3970,
											"end": 3976,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3978,
											"end": 3984,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3986,
											"end": 3992,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3994,
											"end": 4000,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4002,
											"end": 4008,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4051,
											"end": 4054,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 4039,
											"end": 4048,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4030,
											"end": 4037,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 4026,
											"end": 4049,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4022,
											"end": 4055,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 4019,
											"end": 4139,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4019,
											"end": 4139,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "94"
										},
										{
											"begin": 4019,
											"end": 4139,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4058,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "95"
										},
										{
											"begin": 4058,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 4058,
											"end": 4137,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 4058,
											"end": 4137,
											"name": "tag",
											"source": 12,
											"value": "95"
										},
										{
											"begin": 4058,
											"end": 4137,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4019,
											"end": 4139,
											"name": "tag",
											"source": 12,
											"value": "94"
										},
										{
											"begin": 4019,
											"end": 4139,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4178,
											"end": 4179,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4203,
											"end": 4256,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "96"
										},
										{
											"begin": 4248,
											"end": 4255,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 4239,
											"end": 4245,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4228,
											"end": 4237,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 4224,
											"end": 4246,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4203,
											"end": 4256,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "55"
										},
										{
											"begin": 4203,
											"end": 4256,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 4203,
											"end": 4256,
											"name": "tag",
											"source": 12,
											"value": "96"
										},
										{
											"begin": 4203,
											"end": 4256,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4193,
											"end": 4256,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 4193,
											"end": 4256,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4149,
											"end": 4266,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4305,
											"end": 4307,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4331,
											"end": 4384,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "97"
										},
										{
											"begin": 4376,
											"end": 4383,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 4367,
											"end": 4373,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4356,
											"end": 4365,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 4352,
											"end": 4374,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4331,
											"end": 4384,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "55"
										},
										{
											"begin": 4331,
											"end": 4384,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 4331,
											"end": 4384,
											"name": "tag",
											"source": 12,
											"value": "97"
										},
										{
											"begin": 4331,
											"end": 4384,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4321,
											"end": 4384,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 4321,
											"end": 4384,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4276,
											"end": 4394,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4433,
											"end": 4435,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4459,
											"end": 4512,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "98"
										},
										{
											"begin": 4504,
											"end": 4511,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 4495,
											"end": 4501,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4484,
											"end": 4493,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 4480,
											"end": 4502,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4459,
											"end": 4512,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 4459,
											"end": 4512,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 4459,
											"end": 4512,
											"name": "tag",
											"source": 12,
											"value": "98"
										},
										{
											"begin": 4459,
											"end": 4512,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4449,
											"end": 4512,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 4449,
											"end": 4512,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4404,
											"end": 4522,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4561,
											"end": 4563,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 4587,
											"end": 4640,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "99"
										},
										{
											"begin": 4632,
											"end": 4639,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 4623,
											"end": 4629,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4612,
											"end": 4621,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 4608,
											"end": 4630,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4587,
											"end": 4640,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 4587,
											"end": 4640,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 4587,
											"end": 4640,
											"name": "tag",
											"source": 12,
											"value": "99"
										},
										{
											"begin": 4587,
											"end": 4640,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4577,
											"end": 4640,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4577,
											"end": 4640,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4532,
											"end": 4650,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4717,
											"end": 4720,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 4706,
											"end": 4715,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4702,
											"end": 4721,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4689,
											"end": 4722,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 4749,
											"end": 4767,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4741,
											"end": 4747,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4738,
											"end": 4768,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 4735,
											"end": 4852,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4735,
											"end": 4852,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 4735,
											"end": 4852,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4771,
											"end": 4850,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "101"
										},
										{
											"begin": 4771,
											"end": 4850,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "85"
										},
										{
											"begin": 4771,
											"end": 4850,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 4771,
											"end": 4850,
											"name": "tag",
											"source": 12,
											"value": "101"
										},
										{
											"begin": 4771,
											"end": 4850,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4735,
											"end": 4852,
											"name": "tag",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 4735,
											"end": 4852,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4876,
											"end": 4938,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "102"
										},
										{
											"begin": 4930,
											"end": 4937,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 4921,
											"end": 4927,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4910,
											"end": 4919,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 4906,
											"end": 4928,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4876,
											"end": 4938,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "69"
										},
										{
											"begin": 4876,
											"end": 4938,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 4876,
											"end": 4938,
											"name": "tag",
											"source": 12,
											"value": "102"
										},
										{
											"begin": 4876,
											"end": 4938,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4866,
											"end": 4938,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4866,
											"end": 4938,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4660,
											"end": 4948,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3866,
											"end": 4955,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3866,
											"end": 4955,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 3866,
											"end": 4955,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3866,
											"end": 4955,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3866,
											"end": 4955,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 3866,
											"end": 4955,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3866,
											"end": 4955,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 3866,
											"end": 4955,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3866,
											"end": 4955,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 4961,
											"end": 5288,
											"name": "tag",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 4961,
											"end": 5288,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5019,
											"end": 5025,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5068,
											"end": 5070,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5056,
											"end": 5065,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5047,
											"end": 5054,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5043,
											"end": 5066,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5039,
											"end": 5071,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 5036,
											"end": 5155,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5036,
											"end": 5155,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "104"
										},
										{
											"begin": 5036,
											"end": 5155,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5074,
											"end": 5153,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "105"
										},
										{
											"begin": 5074,
											"end": 5153,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 5074,
											"end": 5153,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 5074,
											"end": 5153,
											"name": "tag",
											"source": 12,
											"value": "105"
										},
										{
											"begin": 5074,
											"end": 5153,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5036,
											"end": 5155,
											"name": "tag",
											"source": 12,
											"value": "104"
										},
										{
											"begin": 5036,
											"end": 5155,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5194,
											"end": 5195,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5219,
											"end": 5271,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "106"
										},
										{
											"begin": 5263,
											"end": 5270,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5254,
											"end": 5260,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5243,
											"end": 5252,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 5239,
											"end": 5261,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5219,
											"end": 5271,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "65"
										},
										{
											"begin": 5219,
											"end": 5271,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 5219,
											"end": 5271,
											"name": "tag",
											"source": 12,
											"value": "106"
										},
										{
											"begin": 5219,
											"end": 5271,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5209,
											"end": 5271,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5209,
											"end": 5271,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5165,
											"end": 5281,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4961,
											"end": 5288,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4961,
											"end": 5288,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4961,
											"end": 5288,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4961,
											"end": 5288,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4961,
											"end": 5288,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 5294,
											"end": 5403,
											"name": "tag",
											"source": 12,
											"value": "107"
										},
										{
											"begin": 5294,
											"end": 5403,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5375,
											"end": 5396,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "109"
										},
										{
											"begin": 5390,
											"end": 5395,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5375,
											"end": 5396,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "110"
										},
										{
											"begin": 5375,
											"end": 5396,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 5375,
											"end": 5396,
											"name": "tag",
											"source": 12,
											"value": "109"
										},
										{
											"begin": 5375,
											"end": 5396,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5370,
											"end": 5373,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5363,
											"end": 5397,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5294,
											"end": 5403,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5294,
											"end": 5403,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5294,
											"end": 5403,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 5409,
											"end": 5524,
											"name": "tag",
											"source": 12,
											"value": "111"
										},
										{
											"begin": 5409,
											"end": 5524,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5494,
											"end": 5517,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "113"
										},
										{
											"begin": 5511,
											"end": 5516,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5494,
											"end": 5517,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "114"
										},
										{
											"begin": 5494,
											"end": 5517,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 5494,
											"end": 5517,
											"name": "tag",
											"source": 12,
											"value": "113"
										},
										{
											"begin": 5494,
											"end": 5517,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5489,
											"end": 5492,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5482,
											"end": 5518,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5409,
											"end": 5524,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5409,
											"end": 5524,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5409,
											"end": 5524,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 5530,
											"end": 5740,
											"name": "tag",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 5530,
											"end": 5740,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5617,
											"end": 5621,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5655,
											"end": 5657,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5644,
											"end": 5653,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5640,
											"end": 5658,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5632,
											"end": 5658,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5632,
											"end": 5658,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5668,
											"end": 5733,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "116"
										},
										{
											"begin": 5730,
											"end": 5731,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5719,
											"end": 5728,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5715,
											"end": 5732,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5706,
											"end": 5712,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5668,
											"end": 5733,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "107"
										},
										{
											"begin": 5668,
											"end": 5733,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 5668,
											"end": 5733,
											"name": "tag",
											"source": 12,
											"value": "116"
										},
										{
											"begin": 5668,
											"end": 5733,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5530,
											"end": 5740,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5530,
											"end": 5740,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5530,
											"end": 5740,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5530,
											"end": 5740,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5530,
											"end": 5740,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 5746,
											"end": 5964,
											"name": "tag",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 5746,
											"end": 5964,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5837,
											"end": 5841,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5875,
											"end": 5877,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5864,
											"end": 5873,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5860,
											"end": 5878,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5852,
											"end": 5878,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5852,
											"end": 5878,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5888,
											"end": 5957,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "118"
										},
										{
											"begin": 5954,
											"end": 5955,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5943,
											"end": 5952,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5939,
											"end": 5956,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5930,
											"end": 5936,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5888,
											"end": 5957,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "111"
										},
										{
											"begin": 5888,
											"end": 5957,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 5888,
											"end": 5957,
											"name": "tag",
											"source": 12,
											"value": "118"
										},
										{
											"begin": 5888,
											"end": 5957,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5746,
											"end": 5964,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5746,
											"end": 5964,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5746,
											"end": 5964,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5746,
											"end": 5964,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5746,
											"end": 5964,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 5970,
											"end": 6099,
											"name": "tag",
											"source": 12,
											"value": "36"
										},
										{
											"begin": 5970,
											"end": 6099,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6004,
											"end": 6010,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6031,
											"end": 6051,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "120"
										},
										{
											"begin": 6031,
											"end": 6051,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "121"
										},
										{
											"begin": 6031,
											"end": 6051,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 6031,
											"end": 6051,
											"name": "tag",
											"source": 12,
											"value": "120"
										},
										{
											"begin": 6031,
											"end": 6051,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6021,
											"end": 6051,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6021,
											"end": 6051,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6060,
											"end": 6093,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "122"
										},
										{
											"begin": 6088,
											"end": 6092,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6080,
											"end": 6086,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6060,
											"end": 6093,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "123"
										},
										{
											"begin": 6060,
											"end": 6093,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 6060,
											"end": 6093,
											"name": "tag",
											"source": 12,
											"value": "122"
										},
										{
											"begin": 6060,
											"end": 6093,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5970,
											"end": 6099,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5970,
											"end": 6099,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5970,
											"end": 6099,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5970,
											"end": 6099,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 6105,
											"end": 6180,
											"name": "tag",
											"source": 12,
											"value": "121"
										},
										{
											"begin": 6105,
											"end": 6180,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6138,
											"end": 6144,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6171,
											"end": 6173,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6165,
											"end": 6174,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6155,
											"end": 6174,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6155,
											"end": 6174,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6105,
											"end": 6180,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6105,
											"end": 6180,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 6186,
											"end": 6497,
											"name": "tag",
											"source": 12,
											"value": "35"
										},
										{
											"begin": 6186,
											"end": 6497,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6263,
											"end": 6267,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6353,
											"end": 6371,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6345,
											"end": 6351,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6342,
											"end": 6372,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 6339,
											"end": 6395,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6339,
											"end": 6395,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "126"
										},
										{
											"begin": 6339,
											"end": 6395,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6375,
											"end": 6393,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "127"
										},
										{
											"begin": 6375,
											"end": 6393,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "128"
										},
										{
											"begin": 6375,
											"end": 6393,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 6375,
											"end": 6393,
											"name": "tag",
											"source": 12,
											"value": "127"
										},
										{
											"begin": 6375,
											"end": 6393,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6339,
											"end": 6395,
											"name": "tag",
											"source": 12,
											"value": "126"
										},
										{
											"begin": 6339,
											"end": 6395,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6425,
											"end": 6429,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6417,
											"end": 6423,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6413,
											"end": 6430,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 6405,
											"end": 6430,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6405,
											"end": 6430,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6485,
											"end": 6489,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6479,
											"end": 6483,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6467,
											"end": 6490,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6467,
											"end": 6490,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6186,
											"end": 6497,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6186,
											"end": 6497,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6186,
											"end": 6497,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6186,
											"end": 6497,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 6503,
											"end": 6810,
											"name": "tag",
											"source": 12,
											"value": "49"
										},
										{
											"begin": 6503,
											"end": 6810,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6564,
											"end": 6568,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6654,
											"end": 6672,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6646,
											"end": 6652,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6643,
											"end": 6673,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 6640,
											"end": 6696,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6640,
											"end": 6696,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "130"
										},
										{
											"begin": 6640,
											"end": 6696,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6676,
											"end": 6694,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "131"
										},
										{
											"begin": 6676,
											"end": 6694,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "128"
										},
										{
											"begin": 6676,
											"end": 6694,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 6676,
											"end": 6694,
											"name": "tag",
											"source": 12,
											"value": "131"
										},
										{
											"begin": 6676,
											"end": 6694,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6640,
											"end": 6696,
											"name": "tag",
											"source": 12,
											"value": "130"
										},
										{
											"begin": 6640,
											"end": 6696,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6714,
											"end": 6743,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "132"
										},
										{
											"begin": 6736,
											"end": 6742,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6714,
											"end": 6743,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "133"
										},
										{
											"begin": 6714,
											"end": 6743,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 6714,
											"end": 6743,
											"name": "tag",
											"source": 12,
											"value": "132"
										},
										{
											"begin": 6714,
											"end": 6743,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6706,
											"end": 6743,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6706,
											"end": 6743,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6798,
											"end": 6802,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6792,
											"end": 6796,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6788,
											"end": 6803,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6780,
											"end": 6803,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6780,
											"end": 6803,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6503,
											"end": 6810,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6503,
											"end": 6810,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6503,
											"end": 6810,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6503,
											"end": 6810,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 6816,
											"end": 6912,
											"name": "tag",
											"source": 12,
											"value": "134"
										},
										{
											"begin": 6816,
											"end": 6912,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6853,
											"end": 6860,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6882,
											"end": 6906,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "136"
										},
										{
											"begin": 6900,
											"end": 6905,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6882,
											"end": 6906,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "137"
										},
										{
											"begin": 6882,
											"end": 6906,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 6882,
											"end": 6906,
											"name": "tag",
											"source": 12,
											"value": "136"
										},
										{
											"begin": 6882,
											"end": 6906,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6871,
											"end": 6906,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6871,
											"end": 6906,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6816,
											"end": 6912,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6816,
											"end": 6912,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6816,
											"end": 6912,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6816,
											"end": 6912,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 6918,
											"end": 7008,
											"name": "tag",
											"source": 12,
											"value": "110"
										},
										{
											"begin": 6918,
											"end": 7008,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6952,
											"end": 6959,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6995,
											"end": 7000,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6988,
											"end": 7001,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6981,
											"end": 7002,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6970,
											"end": 7002,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6970,
											"end": 7002,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6918,
											"end": 7008,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6918,
											"end": 7008,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6918,
											"end": 7008,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6918,
											"end": 7008,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 7014,
											"end": 7163,
											"name": "tag",
											"source": 12,
											"value": "114"
										},
										{
											"begin": 7014,
											"end": 7163,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7050,
											"end": 7057,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7090,
											"end": 7156,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7083,
											"end": 7088,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7079,
											"end": 7157,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7068,
											"end": 7157,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7068,
											"end": 7157,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7014,
											"end": 7163,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7014,
											"end": 7163,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7014,
											"end": 7163,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7014,
											"end": 7163,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 7169,
											"end": 7295,
											"name": "tag",
											"source": 12,
											"value": "137"
										},
										{
											"begin": 7169,
											"end": 7295,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7206,
											"end": 7213,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7246,
											"end": 7288,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7239,
											"end": 7244,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7235,
											"end": 7289,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7224,
											"end": 7289,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7224,
											"end": 7289,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7169,
											"end": 7295,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7169,
											"end": 7295,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7169,
											"end": 7295,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7169,
											"end": 7295,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 7301,
											"end": 7378,
											"name": "tag",
											"source": 12,
											"value": "141"
										},
										{
											"begin": 7301,
											"end": 7378,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7338,
											"end": 7345,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7367,
											"end": 7372,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7356,
											"end": 7372,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7356,
											"end": 7372,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7301,
											"end": 7378,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7301,
											"end": 7378,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7301,
											"end": 7378,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7301,
											"end": 7378,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 7384,
											"end": 7538,
											"name": "tag",
											"source": 12,
											"value": "54"
										},
										{
											"begin": 7384,
											"end": 7538,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7468,
											"end": 7474,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7463,
											"end": 7466,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7458,
											"end": 7461,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7445,
											"end": 7475,
											"name": "CALLDATACOPY",
											"source": 12
										},
										{
											"begin": 7530,
											"end": 7531,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7521,
											"end": 7527,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7516,
											"end": 7519,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7512,
											"end": 7528,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7505,
											"end": 7532,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7384,
											"end": 7538,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7384,
											"end": 7538,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7384,
											"end": 7538,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7384,
											"end": 7538,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 7544,
											"end": 7825,
											"name": "tag",
											"source": 12,
											"value": "123"
										},
										{
											"begin": 7544,
											"end": 7825,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7627,
											"end": 7654,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "145"
										},
										{
											"begin": 7649,
											"end": 7653,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7627,
											"end": 7654,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "133"
										},
										{
											"begin": 7627,
											"end": 7654,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 7627,
											"end": 7654,
											"name": "tag",
											"source": 12,
											"value": "145"
										},
										{
											"begin": 7627,
											"end": 7654,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7619,
											"end": 7625,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7615,
											"end": 7655,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7757,
											"end": 7763,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7745,
											"end": 7755,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7742,
											"end": 7764,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 7721,
											"end": 7739,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7709,
											"end": 7719,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7706,
											"end": 7740,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 7703,
											"end": 7765,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 7700,
											"end": 7788,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7700,
											"end": 7788,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "146"
										},
										{
											"begin": 7700,
											"end": 7788,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7768,
											"end": 7786,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "147"
										},
										{
											"begin": 7768,
											"end": 7786,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "128"
										},
										{
											"begin": 7768,
											"end": 7786,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 7768,
											"end": 7786,
											"name": "tag",
											"source": 12,
											"value": "147"
										},
										{
											"begin": 7768,
											"end": 7786,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7700,
											"end": 7788,
											"name": "tag",
											"source": 12,
											"value": "146"
										},
										{
											"begin": 7700,
											"end": 7788,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7808,
											"end": 7818,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7804,
											"end": 7806,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7797,
											"end": 7819,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7587,
											"end": 7825,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7544,
											"end": 7825,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7544,
											"end": 7825,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7544,
											"end": 7825,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 7831,
											"end": 8011,
											"name": "tag",
											"source": 12,
											"value": "128"
										},
										{
											"begin": 7831,
											"end": 8011,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7879,
											"end": 7956,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7876,
											"end": 7877,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7869,
											"end": 7957,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7976,
											"end": 7980,
											"name": "PUSH",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 7973,
											"end": 7974,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 7966,
											"end": 7981,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8000,
											"end": 8004,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 7997,
											"end": 7998,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7990,
											"end": 8005,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 8017,
											"end": 8134,
											"name": "tag",
											"source": 12,
											"value": "63"
										},
										{
											"begin": 8017,
											"end": 8134,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8126,
											"end": 8127,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8123,
											"end": 8124,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8116,
											"end": 8128,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 8140,
											"end": 8257,
											"name": "tag",
											"source": 12,
											"value": "39"
										},
										{
											"begin": 8140,
											"end": 8257,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8249,
											"end": 8250,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8246,
											"end": 8247,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8239,
											"end": 8251,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 8263,
											"end": 8380,
											"name": "tag",
											"source": 12,
											"value": "52"
										},
										{
											"begin": 8263,
											"end": 8380,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8372,
											"end": 8373,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8369,
											"end": 8370,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8362,
											"end": 8374,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 8386,
											"end": 8503,
											"name": "tag",
											"source": 12,
											"value": "85"
										},
										{
											"begin": 8386,
											"end": 8503,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8495,
											"end": 8496,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8492,
											"end": 8493,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8485,
											"end": 8497,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 8509,
											"end": 8626,
											"name": "tag",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 8509,
											"end": 8626,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8618,
											"end": 8619,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8615,
											"end": 8616,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8608,
											"end": 8620,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 8632,
											"end": 8734,
											"name": "tag",
											"source": 12,
											"value": "133"
										},
										{
											"begin": 8632,
											"end": 8734,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8673,
											"end": 8679,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8724,
											"end": 8726,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 8720,
											"end": 8727,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 8715,
											"end": 8717,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 8708,
											"end": 8713,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8704,
											"end": 8718,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8700,
											"end": 8728,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8690,
											"end": 8728,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8690,
											"end": 8728,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8632,
											"end": 8734,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8632,
											"end": 8734,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8632,
											"end": 8734,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8632,
											"end": 8734,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 8740,
											"end": 8862,
											"name": "tag",
											"source": 12,
											"value": "58"
										},
										{
											"begin": 8740,
											"end": 8862,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8813,
											"end": 8837,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "156"
										},
										{
											"begin": 8831,
											"end": 8836,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8813,
											"end": 8837,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "134"
										},
										{
											"begin": 8813,
											"end": 8837,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 8813,
											"end": 8837,
											"name": "tag",
											"source": 12,
											"value": "156"
										},
										{
											"begin": 8813,
											"end": 8837,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8806,
											"end": 8811,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8803,
											"end": 8838,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 8793,
											"end": 8856,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "157"
										},
										{
											"begin": 8793,
											"end": 8856,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8852,
											"end": 8853,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8849,
											"end": 8850,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8842,
											"end": 8854,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 8793,
											"end": 8856,
											"name": "tag",
											"source": 12,
											"value": "157"
										},
										{
											"begin": 8793,
											"end": 8856,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8740,
											"end": 8862,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8740,
											"end": 8862,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 8868,
											"end": 8988,
											"name": "tag",
											"source": 12,
											"value": "68"
										},
										{
											"begin": 8868,
											"end": 8988,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8940,
											"end": 8963,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "159"
										},
										{
											"begin": 8957,
											"end": 8962,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8940,
											"end": 8963,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "114"
										},
										{
											"begin": 8940,
											"end": 8963,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 8940,
											"end": 8963,
											"name": "tag",
											"source": 12,
											"value": "159"
										},
										{
											"begin": 8940,
											"end": 8963,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8933,
											"end": 8938,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8930,
											"end": 8964,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 8920,
											"end": 8982,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "160"
										},
										{
											"begin": 8920,
											"end": 8982,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8978,
											"end": 8979,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8975,
											"end": 8976,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8968,
											"end": 8980,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 8920,
											"end": 8982,
											"name": "tag",
											"source": 12,
											"value": "160"
										},
										{
											"begin": 8920,
											"end": 8982,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8868,
											"end": 8988,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8868,
											"end": 8988,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 8994,
											"end": 9116,
											"name": "tag",
											"source": 12,
											"value": "76"
										},
										{
											"begin": 8994,
											"end": 9116,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9067,
											"end": 9091,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "162"
										},
										{
											"begin": 9085,
											"end": 9090,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9067,
											"end": 9091,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "141"
										},
										{
											"begin": 9067,
											"end": 9091,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 9067,
											"end": 9091,
											"name": "tag",
											"source": 12,
											"value": "162"
										},
										{
											"begin": 9067,
											"end": 9091,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9060,
											"end": 9065,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9057,
											"end": 9092,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 9047,
											"end": 9110,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "163"
										},
										{
											"begin": 9047,
											"end": 9110,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9106,
											"end": 9107,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9103,
											"end": 9104,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9096,
											"end": 9108,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 9047,
											"end": 9110,
											"name": "tag",
											"source": 12,
											"value": "163"
										},
										{
											"begin": 9047,
											"end": 9110,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8994,
											"end": 9116,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8994,
											"end": 9116,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"_Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Simple implementation of `ERC1155Receiver` that will allow a contract to hold ERC1155 tokens. IMPORTANT: When inheriting this contract, you must include a way to use the received tokens, otherwise they will be stuck.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":\"ERC1155Holder\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":{\"keccak256\":\"0x2e024ca51ce5abe16c0d34e6992a1104f356e2244eb4ccbec970435e8b3405e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a74009db3c6fc8db851ba69ddb6795b5c1ef1120c5a00fd1a8dc3a717dd9d519\",\"dweb:/ipfs/QmZMk8Yh2X3gPS51ckUVLEXjZUhMSEeGApnA53WtjvLb9h\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":{\"keccak256\":\"0x3dd5e1a66a56f30302108a1da97d677a42b1daa60e503696b2bcbbf3e4c95bcb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0808de0ae4918c664643c885ca7fa6503e8ef2bd75609dfc85152c0128a3422d\",\"dweb:/ipfs/QmNrhFC1XgBKuuxfahFeiwi1MCdu3FLNpHj2uStgmf4iJj\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Simple implementation of `ERC1155Receiver` that will allow a contract to hold ERC1155 tokens. IMPORTANT: When inheriting this contract, you must include a way to use the received tokens, otherwise they will be stuck.",
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol": {
				"ERC1155Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "_Available since v3.1._",
						"kind": "dev",
						"methods": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
								"details": "Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"ids": "An array containing ids of each token being transferred (order and length must match values array)",
									"operator": "The address which initiated the batch transfer (i.e. msg.sender)",
									"values": "An array containing amounts of each token being transferred (order and length must match ids array)"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
								}
							},
							"onERC1155Received(address,address,uint256,uint256,bytes)": {
								"details": "Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"id": "The ID of the token being transferred",
									"operator": "The address which initiated the transfer (i.e. msg.sender)",
									"value": "The amount of tokens being transferred"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"_Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":\"ERC1155Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":{\"keccak256\":\"0x3dd5e1a66a56f30302108a1da97d677a42b1daa60e503696b2bcbbf3e4c95bcb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0808de0ae4918c664643c885ca7fa6503e8ef2bd75609dfc85152c0128a3422d\",\"dweb:/ipfs/QmNrhFC1XgBKuuxfahFeiwi1MCdu3FLNpHj2uStgmf4iJj\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x0d4de01fe5360c38b4ad2b0822a12722958428f5138a7ff47c1720eb6fa52bba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77724cecdfba8814632ab58737c2b0f2d4ad2d532bc614aee559b5593c1152f0\",\"dweb:/ipfs/QmUcE6gXyv7CQh4sUdcDABYKGTovTe1zLMZSEq95nkc3ph\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol": {
				"ERC721Holder": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC721Receiver} interface. Accepts all token transfers. Make sure the contract is able to use its token with {IERC721-safeTransferFrom}, {IERC721-approve} or {IERC721-setApprovalForAll}.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":399:790  contract ERC721Holder is IERC721Receiver {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":399:790  contract ERC721Holder is IERC721Receiver {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x150b7a02\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":588:788  function onERC721Received(... */\n    tag_3:\n      tag_4\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_5\n      swap2\n      swap1\n      tag_6\n      jump\t// in\n    tag_5:\n      tag_7\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_7:\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":726:732  bytes4 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":751:781  this.onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":744:781  return this.onERC721Received.selector */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":588:788  function onERC721Received(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:417   */\n    tag_12:\n        /* \"#utility.yul\":84:89   */\n      0x00\n        /* \"#utility.yul\":109:174   */\n      tag_14\n        /* \"#utility.yul\":125:173   */\n      tag_15\n        /* \"#utility.yul\":166:172   */\n      dup5\n        /* \"#utility.yul\":125:173   */\n      tag_16\n      jump\t// in\n    tag_15:\n        /* \"#utility.yul\":109:174   */\n      tag_17\n      jump\t// in\n    tag_14:\n        /* \"#utility.yul\":100:174   */\n      swap1\n      pop\n        /* \"#utility.yul\":197:203   */\n      dup3\n        /* \"#utility.yul\":190:195   */\n      dup2\n        /* \"#utility.yul\":183:204   */\n      mstore\n        /* \"#utility.yul\":235:239   */\n      0x20\n        /* \"#utility.yul\":228:233   */\n      dup2\n        /* \"#utility.yul\":224:240   */\n      add\n        /* \"#utility.yul\":273:276   */\n      dup5\n        /* \"#utility.yul\":264:270   */\n      dup5\n        /* \"#utility.yul\":259:262   */\n      dup5\n        /* \"#utility.yul\":255:271   */\n      add\n        /* \"#utility.yul\":252:277   */\n      gt\n        /* \"#utility.yul\":249:361   */\n      iszero\n      tag_18\n      jumpi\n        /* \"#utility.yul\":280:359   */\n      tag_19\n      tag_20\n      jump\t// in\n    tag_19:\n        /* \"#utility.yul\":249:361   */\n    tag_18:\n        /* \"#utility.yul\":370:411   */\n      tag_21\n        /* \"#utility.yul\":404:410   */\n      dup5\n        /* \"#utility.yul\":399:402   */\n      dup3\n        /* \"#utility.yul\":394:397   */\n      dup6\n        /* \"#utility.yul\":370:411   */\n      tag_22\n      jump\t// in\n    tag_21:\n        /* \"#utility.yul\":90:417   */\n      pop\n        /* \"#utility.yul\":7:417   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":423:562   */\n    tag_23:\n        /* \"#utility.yul\":469:474   */\n      0x00\n        /* \"#utility.yul\":507:513   */\n      dup2\n        /* \"#utility.yul\":494:514   */\n      calldataload\n        /* \"#utility.yul\":485:514   */\n      swap1\n      pop\n        /* \"#utility.yul\":523:556   */\n      tag_25\n        /* \"#utility.yul\":550:555   */\n      dup2\n        /* \"#utility.yul\":523:556   */\n      tag_26\n      jump\t// in\n    tag_25:\n        /* \"#utility.yul\":423:562   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":581:919   */\n    tag_27:\n        /* \"#utility.yul\":636:641   */\n      0x00\n        /* \"#utility.yul\":685:688   */\n      dup3\n        /* \"#utility.yul\":678:682   */\n      0x1f\n        /* \"#utility.yul\":670:676   */\n      dup4\n        /* \"#utility.yul\":666:683   */\n      add\n        /* \"#utility.yul\":662:689   */\n      slt\n        /* \"#utility.yul\":652:774   */\n      tag_29\n      jumpi\n        /* \"#utility.yul\":693:772   */\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n        /* \"#utility.yul\":652:774   */\n    tag_29:\n        /* \"#utility.yul\":810:816   */\n      dup2\n        /* \"#utility.yul\":797:817   */\n      calldataload\n        /* \"#utility.yul\":835:913   */\n      tag_32\n        /* \"#utility.yul\":909:912   */\n      dup5\n        /* \"#utility.yul\":901:907   */\n      dup3\n        /* \"#utility.yul\":894:898   */\n      0x20\n        /* \"#utility.yul\":886:892   */\n      dup7\n        /* \"#utility.yul\":882:899   */\n      add\n        /* \"#utility.yul\":835:913   */\n      tag_12\n      jump\t// in\n    tag_32:\n        /* \"#utility.yul\":826:913   */\n      swap2\n      pop\n        /* \"#utility.yul\":642:919   */\n      pop\n        /* \"#utility.yul\":581:919   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":925:1064   */\n    tag_33:\n        /* \"#utility.yul\":971:976   */\n      0x00\n        /* \"#utility.yul\":1009:1015   */\n      dup2\n        /* \"#utility.yul\":996:1016   */\n      calldataload\n        /* \"#utility.yul\":987:1016   */\n      swap1\n      pop\n        /* \"#utility.yul\":1025:1058   */\n      tag_35\n        /* \"#utility.yul\":1052:1057   */\n      dup2\n        /* \"#utility.yul\":1025:1058   */\n      tag_36\n      jump\t// in\n    tag_35:\n        /* \"#utility.yul\":925:1064   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1070:2013   */\n    tag_6:\n        /* \"#utility.yul\":1165:1171   */\n      0x00\n        /* \"#utility.yul\":1173:1179   */\n      dup1\n        /* \"#utility.yul\":1181:1187   */\n      0x00\n        /* \"#utility.yul\":1189:1195   */\n      dup1\n        /* \"#utility.yul\":1238:1241   */\n      0x80\n        /* \"#utility.yul\":1226:1235   */\n      dup6\n        /* \"#utility.yul\":1217:1224   */\n      dup8\n        /* \"#utility.yul\":1213:1236   */\n      sub\n        /* \"#utility.yul\":1209:1242   */\n      slt\n        /* \"#utility.yul\":1206:1326   */\n      iszero\n      tag_38\n      jumpi\n        /* \"#utility.yul\":1245:1324   */\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n        /* \"#utility.yul\":1206:1326   */\n    tag_38:\n        /* \"#utility.yul\":1365:1366   */\n      0x00\n        /* \"#utility.yul\":1390:1443   */\n      tag_41\n        /* \"#utility.yul\":1435:1442   */\n      dup8\n        /* \"#utility.yul\":1426:1432   */\n      dup3\n        /* \"#utility.yul\":1415:1424   */\n      dup9\n        /* \"#utility.yul\":1411:1433   */\n      add\n        /* \"#utility.yul\":1390:1443   */\n      tag_23\n      jump\t// in\n    tag_41:\n        /* \"#utility.yul\":1380:1443   */\n      swap5\n      pop\n        /* \"#utility.yul\":1336:1453   */\n      pop\n        /* \"#utility.yul\":1492:1494   */\n      0x20\n        /* \"#utility.yul\":1518:1571   */\n      tag_42\n        /* \"#utility.yul\":1563:1570   */\n      dup8\n        /* \"#utility.yul\":1554:1560   */\n      dup3\n        /* \"#utility.yul\":1543:1552   */\n      dup9\n        /* \"#utility.yul\":1539:1561   */\n      add\n        /* \"#utility.yul\":1518:1571   */\n      tag_23\n      jump\t// in\n    tag_42:\n        /* \"#utility.yul\":1508:1571   */\n      swap4\n      pop\n        /* \"#utility.yul\":1463:1581   */\n      pop\n        /* \"#utility.yul\":1620:1622   */\n      0x40\n        /* \"#utility.yul\":1646:1699   */\n      tag_43\n        /* \"#utility.yul\":1691:1698   */\n      dup8\n        /* \"#utility.yul\":1682:1688   */\n      dup3\n        /* \"#utility.yul\":1671:1680   */\n      dup9\n        /* \"#utility.yul\":1667:1689   */\n      add\n        /* \"#utility.yul\":1646:1699   */\n      tag_33\n      jump\t// in\n    tag_43:\n        /* \"#utility.yul\":1636:1699   */\n      swap3\n      pop\n        /* \"#utility.yul\":1591:1709   */\n      pop\n        /* \"#utility.yul\":1776:1778   */\n      0x60\n        /* \"#utility.yul\":1765:1774   */\n      dup6\n        /* \"#utility.yul\":1761:1779   */\n      add\n        /* \"#utility.yul\":1748:1780   */\n      calldataload\n        /* \"#utility.yul\":1807:1825   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1799:1805   */\n      dup2\n        /* \"#utility.yul\":1796:1826   */\n      gt\n        /* \"#utility.yul\":1793:1910   */\n      iszero\n      tag_44\n      jumpi\n        /* \"#utility.yul\":1829:1908   */\n      tag_45\n      tag_46\n      jump\t// in\n    tag_45:\n        /* \"#utility.yul\":1793:1910   */\n    tag_44:\n        /* \"#utility.yul\":1934:1996   */\n      tag_47\n        /* \"#utility.yul\":1988:1995   */\n      dup8\n        /* \"#utility.yul\":1979:1985   */\n      dup3\n        /* \"#utility.yul\":1968:1977   */\n      dup9\n        /* \"#utility.yul\":1964:1986   */\n      add\n        /* \"#utility.yul\":1934:1996   */\n      tag_27\n      jump\t// in\n    tag_47:\n        /* \"#utility.yul\":1924:1996   */\n      swap2\n      pop\n        /* \"#utility.yul\":1719:2006   */\n      pop\n        /* \"#utility.yul\":1070:2013   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2019:2134   */\n    tag_48:\n        /* \"#utility.yul\":2104:2127   */\n      tag_50\n        /* \"#utility.yul\":2121:2126   */\n      dup2\n        /* \"#utility.yul\":2104:2127   */\n      tag_51\n      jump\t// in\n    tag_50:\n        /* \"#utility.yul\":2099:2102   */\n      dup3\n        /* \"#utility.yul\":2092:2128   */\n      mstore\n        /* \"#utility.yul\":2019:2134   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2140:2358   */\n    tag_9:\n        /* \"#utility.yul\":2231:2235   */\n      0x00\n        /* \"#utility.yul\":2269:2271   */\n      0x20\n        /* \"#utility.yul\":2258:2267   */\n      dup3\n        /* \"#utility.yul\":2254:2272   */\n      add\n        /* \"#utility.yul\":2246:2272   */\n      swap1\n      pop\n        /* \"#utility.yul\":2282:2351   */\n      tag_53\n        /* \"#utility.yul\":2348:2349   */\n      0x00\n        /* \"#utility.yul\":2337:2346   */\n      dup4\n        /* \"#utility.yul\":2333:2350   */\n      add\n        /* \"#utility.yul\":2324:2330   */\n      dup5\n        /* \"#utility.yul\":2282:2351   */\n      tag_48\n      jump\t// in\n    tag_53:\n        /* \"#utility.yul\":2140:2358   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2364:2493   */\n    tag_17:\n        /* \"#utility.yul\":2398:2404   */\n      0x00\n        /* \"#utility.yul\":2425:2445   */\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n        /* \"#utility.yul\":2415:2445   */\n      swap1\n      pop\n        /* \"#utility.yul\":2454:2487   */\n      tag_57\n        /* \"#utility.yul\":2482:2486   */\n      dup3\n        /* \"#utility.yul\":2474:2480   */\n      dup3\n        /* \"#utility.yul\":2454:2487   */\n      tag_58\n      jump\t// in\n    tag_57:\n        /* \"#utility.yul\":2364:2493   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2499:2574   */\n    tag_56:\n        /* \"#utility.yul\":2532:2538   */\n      0x00\n        /* \"#utility.yul\":2565:2567   */\n      0x40\n        /* \"#utility.yul\":2559:2568   */\n      mload\n        /* \"#utility.yul\":2549:2568   */\n      swap1\n      pop\n        /* \"#utility.yul\":2499:2574   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":2580:2887   */\n    tag_16:\n        /* \"#utility.yul\":2641:2645   */\n      0x00\n        /* \"#utility.yul\":2731:2749   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2723:2729   */\n      dup3\n        /* \"#utility.yul\":2720:2750   */\n      gt\n        /* \"#utility.yul\":2717:2773   */\n      iszero\n      tag_61\n      jumpi\n        /* \"#utility.yul\":2753:2771   */\n      tag_62\n      tag_63\n      jump\t// in\n    tag_62:\n        /* \"#utility.yul\":2717:2773   */\n    tag_61:\n        /* \"#utility.yul\":2791:2820   */\n      tag_64\n        /* \"#utility.yul\":2813:2819   */\n      dup3\n        /* \"#utility.yul\":2791:2820   */\n      tag_65\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":2783:2820   */\n      swap1\n      pop\n        /* \"#utility.yul\":2875:2879   */\n      0x20\n        /* \"#utility.yul\":2869:2873   */\n      dup2\n        /* \"#utility.yul\":2865:2880   */\n      add\n        /* \"#utility.yul\":2857:2880   */\n      swap1\n      pop\n        /* \"#utility.yul\":2580:2887   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2893:2989   */\n    tag_66:\n        /* \"#utility.yul\":2930:2937   */\n      0x00\n        /* \"#utility.yul\":2959:2983   */\n      tag_68\n        /* \"#utility.yul\":2977:2982   */\n      dup3\n        /* \"#utility.yul\":2959:2983   */\n      tag_69\n      jump\t// in\n    tag_68:\n        /* \"#utility.yul\":2948:2983   */\n      swap1\n      pop\n        /* \"#utility.yul\":2893:2989   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2995:3144   */\n    tag_51:\n        /* \"#utility.yul\":3031:3038   */\n      0x00\n        /* \"#utility.yul\":3071:3137   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3064:3069   */\n      dup3\n        /* \"#utility.yul\":3060:3138   */\n      and\n        /* \"#utility.yul\":3049:3138   */\n      swap1\n      pop\n        /* \"#utility.yul\":2995:3144   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3150:3276   */\n    tag_69:\n        /* \"#utility.yul\":3187:3194   */\n      0x00\n        /* \"#utility.yul\":3227:3269   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3220:3225   */\n      dup3\n        /* \"#utility.yul\":3216:3270   */\n      and\n        /* \"#utility.yul\":3205:3270   */\n      swap1\n      pop\n        /* \"#utility.yul\":3150:3276   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3282:3359   */\n    tag_72:\n        /* \"#utility.yul\":3319:3326   */\n      0x00\n        /* \"#utility.yul\":3348:3353   */\n      dup2\n        /* \"#utility.yul\":3337:3353   */\n      swap1\n      pop\n        /* \"#utility.yul\":3282:3359   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3365:3519   */\n    tag_22:\n        /* \"#utility.yul\":3449:3455   */\n      dup3\n        /* \"#utility.yul\":3444:3447   */\n      dup2\n        /* \"#utility.yul\":3439:3442   */\n      dup4\n        /* \"#utility.yul\":3426:3456   */\n      calldatacopy\n        /* \"#utility.yul\":3511:3512   */\n      0x00\n        /* \"#utility.yul\":3502:3508   */\n      dup4\n        /* \"#utility.yul\":3497:3500   */\n      dup4\n        /* \"#utility.yul\":3493:3509   */\n      add\n        /* \"#utility.yul\":3486:3513   */\n      mstore\n        /* \"#utility.yul\":3365:3519   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3525:3806   */\n    tag_58:\n        /* \"#utility.yul\":3608:3635   */\n      tag_76\n        /* \"#utility.yul\":3630:3634   */\n      dup3\n        /* \"#utility.yul\":3608:3635   */\n      tag_65\n      jump\t// in\n    tag_76:\n        /* \"#utility.yul\":3600:3606   */\n      dup2\n        /* \"#utility.yul\":3596:3636   */\n      add\n        /* \"#utility.yul\":3738:3744   */\n      dup2\n        /* \"#utility.yul\":3726:3736   */\n      dup2\n        /* \"#utility.yul\":3723:3745   */\n      lt\n        /* \"#utility.yul\":3702:3720   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3690:3700   */\n      dup3\n        /* \"#utility.yul\":3687:3721   */\n      gt\n        /* \"#utility.yul\":3684:3746   */\n      or\n        /* \"#utility.yul\":3681:3769   */\n      iszero\n      tag_77\n      jumpi\n        /* \"#utility.yul\":3749:3767   */\n      tag_78\n      tag_63\n      jump\t// in\n    tag_78:\n        /* \"#utility.yul\":3681:3769   */\n    tag_77:\n        /* \"#utility.yul\":3789:3799   */\n      dup1\n        /* \"#utility.yul\":3785:3787   */\n      0x40\n        /* \"#utility.yul\":3778:3800   */\n      mstore\n        /* \"#utility.yul\":3568:3806   */\n      pop\n        /* \"#utility.yul\":3525:3806   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3812:3992   */\n    tag_63:\n        /* \"#utility.yul\":3860:3937   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3857:3858   */\n      0x00\n        /* \"#utility.yul\":3850:3938   */\n      mstore\n        /* \"#utility.yul\":3957:3961   */\n      0x41\n        /* \"#utility.yul\":3954:3955   */\n      0x04\n        /* \"#utility.yul\":3947:3962   */\n      mstore\n        /* \"#utility.yul\":3981:3985   */\n      0x24\n        /* \"#utility.yul\":3978:3979   */\n      0x00\n        /* \"#utility.yul\":3971:3986   */\n      revert\n        /* \"#utility.yul\":3998:4115   */\n    tag_31:\n        /* \"#utility.yul\":4107:4108   */\n      0x00\n        /* \"#utility.yul\":4104:4105   */\n      dup1\n        /* \"#utility.yul\":4097:4109   */\n      revert\n        /* \"#utility.yul\":4121:4238   */\n    tag_20:\n        /* \"#utility.yul\":4230:4231   */\n      0x00\n        /* \"#utility.yul\":4227:4228   */\n      dup1\n        /* \"#utility.yul\":4220:4232   */\n      revert\n        /* \"#utility.yul\":4244:4361   */\n    tag_46:\n        /* \"#utility.yul\":4353:4354   */\n      0x00\n        /* \"#utility.yul\":4350:4351   */\n      dup1\n        /* \"#utility.yul\":4343:4355   */\n      revert\n        /* \"#utility.yul\":4367:4484   */\n    tag_40:\n        /* \"#utility.yul\":4476:4477   */\n      0x00\n        /* \"#utility.yul\":4473:4474   */\n      dup1\n        /* \"#utility.yul\":4466:4478   */\n      revert\n        /* \"#utility.yul\":4490:4592   */\n    tag_65:\n        /* \"#utility.yul\":4531:4537   */\n      0x00\n        /* \"#utility.yul\":4582:4584   */\n      0x1f\n        /* \"#utility.yul\":4578:4585   */\n      not\n        /* \"#utility.yul\":4573:4575   */\n      0x1f\n        /* \"#utility.yul\":4566:4571   */\n      dup4\n        /* \"#utility.yul\":4562:4576   */\n      add\n        /* \"#utility.yul\":4558:4586   */\n      and\n        /* \"#utility.yul\":4548:4586   */\n      swap1\n      pop\n        /* \"#utility.yul\":4490:4592   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4598:4720   */\n    tag_26:\n        /* \"#utility.yul\":4671:4695   */\n      tag_86\n        /* \"#utility.yul\":4689:4694   */\n      dup2\n        /* \"#utility.yul\":4671:4695   */\n      tag_66\n      jump\t// in\n    tag_86:\n        /* \"#utility.yul\":4664:4669   */\n      dup2\n        /* \"#utility.yul\":4661:4696   */\n      eq\n        /* \"#utility.yul\":4651:4714   */\n      tag_87\n      jumpi\n        /* \"#utility.yul\":4710:4711   */\n      0x00\n        /* \"#utility.yul\":4707:4708   */\n      dup1\n        /* \"#utility.yul\":4700:4712   */\n      revert\n        /* \"#utility.yul\":4651:4714   */\n    tag_87:\n        /* \"#utility.yul\":4598:4720   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4726:4848   */\n    tag_36:\n        /* \"#utility.yul\":4799:4823   */\n      tag_89\n        /* \"#utility.yul\":4817:4822   */\n      dup2\n        /* \"#utility.yul\":4799:4823   */\n      tag_72\n      jump\t// in\n    tag_89:\n        /* \"#utility.yul\":4792:4797   */\n      dup2\n        /* \"#utility.yul\":4789:4824   */\n      eq\n        /* \"#utility.yul\":4779:4842   */\n      tag_90\n      jumpi\n        /* \"#utility.yul\":4838:4839   */\n      0x00\n        /* \"#utility.yul\":4835:4836   */\n      dup1\n        /* \"#utility.yul\":4828:4840   */\n      revert\n        /* \"#utility.yul\":4779:4842   */\n    tag_90:\n        /* \"#utility.yul\":4726:4848   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220115588fbcdf5dab7da7bd34dccded22eacbc217b00e408cac02adfbab4e87b9164736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610371806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063150b7a0214610030575b600080fd5b61004a6004803603810190610045919061010e565b610060565b60405161005791906101a0565b60405180910390f35b600063150b7a0260e01b9050949350505050565b6000610087610082846101e0565b6101bb565b9050828152602081018484840111156100a3576100a26102ed565b5b6100ae848285610279565b509392505050565b6000813590506100c58161030d565b92915050565b600082601f8301126100e0576100df6102e8565b5b81356100f0848260208601610074565b91505092915050565b60008135905061010881610324565b92915050565b60008060008060808587031215610128576101276102f7565b5b6000610136878288016100b6565b9450506020610147878288016100b6565b9350506040610158878288016100f9565b925050606085013567ffffffffffffffff811115610179576101786102f2565b5b610185878288016100cb565b91505092959194509250565b61019a81610223565b82525050565b60006020820190506101b56000830184610191565b92915050565b60006101c56101d6565b90506101d18282610288565b919050565b6000604051905090565b600067ffffffffffffffff8211156101fb576101fa6102b9565b5b610204826102fc565b9050602081019050919050565b600061021c8261024f565b9050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b610291826102fc565b810181811067ffffffffffffffff821117156102b0576102af6102b9565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b61031681610211565b811461032157600080fd5b50565b61032d8161026f565b811461033857600080fd5b5056fea2646970667358221220115588fbcdf5dab7da7bd34dccded22eacbc217b00e408cac02adfbab4e87b9164736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x371 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x10E JUMP JUMPDEST PUSH2 0x60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57 SWAP2 SWAP1 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH4 0x150B7A02 PUSH1 0xE0 SHL SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x87 PUSH2 0x82 DUP5 PUSH2 0x1E0 JUMP JUMPDEST PUSH2 0x1BB JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0xA3 JUMPI PUSH2 0xA2 PUSH2 0x2ED JUMP JUMPDEST JUMPDEST PUSH2 0xAE DUP5 DUP3 DUP6 PUSH2 0x279 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC5 DUP2 PUSH2 0x30D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xE0 JUMPI PUSH2 0xDF PUSH2 0x2E8 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xF0 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x74 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x108 DUP2 PUSH2 0x324 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x128 JUMPI PUSH2 0x127 PUSH2 0x2F7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x136 DUP8 DUP3 DUP9 ADD PUSH2 0xB6 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x147 DUP8 DUP3 DUP9 ADD PUSH2 0xB6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x158 DUP8 DUP3 DUP9 ADD PUSH2 0xF9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x179 JUMPI PUSH2 0x178 PUSH2 0x2F2 JUMP JUMPDEST JUMPDEST PUSH2 0x185 DUP8 DUP3 DUP9 ADD PUSH2 0xCB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x19A DUP2 PUSH2 0x223 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x191 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C5 PUSH2 0x1D6 JUMP JUMPDEST SWAP1 POP PUSH2 0x1D1 DUP3 DUP3 PUSH2 0x288 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1FB JUMPI PUSH2 0x1FA PUSH2 0x2B9 JUMP JUMPDEST JUMPDEST PUSH2 0x204 DUP3 PUSH2 0x2FC JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21C DUP3 PUSH2 0x24F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH2 0x291 DUP3 PUSH2 0x2FC JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2B0 JUMPI PUSH2 0x2AF PUSH2 0x2B9 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x316 DUP2 PUSH2 0x211 JUMP JUMPDEST DUP2 EQ PUSH2 0x321 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x32D DUP2 PUSH2 0x26F JUMP JUMPDEST DUP2 EQ PUSH2 0x338 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GT SSTORE DUP9 0xFB 0xCD CREATE2 0xDA 0xB7 0xDA PUSH28 0xD34DCCDED22EACBC217B00E408CAC02ADFBAB4E87B9164736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "399:391:6:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@onERC721Received_407": {
									"entryPoint": 96,
									"id": 407,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 116,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 182,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 203,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 249,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 270,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_encode_t_bytes4_to_t_bytes4_fromStack": {
									"entryPoint": 401,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
									"entryPoint": 416,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 443,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 470,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 480,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 529,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 547,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 591,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 623,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory": {
									"entryPoint": 633,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"finalize_allocation": {
									"entryPoint": 648,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 697,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 744,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 749,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 754,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 759,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 764,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 781,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 804,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4851:12",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "90:327:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "100:74:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "166:6:12"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "125:40:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "125:48:12"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "109:15:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "109:65:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "100:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "190:5:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "197:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "183:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "183:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "183:21:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "213:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "228:5:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "235:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "224:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "224:16:12"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "217:3:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "278:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "280:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "280:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "280:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "259:3:12"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "264:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "255:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "255:16:12"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "273:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "252:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "252:25:12"
															},
															"nodeType": "YulIf",
															"src": "249:112:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "394:3:12"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "399:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "404:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "370:23:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "370:41:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "370:41:12"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "63:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "68:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "76:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "84:5:12",
														"type": ""
													}
												],
												"src": "7:410:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "475:87:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "485:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "507:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "494:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "494:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "485:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "523:26:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "523:33:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "523:33:12"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "453:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "461:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "469:5:12",
														"type": ""
													}
												],
												"src": "423:139:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "642:277:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "691:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "693:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "693:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "693:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "670:6:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "678:4:12",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "666:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "666:17:12"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "685:3:12"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "662:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "662:27:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "655:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "655:35:12"
															},
															"nodeType": "YulIf",
															"src": "652:122:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "783:34:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "810:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "797:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "797:20:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "787:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "826:87:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "886:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "894:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "882:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "882:17:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "901:6:12"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "909:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "835:46:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "835:78:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "826:5:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "620:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "628:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "636:5:12",
														"type": ""
													}
												],
												"src": "581:338:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "977:87:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "987:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1009:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "996:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "996:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "987:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1052:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1025:26:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1025:33:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1025:33:12"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "955:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "963:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "971:5:12",
														"type": ""
													}
												],
												"src": "925:139:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1196:817:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1243:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1245:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1245:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1245:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1217:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1226:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1213:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1213:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1238:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1209:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1209:33:12"
															},
															"nodeType": "YulIf",
															"src": "1206:120:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "1336:117:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1351:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1365:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1355:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1380:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1415:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1426:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1411:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1411:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1435:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1390:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1390:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1380:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1463:118:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1478:16:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1492:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1482:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1508:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1543:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1554:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1539:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1539:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1563:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1518:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1518:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1508:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1591:118:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1606:16:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1620:2:12",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1610:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1636:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1671:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1682:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1667:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1667:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1691:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1646:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1646:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "1636:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1719:287:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1734:46:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1765:9:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1776:2:12",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1761:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1761:18:12"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "1748:12:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1748:32:12"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1738:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1827:83:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "1829:77:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1829:79:12"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1829:79:12"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1799:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1807:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1796:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1796:30:12"
																	},
																	"nodeType": "YulIf",
																	"src": "1793:117:12"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1924:72:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1968:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1979:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1964:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1964:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1988:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "1934:29:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1934:62:12"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "1924:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1142:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1153:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1165:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1173:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1181:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "1189:6:12",
														"type": ""
													}
												],
												"src": "1070:943:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2082:52:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2099:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2121:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "2104:16:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2104:23:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2092:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2092:36:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2092:36:12"
														}
													]
												},
												"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2070:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2077:3:12",
														"type": ""
													}
												],
												"src": "2019:115:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2236:122:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2246:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2258:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2269:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2254:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2254:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2246:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2324:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2337:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2348:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2333:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2333:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2282:41:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2282:69:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2282:69:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2208:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2220:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2231:4:12",
														"type": ""
													}
												],
												"src": "2140:218:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2405:88:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2415:30:12",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "2425:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2425:20:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "2415:6:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2474:6:12"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "2482:4:12"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "2454:19:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2454:33:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2454:33:12"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2389:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2398:6:12",
														"type": ""
													}
												],
												"src": "2364:129:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2539:35:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2549:19:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2565:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2559:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2559:9:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "2549:6:12"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2532:6:12",
														"type": ""
													}
												],
												"src": "2499:75:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2646:241:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2751:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2753:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2753:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2753:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2723:6:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2731:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2720:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2720:30:12"
															},
															"nodeType": "YulIf",
															"src": "2717:56:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2783:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2813:6:12"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "2791:21:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2791:29:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "2783:4:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2857:23:12",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "2869:4:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2875:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2865:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2865:15:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "2857:4:12"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2630:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2641:4:12",
														"type": ""
													}
												],
												"src": "2580:307:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2938:51:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2948:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2977:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2959:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2959:24:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2948:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2920:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2930:7:12",
														"type": ""
													}
												],
												"src": "2893:96:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3039:105:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3049:89:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3064:5:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3071:66:12",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3060:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3060:78:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3049:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3021:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3031:7:12",
														"type": ""
													}
												],
												"src": "2995:149:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3195:81:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3205:65:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3220:5:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3227:42:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3216:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3216:54:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3205:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3177:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3187:7:12",
														"type": ""
													}
												],
												"src": "3150:126:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3327:32:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3337:16:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3348:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3337:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3309:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3319:7:12",
														"type": ""
													}
												],
												"src": "3282:77:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3416:103:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "3439:3:12"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "3444:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3449:6:12"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "3426:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3426:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3426:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "3497:3:12"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3502:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3493:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3493:16:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3511:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3486:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3486:27:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3486:27:12"
														}
													]
												},
												"name": "copy_calldata_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "3398:3:12",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "3403:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3408:6:12",
														"type": ""
													}
												],
												"src": "3365:154:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3568:238:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3578:58:12",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3600:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "3630:4:12"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "3608:21:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3608:27:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3596:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3596:40:12"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "3582:10:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3747:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3749:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3749:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3749:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "3690:10:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3702:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3687:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3687:34:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "3726:10:12"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3738:6:12"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "3723:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3723:22:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "3684:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3684:62:12"
															},
															"nodeType": "YulIf",
															"src": "3681:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3785:2:12",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "3789:10:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3778:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3778:22:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3778:22:12"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3554:6:12",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "3562:4:12",
														"type": ""
													}
												],
												"src": "3525:281:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3840:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3857:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3860:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3850:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3850:88:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3850:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3954:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3957:4:12",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3947:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3947:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3947:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3978:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3981:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3971:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3971:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3971:15:12"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "3812:180:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4087:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4104:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4107:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4097:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4097:12:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4097:12:12"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "3998:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4210:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4227:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4230:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4220:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4220:12:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4220:12:12"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "4121:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4333:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4350:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4353:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4343:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4343:12:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4343:12:12"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "4244:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4456:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4473:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4476:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4466:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4466:12:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4466:12:12"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "4367:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4538:54:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4548:38:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4566:5:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4573:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4562:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4562:14:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4582:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "4578:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4578:7:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4558:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4558:28:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "4548:6:12"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4521:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "4531:6:12",
														"type": ""
													}
												],
												"src": "4490:102:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4641:79:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4698:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4707:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4710:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4700:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4700:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4700:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4664:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4689:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "4671:17:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4671:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4661:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4661:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4654:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4654:43:12"
															},
															"nodeType": "YulIf",
															"src": "4651:63:12"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4634:5:12",
														"type": ""
													}
												],
												"src": "4598:122:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4769:79:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4826:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4835:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4838:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4828:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4828:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4828:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4792:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4817:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "4799:17:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4799:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4789:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4789:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4782:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4782:43:12"
															},
															"nodeType": "YulIf",
															"src": "4779:63:12"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4762:5:12",
														"type": ""
													}
												],
												"src": "4726:122:12"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes4(value))\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c8063150b7a0214610030575b600080fd5b61004a6004803603810190610045919061010e565b610060565b60405161005791906101a0565b60405180910390f35b600063150b7a0260e01b9050949350505050565b6000610087610082846101e0565b6101bb565b9050828152602081018484840111156100a3576100a26102ed565b5b6100ae848285610279565b509392505050565b6000813590506100c58161030d565b92915050565b600082601f8301126100e0576100df6102e8565b5b81356100f0848260208601610074565b91505092915050565b60008135905061010881610324565b92915050565b60008060008060808587031215610128576101276102f7565b5b6000610136878288016100b6565b9450506020610147878288016100b6565b9350506040610158878288016100f9565b925050606085013567ffffffffffffffff811115610179576101786102f2565b5b610185878288016100cb565b91505092959194509250565b61019a81610223565b82525050565b60006020820190506101b56000830184610191565b92915050565b60006101c56101d6565b90506101d18282610288565b919050565b6000604051905090565b600067ffffffffffffffff8211156101fb576101fa6102b9565b5b610204826102fc565b9050602081019050919050565b600061021c8261024f565b9050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b610291826102fc565b810181811067ffffffffffffffff821117156102b0576102af6102b9565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b61031681610211565b811461032157600080fd5b50565b61032d8161026f565b811461033857600080fd5b5056fea2646970667358221220115588fbcdf5dab7da7bd34dccded22eacbc217b00e408cac02adfbab4e87b9164736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x10E JUMP JUMPDEST PUSH2 0x60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57 SWAP2 SWAP1 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH4 0x150B7A02 PUSH1 0xE0 SHL SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x87 PUSH2 0x82 DUP5 PUSH2 0x1E0 JUMP JUMPDEST PUSH2 0x1BB JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0xA3 JUMPI PUSH2 0xA2 PUSH2 0x2ED JUMP JUMPDEST JUMPDEST PUSH2 0xAE DUP5 DUP3 DUP6 PUSH2 0x279 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC5 DUP2 PUSH2 0x30D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xE0 JUMPI PUSH2 0xDF PUSH2 0x2E8 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xF0 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x74 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x108 DUP2 PUSH2 0x324 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x128 JUMPI PUSH2 0x127 PUSH2 0x2F7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x136 DUP8 DUP3 DUP9 ADD PUSH2 0xB6 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x147 DUP8 DUP3 DUP9 ADD PUSH2 0xB6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x158 DUP8 DUP3 DUP9 ADD PUSH2 0xF9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x179 JUMPI PUSH2 0x178 PUSH2 0x2F2 JUMP JUMPDEST JUMPDEST PUSH2 0x185 DUP8 DUP3 DUP9 ADD PUSH2 0xCB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x19A DUP2 PUSH2 0x223 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x191 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C5 PUSH2 0x1D6 JUMP JUMPDEST SWAP1 POP PUSH2 0x1D1 DUP3 DUP3 PUSH2 0x288 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1FB JUMPI PUSH2 0x1FA PUSH2 0x2B9 JUMP JUMPDEST JUMPDEST PUSH2 0x204 DUP3 PUSH2 0x2FC JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21C DUP3 PUSH2 0x24F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH2 0x291 DUP3 PUSH2 0x2FC JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2B0 JUMPI PUSH2 0x2AF PUSH2 0x2B9 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x316 DUP2 PUSH2 0x211 JUMP JUMPDEST DUP2 EQ PUSH2 0x321 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x32D DUP2 PUSH2 0x26F JUMP JUMPDEST DUP2 EQ PUSH2 0x338 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GT SSTORE DUP9 0xFB 0xCD CREATE2 0xDA 0xB7 0xDA PUSH28 0xD34DCCDED22EACBC217B00E408CAC02ADFBAB4E87B9164736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "399:391:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;588:200;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;726:6;751:30;;;744:37;;588:200;;;;;;:::o;7:410:12:-;84:5;109:65;125:48;166:6;125:48;:::i;:::-;109:65;:::i;:::-;100:74;;197:6;190:5;183:21;235:4;228:5;224:16;273:3;264:6;259:3;255:16;252:25;249:112;;;280:79;;:::i;:::-;249:112;370:41;404:6;399:3;394;370:41;:::i;:::-;90:327;7:410;;;;;:::o;423:139::-;469:5;507:6;494:20;485:29;;523:33;550:5;523:33;:::i;:::-;423:139;;;;:::o;581:338::-;636:5;685:3;678:4;670:6;666:17;662:27;652:122;;693:79;;:::i;:::-;652:122;810:6;797:20;835:78;909:3;901:6;894:4;886:6;882:17;835:78;:::i;:::-;826:87;;642:277;581:338;;;;:::o;925:139::-;971:5;1009:6;996:20;987:29;;1025:33;1052:5;1025:33;:::i;:::-;925:139;;;;:::o;1070:943::-;1165:6;1173;1181;1189;1238:3;1226:9;1217:7;1213:23;1209:33;1206:120;;;1245:79;;:::i;:::-;1206:120;1365:1;1390:53;1435:7;1426:6;1415:9;1411:22;1390:53;:::i;:::-;1380:63;;1336:117;1492:2;1518:53;1563:7;1554:6;1543:9;1539:22;1518:53;:::i;:::-;1508:63;;1463:118;1620:2;1646:53;1691:7;1682:6;1671:9;1667:22;1646:53;:::i;:::-;1636:63;;1591:118;1776:2;1765:9;1761:18;1748:32;1807:18;1799:6;1796:30;1793:117;;;1829:79;;:::i;:::-;1793:117;1934:62;1988:7;1979:6;1968:9;1964:22;1934:62;:::i;:::-;1924:72;;1719:287;1070:943;;;;;;;:::o;2019:115::-;2104:23;2121:5;2104:23;:::i;:::-;2099:3;2092:36;2019:115;;:::o;2140:218::-;2231:4;2269:2;2258:9;2254:18;2246:26;;2282:69;2348:1;2337:9;2333:17;2324:6;2282:69;:::i;:::-;2140:218;;;;:::o;2364:129::-;2398:6;2425:20;;:::i;:::-;2415:30;;2454:33;2482:4;2474:6;2454:33;:::i;:::-;2364:129;;;:::o;2499:75::-;2532:6;2565:2;2559:9;2549:19;;2499:75;:::o;2580:307::-;2641:4;2731:18;2723:6;2720:30;2717:56;;;2753:18;;:::i;:::-;2717:56;2791:29;2813:6;2791:29;:::i;:::-;2783:37;;2875:4;2869;2865:15;2857:23;;2580:307;;;:::o;2893:96::-;2930:7;2959:24;2977:5;2959:24;:::i;:::-;2948:35;;2893:96;;;:::o;2995:149::-;3031:7;3071:66;3064:5;3060:78;3049:89;;2995:149;;;:::o;3150:126::-;3187:7;3227:42;3220:5;3216:54;3205:65;;3150:126;;;:::o;3282:77::-;3319:7;3348:5;3337:16;;3282:77;;;:::o;3365:154::-;3449:6;3444:3;3439;3426:30;3511:1;3502:6;3497:3;3493:16;3486:27;3365:154;;;:::o;3525:281::-;3608:27;3630:4;3608:27;:::i;:::-;3600:6;3596:40;3738:6;3726:10;3723:22;3702:18;3690:10;3687:34;3684:62;3681:88;;;3749:18;;:::i;:::-;3681:88;3789:10;3785:2;3778:22;3568:238;3525:281;;:::o;3812:180::-;3860:77;3857:1;3850:88;3957:4;3954:1;3947:15;3981:4;3978:1;3971:15;3998:117;4107:1;4104;4097:12;4121:117;4230:1;4227;4220:12;4244:117;4353:1;4350;4343:12;4367:117;4476:1;4473;4466:12;4490:102;4531:6;4582:2;4578:7;4573:2;4566:5;4562:14;4558:28;4548:38;;4490:102;;;:::o;4598:122::-;4671:24;4689:5;4671:24;:::i;:::-;4664:5;4661:35;4651:63;;4710:1;4707;4700:12;4651:63;4598:122;:::o;4726:::-;4799:24;4817:5;4799:24;:::i;:::-;4792:5;4789:35;4779:63;;4838:1;4835;4828:12;4779:63;4726:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "176200",
								"executionCost": "220",
								"totalCost": "176420"
							},
							"external": {
								"onERC721Received(address,address,uint256,bytes)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 399,
									"end": 790,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 399,
									"end": 790,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 399,
									"end": 790,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 399,
									"end": 790,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 399,
									"end": 790,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 399,
									"end": 790,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 399,
									"end": 790,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 399,
									"end": 790,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 399,
									"end": 790,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 399,
									"end": 790,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 399,
									"end": 790,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 399,
									"end": 790,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 399,
									"end": 790,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 399,
									"end": 790,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 399,
									"end": 790,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 399,
									"end": 790,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 399,
									"end": 790,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 399,
									"end": 790,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 399,
									"end": 790,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 399,
									"end": 790,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 399,
									"end": 790,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220115588fbcdf5dab7da7bd34dccded22eacbc217b00e408cac02adfbab4e87b9164736f6c63430008070033",
									".code": [
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 399,
											"end": 790,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 399,
											"end": 790,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 399,
											"end": 790,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 399,
											"end": 790,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 399,
											"end": 790,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 399,
											"end": 790,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 399,
											"end": 790,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 399,
											"end": 790,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH",
											"source": 6,
											"value": "150B7A02"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 399,
											"end": 790,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 399,
											"end": 790,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 588,
											"end": 788,
											"name": "tag",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 588,
											"end": 788,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 588,
											"end": 788,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 588,
											"end": 788,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "tag",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "tag",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "tag",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 588,
											"end": 788,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 588,
											"end": 788,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 588,
											"end": 788,
											"name": "tag",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 726,
											"end": 732,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 781,
											"name": "PUSH",
											"source": 6,
											"value": "150B7A02"
										},
										{
											"begin": 751,
											"end": 781,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 751,
											"end": 781,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 744,
											"end": 781,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 744,
											"end": 781,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 588,
											"end": 788,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 588,
											"end": 788,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 588,
											"end": 788,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 588,
											"end": 788,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 417,
											"name": "tag",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 7,
											"end": 417,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 84,
											"end": 89,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 109,
											"end": 174,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 125,
											"end": 173,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "15"
										},
										{
											"begin": 166,
											"end": 172,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 125,
											"end": 173,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "16"
										},
										{
											"begin": 125,
											"end": 173,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 125,
											"end": 173,
											"name": "tag",
											"source": 12,
											"value": "15"
										},
										{
											"begin": 125,
											"end": 173,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 109,
											"end": 174,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 109,
											"end": 174,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 109,
											"end": 174,
											"name": "tag",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 109,
											"end": 174,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 100,
											"end": 174,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 100,
											"end": 174,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 197,
											"end": 203,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 190,
											"end": 195,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 183,
											"end": 204,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 235,
											"end": 239,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 228,
											"end": 233,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 224,
											"end": 240,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 273,
											"end": 276,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 264,
											"end": 270,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 259,
											"end": 262,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 255,
											"end": 271,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 252,
											"end": 277,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 249,
											"end": 361,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 249,
											"end": 361,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 249,
											"end": 361,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 280,
											"end": 359,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "19"
										},
										{
											"begin": 280,
											"end": 359,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 280,
											"end": 359,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 280,
											"end": 359,
											"name": "tag",
											"source": 12,
											"value": "19"
										},
										{
											"begin": 280,
											"end": 359,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 249,
											"end": 361,
											"name": "tag",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 249,
											"end": 361,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 370,
											"end": 411,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 404,
											"end": 410,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 399,
											"end": 402,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 394,
											"end": 397,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 370,
											"end": 411,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 370,
											"end": 411,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 370,
											"end": 411,
											"name": "tag",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 370,
											"end": 411,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 90,
											"end": 417,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7,
											"end": 417,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 7,
											"end": 417,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7,
											"end": 417,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7,
											"end": 417,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7,
											"end": 417,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7,
											"end": 417,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 423,
											"end": 562,
											"name": "tag",
											"source": 12,
											"value": "23"
										},
										{
											"begin": 423,
											"end": 562,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 469,
											"end": 474,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 507,
											"end": 513,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 494,
											"end": 514,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 485,
											"end": 514,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 485,
											"end": 514,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 523,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 523,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 523,
											"end": 556,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 523,
											"end": 556,
											"name": "tag",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 523,
											"end": 556,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 423,
											"end": 562,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 423,
											"end": 562,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 423,
											"end": 562,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 423,
											"end": 562,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 423,
											"end": 562,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 581,
											"end": 919,
											"name": "tag",
											"source": 12,
											"value": "27"
										},
										{
											"begin": 581,
											"end": 919,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 636,
											"end": 641,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 685,
											"end": 688,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 678,
											"end": 682,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 670,
											"end": 676,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 666,
											"end": 683,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 662,
											"end": 689,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 652,
											"end": 774,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "29"
										},
										{
											"begin": 652,
											"end": 774,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 693,
											"end": 772,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "30"
										},
										{
											"begin": 693,
											"end": 772,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "31"
										},
										{
											"begin": 693,
											"end": 772,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 693,
											"end": 772,
											"name": "tag",
											"source": 12,
											"value": "30"
										},
										{
											"begin": 693,
											"end": 772,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 652,
											"end": 774,
											"name": "tag",
											"source": 12,
											"value": "29"
										},
										{
											"begin": 652,
											"end": 774,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 810,
											"end": 816,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 797,
											"end": 817,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 835,
											"end": 913,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 909,
											"end": 912,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 901,
											"end": 907,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 894,
											"end": 898,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 886,
											"end": 892,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 882,
											"end": 899,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 835,
											"end": 913,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 835,
											"end": 913,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 835,
											"end": 913,
											"name": "tag",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 835,
											"end": 913,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 826,
											"end": 913,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 826,
											"end": 913,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 642,
											"end": 919,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 581,
											"end": 919,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 581,
											"end": 919,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 581,
											"end": 919,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 581,
											"end": 919,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 581,
											"end": 919,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 925,
											"end": 1064,
											"name": "tag",
											"source": 12,
											"value": "33"
										},
										{
											"begin": 925,
											"end": 1064,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 971,
											"end": 976,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1009,
											"end": 1015,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 996,
											"end": 1016,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 987,
											"end": 1016,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 987,
											"end": 1016,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1025,
											"end": 1058,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "35"
										},
										{
											"begin": 1052,
											"end": 1057,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1025,
											"end": 1058,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "36"
										},
										{
											"begin": 1025,
											"end": 1058,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 1025,
											"end": 1058,
											"name": "tag",
											"source": 12,
											"value": "35"
										},
										{
											"begin": 1025,
											"end": 1058,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 925,
											"end": 1064,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 925,
											"end": 1064,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 925,
											"end": 1064,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 925,
											"end": 1064,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 925,
											"end": 1064,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 1070,
											"end": 2013,
											"name": "tag",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 1070,
											"end": 2013,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1165,
											"end": 1171,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1173,
											"end": 1179,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1181,
											"end": 1187,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1189,
											"end": 1195,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1238,
											"end": 1241,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 1226,
											"end": 1235,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1217,
											"end": 1224,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 1213,
											"end": 1236,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1209,
											"end": 1242,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 1206,
											"end": 1326,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1206,
											"end": 1326,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "38"
										},
										{
											"begin": 1206,
											"end": 1326,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1245,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "39"
										},
										{
											"begin": 1245,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1245,
											"end": 1324,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 1245,
											"end": 1324,
											"name": "tag",
											"source": 12,
											"value": "39"
										},
										{
											"begin": 1245,
											"end": 1324,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1206,
											"end": 1326,
											"name": "tag",
											"source": 12,
											"value": "38"
										},
										{
											"begin": 1206,
											"end": 1326,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1365,
											"end": 1366,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1390,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 1435,
											"end": 1442,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 1426,
											"end": 1432,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1415,
											"end": 1424,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 1411,
											"end": 1433,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1390,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "23"
										},
										{
											"begin": 1390,
											"end": 1443,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 1390,
											"end": 1443,
											"name": "tag",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 1390,
											"end": 1443,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1380,
											"end": 1443,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 1380,
											"end": 1443,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1336,
											"end": 1453,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1492,
											"end": 1494,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1518,
											"end": 1571,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "42"
										},
										{
											"begin": 1563,
											"end": 1570,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 1554,
											"end": 1560,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1543,
											"end": 1552,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 1539,
											"end": 1561,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1571,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "23"
										},
										{
											"begin": 1518,
											"end": 1571,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 1518,
											"end": 1571,
											"name": "tag",
											"source": 12,
											"value": "42"
										},
										{
											"begin": 1518,
											"end": 1571,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1508,
											"end": 1571,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 1508,
											"end": 1571,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1463,
											"end": 1581,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1620,
											"end": 1622,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1646,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "43"
										},
										{
											"begin": 1691,
											"end": 1698,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 1682,
											"end": 1688,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1671,
											"end": 1680,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 1667,
											"end": 1689,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1646,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "33"
										},
										{
											"begin": 1646,
											"end": 1699,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 1646,
											"end": 1699,
											"name": "tag",
											"source": 12,
											"value": "43"
										},
										{
											"begin": 1646,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1636,
											"end": 1699,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1636,
											"end": 1699,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1591,
											"end": 1709,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1776,
											"end": 1778,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 1765,
											"end": 1774,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1761,
											"end": 1779,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1748,
											"end": 1780,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 1807,
											"end": 1825,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1799,
											"end": 1805,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1796,
											"end": 1826,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 1793,
											"end": 1910,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1793,
											"end": 1910,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 1793,
											"end": 1910,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1829,
											"end": 1908,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "45"
										},
										{
											"begin": 1829,
											"end": 1908,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "46"
										},
										{
											"begin": 1829,
											"end": 1908,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 1829,
											"end": 1908,
											"name": "tag",
											"source": 12,
											"value": "45"
										},
										{
											"begin": 1829,
											"end": 1908,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1793,
											"end": 1910,
											"name": "tag",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 1793,
											"end": 1910,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1934,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "47"
										},
										{
											"begin": 1988,
											"end": 1995,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 1979,
											"end": 1985,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1968,
											"end": 1977,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 1964,
											"end": 1986,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1934,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "27"
										},
										{
											"begin": 1934,
											"end": 1996,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 1934,
											"end": 1996,
											"name": "tag",
											"source": 12,
											"value": "47"
										},
										{
											"begin": 1934,
											"end": 1996,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1924,
											"end": 1996,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1924,
											"end": 1996,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1719,
											"end": 2006,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1070,
											"end": 2013,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1070,
											"end": 2013,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 1070,
											"end": 2013,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1070,
											"end": 2013,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 1070,
											"end": 2013,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1070,
											"end": 2013,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1070,
											"end": 2013,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1070,
											"end": 2013,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 2019,
											"end": 2134,
											"name": "tag",
											"source": 12,
											"value": "48"
										},
										{
											"begin": 2019,
											"end": 2134,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2104,
											"end": 2127,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "50"
										},
										{
											"begin": 2121,
											"end": 2126,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2104,
											"end": 2127,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "51"
										},
										{
											"begin": 2104,
											"end": 2127,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 2104,
											"end": 2127,
											"name": "tag",
											"source": 12,
											"value": "50"
										},
										{
											"begin": 2104,
											"end": 2127,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2099,
											"end": 2102,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2092,
											"end": 2128,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2019,
											"end": 2134,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2019,
											"end": 2134,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2019,
											"end": 2134,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 2140,
											"end": 2358,
											"name": "tag",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 2140,
											"end": 2358,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2231,
											"end": 2235,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2269,
											"end": 2271,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2258,
											"end": 2267,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2254,
											"end": 2272,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2246,
											"end": 2272,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2246,
											"end": 2272,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2282,
											"end": 2351,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "53"
										},
										{
											"begin": 2348,
											"end": 2349,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2337,
											"end": 2346,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2333,
											"end": 2350,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2324,
											"end": 2330,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2282,
											"end": 2351,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "48"
										},
										{
											"begin": 2282,
											"end": 2351,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 2282,
											"end": 2351,
											"name": "tag",
											"source": 12,
											"value": "53"
										},
										{
											"begin": 2282,
											"end": 2351,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2140,
											"end": 2358,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2140,
											"end": 2358,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2140,
											"end": 2358,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2140,
											"end": 2358,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2140,
											"end": 2358,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 2364,
											"end": 2493,
											"name": "tag",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 2364,
											"end": 2493,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2398,
											"end": 2404,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2425,
											"end": 2445,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "55"
										},
										{
											"begin": 2425,
											"end": 2445,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "56"
										},
										{
											"begin": 2425,
											"end": 2445,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 2425,
											"end": 2445,
											"name": "tag",
											"source": 12,
											"value": "55"
										},
										{
											"begin": 2425,
											"end": 2445,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2415,
											"end": 2445,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2415,
											"end": 2445,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2454,
											"end": 2487,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "57"
										},
										{
											"begin": 2482,
											"end": 2486,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2474,
											"end": 2480,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2454,
											"end": 2487,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "58"
										},
										{
											"begin": 2454,
											"end": 2487,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 2454,
											"end": 2487,
											"name": "tag",
											"source": 12,
											"value": "57"
										},
										{
											"begin": 2454,
											"end": 2487,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2364,
											"end": 2493,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2364,
											"end": 2493,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2364,
											"end": 2493,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2364,
											"end": 2493,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 2499,
											"end": 2574,
											"name": "tag",
											"source": 12,
											"value": "56"
										},
										{
											"begin": 2499,
											"end": 2574,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2532,
											"end": 2538,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2565,
											"end": 2567,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2559,
											"end": 2568,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2549,
											"end": 2568,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2549,
											"end": 2568,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2499,
											"end": 2574,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2499,
											"end": 2574,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 2580,
											"end": 2887,
											"name": "tag",
											"source": 12,
											"value": "16"
										},
										{
											"begin": 2580,
											"end": 2887,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2641,
											"end": 2645,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2731,
											"end": 2749,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2723,
											"end": 2729,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2720,
											"end": 2750,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 2717,
											"end": 2773,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2717,
											"end": 2773,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "61"
										},
										{
											"begin": 2717,
											"end": 2773,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2753,
											"end": 2771,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "62"
										},
										{
											"begin": 2753,
											"end": 2771,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "63"
										},
										{
											"begin": 2753,
											"end": 2771,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 2753,
											"end": 2771,
											"name": "tag",
											"source": 12,
											"value": "62"
										},
										{
											"begin": 2753,
											"end": 2771,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2717,
											"end": 2773,
											"name": "tag",
											"source": 12,
											"value": "61"
										},
										{
											"begin": 2717,
											"end": 2773,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2791,
											"end": 2820,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 2813,
											"end": 2819,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2791,
											"end": 2820,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "65"
										},
										{
											"begin": 2791,
											"end": 2820,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 2791,
											"end": 2820,
											"name": "tag",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 2791,
											"end": 2820,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2783,
											"end": 2820,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2783,
											"end": 2820,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2875,
											"end": 2879,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2869,
											"end": 2873,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2865,
											"end": 2880,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2857,
											"end": 2880,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2857,
											"end": 2880,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2580,
											"end": 2887,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2580,
											"end": 2887,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2580,
											"end": 2887,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2580,
											"end": 2887,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 2893,
											"end": 2989,
											"name": "tag",
											"source": 12,
											"value": "66"
										},
										{
											"begin": 2893,
											"end": 2989,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2930,
											"end": 2937,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2959,
											"end": 2983,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "68"
										},
										{
											"begin": 2977,
											"end": 2982,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2959,
											"end": 2983,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "69"
										},
										{
											"begin": 2959,
											"end": 2983,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 2959,
											"end": 2983,
											"name": "tag",
											"source": 12,
											"value": "68"
										},
										{
											"begin": 2959,
											"end": 2983,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2948,
											"end": 2983,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2948,
											"end": 2983,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2893,
											"end": 2989,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2893,
											"end": 2989,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2893,
											"end": 2989,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2893,
											"end": 2989,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 2995,
											"end": 3144,
											"name": "tag",
											"source": 12,
											"value": "51"
										},
										{
											"begin": 2995,
											"end": 3144,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3031,
											"end": 3038,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3071,
											"end": 3137,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3064,
											"end": 3069,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3060,
											"end": 3138,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3049,
											"end": 3138,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3049,
											"end": 3138,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2995,
											"end": 3144,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2995,
											"end": 3144,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2995,
											"end": 3144,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2995,
											"end": 3144,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 3150,
											"end": 3276,
											"name": "tag",
											"source": 12,
											"value": "69"
										},
										{
											"begin": 3150,
											"end": 3276,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3187,
											"end": 3194,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3227,
											"end": 3269,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3220,
											"end": 3225,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3216,
											"end": 3270,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3205,
											"end": 3270,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3205,
											"end": 3270,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3150,
											"end": 3276,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3150,
											"end": 3276,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3150,
											"end": 3276,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3150,
											"end": 3276,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 3282,
											"end": 3359,
											"name": "tag",
											"source": 12,
											"value": "72"
										},
										{
											"begin": 3282,
											"end": 3359,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3319,
											"end": 3326,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3348,
											"end": 3353,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3337,
											"end": 3353,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3337,
											"end": 3353,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3282,
											"end": 3359,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3282,
											"end": 3359,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3282,
											"end": 3359,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3282,
											"end": 3359,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 3365,
											"end": 3519,
											"name": "tag",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 3365,
											"end": 3519,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3449,
											"end": 3455,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3444,
											"end": 3447,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3439,
											"end": 3442,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3426,
											"end": 3456,
											"name": "CALLDATACOPY",
											"source": 12
										},
										{
											"begin": 3511,
											"end": 3512,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3502,
											"end": 3508,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3497,
											"end": 3500,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3493,
											"end": 3509,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3486,
											"end": 3513,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3365,
											"end": 3519,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3365,
											"end": 3519,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3365,
											"end": 3519,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3365,
											"end": 3519,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 3525,
											"end": 3806,
											"name": "tag",
											"source": 12,
											"value": "58"
										},
										{
											"begin": 3525,
											"end": 3806,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3608,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "76"
										},
										{
											"begin": 3630,
											"end": 3634,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3608,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "65"
										},
										{
											"begin": 3608,
											"end": 3635,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 3608,
											"end": 3635,
											"name": "tag",
											"source": 12,
											"value": "76"
										},
										{
											"begin": 3608,
											"end": 3635,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3600,
											"end": 3606,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3596,
											"end": 3636,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3738,
											"end": 3744,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3726,
											"end": 3736,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3723,
											"end": 3745,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 3702,
											"end": 3720,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3690,
											"end": 3700,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3687,
											"end": 3721,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 3684,
											"end": 3746,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 3681,
											"end": 3769,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3681,
											"end": 3769,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "77"
										},
										{
											"begin": 3681,
											"end": 3769,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3749,
											"end": 3767,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "78"
										},
										{
											"begin": 3749,
											"end": 3767,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "63"
										},
										{
											"begin": 3749,
											"end": 3767,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 3749,
											"end": 3767,
											"name": "tag",
											"source": 12,
											"value": "78"
										},
										{
											"begin": 3749,
											"end": 3767,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3681,
											"end": 3769,
											"name": "tag",
											"source": 12,
											"value": "77"
										},
										{
											"begin": 3681,
											"end": 3769,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3789,
											"end": 3799,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3785,
											"end": 3787,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3778,
											"end": 3800,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3568,
											"end": 3806,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3525,
											"end": 3806,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3525,
											"end": 3806,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3525,
											"end": 3806,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 3812,
											"end": 3992,
											"name": "tag",
											"source": 12,
											"value": "63"
										},
										{
											"begin": 3812,
											"end": 3992,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3860,
											"end": 3937,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3857,
											"end": 3858,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3850,
											"end": 3938,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3957,
											"end": 3961,
											"name": "PUSH",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 3954,
											"end": 3955,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 3947,
											"end": 3962,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3981,
											"end": 3985,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 3978,
											"end": 3979,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3971,
											"end": 3986,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3998,
											"end": 4115,
											"name": "tag",
											"source": 12,
											"value": "31"
										},
										{
											"begin": 3998,
											"end": 4115,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4107,
											"end": 4108,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4104,
											"end": 4105,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4097,
											"end": 4109,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4121,
											"end": 4238,
											"name": "tag",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4121,
											"end": 4238,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4230,
											"end": 4231,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4227,
											"end": 4228,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4220,
											"end": 4232,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4244,
											"end": 4361,
											"name": "tag",
											"source": 12,
											"value": "46"
										},
										{
											"begin": 4244,
											"end": 4361,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4353,
											"end": 4354,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4350,
											"end": 4351,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4343,
											"end": 4355,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4367,
											"end": 4484,
											"name": "tag",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4367,
											"end": 4484,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4476,
											"end": 4477,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4473,
											"end": 4474,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4466,
											"end": 4478,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4490,
											"end": 4592,
											"name": "tag",
											"source": 12,
											"value": "65"
										},
										{
											"begin": 4490,
											"end": 4592,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4531,
											"end": 4537,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4582,
											"end": 4584,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 4578,
											"end": 4585,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 4573,
											"end": 4575,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 4566,
											"end": 4571,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4562,
											"end": 4576,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4558,
											"end": 4586,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4548,
											"end": 4586,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4548,
											"end": 4586,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4490,
											"end": 4592,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4490,
											"end": 4592,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4490,
											"end": 4592,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4490,
											"end": 4592,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 4598,
											"end": 4720,
											"name": "tag",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 4598,
											"end": 4720,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4671,
											"end": 4695,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "86"
										},
										{
											"begin": 4689,
											"end": 4694,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4671,
											"end": 4695,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "66"
										},
										{
											"begin": 4671,
											"end": 4695,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 4671,
											"end": 4695,
											"name": "tag",
											"source": 12,
											"value": "86"
										},
										{
											"begin": 4671,
											"end": 4695,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4664,
											"end": 4669,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4661,
											"end": 4696,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 4651,
											"end": 4714,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "87"
										},
										{
											"begin": 4651,
											"end": 4714,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4710,
											"end": 4711,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4707,
											"end": 4708,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4700,
											"end": 4712,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4651,
											"end": 4714,
											"name": "tag",
											"source": 12,
											"value": "87"
										},
										{
											"begin": 4651,
											"end": 4714,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4598,
											"end": 4720,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4598,
											"end": 4720,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 4726,
											"end": 4848,
											"name": "tag",
											"source": 12,
											"value": "36"
										},
										{
											"begin": 4726,
											"end": 4848,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4799,
											"end": 4823,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "89"
										},
										{
											"begin": 4817,
											"end": 4822,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4799,
											"end": 4823,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "72"
										},
										{
											"begin": 4799,
											"end": 4823,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 4799,
											"end": 4823,
											"name": "tag",
											"source": 12,
											"value": "89"
										},
										{
											"begin": 4799,
											"end": 4823,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4792,
											"end": 4797,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4789,
											"end": 4824,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 4779,
											"end": 4842,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "90"
										},
										{
											"begin": 4779,
											"end": 4842,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4838,
											"end": 4839,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4835,
											"end": 4836,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4828,
											"end": 4840,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4779,
											"end": 4842,
											"name": "tag",
											"source": 12,
											"value": "90"
										},
										{
											"begin": 4779,
											"end": 4842,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4726,
											"end": 4848,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4726,
											"end": 4848,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC721Receiver} interface. Accepts all token transfers. Make sure the contract is able to use its token with {IERC721-safeTransferFrom}, {IERC721-approve} or {IERC721-setApprovalForAll}.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":\"ERC721Holder\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":{\"keccak256\":\"0x0108bf6a6ebd5f96678bed33a35947537263f96766131ee91461fb6485805028\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ae2d274bf3d56a6d49a9bbd0a4871c54997a82551eb3eb1c0c39dc98698ff8bf\",\"dweb:/ipfs/QmTT7ty5DPGAmRnx94Xu3TUDYGSPDVLN2bppJAjjedrg1e\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This contract module is inspired from  https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol OpenZepplin Ownable contract. The code is forked from Ownable except  2 functions i.e. renounce and transfer ownership. In our usecase, we do not require users  to transfer or renounce ownership as it is always aligned with the original user.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This contract module is inspired from  https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol OpenZepplin Ownable contract. The code is forked from Ownable except  2 functions i.e. renounce and transfer ownership. In our usecase, we do not require users  to transfer or renounce ownership as it is always aligned with the original user.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"Ownable.sol\":{\"keccak256\":\"0x27859030a47f274f647c726d7154207782f41c299a471ad984fb937a96726e9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://03dc74c9002f66b328d3cf2146f8684fe1a4574b771948933a39ecda1467ab89\",\"dweb:/ipfs/QmPJq3SLdXqcbaejBs6UxANXkaYryGwjBSixR2CcWzVgQw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 474,
								"contract": "Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Pratice2nd.sol": {
				"TwoFactor": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Pratice2nd.sol\":345:642  contract TwoFactor is Ownable, ERC721Holder, ERC1155Holder {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"Ownable.sol\":818:850  _transferOwnership(_msgSender()) */\n  tag_4\n    /* \"Ownable.sol\":837:849  _msgSender() */\n  tag_5\n    /* \"Ownable.sol\":837:847  _msgSender */\n  shl(0x20, tag_6)\n    /* \"Ownable.sol\":837:849  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_5:\n    /* \"Ownable.sol\":818:836  _transferOwnership */\n  shl(0x20, tag_7)\n    /* \"Ownable.sol\":818:850  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_4:\n    /* \"Pratice2nd.sol\":345:642  contract TwoFactor is Ownable, ERC721Holder, ERC1155Holder {... */\n  jump(tag_8)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_6:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"Ownable.sol\":1377:1564  function _transferOwnership(address newOwner) internal virtual {... */\ntag_7:\n    /* \"Ownable.sol\":1450:1466  address oldOwner */\n  0x00\n    /* \"Ownable.sol\":1469:1475  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"Ownable.sol\":1450:1475  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"Ownable.sol\":1494:1502  newOwner */\n  dup2\n    /* \"Ownable.sol\":1485:1491  _owner */\n  0x00\n  dup1\n    /* \"Ownable.sol\":1485:1502  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Ownable.sol\":1548:1556  newOwner */\n  dup2\n    /* \"Ownable.sol\":1517:1557  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"Ownable.sol\":1538:1546  oldOwner */\n  dup2\n    /* \"Ownable.sol\":1517:1557  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"Ownable.sol\":1440:1564  {... */\n  pop\n    /* \"Ownable.sol\":1377:1564  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"Pratice2nd.sol\":345:642  contract TwoFactor is Ownable, ERC721Holder, ERC1155Holder {... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Pratice2nd.sol\":345:642  contract TwoFactor is Ownable, ERC721Holder, ERC1155Holder {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x150b7a02\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xbc197c81\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xf23a6e61\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":387:608  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_3:\n      tag_8\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_9\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      tag_11\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      tag_12\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":588:788  function onERC721Received(... */\n    tag_4:\n      tag_14\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      tag_17\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Ownable.sol\":933:1018  function owner() public view virtual returns (address) {... */\n    tag_5:\n      tag_20\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":724:971  function onERC1155BatchReceived(... */\n    tag_6:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":499:718  function onERC1155Received(... */\n    tag_7:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":387:608  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_11:\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":489:493  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":527:561  type(IERC1155Receiver).interfaceId */\n      0x4e2312e000000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":512:561  interfaceId == type(IERC1155Receiver).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":512:523  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":512:561  interfaceId == type(IERC1155Receiver).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":512:601  interfaceId == type(IERC1155Receiver).interfaceId || super.supportsInterface(interfaceId) */\n      dup1\n      tag_35\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":565:601  super.supportsInterface(interfaceId) */\n      tag_36\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":589:600  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":565:588  super.supportsInterface */\n      tag_37\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":565:601  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_36:\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":512:601  interfaceId == type(IERC1155Receiver).interfaceId || super.supportsInterface(interfaceId) */\n    tag_35:\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":505:601  return interfaceId == type(IERC1155Receiver).interfaceId || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":387:608  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":588:788  function onERC721Received(... */\n    tag_17:\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":726:732  bytes4 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":751:781  this.onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":744:781  return this.onERC721Received.selector */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":588:788  function onERC721Received(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Ownable.sol\":933:1018  function owner() public view virtual returns (address) {... */\n    tag_21:\n        /* \"Ownable.sol\":979:986  address */\n      0x00\n        /* \"Ownable.sol\":1005:1011  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Ownable.sol\":998:1011  return _owner */\n      swap1\n      pop\n        /* \"Ownable.sol\":933:1018  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":724:971  function onERC1155BatchReceived(... */\n    tag_27:\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":903:909  bytes4 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":928:964  this.onERC1155BatchReceived.selector */\n      shl(0xe0, 0xbc197c81)\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":921:964  return this.onERC1155BatchReceived.selector */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":724:971  function onERC1155BatchReceived(... */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":499:718  function onERC1155Received(... */\n    tag_32:\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":655:661  bytes4 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":680:711  this.onERC1155Received.selector */\n      shl(0xe0, 0xf23a6e61)\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":673:711  return this.onERC1155Received.selector */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":499:718  function onERC1155Received(... */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_37:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":914:918  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":952:977  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:948  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":930:977  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24:746   */\n    tag_44:\n        /* \"#utility.yul\":120:125   */\n      0x00\n        /* \"#utility.yul\":145:226   */\n      tag_46\n        /* \"#utility.yul\":161:225   */\n      tag_47\n        /* \"#utility.yul\":218:224   */\n      dup5\n        /* \"#utility.yul\":161:225   */\n      tag_48\n      jump\t// in\n    tag_47:\n        /* \"#utility.yul\":145:226   */\n      tag_49\n      jump\t// in\n    tag_46:\n        /* \"#utility.yul\":136:226   */\n      swap1\n      pop\n        /* \"#utility.yul\":246:251   */\n      dup1\n        /* \"#utility.yul\":275:281   */\n      dup4\n        /* \"#utility.yul\":268:273   */\n      dup3\n        /* \"#utility.yul\":261:282   */\n      mstore\n        /* \"#utility.yul\":309:313   */\n      0x20\n        /* \"#utility.yul\":302:307   */\n      dup3\n        /* \"#utility.yul\":298:314   */\n      add\n        /* \"#utility.yul\":291:314   */\n      swap1\n      pop\n        /* \"#utility.yul\":335:341   */\n      dup3\n        /* \"#utility.yul\":385:388   */\n      dup6\n        /* \"#utility.yul\":377:381   */\n      0x20\n        /* \"#utility.yul\":369:375   */\n      dup7\n        /* \"#utility.yul\":365:382   */\n      mul\n        /* \"#utility.yul\":360:363   */\n      dup3\n        /* \"#utility.yul\":356:383   */\n      add\n        /* \"#utility.yul\":353:389   */\n      gt\n        /* \"#utility.yul\":350:493   */\n      iszero\n      tag_50\n      jumpi\n        /* \"#utility.yul\":404:483   */\n      tag_51\n      tag_52\n      jump\t// in\n    tag_51:\n        /* \"#utility.yul\":350:493   */\n    tag_50:\n        /* \"#utility.yul\":517:518   */\n      0x00\n        /* \"#utility.yul\":502:740   */\n    tag_53:\n        /* \"#utility.yul\":527:533   */\n      dup6\n        /* \"#utility.yul\":524:525   */\n      dup2\n        /* \"#utility.yul\":521:534   */\n      lt\n        /* \"#utility.yul\":502:740   */\n      iszero\n      tag_55\n      jumpi\n        /* \"#utility.yul\":595:598   */\n      dup2\n        /* \"#utility.yul\":624:661   */\n      tag_56\n        /* \"#utility.yul\":657:660   */\n      dup9\n        /* \"#utility.yul\":645:655   */\n      dup3\n        /* \"#utility.yul\":624:661   */\n      tag_57\n      jump\t// in\n    tag_56:\n        /* \"#utility.yul\":619:622   */\n      dup5\n        /* \"#utility.yul\":612:662   */\n      mstore\n        /* \"#utility.yul\":691:695   */\n      0x20\n        /* \"#utility.yul\":686:689   */\n      dup5\n        /* \"#utility.yul\":682:696   */\n      add\n        /* \"#utility.yul\":675:696   */\n      swap4\n      pop\n        /* \"#utility.yul\":725:729   */\n      0x20\n        /* \"#utility.yul\":720:723   */\n      dup4\n        /* \"#utility.yul\":716:730   */\n      add\n        /* \"#utility.yul\":709:730   */\n      swap3\n      pop\n        /* \"#utility.yul\":562:740   */\n      pop\n        /* \"#utility.yul\":549:550   */\n      0x01\n        /* \"#utility.yul\":546:547   */\n      dup2\n        /* \"#utility.yul\":542:551   */\n      add\n        /* \"#utility.yul\":537:551   */\n      swap1\n      pop\n        /* \"#utility.yul\":502:740   */\n      jump(tag_53)\n    tag_55:\n        /* \"#utility.yul\":506:520   */\n      pop\n        /* \"#utility.yul\":126:746   */\n      pop\n      pop\n        /* \"#utility.yul\":24:746   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":752:1162   */\n    tag_58:\n        /* \"#utility.yul\":829:834   */\n      0x00\n        /* \"#utility.yul\":854:919   */\n      tag_60\n        /* \"#utility.yul\":870:918   */\n      tag_61\n        /* \"#utility.yul\":911:917   */\n      dup5\n        /* \"#utility.yul\":870:918   */\n      tag_62\n      jump\t// in\n    tag_61:\n        /* \"#utility.yul\":854:919   */\n      tag_49\n      jump\t// in\n    tag_60:\n        /* \"#utility.yul\":845:919   */\n      swap1\n      pop\n        /* \"#utility.yul\":942:948   */\n      dup3\n        /* \"#utility.yul\":935:940   */\n      dup2\n        /* \"#utility.yul\":928:949   */\n      mstore\n        /* \"#utility.yul\":980:984   */\n      0x20\n        /* \"#utility.yul\":973:978   */\n      dup2\n        /* \"#utility.yul\":969:985   */\n      add\n        /* \"#utility.yul\":1018:1021   */\n      dup5\n        /* \"#utility.yul\":1009:1015   */\n      dup5\n        /* \"#utility.yul\":1004:1007   */\n      dup5\n        /* \"#utility.yul\":1000:1016   */\n      add\n        /* \"#utility.yul\":997:1022   */\n      gt\n        /* \"#utility.yul\":994:1106   */\n      iszero\n      tag_63\n      jumpi\n        /* \"#utility.yul\":1025:1104   */\n      tag_64\n      tag_65\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":994:1106   */\n    tag_63:\n        /* \"#utility.yul\":1115:1156   */\n      tag_66\n        /* \"#utility.yul\":1149:1155   */\n      dup5\n        /* \"#utility.yul\":1144:1147   */\n      dup3\n        /* \"#utility.yul\":1139:1142   */\n      dup6\n        /* \"#utility.yul\":1115:1156   */\n      tag_67\n      jump\t// in\n    tag_66:\n        /* \"#utility.yul\":835:1162   */\n      pop\n        /* \"#utility.yul\":752:1162   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1168:1307   */\n    tag_68:\n        /* \"#utility.yul\":1214:1219   */\n      0x00\n        /* \"#utility.yul\":1252:1258   */\n      dup2\n        /* \"#utility.yul\":1239:1259   */\n      calldataload\n        /* \"#utility.yul\":1230:1259   */\n      swap1\n      pop\n        /* \"#utility.yul\":1268:1301   */\n      tag_70\n        /* \"#utility.yul\":1295:1300   */\n      dup2\n        /* \"#utility.yul\":1268:1301   */\n      tag_71\n      jump\t// in\n    tag_70:\n        /* \"#utility.yul\":1168:1307   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1330:1700   */\n    tag_72:\n        /* \"#utility.yul\":1401:1406   */\n      0x00\n        /* \"#utility.yul\":1450:1453   */\n      dup3\n        /* \"#utility.yul\":1443:1447   */\n      0x1f\n        /* \"#utility.yul\":1435:1441   */\n      dup4\n        /* \"#utility.yul\":1431:1448   */\n      add\n        /* \"#utility.yul\":1427:1454   */\n      slt\n        /* \"#utility.yul\":1417:1539   */\n      tag_74\n      jumpi\n        /* \"#utility.yul\":1458:1537   */\n      tag_75\n      tag_76\n      jump\t// in\n    tag_75:\n        /* \"#utility.yul\":1417:1539   */\n    tag_74:\n        /* \"#utility.yul\":1575:1581   */\n      dup2\n        /* \"#utility.yul\":1562:1582   */\n      calldataload\n        /* \"#utility.yul\":1600:1694   */\n      tag_77\n        /* \"#utility.yul\":1690:1693   */\n      dup5\n        /* \"#utility.yul\":1682:1688   */\n      dup3\n        /* \"#utility.yul\":1675:1679   */\n      0x20\n        /* \"#utility.yul\":1667:1673   */\n      dup7\n        /* \"#utility.yul\":1663:1680   */\n      add\n        /* \"#utility.yul\":1600:1694   */\n      tag_44\n      jump\t// in\n    tag_77:\n        /* \"#utility.yul\":1591:1694   */\n      swap2\n      pop\n        /* \"#utility.yul\":1407:1700   */\n      pop\n        /* \"#utility.yul\":1330:1700   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1706:1843   */\n    tag_78:\n        /* \"#utility.yul\":1751:1756   */\n      0x00\n        /* \"#utility.yul\":1789:1795   */\n      dup2\n        /* \"#utility.yul\":1776:1796   */\n      calldataload\n        /* \"#utility.yul\":1767:1796   */\n      swap1\n      pop\n        /* \"#utility.yul\":1805:1837   */\n      tag_80\n        /* \"#utility.yul\":1831:1836   */\n      dup2\n        /* \"#utility.yul\":1805:1837   */\n      tag_81\n      jump\t// in\n    tag_80:\n        /* \"#utility.yul\":1706:1843   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1862:2200   */\n    tag_82:\n        /* \"#utility.yul\":1917:1922   */\n      0x00\n        /* \"#utility.yul\":1966:1969   */\n      dup3\n        /* \"#utility.yul\":1959:1963   */\n      0x1f\n        /* \"#utility.yul\":1951:1957   */\n      dup4\n        /* \"#utility.yul\":1947:1964   */\n      add\n        /* \"#utility.yul\":1943:1970   */\n      slt\n        /* \"#utility.yul\":1933:2055   */\n      tag_84\n      jumpi\n        /* \"#utility.yul\":1974:2053   */\n      tag_85\n      tag_76\n      jump\t// in\n    tag_85:\n        /* \"#utility.yul\":1933:2055   */\n    tag_84:\n        /* \"#utility.yul\":2091:2097   */\n      dup2\n        /* \"#utility.yul\":2078:2098   */\n      calldataload\n        /* \"#utility.yul\":2116:2194   */\n      tag_86\n        /* \"#utility.yul\":2190:2193   */\n      dup5\n        /* \"#utility.yul\":2182:2188   */\n      dup3\n        /* \"#utility.yul\":2175:2179   */\n      0x20\n        /* \"#utility.yul\":2167:2173   */\n      dup7\n        /* \"#utility.yul\":2163:2180   */\n      add\n        /* \"#utility.yul\":2116:2194   */\n      tag_58\n      jump\t// in\n    tag_86:\n        /* \"#utility.yul\":2107:2194   */\n      swap2\n      pop\n        /* \"#utility.yul\":1923:2200   */\n      pop\n        /* \"#utility.yul\":1862:2200   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2206:2345   */\n    tag_57:\n        /* \"#utility.yul\":2252:2257   */\n      0x00\n        /* \"#utility.yul\":2290:2296   */\n      dup2\n        /* \"#utility.yul\":2277:2297   */\n      calldataload\n        /* \"#utility.yul\":2268:2297   */\n      swap1\n      pop\n        /* \"#utility.yul\":2306:2339   */\n      tag_88\n        /* \"#utility.yul\":2333:2338   */\n      dup2\n        /* \"#utility.yul\":2306:2339   */\n      tag_89\n      jump\t// in\n    tag_88:\n        /* \"#utility.yul\":2206:2345   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2351:3860   */\n    tag_26:\n        /* \"#utility.yul\":2505:2511   */\n      0x00\n        /* \"#utility.yul\":2513:2519   */\n      dup1\n        /* \"#utility.yul\":2521:2527   */\n      0x00\n        /* \"#utility.yul\":2529:2535   */\n      dup1\n        /* \"#utility.yul\":2537:2543   */\n      0x00\n        /* \"#utility.yul\":2586:2589   */\n      0xa0\n        /* \"#utility.yul\":2574:2583   */\n      dup7\n        /* \"#utility.yul\":2565:2572   */\n      dup9\n        /* \"#utility.yul\":2561:2584   */\n      sub\n        /* \"#utility.yul\":2557:2590   */\n      slt\n        /* \"#utility.yul\":2554:2674   */\n      iszero\n      tag_91\n      jumpi\n        /* \"#utility.yul\":2593:2672   */\n      tag_92\n      tag_93\n      jump\t// in\n    tag_92:\n        /* \"#utility.yul\":2554:2674   */\n    tag_91:\n        /* \"#utility.yul\":2713:2714   */\n      0x00\n        /* \"#utility.yul\":2738:2791   */\n      tag_94\n        /* \"#utility.yul\":2783:2790   */\n      dup9\n        /* \"#utility.yul\":2774:2780   */\n      dup3\n        /* \"#utility.yul\":2763:2772   */\n      dup10\n        /* \"#utility.yul\":2759:2781   */\n      add\n        /* \"#utility.yul\":2738:2791   */\n      tag_68\n      jump\t// in\n    tag_94:\n        /* \"#utility.yul\":2728:2791   */\n      swap6\n      pop\n        /* \"#utility.yul\":2684:2801   */\n      pop\n        /* \"#utility.yul\":2840:2842   */\n      0x20\n        /* \"#utility.yul\":2866:2919   */\n      tag_95\n        /* \"#utility.yul\":2911:2918   */\n      dup9\n        /* \"#utility.yul\":2902:2908   */\n      dup3\n        /* \"#utility.yul\":2891:2900   */\n      dup10\n        /* \"#utility.yul\":2887:2909   */\n      add\n        /* \"#utility.yul\":2866:2919   */\n      tag_68\n      jump\t// in\n    tag_95:\n        /* \"#utility.yul\":2856:2919   */\n      swap5\n      pop\n        /* \"#utility.yul\":2811:2929   */\n      pop\n        /* \"#utility.yul\":2996:2998   */\n      0x40\n        /* \"#utility.yul\":2985:2994   */\n      dup7\n        /* \"#utility.yul\":2981:2999   */\n      add\n        /* \"#utility.yul\":2968:3000   */\n      calldataload\n        /* \"#utility.yul\":3027:3045   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3019:3025   */\n      dup2\n        /* \"#utility.yul\":3016:3046   */\n      gt\n        /* \"#utility.yul\":3013:3130   */\n      iszero\n      tag_96\n      jumpi\n        /* \"#utility.yul\":3049:3128   */\n      tag_97\n      tag_98\n      jump\t// in\n    tag_97:\n        /* \"#utility.yul\":3013:3130   */\n    tag_96:\n        /* \"#utility.yul\":3154:3232   */\n      tag_99\n        /* \"#utility.yul\":3224:3231   */\n      dup9\n        /* \"#utility.yul\":3215:3221   */\n      dup3\n        /* \"#utility.yul\":3204:3213   */\n      dup10\n        /* \"#utility.yul\":3200:3222   */\n      add\n        /* \"#utility.yul\":3154:3232   */\n      tag_72\n      jump\t// in\n    tag_99:\n        /* \"#utility.yul\":3144:3232   */\n      swap4\n      pop\n        /* \"#utility.yul\":2939:3242   */\n      pop\n        /* \"#utility.yul\":3309:3311   */\n      0x60\n        /* \"#utility.yul\":3298:3307   */\n      dup7\n        /* \"#utility.yul\":3294:3312   */\n      add\n        /* \"#utility.yul\":3281:3313   */\n      calldataload\n        /* \"#utility.yul\":3340:3358   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3332:3338   */\n      dup2\n        /* \"#utility.yul\":3329:3359   */\n      gt\n        /* \"#utility.yul\":3326:3443   */\n      iszero\n      tag_100\n      jumpi\n        /* \"#utility.yul\":3362:3441   */\n      tag_101\n      tag_98\n      jump\t// in\n    tag_101:\n        /* \"#utility.yul\":3326:3443   */\n    tag_100:\n        /* \"#utility.yul\":3467:3545   */\n      tag_102\n        /* \"#utility.yul\":3537:3544   */\n      dup9\n        /* \"#utility.yul\":3528:3534   */\n      dup3\n        /* \"#utility.yul\":3517:3526   */\n      dup10\n        /* \"#utility.yul\":3513:3535   */\n      add\n        /* \"#utility.yul\":3467:3545   */\n      tag_72\n      jump\t// in\n    tag_102:\n        /* \"#utility.yul\":3457:3545   */\n      swap3\n      pop\n        /* \"#utility.yul\":3252:3555   */\n      pop\n        /* \"#utility.yul\":3622:3625   */\n      0x80\n        /* \"#utility.yul\":3611:3620   */\n      dup7\n        /* \"#utility.yul\":3607:3626   */\n      add\n        /* \"#utility.yul\":3594:3627   */\n      calldataload\n        /* \"#utility.yul\":3654:3672   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3646:3652   */\n      dup2\n        /* \"#utility.yul\":3643:3673   */\n      gt\n        /* \"#utility.yul\":3640:3757   */\n      iszero\n      tag_103\n      jumpi\n        /* \"#utility.yul\":3676:3755   */\n      tag_104\n      tag_98\n      jump\t// in\n    tag_104:\n        /* \"#utility.yul\":3640:3757   */\n    tag_103:\n        /* \"#utility.yul\":3781:3843   */\n      tag_105\n        /* \"#utility.yul\":3835:3842   */\n      dup9\n        /* \"#utility.yul\":3826:3832   */\n      dup3\n        /* \"#utility.yul\":3815:3824   */\n      dup10\n        /* \"#utility.yul\":3811:3833   */\n      add\n        /* \"#utility.yul\":3781:3843   */\n      tag_82\n      jump\t// in\n    tag_105:\n        /* \"#utility.yul\":3771:3843   */\n      swap2\n      pop\n        /* \"#utility.yul\":3565:3853   */\n      pop\n        /* \"#utility.yul\":2351:3860   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3866:4809   */\n    tag_16:\n        /* \"#utility.yul\":3961:3967   */\n      0x00\n        /* \"#utility.yul\":3969:3975   */\n      dup1\n        /* \"#utility.yul\":3977:3983   */\n      0x00\n        /* \"#utility.yul\":3985:3991   */\n      dup1\n        /* \"#utility.yul\":4034:4037   */\n      0x80\n        /* \"#utility.yul\":4022:4031   */\n      dup6\n        /* \"#utility.yul\":4013:4020   */\n      dup8\n        /* \"#utility.yul\":4009:4032   */\n      sub\n        /* \"#utility.yul\":4005:4038   */\n      slt\n        /* \"#utility.yul\":4002:4122   */\n      iszero\n      tag_107\n      jumpi\n        /* \"#utility.yul\":4041:4120   */\n      tag_108\n      tag_93\n      jump\t// in\n    tag_108:\n        /* \"#utility.yul\":4002:4122   */\n    tag_107:\n        /* \"#utility.yul\":4161:4162   */\n      0x00\n        /* \"#utility.yul\":4186:4239   */\n      tag_109\n        /* \"#utility.yul\":4231:4238   */\n      dup8\n        /* \"#utility.yul\":4222:4228   */\n      dup3\n        /* \"#utility.yul\":4211:4220   */\n      dup9\n        /* \"#utility.yul\":4207:4229   */\n      add\n        /* \"#utility.yul\":4186:4239   */\n      tag_68\n      jump\t// in\n    tag_109:\n        /* \"#utility.yul\":4176:4239   */\n      swap5\n      pop\n        /* \"#utility.yul\":4132:4249   */\n      pop\n        /* \"#utility.yul\":4288:4290   */\n      0x20\n        /* \"#utility.yul\":4314:4367   */\n      tag_110\n        /* \"#utility.yul\":4359:4366   */\n      dup8\n        /* \"#utility.yul\":4350:4356   */\n      dup3\n        /* \"#utility.yul\":4339:4348   */\n      dup9\n        /* \"#utility.yul\":4335:4357   */\n      add\n        /* \"#utility.yul\":4314:4367   */\n      tag_68\n      jump\t// in\n    tag_110:\n        /* \"#utility.yul\":4304:4367   */\n      swap4\n      pop\n        /* \"#utility.yul\":4259:4377   */\n      pop\n        /* \"#utility.yul\":4416:4418   */\n      0x40\n        /* \"#utility.yul\":4442:4495   */\n      tag_111\n        /* \"#utility.yul\":4487:4494   */\n      dup8\n        /* \"#utility.yul\":4478:4484   */\n      dup3\n        /* \"#utility.yul\":4467:4476   */\n      dup9\n        /* \"#utility.yul\":4463:4485   */\n      add\n        /* \"#utility.yul\":4442:4495   */\n      tag_57\n      jump\t// in\n    tag_111:\n        /* \"#utility.yul\":4432:4495   */\n      swap3\n      pop\n        /* \"#utility.yul\":4387:4505   */\n      pop\n        /* \"#utility.yul\":4572:4574   */\n      0x60\n        /* \"#utility.yul\":4561:4570   */\n      dup6\n        /* \"#utility.yul\":4557:4575   */\n      add\n        /* \"#utility.yul\":4544:4576   */\n      calldataload\n        /* \"#utility.yul\":4603:4621   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4595:4601   */\n      dup2\n        /* \"#utility.yul\":4592:4622   */\n      gt\n        /* \"#utility.yul\":4589:4706   */\n      iszero\n      tag_112\n      jumpi\n        /* \"#utility.yul\":4625:4704   */\n      tag_113\n      tag_98\n      jump\t// in\n    tag_113:\n        /* \"#utility.yul\":4589:4706   */\n    tag_112:\n        /* \"#utility.yul\":4730:4792   */\n      tag_114\n        /* \"#utility.yul\":4784:4791   */\n      dup8\n        /* \"#utility.yul\":4775:4781   */\n      dup3\n        /* \"#utility.yul\":4764:4773   */\n      dup9\n        /* \"#utility.yul\":4760:4782   */\n      add\n        /* \"#utility.yul\":4730:4792   */\n      tag_82\n      jump\t// in\n    tag_114:\n        /* \"#utility.yul\":4720:4792   */\n      swap2\n      pop\n        /* \"#utility.yul\":4515:4802   */\n      pop\n        /* \"#utility.yul\":3866:4809   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4815:5904   */\n    tag_31:\n        /* \"#utility.yul\":4919:4925   */\n      0x00\n        /* \"#utility.yul\":4927:4933   */\n      dup1\n        /* \"#utility.yul\":4935:4941   */\n      0x00\n        /* \"#utility.yul\":4943:4949   */\n      dup1\n        /* \"#utility.yul\":4951:4957   */\n      0x00\n        /* \"#utility.yul\":5000:5003   */\n      0xa0\n        /* \"#utility.yul\":4988:4997   */\n      dup7\n        /* \"#utility.yul\":4979:4986   */\n      dup9\n        /* \"#utility.yul\":4975:4998   */\n      sub\n        /* \"#utility.yul\":4971:5004   */\n      slt\n        /* \"#utility.yul\":4968:5088   */\n      iszero\n      tag_116\n      jumpi\n        /* \"#utility.yul\":5007:5086   */\n      tag_117\n      tag_93\n      jump\t// in\n    tag_117:\n        /* \"#utility.yul\":4968:5088   */\n    tag_116:\n        /* \"#utility.yul\":5127:5128   */\n      0x00\n        /* \"#utility.yul\":5152:5205   */\n      tag_118\n        /* \"#utility.yul\":5197:5204   */\n      dup9\n        /* \"#utility.yul\":5188:5194   */\n      dup3\n        /* \"#utility.yul\":5177:5186   */\n      dup10\n        /* \"#utility.yul\":5173:5195   */\n      add\n        /* \"#utility.yul\":5152:5205   */\n      tag_68\n      jump\t// in\n    tag_118:\n        /* \"#utility.yul\":5142:5205   */\n      swap6\n      pop\n        /* \"#utility.yul\":5098:5215   */\n      pop\n        /* \"#utility.yul\":5254:5256   */\n      0x20\n        /* \"#utility.yul\":5280:5333   */\n      tag_119\n        /* \"#utility.yul\":5325:5332   */\n      dup9\n        /* \"#utility.yul\":5316:5322   */\n      dup3\n        /* \"#utility.yul\":5305:5314   */\n      dup10\n        /* \"#utility.yul\":5301:5323   */\n      add\n        /* \"#utility.yul\":5280:5333   */\n      tag_68\n      jump\t// in\n    tag_119:\n        /* \"#utility.yul\":5270:5333   */\n      swap5\n      pop\n        /* \"#utility.yul\":5225:5343   */\n      pop\n        /* \"#utility.yul\":5382:5384   */\n      0x40\n        /* \"#utility.yul\":5408:5461   */\n      tag_120\n        /* \"#utility.yul\":5453:5460   */\n      dup9\n        /* \"#utility.yul\":5444:5450   */\n      dup3\n        /* \"#utility.yul\":5433:5442   */\n      dup10\n        /* \"#utility.yul\":5429:5451   */\n      add\n        /* \"#utility.yul\":5408:5461   */\n      tag_57\n      jump\t// in\n    tag_120:\n        /* \"#utility.yul\":5398:5461   */\n      swap4\n      pop\n        /* \"#utility.yul\":5353:5471   */\n      pop\n        /* \"#utility.yul\":5510:5512   */\n      0x60\n        /* \"#utility.yul\":5536:5589   */\n      tag_121\n        /* \"#utility.yul\":5581:5588   */\n      dup9\n        /* \"#utility.yul\":5572:5578   */\n      dup3\n        /* \"#utility.yul\":5561:5570   */\n      dup10\n        /* \"#utility.yul\":5557:5579   */\n      add\n        /* \"#utility.yul\":5536:5589   */\n      tag_57\n      jump\t// in\n    tag_121:\n        /* \"#utility.yul\":5526:5589   */\n      swap3\n      pop\n        /* \"#utility.yul\":5481:5599   */\n      pop\n        /* \"#utility.yul\":5666:5669   */\n      0x80\n        /* \"#utility.yul\":5655:5664   */\n      dup7\n        /* \"#utility.yul\":5651:5670   */\n      add\n        /* \"#utility.yul\":5638:5671   */\n      calldataload\n        /* \"#utility.yul\":5698:5716   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5690:5696   */\n      dup2\n        /* \"#utility.yul\":5687:5717   */\n      gt\n        /* \"#utility.yul\":5684:5801   */\n      iszero\n      tag_122\n      jumpi\n        /* \"#utility.yul\":5720:5799   */\n      tag_123\n      tag_98\n      jump\t// in\n    tag_123:\n        /* \"#utility.yul\":5684:5801   */\n    tag_122:\n        /* \"#utility.yul\":5825:5887   */\n      tag_124\n        /* \"#utility.yul\":5879:5886   */\n      dup9\n        /* \"#utility.yul\":5870:5876   */\n      dup3\n        /* \"#utility.yul\":5859:5868   */\n      dup10\n        /* \"#utility.yul\":5855:5877   */\n      add\n        /* \"#utility.yul\":5825:5887   */\n      tag_82\n      jump\t// in\n    tag_124:\n        /* \"#utility.yul\":5815:5887   */\n      swap2\n      pop\n        /* \"#utility.yul\":5609:5897   */\n      pop\n        /* \"#utility.yul\":4815:5904   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5910:6237   */\n    tag_10:\n        /* \"#utility.yul\":5968:5974   */\n      0x00\n        /* \"#utility.yul\":6017:6019   */\n      0x20\n        /* \"#utility.yul\":6005:6014   */\n      dup3\n        /* \"#utility.yul\":5996:6003   */\n      dup5\n        /* \"#utility.yul\":5992:6015   */\n      sub\n        /* \"#utility.yul\":5988:6020   */\n      slt\n        /* \"#utility.yul\":5985:6104   */\n      iszero\n      tag_126\n      jumpi\n        /* \"#utility.yul\":6023:6102   */\n      tag_127\n      tag_93\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":5985:6104   */\n    tag_126:\n        /* \"#utility.yul\":6143:6144   */\n      0x00\n        /* \"#utility.yul\":6168:6220   */\n      tag_128\n        /* \"#utility.yul\":6212:6219   */\n      dup5\n        /* \"#utility.yul\":6203:6209   */\n      dup3\n        /* \"#utility.yul\":6192:6201   */\n      dup6\n        /* \"#utility.yul\":6188:6210   */\n      add\n        /* \"#utility.yul\":6168:6220   */\n      tag_78\n      jump\t// in\n    tag_128:\n        /* \"#utility.yul\":6158:6220   */\n      swap2\n      pop\n        /* \"#utility.yul\":6114:6230   */\n      pop\n        /* \"#utility.yul\":5910:6237   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6243:6361   */\n    tag_129:\n        /* \"#utility.yul\":6330:6354   */\n      tag_131\n        /* \"#utility.yul\":6348:6353   */\n      dup2\n        /* \"#utility.yul\":6330:6354   */\n      tag_132\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":6325:6328   */\n      dup3\n        /* \"#utility.yul\":6318:6355   */\n      mstore\n        /* \"#utility.yul\":6243:6361   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6367:6476   */\n    tag_133:\n        /* \"#utility.yul\":6448:6469   */\n      tag_135\n        /* \"#utility.yul\":6463:6468   */\n      dup2\n        /* \"#utility.yul\":6448:6469   */\n      tag_136\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":6443:6446   */\n      dup3\n        /* \"#utility.yul\":6436:6470   */\n      mstore\n        /* \"#utility.yul\":6367:6476   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6482:6597   */\n    tag_137:\n        /* \"#utility.yul\":6567:6590   */\n      tag_139\n        /* \"#utility.yul\":6584:6589   */\n      dup2\n        /* \"#utility.yul\":6567:6590   */\n      tag_140\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":6562:6565   */\n      dup3\n        /* \"#utility.yul\":6555:6591   */\n      mstore\n        /* \"#utility.yul\":6482:6597   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6603:6825   */\n    tag_23:\n        /* \"#utility.yul\":6696:6700   */\n      0x00\n        /* \"#utility.yul\":6734:6736   */\n      0x20\n        /* \"#utility.yul\":6723:6732   */\n      dup3\n        /* \"#utility.yul\":6719:6737   */\n      add\n        /* \"#utility.yul\":6711:6737   */\n      swap1\n      pop\n        /* \"#utility.yul\":6747:6818   */\n      tag_142\n        /* \"#utility.yul\":6815:6816   */\n      0x00\n        /* \"#utility.yul\":6804:6813   */\n      dup4\n        /* \"#utility.yul\":6800:6817   */\n      add\n        /* \"#utility.yul\":6791:6797   */\n      dup5\n        /* \"#utility.yul\":6747:6818   */\n      tag_129\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":6603:6825   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6831:7041   */\n    tag_13:\n        /* \"#utility.yul\":6918:6922   */\n      0x00\n        /* \"#utility.yul\":6956:6958   */\n      0x20\n        /* \"#utility.yul\":6945:6954   */\n      dup3\n        /* \"#utility.yul\":6941:6959   */\n      add\n        /* \"#utility.yul\":6933:6959   */\n      swap1\n      pop\n        /* \"#utility.yul\":6969:7034   */\n      tag_144\n        /* \"#utility.yul\":7031:7032   */\n      0x00\n        /* \"#utility.yul\":7020:7029   */\n      dup4\n        /* \"#utility.yul\":7016:7033   */\n      add\n        /* \"#utility.yul\":7007:7013   */\n      dup5\n        /* \"#utility.yul\":6969:7034   */\n      tag_133\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":6831:7041   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7047:7265   */\n    tag_19:\n        /* \"#utility.yul\":7138:7142   */\n      0x00\n        /* \"#utility.yul\":7176:7178   */\n      0x20\n        /* \"#utility.yul\":7165:7174   */\n      dup3\n        /* \"#utility.yul\":7161:7179   */\n      add\n        /* \"#utility.yul\":7153:7179   */\n      swap1\n      pop\n        /* \"#utility.yul\":7189:7258   */\n      tag_146\n        /* \"#utility.yul\":7255:7256   */\n      0x00\n        /* \"#utility.yul\":7244:7253   */\n      dup4\n        /* \"#utility.yul\":7240:7257   */\n      add\n        /* \"#utility.yul\":7231:7237   */\n      dup5\n        /* \"#utility.yul\":7189:7258   */\n      tag_137\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":7047:7265   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7271:7400   */\n    tag_49:\n        /* \"#utility.yul\":7305:7311   */\n      0x00\n        /* \"#utility.yul\":7332:7352   */\n      tag_148\n      tag_149\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":7322:7352   */\n      swap1\n      pop\n        /* \"#utility.yul\":7361:7394   */\n      tag_150\n        /* \"#utility.yul\":7389:7393   */\n      dup3\n        /* \"#utility.yul\":7381:7387   */\n      dup3\n        /* \"#utility.yul\":7361:7394   */\n      tag_151\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":7271:7400   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7406:7481   */\n    tag_149:\n        /* \"#utility.yul\":7439:7445   */\n      0x00\n        /* \"#utility.yul\":7472:7474   */\n      0x40\n        /* \"#utility.yul\":7466:7475   */\n      mload\n        /* \"#utility.yul\":7456:7475   */\n      swap1\n      pop\n        /* \"#utility.yul\":7406:7481   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7487:7798   */\n    tag_48:\n        /* \"#utility.yul\":7564:7568   */\n      0x00\n        /* \"#utility.yul\":7654:7672   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7646:7652   */\n      dup3\n        /* \"#utility.yul\":7643:7673   */\n      gt\n        /* \"#utility.yul\":7640:7696   */\n      iszero\n      tag_154\n      jumpi\n        /* \"#utility.yul\":7676:7694   */\n      tag_155\n      tag_156\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":7640:7696   */\n    tag_154:\n        /* \"#utility.yul\":7726:7730   */\n      0x20\n        /* \"#utility.yul\":7718:7724   */\n      dup3\n        /* \"#utility.yul\":7714:7731   */\n      mul\n        /* \"#utility.yul\":7706:7731   */\n      swap1\n      pop\n        /* \"#utility.yul\":7786:7790   */\n      0x20\n        /* \"#utility.yul\":7780:7784   */\n      dup2\n        /* \"#utility.yul\":7776:7791   */\n      add\n        /* \"#utility.yul\":7768:7791   */\n      swap1\n      pop\n        /* \"#utility.yul\":7487:7798   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7804:8111   */\n    tag_62:\n        /* \"#utility.yul\":7865:7869   */\n      0x00\n        /* \"#utility.yul\":7955:7973   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7947:7953   */\n      dup3\n        /* \"#utility.yul\":7944:7974   */\n      gt\n        /* \"#utility.yul\":7941:7997   */\n      iszero\n      tag_158\n      jumpi\n        /* \"#utility.yul\":7977:7995   */\n      tag_159\n      tag_156\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":7941:7997   */\n    tag_158:\n        /* \"#utility.yul\":8015:8044   */\n      tag_160\n        /* \"#utility.yul\":8037:8043   */\n      dup3\n        /* \"#utility.yul\":8015:8044   */\n      tag_161\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":8007:8044   */\n      swap1\n      pop\n        /* \"#utility.yul\":8099:8103   */\n      0x20\n        /* \"#utility.yul\":8093:8097   */\n      dup2\n        /* \"#utility.yul\":8089:8104   */\n      add\n        /* \"#utility.yul\":8081:8104   */\n      swap1\n      pop\n        /* \"#utility.yul\":7804:8111   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8117:8213   */\n    tag_132:\n        /* \"#utility.yul\":8154:8161   */\n      0x00\n        /* \"#utility.yul\":8183:8207   */\n      tag_163\n        /* \"#utility.yul\":8201:8206   */\n      dup3\n        /* \"#utility.yul\":8183:8207   */\n      tag_164\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":8172:8207   */\n      swap1\n      pop\n        /* \"#utility.yul\":8117:8213   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8219:8309   */\n    tag_136:\n        /* \"#utility.yul\":8253:8260   */\n      0x00\n        /* \"#utility.yul\":8296:8301   */\n      dup2\n        /* \"#utility.yul\":8289:8302   */\n      iszero\n        /* \"#utility.yul\":8282:8303   */\n      iszero\n        /* \"#utility.yul\":8271:8303   */\n      swap1\n      pop\n        /* \"#utility.yul\":8219:8309   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8315:8464   */\n    tag_140:\n        /* \"#utility.yul\":8351:8358   */\n      0x00\n        /* \"#utility.yul\":8391:8457   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8384:8389   */\n      dup3\n        /* \"#utility.yul\":8380:8458   */\n      and\n        /* \"#utility.yul\":8369:8458   */\n      swap1\n      pop\n        /* \"#utility.yul\":8315:8464   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8470:8596   */\n    tag_164:\n        /* \"#utility.yul\":8507:8514   */\n      0x00\n        /* \"#utility.yul\":8547:8589   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":8540:8545   */\n      dup3\n        /* \"#utility.yul\":8536:8590   */\n      and\n        /* \"#utility.yul\":8525:8590   */\n      swap1\n      pop\n        /* \"#utility.yul\":8470:8596   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8602:8679   */\n    tag_168:\n        /* \"#utility.yul\":8639:8646   */\n      0x00\n        /* \"#utility.yul\":8668:8673   */\n      dup2\n        /* \"#utility.yul\":8657:8673   */\n      swap1\n      pop\n        /* \"#utility.yul\":8602:8679   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8685:8839   */\n    tag_67:\n        /* \"#utility.yul\":8769:8775   */\n      dup3\n        /* \"#utility.yul\":8764:8767   */\n      dup2\n        /* \"#utility.yul\":8759:8762   */\n      dup4\n        /* \"#utility.yul\":8746:8776   */\n      calldatacopy\n        /* \"#utility.yul\":8831:8832   */\n      0x00\n        /* \"#utility.yul\":8822:8828   */\n      dup4\n        /* \"#utility.yul\":8817:8820   */\n      dup4\n        /* \"#utility.yul\":8813:8829   */\n      add\n        /* \"#utility.yul\":8806:8833   */\n      mstore\n        /* \"#utility.yul\":8685:8839   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8845:9126   */\n    tag_151:\n        /* \"#utility.yul\":8928:8955   */\n      tag_172\n        /* \"#utility.yul\":8950:8954   */\n      dup3\n        /* \"#utility.yul\":8928:8955   */\n      tag_161\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":8920:8926   */\n      dup2\n        /* \"#utility.yul\":8916:8956   */\n      add\n        /* \"#utility.yul\":9058:9064   */\n      dup2\n        /* \"#utility.yul\":9046:9056   */\n      dup2\n        /* \"#utility.yul\":9043:9065   */\n      lt\n        /* \"#utility.yul\":9022:9040   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9010:9020   */\n      dup3\n        /* \"#utility.yul\":9007:9041   */\n      gt\n        /* \"#utility.yul\":9004:9066   */\n      or\n        /* \"#utility.yul\":9001:9089   */\n      iszero\n      tag_173\n      jumpi\n        /* \"#utility.yul\":9069:9087   */\n      tag_174\n      tag_156\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":9001:9089   */\n    tag_173:\n        /* \"#utility.yul\":9109:9119   */\n      dup1\n        /* \"#utility.yul\":9105:9107   */\n      0x40\n        /* \"#utility.yul\":9098:9120   */\n      mstore\n        /* \"#utility.yul\":8888:9126   */\n      pop\n        /* \"#utility.yul\":8845:9126   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9132:9312   */\n    tag_156:\n        /* \"#utility.yul\":9180:9257   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9177:9178   */\n      0x00\n        /* \"#utility.yul\":9170:9258   */\n      mstore\n        /* \"#utility.yul\":9277:9281   */\n      0x41\n        /* \"#utility.yul\":9274:9275   */\n      0x04\n        /* \"#utility.yul\":9267:9282   */\n      mstore\n        /* \"#utility.yul\":9301:9305   */\n      0x24\n        /* \"#utility.yul\":9298:9299   */\n      0x00\n        /* \"#utility.yul\":9291:9306   */\n      revert\n        /* \"#utility.yul\":9318:9435   */\n    tag_76:\n        /* \"#utility.yul\":9427:9428   */\n      0x00\n        /* \"#utility.yul\":9424:9425   */\n      dup1\n        /* \"#utility.yul\":9417:9429   */\n      revert\n        /* \"#utility.yul\":9441:9558   */\n    tag_52:\n        /* \"#utility.yul\":9550:9551   */\n      0x00\n        /* \"#utility.yul\":9547:9548   */\n      dup1\n        /* \"#utility.yul\":9540:9552   */\n      revert\n        /* \"#utility.yul\":9564:9681   */\n    tag_65:\n        /* \"#utility.yul\":9673:9674   */\n      0x00\n        /* \"#utility.yul\":9670:9671   */\n      dup1\n        /* \"#utility.yul\":9663:9675   */\n      revert\n        /* \"#utility.yul\":9687:9804   */\n    tag_98:\n        /* \"#utility.yul\":9796:9797   */\n      0x00\n        /* \"#utility.yul\":9793:9794   */\n      dup1\n        /* \"#utility.yul\":9786:9798   */\n      revert\n        /* \"#utility.yul\":9810:9927   */\n    tag_93:\n        /* \"#utility.yul\":9919:9920   */\n      0x00\n        /* \"#utility.yul\":9916:9917   */\n      dup1\n        /* \"#utility.yul\":9909:9921   */\n      revert\n        /* \"#utility.yul\":9933:10035   */\n    tag_161:\n        /* \"#utility.yul\":9974:9980   */\n      0x00\n        /* \"#utility.yul\":10025:10027   */\n      0x1f\n        /* \"#utility.yul\":10021:10028   */\n      not\n        /* \"#utility.yul\":10016:10018   */\n      0x1f\n        /* \"#utility.yul\":10009:10014   */\n      dup4\n        /* \"#utility.yul\":10005:10019   */\n      add\n        /* \"#utility.yul\":10001:10029   */\n      and\n        /* \"#utility.yul\":9991:10029   */\n      swap1\n      pop\n        /* \"#utility.yul\":9933:10035   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10041:10163   */\n    tag_71:\n        /* \"#utility.yul\":10114:10138   */\n      tag_183\n        /* \"#utility.yul\":10132:10137   */\n      dup2\n        /* \"#utility.yul\":10114:10138   */\n      tag_132\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":10107:10112   */\n      dup2\n        /* \"#utility.yul\":10104:10139   */\n      eq\n        /* \"#utility.yul\":10094:10157   */\n      tag_184\n      jumpi\n        /* \"#utility.yul\":10153:10154   */\n      0x00\n        /* \"#utility.yul\":10150:10151   */\n      dup1\n        /* \"#utility.yul\":10143:10155   */\n      revert\n        /* \"#utility.yul\":10094:10157   */\n    tag_184:\n        /* \"#utility.yul\":10041:10163   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10169:10289   */\n    tag_81:\n        /* \"#utility.yul\":10241:10264   */\n      tag_186\n        /* \"#utility.yul\":10258:10263   */\n      dup2\n        /* \"#utility.yul\":10241:10264   */\n      tag_140\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":10234:10239   */\n      dup2\n        /* \"#utility.yul\":10231:10265   */\n      eq\n        /* \"#utility.yul\":10221:10283   */\n      tag_187\n      jumpi\n        /* \"#utility.yul\":10279:10280   */\n      0x00\n        /* \"#utility.yul\":10276:10277   */\n      dup1\n        /* \"#utility.yul\":10269:10281   */\n      revert\n        /* \"#utility.yul\":10221:10283   */\n    tag_187:\n        /* \"#utility.yul\":10169:10289   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10295:10417   */\n    tag_89:\n        /* \"#utility.yul\":10368:10392   */\n      tag_189\n        /* \"#utility.yul\":10386:10391   */\n      dup2\n        /* \"#utility.yul\":10368:10392   */\n      tag_168\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":10361:10366   */\n      dup2\n        /* \"#utility.yul\":10358:10393   */\n      eq\n        /* \"#utility.yul\":10348:10411   */\n      tag_190\n      jumpi\n        /* \"#utility.yul\":10407:10408   */\n      0x00\n        /* \"#utility.yul\":10404:10405   */\n      dup1\n        /* \"#utility.yul\":10397:10409   */\n      revert\n        /* \"#utility.yul\":10348:10411   */\n    tag_190:\n        /* \"#utility.yul\":10295:10417   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220c70a79cc3abcee8a0a75ea93890eb15af2513e7e66fa55a38b586cc0534da68e64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_490": {
									"entryPoint": null,
									"id": 490,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_420": {
									"entryPoint": 50,
									"id": 420,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_533": {
									"entryPoint": 58,
									"id": 533,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6108708061010d6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806301ffc9a71461005c578063150b7a021461008c5780638da5cb5b146100bc578063bc197c81146100da578063f23a6e611461010a575b600080fd5b610076600480360381019061007191906105bb565b61013a565b6040516100839190610630565b60405180910390f35b6100a660048036038101906100a191906104a1565b6101b4565b6040516100b3919061064b565b60405180910390f35b6100c46101c8565b6040516100d19190610615565b60405180910390f35b6100f460048036038101906100ef91906103d2565b6101f1565b604051610101919061064b565b60405180910390f35b610124600480360381019061011f9190610524565b610206565b604051610131919061064b565b60405180910390f35b60007f4e2312e0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806101ad57506101ac8261021b565b5b9050919050565b600063150b7a0260e01b9050949350505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600063bc197c8160e01b905095945050505050565b600063f23a6e6160e01b905095945050505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60006102986102938461068b565b610666565b905080838252602082019050828560208602820111156102bb576102ba6107d0565b5b60005b858110156102eb57816102d188826103bd565b8452602084019350602083019250506001810190506102be565b5050509392505050565b6000610308610303846106b7565b610666565b905082815260208101848484011115610324576103236107d5565b5b61032f84828561075c565b509392505050565b600081359050610346816107f5565b92915050565b600082601f830112610361576103606107cb565b5b8135610371848260208601610285565b91505092915050565b6000813590506103898161080c565b92915050565b600082601f8301126103a4576103a36107cb565b5b81356103b48482602086016102f5565b91505092915050565b6000813590506103cc81610823565b92915050565b600080600080600060a086880312156103ee576103ed6107df565b5b60006103fc88828901610337565b955050602061040d88828901610337565b945050604086013567ffffffffffffffff81111561042e5761042d6107da565b5b61043a8882890161034c565b935050606086013567ffffffffffffffff81111561045b5761045a6107da565b5b6104678882890161034c565b925050608086013567ffffffffffffffff811115610488576104876107da565b5b6104948882890161038f565b9150509295509295909350565b600080600080608085870312156104bb576104ba6107df565b5b60006104c987828801610337565b94505060206104da87828801610337565b93505060406104eb878288016103bd565b925050606085013567ffffffffffffffff81111561050c5761050b6107da565b5b6105188782880161038f565b91505092959194509250565b600080600080600060a086880312156105405761053f6107df565b5b600061054e88828901610337565b955050602061055f88828901610337565b9450506040610570888289016103bd565b9350506060610581888289016103bd565b925050608086013567ffffffffffffffff8111156105a2576105a16107da565b5b6105ae8882890161038f565b9150509295509295909350565b6000602082840312156105d1576105d06107df565b5b60006105df8482850161037a565b91505092915050565b6105f1816106e8565b82525050565b610600816106fa565b82525050565b61060f81610706565b82525050565b600060208201905061062a60008301846105e8565b92915050565b600060208201905061064560008301846105f7565b92915050565b60006020820190506106606000830184610606565b92915050565b6000610670610681565b905061067c828261076b565b919050565b6000604051905090565b600067ffffffffffffffff8211156106a6576106a561079c565b5b602082029050602081019050919050565b600067ffffffffffffffff8211156106d2576106d161079c565b5b6106db826107e4565b9050602081019050919050565b60006106f382610732565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b610774826107e4565b810181811067ffffffffffffffff821117156107935761079261079c565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b6107fe816106e8565b811461080957600080fd5b50565b61081581610706565b811461082057600080fd5b50565b61082c81610752565b811461083757600080fd5b5056fea2646970667358221220c70a79cc3abcee8a0a75ea93890eb15af2513e7e66fa55a38b586cc0534da68e64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D PUSH2 0x22 PUSH2 0x32 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x3A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0xFE JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x870 DUP1 PUSH2 0x10D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xBC JUMPI DUP1 PUSH4 0xBC197C81 EQ PUSH2 0xDA JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0x10A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x76 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x71 SWAP2 SWAP1 PUSH2 0x5BB JUMP JUMPDEST PUSH2 0x13A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x83 SWAP2 SWAP1 PUSH2 0x630 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA1 SWAP2 SWAP1 PUSH2 0x4A1 JUMP JUMPDEST PUSH2 0x1B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB3 SWAP2 SWAP1 PUSH2 0x64B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC4 PUSH2 0x1C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD1 SWAP2 SWAP1 PUSH2 0x615 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xEF SWAP2 SWAP1 PUSH2 0x3D2 JUMP JUMPDEST PUSH2 0x1F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x101 SWAP2 SWAP1 PUSH2 0x64B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x124 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11F SWAP2 SWAP1 PUSH2 0x524 JUMP JUMPDEST PUSH2 0x206 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x131 SWAP2 SWAP1 PUSH2 0x64B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x4E2312E000000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x1AD JUMPI POP PUSH2 0x1AC DUP3 PUSH2 0x21B JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0x150B7A02 PUSH1 0xE0 SHL SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x298 PUSH2 0x293 DUP5 PUSH2 0x68B JUMP JUMPDEST PUSH2 0x666 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x2BB JUMPI PUSH2 0x2BA PUSH2 0x7D0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x2EB JUMPI DUP2 PUSH2 0x2D1 DUP9 DUP3 PUSH2 0x3BD JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2BE JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x308 PUSH2 0x303 DUP5 PUSH2 0x6B7 JUMP JUMPDEST PUSH2 0x666 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x324 JUMPI PUSH2 0x323 PUSH2 0x7D5 JUMP JUMPDEST JUMPDEST PUSH2 0x32F DUP5 DUP3 DUP6 PUSH2 0x75C JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x346 DUP2 PUSH2 0x7F5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x361 JUMPI PUSH2 0x360 PUSH2 0x7CB JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x371 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x285 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x389 DUP2 PUSH2 0x80C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3A4 JUMPI PUSH2 0x3A3 PUSH2 0x7CB JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3B4 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2F5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3CC DUP2 PUSH2 0x823 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x3EE JUMPI PUSH2 0x3ED PUSH2 0x7DF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3FC DUP9 DUP3 DUP10 ADD PUSH2 0x337 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x40D DUP9 DUP3 DUP10 ADD PUSH2 0x337 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x42E JUMPI PUSH2 0x42D PUSH2 0x7DA JUMP JUMPDEST JUMPDEST PUSH2 0x43A DUP9 DUP3 DUP10 ADD PUSH2 0x34C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x45B JUMPI PUSH2 0x45A PUSH2 0x7DA JUMP JUMPDEST JUMPDEST PUSH2 0x467 DUP9 DUP3 DUP10 ADD PUSH2 0x34C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x488 JUMPI PUSH2 0x487 PUSH2 0x7DA JUMP JUMPDEST JUMPDEST PUSH2 0x494 DUP9 DUP3 DUP10 ADD PUSH2 0x38F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x4BB JUMPI PUSH2 0x4BA PUSH2 0x7DF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4C9 DUP8 DUP3 DUP9 ADD PUSH2 0x337 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x4DA DUP8 DUP3 DUP9 ADD PUSH2 0x337 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x4EB DUP8 DUP3 DUP9 ADD PUSH2 0x3BD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x50C JUMPI PUSH2 0x50B PUSH2 0x7DA JUMP JUMPDEST JUMPDEST PUSH2 0x518 DUP8 DUP3 DUP9 ADD PUSH2 0x38F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x540 JUMPI PUSH2 0x53F PUSH2 0x7DF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x54E DUP9 DUP3 DUP10 ADD PUSH2 0x337 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x55F DUP9 DUP3 DUP10 ADD PUSH2 0x337 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x570 DUP9 DUP3 DUP10 ADD PUSH2 0x3BD JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x581 DUP9 DUP3 DUP10 ADD PUSH2 0x3BD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5A2 JUMPI PUSH2 0x5A1 PUSH2 0x7DA JUMP JUMPDEST JUMPDEST PUSH2 0x5AE DUP9 DUP3 DUP10 ADD PUSH2 0x38F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5D1 JUMPI PUSH2 0x5D0 PUSH2 0x7DF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x5DF DUP5 DUP3 DUP6 ADD PUSH2 0x37A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5F1 DUP2 PUSH2 0x6E8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x600 DUP2 PUSH2 0x6FA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x60F DUP2 PUSH2 0x706 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x62A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x5E8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x645 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x5F7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x660 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x606 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x670 PUSH2 0x681 JUMP JUMPDEST SWAP1 POP PUSH2 0x67C DUP3 DUP3 PUSH2 0x76B JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x6A6 JUMPI PUSH2 0x6A5 PUSH2 0x79C JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x6D2 JUMPI PUSH2 0x6D1 PUSH2 0x79C JUMP JUMPDEST JUMPDEST PUSH2 0x6DB DUP3 PUSH2 0x7E4 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6F3 DUP3 PUSH2 0x732 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH2 0x774 DUP3 PUSH2 0x7E4 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x793 JUMPI PUSH2 0x792 PUSH2 0x79C JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7FE DUP2 PUSH2 0x6E8 JUMP JUMPDEST DUP2 EQ PUSH2 0x809 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x815 DUP2 PUSH2 0x706 JUMP JUMPDEST DUP2 EQ PUSH2 0x820 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x82C DUP2 PUSH2 0x752 JUMP JUMPDEST DUP2 EQ PUSH2 0x837 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC7 EXP PUSH26 0xCC3ABCEE8A0A75EA93890EB15AF2513E7E66FA55A38B586CC053 0x4D 0xA6 DUP15 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "345:297:11:-:0;;;;;;;;;;;;;818:32:10;837:12;:10;;;:12;;:::i;:::-;818:18;;;:32;;:::i;:::-;345:297:11;;640:96:7;693:7;719:10;712:17;;640:96;:::o;1377:187:10:-;1450:16;1469:6;;;;;;;;;;;1450:25;;1494:8;1485:6;;:17;;;;;;;;;;;;;;;;;;1548:8;1517:40;;1538:8;1517:40;;;;;;;;;;;;1440:124;1377:187;:::o;345:297:11:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@onERC1155BatchReceived_212": {
									"entryPoint": 497,
									"id": 212,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"@onERC1155Received_189": {
									"entryPoint": 518,
									"id": 189,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"@onERC721Received_407": {
									"entryPoint": 436,
									"id": 407,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@owner_499": {
									"entryPoint": 456,
									"id": 499,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@supportsInterface_246": {
									"entryPoint": 314,
									"id": 246,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_453": {
									"entryPoint": 539,
									"id": 453,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 645,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 757,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 823,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 844,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 890,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 911,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 957,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr": {
									"entryPoint": 978,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 1185,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr": {
									"entryPoint": 1316,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 1467,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1512,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 1527,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes4_to_t_bytes4_fromStack": {
									"entryPoint": 1542,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1557,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 1584,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
									"entryPoint": 1611,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 1638,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 1665,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 1675,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 1719,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1768,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 1786,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 1798,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1842,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1874,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory": {
									"entryPoint": 1884,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"finalize_allocation": {
									"entryPoint": 1899,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1948,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 1995,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 2000,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 2005,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 2010,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2015,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 2020,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 2037,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 2060,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2083,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:10420:12",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "126:620:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "136:90:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "218:6:12"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "161:56:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "161:64:12"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "145:15:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "145:81:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "136:5:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "235:16:12",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "246:5:12"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "239:3:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "268:5:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "275:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "261:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "261:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "261:21:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "291:23:12",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "302:5:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "309:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "298:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "298:16:12"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "291:3:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "324:17:12",
															"value": {
																"name": "offset",
																"nodeType": "YulIdentifier",
																"src": "335:6:12"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "328:3:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "390:103:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "404:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "404:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "404:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "360:3:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "369:6:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "377:4:12",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "365:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "365:17:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "356:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "356:27:12"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "385:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "353:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "353:36:12"
															},
															"nodeType": "YulIf",
															"src": "350:143:12"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "562:178:12",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "577:21:12",
																		"value": {
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "595:3:12"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "581:10:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "619:3:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "645:10:12"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "657:3:12"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_uint256",
																						"nodeType": "YulIdentifier",
																						"src": "624:20:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "624:37:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "612:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "612:50:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "612:50:12"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "675:21:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "686:3:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "691:4:12",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "682:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "682:14:12"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "675:3:12"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "709:21:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "720:3:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "725:4:12",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "716:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "716:14:12"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "709:3:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "524:1:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "527:6:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "521:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "521:13:12"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "535:18:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "537:14:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "546:1:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "549:1:12",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "542:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "542:9:12"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "537:1:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "506:14:12",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "508:10:12",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "517:1:12",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "512:1:12",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "502:238:12"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "96:6:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "104:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "112:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "120:5:12",
														"type": ""
													}
												],
												"src": "24:722:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "835:327:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "845:74:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "911:6:12"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "870:40:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "870:48:12"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "854:15:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "854:65:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "845:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "935:5:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "942:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "928:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "928:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "928:21:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "958:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "973:5:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "980:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "969:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "969:16:12"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "962:3:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1023:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "1025:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1025:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1025:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "1004:3:12"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1009:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1000:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1000:16:12"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1018:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "997:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "997:25:12"
															},
															"nodeType": "YulIf",
															"src": "994:112:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "1139:3:12"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "1144:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1149:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1115:23:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1115:41:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1115:41:12"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "808:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "813:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "821:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "829:5:12",
														"type": ""
													}
												],
												"src": "752:410:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1220:87:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1230:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1252:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1239:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1239:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1230:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1295:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1268:26:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1268:33:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1268:33:12"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1198:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1206:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1214:5:12",
														"type": ""
													}
												],
												"src": "1168:139:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1407:293:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1456:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "1458:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1458:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1458:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1435:6:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1443:4:12",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1431:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1431:17:12"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "1450:3:12"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1427:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1427:27:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1420:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1420:35:12"
															},
															"nodeType": "YulIf",
															"src": "1417:122:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1548:34:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1575:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1562:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1562:20:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1552:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1591:103:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1667:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1675:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1663:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1663:17:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1682:6:12"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1690:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "1600:62:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1600:94:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1591:5:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1385:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1393:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1401:5:12",
														"type": ""
													}
												],
												"src": "1330:370:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1757:86:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1767:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1789:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1776:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1776:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1767:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1831:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "1805:25:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1805:32:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1805:32:12"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1735:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1743:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1751:5:12",
														"type": ""
													}
												],
												"src": "1706:137:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1923:277:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1972:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "1974:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1974:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1974:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1951:6:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1959:4:12",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1947:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1947:17:12"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "1966:3:12"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1943:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1943:27:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1936:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1936:35:12"
															},
															"nodeType": "YulIf",
															"src": "1933:122:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2064:34:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2091:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2078:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2078:20:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2068:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2107:87:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2167:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2175:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2163:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2163:17:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2182:6:12"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2190:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2116:46:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2116:78:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2107:5:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1901:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1909:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1917:5:12",
														"type": ""
													}
												],
												"src": "1862:338:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2258:87:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2268:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2290:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2277:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2277:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2268:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2333:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2306:26:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2306:33:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2306:33:12"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2236:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2244:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2252:5:12",
														"type": ""
													}
												],
												"src": "2206:139:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2544:1316:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2591:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2593:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2593:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2593:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2565:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2574:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2561:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2561:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2586:3:12",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2557:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2557:33:12"
															},
															"nodeType": "YulIf",
															"src": "2554:120:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "2684:117:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2699:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2713:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2703:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2728:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2763:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2774:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2759:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2759:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2783:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2738:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2738:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2728:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2811:118:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2826:16:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2840:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2830:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2856:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2891:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2902:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2887:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2887:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2911:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2866:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2866:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2856:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2939:303:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2954:46:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2985:9:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2996:2:12",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2981:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2981:18:12"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "2968:12:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2968:32:12"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2958:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3047:83:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3049:77:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3049:79:12"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3049:79:12"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3019:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3027:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3016:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3016:30:12"
																	},
																	"nodeType": "YulIf",
																	"src": "3013:117:12"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3144:88:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3204:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3215:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3200:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3200:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3224:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "3154:45:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3154:78:12"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "3144:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3252:303:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3267:46:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3298:9:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3309:2:12",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3294:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3294:18:12"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "3281:12:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3281:32:12"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3271:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3360:83:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3362:77:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3362:79:12"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3362:79:12"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3332:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3340:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3329:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3329:30:12"
																	},
																	"nodeType": "YulIf",
																	"src": "3326:117:12"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3457:88:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3517:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3528:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3513:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3513:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3537:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "3467:45:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3467:78:12"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "3457:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3565:288:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3580:47:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3611:9:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3622:3:12",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3607:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3607:19:12"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "3594:12:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3594:33:12"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3584:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3674:83:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3676:77:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3676:79:12"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3676:79:12"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3646:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3654:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3643:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3643:30:12"
																	},
																	"nodeType": "YulIf",
																	"src": "3640:117:12"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3771:72:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3815:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3826:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3811:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3811:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3835:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "3781:29:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3781:62:12"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "3771:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2482:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2493:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2505:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2513:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2521:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "2529:6:12",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "2537:6:12",
														"type": ""
													}
												],
												"src": "2351:1509:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3992:817:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4039:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4041:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4041:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4041:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4013:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4022:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4009:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4009:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4034:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4005:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4005:33:12"
															},
															"nodeType": "YulIf",
															"src": "4002:120:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "4132:117:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4147:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4161:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4151:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4176:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4211:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4222:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4207:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4207:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4231:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4186:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4186:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4176:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4259:118:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4274:16:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4288:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4278:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4304:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4339:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4350:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4335:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4335:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4359:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4314:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4314:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4304:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4387:118:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4402:16:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4416:2:12",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4406:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4432:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4467:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4478:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4463:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4463:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4487:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4442:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4442:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "4432:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4515:287:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4530:46:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4561:9:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4572:2:12",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4557:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4557:18:12"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "4544:12:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4544:32:12"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4534:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "4623:83:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "4625:77:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4625:79:12"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4625:79:12"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4595:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4603:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4592:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4592:30:12"
																	},
																	"nodeType": "YulIf",
																	"src": "4589:117:12"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4720:72:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4764:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4775:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4760:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4760:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4784:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "4730:29:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4730:62:12"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "4720:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3938:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3949:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3961:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3969:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3977:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3985:6:12",
														"type": ""
													}
												],
												"src": "3866:943:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4958:946:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5005:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5007:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5007:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5007:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4979:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4988:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4975:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4975:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5000:3:12",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4971:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4971:33:12"
															},
															"nodeType": "YulIf",
															"src": "4968:120:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "5098:117:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5113:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5127:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5117:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5142:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5177:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5188:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5173:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5173:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5197:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5152:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5152:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5142:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5225:118:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5240:16:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5254:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5244:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5270:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5305:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5316:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5301:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5301:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5325:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5280:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5280:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "5270:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5353:118:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5368:16:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5382:2:12",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5372:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5398:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5433:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5444:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5429:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5429:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5453:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5408:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5408:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "5398:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5481:118:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5496:16:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5510:2:12",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5500:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5526:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5561:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5572:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5557:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5557:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5581:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5536:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5536:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "5526:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5609:288:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5624:47:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5655:9:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5666:3:12",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5651:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5651:19:12"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "5638:12:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5638:33:12"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5628:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "5718:83:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "5720:77:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5720:79:12"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "5720:79:12"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5690:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5698:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5687:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5687:30:12"
																	},
																	"nodeType": "YulIf",
																	"src": "5684:117:12"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5815:72:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5859:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5870:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5855:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5855:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5879:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "5825:29:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5825:62:12"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "5815:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4896:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4907:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4919:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4927:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4935:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "4943:6:12",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "4951:6:12",
														"type": ""
													}
												],
												"src": "4815:1089:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5975:262:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6021:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6023:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6023:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6023:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5996:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6005:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5992:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5992:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6017:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5988:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5988:32:12"
															},
															"nodeType": "YulIf",
															"src": "5985:119:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "6114:116:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6129:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6143:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6133:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6158:62:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6192:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6203:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6188:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6188:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6212:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "6168:19:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6168:52:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6158:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5945:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5956:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5968:6:12",
														"type": ""
													}
												],
												"src": "5910:327:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6308:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6325:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6348:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6330:17:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6330:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6318:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6318:37:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6318:37:12"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6296:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6303:3:12",
														"type": ""
													}
												],
												"src": "6243:118:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6426:50:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6443:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6463:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "6448:14:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6448:21:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6436:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6436:34:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6436:34:12"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6414:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6421:3:12",
														"type": ""
													}
												],
												"src": "6367:109:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6545:52:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6562:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6584:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "6567:16:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6567:23:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6555:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6555:36:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6555:36:12"
														}
													]
												},
												"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6533:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6540:3:12",
														"type": ""
													}
												],
												"src": "6482:115:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6701:124:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6711:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6723:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6734:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6719:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6719:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6711:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6791:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6804:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6815:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6800:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6800:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6747:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6747:71:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6747:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6673:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6685:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6696:4:12",
														"type": ""
													}
												],
												"src": "6603:222:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6923:118:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6933:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6945:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6956:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6941:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6941:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6933:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7007:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7020:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7031:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7016:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7016:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6969:37:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6969:65:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6969:65:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6895:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6907:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6918:4:12",
														"type": ""
													}
												],
												"src": "6831:210:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7143:122:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7153:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7165:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7176:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7161:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7161:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7153:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7231:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7244:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7255:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7240:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7240:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7189:41:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7189:69:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7189:69:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7115:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7127:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7138:4:12",
														"type": ""
													}
												],
												"src": "7047:218:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7312:88:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7322:30:12",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "7332:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7332:20:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "7322:6:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "7381:6:12"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "7389:4:12"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "7361:19:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7361:33:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7361:33:12"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7296:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7305:6:12",
														"type": ""
													}
												],
												"src": "7271:129:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7446:35:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7456:19:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7472:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7466:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7466:9:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "7456:6:12"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7439:6:12",
														"type": ""
													}
												],
												"src": "7406:75:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7569:229:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7674:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7676:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7676:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7676:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7646:6:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7654:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7643:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7643:30:12"
															},
															"nodeType": "YulIf",
															"src": "7640:56:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7706:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7718:6:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7726:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "7714:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7714:17:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "7706:4:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7768:23:12",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "7780:4:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7786:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7776:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7776:15:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "7768:4:12"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7553:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7564:4:12",
														"type": ""
													}
												],
												"src": "7487:311:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7870:241:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7975:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7977:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7977:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7977:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7947:6:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7955:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7944:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7944:30:12"
															},
															"nodeType": "YulIf",
															"src": "7941:56:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8007:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8037:6:12"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "8015:21:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8015:29:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "8007:4:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8081:23:12",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "8093:4:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8099:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8089:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8089:15:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "8081:4:12"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7854:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7865:4:12",
														"type": ""
													}
												],
												"src": "7804:307:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8162:51:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8172:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8201:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "8183:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8183:24:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "8172:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8144:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "8154:7:12",
														"type": ""
													}
												],
												"src": "8117:96:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8261:48:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8271:32:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8296:5:12"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "8289:6:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8289:13:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8282:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8282:21:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "8271:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8243:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "8253:7:12",
														"type": ""
													}
												],
												"src": "8219:90:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8359:105:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8369:89:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8384:5:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8391:66:12",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "8380:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8380:78:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "8369:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8341:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "8351:7:12",
														"type": ""
													}
												],
												"src": "8315:149:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8515:81:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8525:65:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8540:5:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8547:42:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "8536:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8536:54:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "8525:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8497:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "8507:7:12",
														"type": ""
													}
												],
												"src": "8470:126:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8647:32:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8657:16:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "8668:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "8657:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8629:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "8639:7:12",
														"type": ""
													}
												],
												"src": "8602:77:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8736:103:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "8759:3:12"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "8764:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8769:6:12"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "8746:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8746:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8746:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "8817:3:12"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8822:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8813:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8813:16:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8831:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8806:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8806:27:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8806:27:12"
														}
													]
												},
												"name": "copy_calldata_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "8718:3:12",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "8723:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8728:6:12",
														"type": ""
													}
												],
												"src": "8685:154:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8888:238:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8898:58:12",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "8920:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "8950:4:12"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "8928:21:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8928:27:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8916:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8916:40:12"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "8902:10:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9067:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "9069:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9069:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9069:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "9010:10:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9022:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "9007:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9007:34:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "9046:10:12"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9058:6:12"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "9043:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9043:22:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "9004:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9004:62:12"
															},
															"nodeType": "YulIf",
															"src": "9001:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9105:2:12",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "9109:10:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9098:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9098:22:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9098:22:12"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8874:6:12",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "8882:4:12",
														"type": ""
													}
												],
												"src": "8845:281:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9160:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9177:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9180:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9170:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9170:88:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9170:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9274:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9277:4:12",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9267:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9267:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9267:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9298:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9301:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9291:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9291:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9291:15:12"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "9132:180:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9407:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9424:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9427:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9417:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9417:12:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9417:12:12"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "9318:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9530:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9547:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9550:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9540:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9540:12:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9540:12:12"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nodeType": "YulFunctionDefinition",
												"src": "9441:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9653:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9670:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9673:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9663:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9663:12:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9663:12:12"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "9564:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9776:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9793:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9796:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9786:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9786:12:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9786:12:12"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "9687:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9899:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9916:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9919:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9909:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9909:12:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9909:12:12"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "9810:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9981:54:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9991:38:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10009:5:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10016:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10005:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10005:14:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10025:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "10021:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10021:7:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "10001:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10001:28:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "9991:6:12"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9964:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "9974:6:12",
														"type": ""
													}
												],
												"src": "9933:102:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10084:79:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10141:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10150:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10153:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "10143:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10143:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10143:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10107:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "10132:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "10114:17:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10114:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "10104:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10104:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10097:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10097:43:12"
															},
															"nodeType": "YulIf",
															"src": "10094:63:12"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10077:5:12",
														"type": ""
													}
												],
												"src": "10041:122:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10211:78:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10267:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10276:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10279:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "10269:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10269:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10269:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10234:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "10258:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nodeType": "YulIdentifier",
																					"src": "10241:16:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10241:23:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "10231:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10231:34:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10224:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10224:42:12"
															},
															"nodeType": "YulIf",
															"src": "10221:62:12"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10204:5:12",
														"type": ""
													}
												],
												"src": "10169:120:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10338:79:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10395:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10404:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10407:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "10397:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10397:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10397:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10361:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "10386:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "10368:17:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10368:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "10358:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10358:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10351:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10351:43:12"
															},
															"nodeType": "YulIf",
															"src": "10348:63:12"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10331:5:12",
														"type": ""
													}
												],
												"src": "10295:122:12"
											}
										]
									},
									"contents": "{\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let src := offset\n        if gt(add(src, mul(length, 0x20)), end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n            src := add(src, 0x20)\n        }\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes4(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100575760003560e01c806301ffc9a71461005c578063150b7a021461008c5780638da5cb5b146100bc578063bc197c81146100da578063f23a6e611461010a575b600080fd5b610076600480360381019061007191906105bb565b61013a565b6040516100839190610630565b60405180910390f35b6100a660048036038101906100a191906104a1565b6101b4565b6040516100b3919061064b565b60405180910390f35b6100c46101c8565b6040516100d19190610615565b60405180910390f35b6100f460048036038101906100ef91906103d2565b6101f1565b604051610101919061064b565b60405180910390f35b610124600480360381019061011f9190610524565b610206565b604051610131919061064b565b60405180910390f35b60007f4e2312e0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806101ad57506101ac8261021b565b5b9050919050565b600063150b7a0260e01b9050949350505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600063bc197c8160e01b905095945050505050565b600063f23a6e6160e01b905095945050505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60006102986102938461068b565b610666565b905080838252602082019050828560208602820111156102bb576102ba6107d0565b5b60005b858110156102eb57816102d188826103bd565b8452602084019350602083019250506001810190506102be565b5050509392505050565b6000610308610303846106b7565b610666565b905082815260208101848484011115610324576103236107d5565b5b61032f84828561075c565b509392505050565b600081359050610346816107f5565b92915050565b600082601f830112610361576103606107cb565b5b8135610371848260208601610285565b91505092915050565b6000813590506103898161080c565b92915050565b600082601f8301126103a4576103a36107cb565b5b81356103b48482602086016102f5565b91505092915050565b6000813590506103cc81610823565b92915050565b600080600080600060a086880312156103ee576103ed6107df565b5b60006103fc88828901610337565b955050602061040d88828901610337565b945050604086013567ffffffffffffffff81111561042e5761042d6107da565b5b61043a8882890161034c565b935050606086013567ffffffffffffffff81111561045b5761045a6107da565b5b6104678882890161034c565b925050608086013567ffffffffffffffff811115610488576104876107da565b5b6104948882890161038f565b9150509295509295909350565b600080600080608085870312156104bb576104ba6107df565b5b60006104c987828801610337565b94505060206104da87828801610337565b93505060406104eb878288016103bd565b925050606085013567ffffffffffffffff81111561050c5761050b6107da565b5b6105188782880161038f565b91505092959194509250565b600080600080600060a086880312156105405761053f6107df565b5b600061054e88828901610337565b955050602061055f88828901610337565b9450506040610570888289016103bd565b9350506060610581888289016103bd565b925050608086013567ffffffffffffffff8111156105a2576105a16107da565b5b6105ae8882890161038f565b9150509295509295909350565b6000602082840312156105d1576105d06107df565b5b60006105df8482850161037a565b91505092915050565b6105f1816106e8565b82525050565b610600816106fa565b82525050565b61060f81610706565b82525050565b600060208201905061062a60008301846105e8565b92915050565b600060208201905061064560008301846105f7565b92915050565b60006020820190506106606000830184610606565b92915050565b6000610670610681565b905061067c828261076b565b919050565b6000604051905090565b600067ffffffffffffffff8211156106a6576106a561079c565b5b602082029050602081019050919050565b600067ffffffffffffffff8211156106d2576106d161079c565b5b6106db826107e4565b9050602081019050919050565b60006106f382610732565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b610774826107e4565b810181811067ffffffffffffffff821117156107935761079261079c565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b6107fe816106e8565b811461080957600080fd5b50565b61081581610706565b811461082057600080fd5b50565b61082c81610752565b811461083757600080fd5b5056fea2646970667358221220c70a79cc3abcee8a0a75ea93890eb15af2513e7e66fa55a38b586cc0534da68e64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xBC JUMPI DUP1 PUSH4 0xBC197C81 EQ PUSH2 0xDA JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0x10A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x76 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x71 SWAP2 SWAP1 PUSH2 0x5BB JUMP JUMPDEST PUSH2 0x13A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x83 SWAP2 SWAP1 PUSH2 0x630 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA1 SWAP2 SWAP1 PUSH2 0x4A1 JUMP JUMPDEST PUSH2 0x1B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB3 SWAP2 SWAP1 PUSH2 0x64B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC4 PUSH2 0x1C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD1 SWAP2 SWAP1 PUSH2 0x615 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xEF SWAP2 SWAP1 PUSH2 0x3D2 JUMP JUMPDEST PUSH2 0x1F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x101 SWAP2 SWAP1 PUSH2 0x64B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x124 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11F SWAP2 SWAP1 PUSH2 0x524 JUMP JUMPDEST PUSH2 0x206 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x131 SWAP2 SWAP1 PUSH2 0x64B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x4E2312E000000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x1AD JUMPI POP PUSH2 0x1AC DUP3 PUSH2 0x21B JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0x150B7A02 PUSH1 0xE0 SHL SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x298 PUSH2 0x293 DUP5 PUSH2 0x68B JUMP JUMPDEST PUSH2 0x666 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x2BB JUMPI PUSH2 0x2BA PUSH2 0x7D0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x2EB JUMPI DUP2 PUSH2 0x2D1 DUP9 DUP3 PUSH2 0x3BD JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2BE JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x308 PUSH2 0x303 DUP5 PUSH2 0x6B7 JUMP JUMPDEST PUSH2 0x666 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x324 JUMPI PUSH2 0x323 PUSH2 0x7D5 JUMP JUMPDEST JUMPDEST PUSH2 0x32F DUP5 DUP3 DUP6 PUSH2 0x75C JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x346 DUP2 PUSH2 0x7F5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x361 JUMPI PUSH2 0x360 PUSH2 0x7CB JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x371 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x285 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x389 DUP2 PUSH2 0x80C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3A4 JUMPI PUSH2 0x3A3 PUSH2 0x7CB JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3B4 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2F5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3CC DUP2 PUSH2 0x823 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x3EE JUMPI PUSH2 0x3ED PUSH2 0x7DF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3FC DUP9 DUP3 DUP10 ADD PUSH2 0x337 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x40D DUP9 DUP3 DUP10 ADD PUSH2 0x337 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x42E JUMPI PUSH2 0x42D PUSH2 0x7DA JUMP JUMPDEST JUMPDEST PUSH2 0x43A DUP9 DUP3 DUP10 ADD PUSH2 0x34C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x45B JUMPI PUSH2 0x45A PUSH2 0x7DA JUMP JUMPDEST JUMPDEST PUSH2 0x467 DUP9 DUP3 DUP10 ADD PUSH2 0x34C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x488 JUMPI PUSH2 0x487 PUSH2 0x7DA JUMP JUMPDEST JUMPDEST PUSH2 0x494 DUP9 DUP3 DUP10 ADD PUSH2 0x38F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x4BB JUMPI PUSH2 0x4BA PUSH2 0x7DF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4C9 DUP8 DUP3 DUP9 ADD PUSH2 0x337 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x4DA DUP8 DUP3 DUP9 ADD PUSH2 0x337 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x4EB DUP8 DUP3 DUP9 ADD PUSH2 0x3BD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x50C JUMPI PUSH2 0x50B PUSH2 0x7DA JUMP JUMPDEST JUMPDEST PUSH2 0x518 DUP8 DUP3 DUP9 ADD PUSH2 0x38F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x540 JUMPI PUSH2 0x53F PUSH2 0x7DF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x54E DUP9 DUP3 DUP10 ADD PUSH2 0x337 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x55F DUP9 DUP3 DUP10 ADD PUSH2 0x337 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x570 DUP9 DUP3 DUP10 ADD PUSH2 0x3BD JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x581 DUP9 DUP3 DUP10 ADD PUSH2 0x3BD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5A2 JUMPI PUSH2 0x5A1 PUSH2 0x7DA JUMP JUMPDEST JUMPDEST PUSH2 0x5AE DUP9 DUP3 DUP10 ADD PUSH2 0x38F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5D1 JUMPI PUSH2 0x5D0 PUSH2 0x7DF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x5DF DUP5 DUP3 DUP6 ADD PUSH2 0x37A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5F1 DUP2 PUSH2 0x6E8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x600 DUP2 PUSH2 0x6FA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x60F DUP2 PUSH2 0x706 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x62A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x5E8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x645 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x5F7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x660 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x606 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x670 PUSH2 0x681 JUMP JUMPDEST SWAP1 POP PUSH2 0x67C DUP3 DUP3 PUSH2 0x76B JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x6A6 JUMPI PUSH2 0x6A5 PUSH2 0x79C JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x6D2 JUMPI PUSH2 0x6D1 PUSH2 0x79C JUMP JUMPDEST JUMPDEST PUSH2 0x6DB DUP3 PUSH2 0x7E4 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6F3 DUP3 PUSH2 0x732 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH2 0x774 DUP3 PUSH2 0x7E4 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x793 JUMPI PUSH2 0x792 PUSH2 0x79C JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7FE DUP2 PUSH2 0x6E8 JUMP JUMPDEST DUP2 EQ PUSH2 0x809 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x815 DUP2 PUSH2 0x706 JUMP JUMPDEST DUP2 EQ PUSH2 0x820 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x82C DUP2 PUSH2 0x752 JUMP JUMPDEST DUP2 EQ PUSH2 0x837 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC7 EXP PUSH26 0xCC3ABCEE8A0A75EA93890EB15AF2513E7E66FA55A38B586CC053 0x4D 0xA6 DUP15 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "345:297:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;387:221:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;588:200:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;933:85:10;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;724:247:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;499:219;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;387:221:3;489:4;527:34;512:49;;;:11;:49;;;;:89;;;;565:36;589:11;565:23;:36::i;:::-;512:89;505:96;;387:221;;;:::o;588:200:6:-;726:6;751:30;;;744:37;;588:200;;;;;;:::o;933:85:10:-;979:7;1005:6;;;;;;;;;;;998:13;;933:85;:::o;724:247:2:-;903:6;928:36;;;921:43;;724:247;;;;;;;:::o;499:219::-;655:6;680:31;;;673:38;;499:219;;;;;;;:::o;829:155:8:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;24:722:12:-;120:5;145:81;161:64;218:6;161:64;:::i;:::-;145:81;:::i;:::-;136:90;;246:5;275:6;268:5;261:21;309:4;302:5;298:16;291:23;;335:6;385:3;377:4;369:6;365:17;360:3;356:27;353:36;350:143;;;404:79;;:::i;:::-;350:143;517:1;502:238;527:6;524:1;521:13;502:238;;;595:3;624:37;657:3;645:10;624:37;:::i;:::-;619:3;612:50;691:4;686:3;682:14;675:21;;725:4;720:3;716:14;709:21;;562:178;549:1;546;542:9;537:14;;502:238;;;506:14;126:620;;24:722;;;;;:::o;752:410::-;829:5;854:65;870:48;911:6;870:48;:::i;:::-;854:65;:::i;:::-;845:74;;942:6;935:5;928:21;980:4;973:5;969:16;1018:3;1009:6;1004:3;1000:16;997:25;994:112;;;1025:79;;:::i;:::-;994:112;1115:41;1149:6;1144:3;1139;1115:41;:::i;:::-;835:327;752:410;;;;;:::o;1168:139::-;1214:5;1252:6;1239:20;1230:29;;1268:33;1295:5;1268:33;:::i;:::-;1168:139;;;;:::o;1330:370::-;1401:5;1450:3;1443:4;1435:6;1431:17;1427:27;1417:122;;1458:79;;:::i;:::-;1417:122;1575:6;1562:20;1600:94;1690:3;1682:6;1675:4;1667:6;1663:17;1600:94;:::i;:::-;1591:103;;1407:293;1330:370;;;;:::o;1706:137::-;1751:5;1789:6;1776:20;1767:29;;1805:32;1831:5;1805:32;:::i;:::-;1706:137;;;;:::o;1862:338::-;1917:5;1966:3;1959:4;1951:6;1947:17;1943:27;1933:122;;1974:79;;:::i;:::-;1933:122;2091:6;2078:20;2116:78;2190:3;2182:6;2175:4;2167:6;2163:17;2116:78;:::i;:::-;2107:87;;1923:277;1862:338;;;;:::o;2206:139::-;2252:5;2290:6;2277:20;2268:29;;2306:33;2333:5;2306:33;:::i;:::-;2206:139;;;;:::o;2351:1509::-;2505:6;2513;2521;2529;2537;2586:3;2574:9;2565:7;2561:23;2557:33;2554:120;;;2593:79;;:::i;:::-;2554:120;2713:1;2738:53;2783:7;2774:6;2763:9;2759:22;2738:53;:::i;:::-;2728:63;;2684:117;2840:2;2866:53;2911:7;2902:6;2891:9;2887:22;2866:53;:::i;:::-;2856:63;;2811:118;2996:2;2985:9;2981:18;2968:32;3027:18;3019:6;3016:30;3013:117;;;3049:79;;:::i;:::-;3013:117;3154:78;3224:7;3215:6;3204:9;3200:22;3154:78;:::i;:::-;3144:88;;2939:303;3309:2;3298:9;3294:18;3281:32;3340:18;3332:6;3329:30;3326:117;;;3362:79;;:::i;:::-;3326:117;3467:78;3537:7;3528:6;3517:9;3513:22;3467:78;:::i;:::-;3457:88;;3252:303;3622:3;3611:9;3607:19;3594:33;3654:18;3646:6;3643:30;3640:117;;;3676:79;;:::i;:::-;3640:117;3781:62;3835:7;3826:6;3815:9;3811:22;3781:62;:::i;:::-;3771:72;;3565:288;2351:1509;;;;;;;;:::o;3866:943::-;3961:6;3969;3977;3985;4034:3;4022:9;4013:7;4009:23;4005:33;4002:120;;;4041:79;;:::i;:::-;4002:120;4161:1;4186:53;4231:7;4222:6;4211:9;4207:22;4186:53;:::i;:::-;4176:63;;4132:117;4288:2;4314:53;4359:7;4350:6;4339:9;4335:22;4314:53;:::i;:::-;4304:63;;4259:118;4416:2;4442:53;4487:7;4478:6;4467:9;4463:22;4442:53;:::i;:::-;4432:63;;4387:118;4572:2;4561:9;4557:18;4544:32;4603:18;4595:6;4592:30;4589:117;;;4625:79;;:::i;:::-;4589:117;4730:62;4784:7;4775:6;4764:9;4760:22;4730:62;:::i;:::-;4720:72;;4515:287;3866:943;;;;;;;:::o;4815:1089::-;4919:6;4927;4935;4943;4951;5000:3;4988:9;4979:7;4975:23;4971:33;4968:120;;;5007:79;;:::i;:::-;4968:120;5127:1;5152:53;5197:7;5188:6;5177:9;5173:22;5152:53;:::i;:::-;5142:63;;5098:117;5254:2;5280:53;5325:7;5316:6;5305:9;5301:22;5280:53;:::i;:::-;5270:63;;5225:118;5382:2;5408:53;5453:7;5444:6;5433:9;5429:22;5408:53;:::i;:::-;5398:63;;5353:118;5510:2;5536:53;5581:7;5572:6;5561:9;5557:22;5536:53;:::i;:::-;5526:63;;5481:118;5666:3;5655:9;5651:19;5638:33;5698:18;5690:6;5687:30;5684:117;;;5720:79;;:::i;:::-;5684:117;5825:62;5879:7;5870:6;5859:9;5855:22;5825:62;:::i;:::-;5815:72;;5609:288;4815:1089;;;;;;;;:::o;5910:327::-;5968:6;6017:2;6005:9;5996:7;5992:23;5988:32;5985:119;;;6023:79;;:::i;:::-;5985:119;6143:1;6168:52;6212:7;6203:6;6192:9;6188:22;6168:52;:::i;:::-;6158:62;;6114:116;5910:327;;;;:::o;6243:118::-;6330:24;6348:5;6330:24;:::i;:::-;6325:3;6318:37;6243:118;;:::o;6367:109::-;6448:21;6463:5;6448:21;:::i;:::-;6443:3;6436:34;6367:109;;:::o;6482:115::-;6567:23;6584:5;6567:23;:::i;:::-;6562:3;6555:36;6482:115;;:::o;6603:222::-;6696:4;6734:2;6723:9;6719:18;6711:26;;6747:71;6815:1;6804:9;6800:17;6791:6;6747:71;:::i;:::-;6603:222;;;;:::o;6831:210::-;6918:4;6956:2;6945:9;6941:18;6933:26;;6969:65;7031:1;7020:9;7016:17;7007:6;6969:65;:::i;:::-;6831:210;;;;:::o;7047:218::-;7138:4;7176:2;7165:9;7161:18;7153:26;;7189:69;7255:1;7244:9;7240:17;7231:6;7189:69;:::i;:::-;7047:218;;;;:::o;7271:129::-;7305:6;7332:20;;:::i;:::-;7322:30;;7361:33;7389:4;7381:6;7361:33;:::i;:::-;7271:129;;;:::o;7406:75::-;7439:6;7472:2;7466:9;7456:19;;7406:75;:::o;7487:311::-;7564:4;7654:18;7646:6;7643:30;7640:56;;;7676:18;;:::i;:::-;7640:56;7726:4;7718:6;7714:17;7706:25;;7786:4;7780;7776:15;7768:23;;7487:311;;;:::o;7804:307::-;7865:4;7955:18;7947:6;7944:30;7941:56;;;7977:18;;:::i;:::-;7941:56;8015:29;8037:6;8015:29;:::i;:::-;8007:37;;8099:4;8093;8089:15;8081:23;;7804:307;;;:::o;8117:96::-;8154:7;8183:24;8201:5;8183:24;:::i;:::-;8172:35;;8117:96;;;:::o;8219:90::-;8253:7;8296:5;8289:13;8282:21;8271:32;;8219:90;;;:::o;8315:149::-;8351:7;8391:66;8384:5;8380:78;8369:89;;8315:149;;;:::o;8470:126::-;8507:7;8547:42;8540:5;8536:54;8525:65;;8470:126;;;:::o;8602:77::-;8639:7;8668:5;8657:16;;8602:77;;;:::o;8685:154::-;8769:6;8764:3;8759;8746:30;8831:1;8822:6;8817:3;8813:16;8806:27;8685:154;;;:::o;8845:281::-;8928:27;8950:4;8928:27;:::i;:::-;8920:6;8916:40;9058:6;9046:10;9043:22;9022:18;9010:10;9007:34;9004:62;9001:88;;;9069:18;;:::i;:::-;9001:88;9109:10;9105:2;9098:22;8888:238;8845:281;;:::o;9132:180::-;9180:77;9177:1;9170:88;9277:4;9274:1;9267:15;9301:4;9298:1;9291:15;9318:117;9427:1;9424;9417:12;9441:117;9550:1;9547;9540:12;9564:117;9673:1;9670;9663:12;9687:117;9796:1;9793;9786:12;9810:117;9919:1;9916;9909:12;9933:102;9974:6;10025:2;10021:7;10016:2;10009:5;10005:14;10001:28;9991:38;;9933:102;;;:::o;10041:122::-;10114:24;10132:5;10114:24;:::i;:::-;10107:5;10104:35;10094:63;;10153:1;10150;10143:12;10094:63;10041:122;:::o;10169:120::-;10241:23;10258:5;10241:23;:::i;:::-;10234:5;10231:34;10221:62;;10279:1;10276;10269:12;10221:62;10169:120;:::o;10295:122::-;10368:24;10386:5;10368:24;:::i;:::-;10361:5;10358:35;10348:63;;10407:1;10404;10397:12;10348:63;10295:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "432000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "infinite",
								"onERC1155Received(address,address,uint256,uint256,bytes)": "infinite",
								"onERC721Received(address,address,uint256,bytes)": "infinite",
								"owner()": "2544",
								"supportsInterface(bytes4)": "705"
							},
							"internal": {
								"_transferERC721FundsToAddress(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 345,
									"end": 642,
									"name": "PUSH",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 345,
									"end": 642,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 345,
									"end": 642,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 345,
									"end": 642,
									"name": "CALLVALUE",
									"source": 11
								},
								{
									"begin": 345,
									"end": 642,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 345,
									"end": 642,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 345,
									"end": 642,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 345,
									"end": 642,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 345,
									"end": 642,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 345,
									"end": 642,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 345,
									"end": 642,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 345,
									"end": 642,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 345,
									"end": 642,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 345,
									"end": 642,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 818,
									"end": 850,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 837,
									"end": 849,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "5"
								},
								{
									"begin": 837,
									"end": 847,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "6"
								},
								{
									"begin": 837,
									"end": 847,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 837,
									"end": 847,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 837,
									"end": 849,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 837,
									"end": 849,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 837,
									"end": 849,
									"name": "JUMP",
									"source": 10,
									"value": "[in]"
								},
								{
									"begin": 837,
									"end": 849,
									"name": "tag",
									"source": 10,
									"value": "5"
								},
								{
									"begin": 837,
									"end": 849,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 818,
									"end": 836,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "7"
								},
								{
									"begin": 818,
									"end": 836,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 818,
									"end": 836,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 818,
									"end": 850,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 818,
									"end": 850,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 818,
									"end": 850,
									"name": "JUMP",
									"source": 10,
									"value": "[in]"
								},
								{
									"begin": 818,
									"end": 850,
									"name": "tag",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 818,
									"end": 850,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 345,
									"end": 642,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "8"
								},
								{
									"begin": 345,
									"end": 642,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 693,
									"end": 700,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 7
								},
								{
									"begin": 712,
									"end": 729,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 712,
									"end": 729,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 1377,
									"end": 1564,
									"name": "tag",
									"source": 10,
									"value": "7"
								},
								{
									"begin": 1377,
									"end": 1564,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1450,
									"end": 1466,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1469,
									"end": 1475,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1469,
									"end": 1475,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1469,
									"end": 1475,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1469,
									"end": 1475,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 1469,
									"end": 1475,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1469,
									"end": 1475,
									"name": "PUSH",
									"source": 10,
									"value": "100"
								},
								{
									"begin": 1469,
									"end": 1475,
									"name": "EXP",
									"source": 10
								},
								{
									"begin": 1469,
									"end": 1475,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1469,
									"end": 1475,
									"name": "DIV",
									"source": 10
								},
								{
									"begin": 1469,
									"end": 1475,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1469,
									"end": 1475,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1450,
									"end": 1475,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1450,
									"end": 1475,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1494,
									"end": 1502,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1485,
									"end": 1491,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1485,
									"end": 1491,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1485,
									"end": 1502,
									"name": "PUSH",
									"source": 10,
									"value": "100"
								},
								{
									"begin": 1485,
									"end": 1502,
									"name": "EXP",
									"source": 10
								},
								{
									"begin": 1485,
									"end": 1502,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1485,
									"end": 1502,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 1485,
									"end": 1502,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1485,
									"end": 1502,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1485,
									"end": 1502,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 1485,
									"end": 1502,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 1485,
									"end": 1502,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1485,
									"end": 1502,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1485,
									"end": 1502,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1485,
									"end": 1502,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1485,
									"end": 1502,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1485,
									"end": 1502,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 1485,
									"end": 1502,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 1485,
									"end": 1502,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1485,
									"end": 1502,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 1485,
									"end": 1502,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1548,
									"end": 1556,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1517,
									"end": 1557,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1517,
									"end": 1557,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1538,
									"end": 1546,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1517,
									"end": 1557,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1517,
									"end": 1557,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1517,
									"end": 1557,
									"name": "PUSH",
									"source": 10,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 1517,
									"end": 1557,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1517,
									"end": 1557,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1517,
									"end": 1557,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1517,
									"end": 1557,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1517,
									"end": 1557,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1517,
									"end": 1557,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1517,
									"end": 1557,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 1517,
									"end": 1557,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1517,
									"end": 1557,
									"name": "LOG3",
									"source": 10
								},
								{
									"begin": 1440,
									"end": 1564,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1377,
									"end": 1564,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1377,
									"end": 1564,
									"name": "JUMP",
									"source": 10,
									"value": "[out]"
								},
								{
									"begin": 345,
									"end": 642,
									"name": "tag",
									"source": 11,
									"value": "8"
								},
								{
									"begin": 345,
									"end": 642,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 345,
									"end": 642,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 345,
									"end": 642,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 345,
									"end": 642,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 345,
									"end": 642,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 345,
									"end": 642,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 345,
									"end": 642,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 345,
									"end": 642,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c70a79cc3abcee8a0a75ea93890eb15af2513e7e66fa55a38b586cc0534da68e64736f6c63430008070033",
									".code": [
										{
											"begin": 345,
											"end": 642,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 345,
											"end": 642,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 345,
											"end": 642,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 345,
											"end": 642,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 345,
											"end": 642,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 345,
											"end": 642,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 345,
											"end": 642,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 345,
											"end": 642,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 345,
											"end": 642,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 642,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 345,
											"end": 642,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 345,
											"end": 642,
											"name": "tag",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 345,
											"end": 642,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 345,
											"end": 642,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 345,
											"end": 642,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 345,
											"end": 642,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 345,
											"end": 642,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 345,
											"end": 642,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 345,
											"end": 642,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 345,
											"end": 642,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 642,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 345,
											"end": 642,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 345,
											"end": 642,
											"name": "SHR",
											"source": 11
										},
										{
											"begin": 345,
											"end": 642,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 345,
											"end": 642,
											"name": "PUSH",
											"source": 11,
											"value": "1FFC9A7"
										},
										{
											"begin": 345,
											"end": 642,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 345,
											"end": 642,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 345,
											"end": 642,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 345,
											"end": 642,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 345,
											"end": 642,
											"name": "PUSH",
											"source": 11,
											"value": "150B7A02"
										},
										{
											"begin": 345,
											"end": 642,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 345,
											"end": 642,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 345,
											"end": 642,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 345,
											"end": 642,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 345,
											"end": 642,
											"name": "PUSH",
											"source": 11,
											"value": "8DA5CB5B"
										},
										{
											"begin": 345,
											"end": 642,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 345,
											"end": 642,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 345,
											"end": 642,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 345,
											"end": 642,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 345,
											"end": 642,
											"name": "PUSH",
											"source": 11,
											"value": "BC197C81"
										},
										{
											"begin": 345,
											"end": 642,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 345,
											"end": 642,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 345,
											"end": 642,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 345,
											"end": 642,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 345,
											"end": 642,
											"name": "PUSH",
											"source": 11,
											"value": "F23A6E61"
										},
										{
											"begin": 345,
											"end": 642,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 345,
											"end": 642,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 345,
											"end": 642,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 345,
											"end": 642,
											"name": "tag",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 345,
											"end": 642,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 345,
											"end": 642,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 642,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 345,
											"end": 642,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 387,
											"end": 608,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 588,
											"end": 788,
											"name": "tag",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 588,
											"end": 788,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 588,
											"end": 788,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 588,
											"end": 788,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "tag",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 588,
											"end": 788,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 588,
											"end": 788,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 933,
											"end": 1018,
											"name": "tag",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 933,
											"end": 1018,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 933,
											"end": 1018,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 933,
											"end": 1018,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 933,
											"end": 1018,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 933,
											"end": 1018,
											"name": "tag",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 933,
											"end": 1018,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 933,
											"end": 1018,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 933,
											"end": 1018,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 933,
											"end": 1018,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 933,
											"end": 1018,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 933,
											"end": 1018,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 933,
											"end": 1018,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 933,
											"end": 1018,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 933,
											"end": 1018,
											"name": "tag",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 933,
											"end": 1018,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 933,
											"end": 1018,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 933,
											"end": 1018,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 933,
											"end": 1018,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 933,
											"end": 1018,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 933,
											"end": 1018,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 933,
											"end": 1018,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 933,
											"end": 1018,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 724,
											"end": 971,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 387,
											"end": 608,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 489,
											"end": 493,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 527,
											"end": 561,
											"name": "PUSH",
											"source": 3,
											"value": "4E2312E000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 512,
											"end": 561,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 512,
											"end": 561,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 512,
											"end": 561,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 512,
											"end": 523,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 512,
											"end": 561,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 512,
											"end": 561,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 512,
											"end": 561,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 512,
											"end": 561,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 512,
											"end": 601,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 512,
											"end": 601,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 512,
											"end": 601,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 512,
											"end": 601,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 565,
											"end": 601,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 589,
											"end": 600,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 565,
											"end": 588,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 565,
											"end": 601,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 565,
											"end": 601,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 565,
											"end": 601,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 512,
											"end": 601,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 512,
											"end": 601,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 505,
											"end": 601,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 505,
											"end": 601,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 726,
											"end": 732,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 781,
											"name": "PUSH",
											"source": 6,
											"value": "150B7A02"
										},
										{
											"begin": 751,
											"end": 781,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 751,
											"end": 781,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 744,
											"end": 781,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 744,
											"end": 781,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 588,
											"end": 788,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 588,
											"end": 788,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 588,
											"end": 788,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 588,
											"end": 788,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 933,
											"end": 1018,
											"name": "tag",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 933,
											"end": 1018,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 979,
											"end": 986,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1005,
											"end": 1011,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1005,
											"end": 1011,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1005,
											"end": 1011,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1005,
											"end": 1011,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1005,
											"end": 1011,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1005,
											"end": 1011,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 1005,
											"end": 1011,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 1005,
											"end": 1011,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1005,
											"end": 1011,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 1005,
											"end": 1011,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1005,
											"end": 1011,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 998,
											"end": 1011,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 998,
											"end": 1011,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 933,
											"end": 1018,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 933,
											"end": 1018,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 903,
											"end": 909,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 928,
											"end": 964,
											"name": "PUSH",
											"source": 2,
											"value": "BC197C81"
										},
										{
											"begin": 928,
											"end": 964,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 928,
											"end": 964,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 921,
											"end": 964,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 921,
											"end": 964,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 655,
											"end": 661,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 711,
											"name": "PUSH",
											"source": 2,
											"value": "F23A6E61"
										},
										{
											"begin": 680,
											"end": 711,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 680,
											"end": 711,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 673,
											"end": 711,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 673,
											"end": 711,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "tag",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 914,
											"end": 918,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 952,
											"end": 977,
											"name": "PUSH",
											"source": 8,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 937,
											"end": 948,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 937,
											"end": 977,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 937,
											"end": 977,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 930,
											"end": 977,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 930,
											"end": 977,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 829,
											"end": 984,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 829,
											"end": 984,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 24,
											"end": 746,
											"name": "tag",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 24,
											"end": 746,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 120,
											"end": 125,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 145,
											"end": 226,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "46"
										},
										{
											"begin": 161,
											"end": 225,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "47"
										},
										{
											"begin": 218,
											"end": 224,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 161,
											"end": 225,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "48"
										},
										{
											"begin": 161,
											"end": 225,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 161,
											"end": 225,
											"name": "tag",
											"source": 12,
											"value": "47"
										},
										{
											"begin": 161,
											"end": 225,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 145,
											"end": 226,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "49"
										},
										{
											"begin": 145,
											"end": 226,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 145,
											"end": 226,
											"name": "tag",
											"source": 12,
											"value": "46"
										},
										{
											"begin": 145,
											"end": 226,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 136,
											"end": 226,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 136,
											"end": 226,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 246,
											"end": 251,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 275,
											"end": 281,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 268,
											"end": 273,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 261,
											"end": 282,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 309,
											"end": 313,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 302,
											"end": 307,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 298,
											"end": 314,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 291,
											"end": 314,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 291,
											"end": 314,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 335,
											"end": 341,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 385,
											"end": 388,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 377,
											"end": 381,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 369,
											"end": 375,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 365,
											"end": 382,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 360,
											"end": 363,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 356,
											"end": 383,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 353,
											"end": 389,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 350,
											"end": 493,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 350,
											"end": 493,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "50"
										},
										{
											"begin": 350,
											"end": 493,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 404,
											"end": 483,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "51"
										},
										{
											"begin": 404,
											"end": 483,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "52"
										},
										{
											"begin": 404,
											"end": 483,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 404,
											"end": 483,
											"name": "tag",
											"source": 12,
											"value": "51"
										},
										{
											"begin": 404,
											"end": 483,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 350,
											"end": 493,
											"name": "tag",
											"source": 12,
											"value": "50"
										},
										{
											"begin": 350,
											"end": 493,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 517,
											"end": 518,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 502,
											"end": 740,
											"name": "tag",
											"source": 12,
											"value": "53"
										},
										{
											"begin": 502,
											"end": 740,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 527,
											"end": 533,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 524,
											"end": 525,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 521,
											"end": 534,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 502,
											"end": 740,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 502,
											"end": 740,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "55"
										},
										{
											"begin": 502,
											"end": 740,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 595,
											"end": 598,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 624,
											"end": 661,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "56"
										},
										{
											"begin": 657,
											"end": 660,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 645,
											"end": 655,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 624,
											"end": 661,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "57"
										},
										{
											"begin": 624,
											"end": 661,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 624,
											"end": 661,
											"name": "tag",
											"source": 12,
											"value": "56"
										},
										{
											"begin": 624,
											"end": 661,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 619,
											"end": 622,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 612,
											"end": 662,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 691,
											"end": 695,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 686,
											"end": 689,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 682,
											"end": 696,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 675,
											"end": 696,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 675,
											"end": 696,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 725,
											"end": 729,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 720,
											"end": 723,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 716,
											"end": 730,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 709,
											"end": 730,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 709,
											"end": 730,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 562,
											"end": 740,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 549,
											"end": 550,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 546,
											"end": 547,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 542,
											"end": 551,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 537,
											"end": 551,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 537,
											"end": 551,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 502,
											"end": 740,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "53"
										},
										{
											"begin": 502,
											"end": 740,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 502,
											"end": 740,
											"name": "tag",
											"source": 12,
											"value": "55"
										},
										{
											"begin": 502,
											"end": 740,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 506,
											"end": 520,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 126,
											"end": 746,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 126,
											"end": 746,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24,
											"end": 746,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 24,
											"end": 746,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 24,
											"end": 746,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24,
											"end": 746,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24,
											"end": 746,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24,
											"end": 746,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 752,
											"end": 1162,
											"name": "tag",
											"source": 12,
											"value": "58"
										},
										{
											"begin": 752,
											"end": 1162,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 829,
											"end": 834,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 854,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 870,
											"end": 918,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "61"
										},
										{
											"begin": 911,
											"end": 917,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 870,
											"end": 918,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "62"
										},
										{
											"begin": 870,
											"end": 918,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 870,
											"end": 918,
											"name": "tag",
											"source": 12,
											"value": "61"
										},
										{
											"begin": 870,
											"end": 918,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 854,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "49"
										},
										{
											"begin": 854,
											"end": 919,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 854,
											"end": 919,
											"name": "tag",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 854,
											"end": 919,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 845,
											"end": 919,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 845,
											"end": 919,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 942,
											"end": 948,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 935,
											"end": 940,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 928,
											"end": 949,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 980,
											"end": 984,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 973,
											"end": 978,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 969,
											"end": 985,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1018,
											"end": 1021,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1009,
											"end": 1015,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1004,
											"end": 1007,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1000,
											"end": 1016,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 997,
											"end": 1022,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 994,
											"end": 1106,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 994,
											"end": 1106,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "63"
										},
										{
											"begin": 994,
											"end": 1106,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1025,
											"end": 1104,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 1025,
											"end": 1104,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "65"
										},
										{
											"begin": 1025,
											"end": 1104,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 1025,
											"end": 1104,
											"name": "tag",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 1025,
											"end": 1104,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 994,
											"end": 1106,
											"name": "tag",
											"source": 12,
											"value": "63"
										},
										{
											"begin": 994,
											"end": 1106,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1115,
											"end": 1156,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "66"
										},
										{
											"begin": 1149,
											"end": 1155,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1144,
											"end": 1147,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1139,
											"end": 1142,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1115,
											"end": 1156,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "67"
										},
										{
											"begin": 1115,
											"end": 1156,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 1115,
											"end": 1156,
											"name": "tag",
											"source": 12,
											"value": "66"
										},
										{
											"begin": 1115,
											"end": 1156,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 835,
											"end": 1162,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 752,
											"end": 1162,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 752,
											"end": 1162,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 752,
											"end": 1162,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 752,
											"end": 1162,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 752,
											"end": 1162,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 752,
											"end": 1162,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 1168,
											"end": 1307,
											"name": "tag",
											"source": 12,
											"value": "68"
										},
										{
											"begin": 1168,
											"end": 1307,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1214,
											"end": 1219,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1252,
											"end": 1258,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1239,
											"end": 1259,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 1230,
											"end": 1259,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1230,
											"end": 1259,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1301,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "70"
										},
										{
											"begin": 1295,
											"end": 1300,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1301,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "71"
										},
										{
											"begin": 1268,
											"end": 1301,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 1268,
											"end": 1301,
											"name": "tag",
											"source": 12,
											"value": "70"
										},
										{
											"begin": 1268,
											"end": 1301,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1168,
											"end": 1307,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1168,
											"end": 1307,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1168,
											"end": 1307,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1168,
											"end": 1307,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1168,
											"end": 1307,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 1330,
											"end": 1700,
											"name": "tag",
											"source": 12,
											"value": "72"
										},
										{
											"begin": 1330,
											"end": 1700,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1401,
											"end": 1406,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1450,
											"end": 1453,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1443,
											"end": 1447,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 1435,
											"end": 1441,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1431,
											"end": 1448,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1427,
											"end": 1454,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 1417,
											"end": 1539,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "74"
										},
										{
											"begin": 1417,
											"end": 1539,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1458,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "75"
										},
										{
											"begin": 1458,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "76"
										},
										{
											"begin": 1458,
											"end": 1537,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 1458,
											"end": 1537,
											"name": "tag",
											"source": 12,
											"value": "75"
										},
										{
											"begin": 1458,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1417,
											"end": 1539,
											"name": "tag",
											"source": 12,
											"value": "74"
										},
										{
											"begin": 1417,
											"end": 1539,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1575,
											"end": 1581,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1562,
											"end": 1582,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 1600,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "77"
										},
										{
											"begin": 1690,
											"end": 1693,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1682,
											"end": 1688,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1675,
											"end": 1679,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1667,
											"end": 1673,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 1663,
											"end": 1680,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1600,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 1600,
											"end": 1694,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 1600,
											"end": 1694,
											"name": "tag",
											"source": 12,
											"value": "77"
										},
										{
											"begin": 1600,
											"end": 1694,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1591,
											"end": 1694,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1591,
											"end": 1694,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1407,
											"end": 1700,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1330,
											"end": 1700,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1330,
											"end": 1700,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1330,
											"end": 1700,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1330,
											"end": 1700,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1330,
											"end": 1700,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 1706,
											"end": 1843,
											"name": "tag",
											"source": 12,
											"value": "78"
										},
										{
											"begin": 1706,
											"end": 1843,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1751,
											"end": 1756,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1789,
											"end": 1795,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1776,
											"end": 1796,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 1767,
											"end": 1796,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1767,
											"end": 1796,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1805,
											"end": 1837,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 1831,
											"end": 1836,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1805,
											"end": 1837,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "81"
										},
										{
											"begin": 1805,
											"end": 1837,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 1805,
											"end": 1837,
											"name": "tag",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 1805,
											"end": 1837,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1706,
											"end": 1843,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1706,
											"end": 1843,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1706,
											"end": 1843,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1706,
											"end": 1843,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1706,
											"end": 1843,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 1862,
											"end": 2200,
											"name": "tag",
											"source": 12,
											"value": "82"
										},
										{
											"begin": 1862,
											"end": 2200,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1917,
											"end": 1922,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1966,
											"end": 1969,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1959,
											"end": 1963,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 1951,
											"end": 1957,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1947,
											"end": 1964,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1943,
											"end": 1970,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 1933,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 1933,
											"end": 2055,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1974,
											"end": 2053,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "85"
										},
										{
											"begin": 1974,
											"end": 2053,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "76"
										},
										{
											"begin": 1974,
											"end": 2053,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 1974,
											"end": 2053,
											"name": "tag",
											"source": 12,
											"value": "85"
										},
										{
											"begin": 1974,
											"end": 2053,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1933,
											"end": 2055,
											"name": "tag",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 1933,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2091,
											"end": 2097,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 2116,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "86"
										},
										{
											"begin": 2190,
											"end": 2193,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2182,
											"end": 2188,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2175,
											"end": 2179,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2167,
											"end": 2173,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 2163,
											"end": 2180,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2116,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "58"
										},
										{
											"begin": 2116,
											"end": 2194,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 2116,
											"end": 2194,
											"name": "tag",
											"source": 12,
											"value": "86"
										},
										{
											"begin": 2116,
											"end": 2194,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2107,
											"end": 2194,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2107,
											"end": 2194,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1923,
											"end": 2200,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1862,
											"end": 2200,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1862,
											"end": 2200,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1862,
											"end": 2200,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1862,
											"end": 2200,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1862,
											"end": 2200,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 2206,
											"end": 2345,
											"name": "tag",
											"source": 12,
											"value": "57"
										},
										{
											"begin": 2206,
											"end": 2345,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2252,
											"end": 2257,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2290,
											"end": 2296,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2277,
											"end": 2297,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 2268,
											"end": 2297,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2268,
											"end": 2297,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2306,
											"end": 2339,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "88"
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2306,
											"end": 2339,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "89"
										},
										{
											"begin": 2306,
											"end": 2339,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 2306,
											"end": 2339,
											"name": "tag",
											"source": 12,
											"value": "88"
										},
										{
											"begin": 2306,
											"end": 2339,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2206,
											"end": 2345,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2206,
											"end": 2345,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2206,
											"end": 2345,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2206,
											"end": 2345,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2206,
											"end": 2345,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 2351,
											"end": 3860,
											"name": "tag",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 2351,
											"end": 3860,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2505,
											"end": 2511,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2513,
											"end": 2519,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2521,
											"end": 2527,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2529,
											"end": 2535,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2537,
											"end": 2543,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2586,
											"end": 2589,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 2574,
											"end": 2583,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 2565,
											"end": 2572,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 2561,
											"end": 2584,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2557,
											"end": 2590,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 2554,
											"end": 2674,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2554,
											"end": 2674,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "91"
										},
										{
											"begin": 2554,
											"end": 2674,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2593,
											"end": 2672,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "92"
										},
										{
											"begin": 2593,
											"end": 2672,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "93"
										},
										{
											"begin": 2593,
											"end": 2672,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 2593,
											"end": 2672,
											"name": "tag",
											"source": 12,
											"value": "92"
										},
										{
											"begin": 2593,
											"end": 2672,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2554,
											"end": 2674,
											"name": "tag",
											"source": 12,
											"value": "91"
										},
										{
											"begin": 2554,
											"end": 2674,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2713,
											"end": 2714,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2738,
											"end": 2791,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "94"
										},
										{
											"begin": 2783,
											"end": 2790,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 2774,
											"end": 2780,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2763,
											"end": 2772,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 2759,
											"end": 2781,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2738,
											"end": 2791,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "68"
										},
										{
											"begin": 2738,
											"end": 2791,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 2738,
											"end": 2791,
											"name": "tag",
											"source": 12,
											"value": "94"
										},
										{
											"begin": 2738,
											"end": 2791,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2728,
											"end": 2791,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 2728,
											"end": 2791,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2684,
											"end": 2801,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2840,
											"end": 2842,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2866,
											"end": 2919,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "95"
										},
										{
											"begin": 2911,
											"end": 2918,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 2902,
											"end": 2908,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2891,
											"end": 2900,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 2887,
											"end": 2909,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2866,
											"end": 2919,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "68"
										},
										{
											"begin": 2866,
											"end": 2919,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 2866,
											"end": 2919,
											"name": "tag",
											"source": 12,
											"value": "95"
										},
										{
											"begin": 2866,
											"end": 2919,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2856,
											"end": 2919,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 2856,
											"end": 2919,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2811,
											"end": 2929,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2996,
											"end": 2998,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2985,
											"end": 2994,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 2981,
											"end": 2999,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2968,
											"end": 3000,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3027,
											"end": 3045,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3019,
											"end": 3025,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3016,
											"end": 3046,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 3013,
											"end": 3130,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3013,
											"end": 3130,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "96"
										},
										{
											"begin": 3013,
											"end": 3130,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3049,
											"end": 3128,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "97"
										},
										{
											"begin": 3049,
											"end": 3128,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "98"
										},
										{
											"begin": 3049,
											"end": 3128,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 3049,
											"end": 3128,
											"name": "tag",
											"source": 12,
											"value": "97"
										},
										{
											"begin": 3049,
											"end": 3128,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3013,
											"end": 3130,
											"name": "tag",
											"source": 12,
											"value": "96"
										},
										{
											"begin": 3013,
											"end": 3130,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3154,
											"end": 3232,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "99"
										},
										{
											"begin": 3224,
											"end": 3231,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 3215,
											"end": 3221,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3204,
											"end": 3213,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 3200,
											"end": 3222,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3154,
											"end": 3232,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "72"
										},
										{
											"begin": 3154,
											"end": 3232,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 3154,
											"end": 3232,
											"name": "tag",
											"source": 12,
											"value": "99"
										},
										{
											"begin": 3154,
											"end": 3232,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3144,
											"end": 3232,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 3144,
											"end": 3232,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2939,
											"end": 3242,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3309,
											"end": 3311,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 3298,
											"end": 3307,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 3294,
											"end": 3312,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3281,
											"end": 3313,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3340,
											"end": 3358,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3332,
											"end": 3338,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3329,
											"end": 3359,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 3326,
											"end": 3443,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3326,
											"end": 3443,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 3326,
											"end": 3443,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3362,
											"end": 3441,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "101"
										},
										{
											"begin": 3362,
											"end": 3441,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "98"
										},
										{
											"begin": 3362,
											"end": 3441,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 3362,
											"end": 3441,
											"name": "tag",
											"source": 12,
											"value": "101"
										},
										{
											"begin": 3362,
											"end": 3441,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3326,
											"end": 3443,
											"name": "tag",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 3326,
											"end": 3443,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3467,
											"end": 3545,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "102"
										},
										{
											"begin": 3537,
											"end": 3544,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 3528,
											"end": 3534,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3517,
											"end": 3526,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 3513,
											"end": 3535,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3467,
											"end": 3545,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "72"
										},
										{
											"begin": 3467,
											"end": 3545,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 3467,
											"end": 3545,
											"name": "tag",
											"source": 12,
											"value": "102"
										},
										{
											"begin": 3467,
											"end": 3545,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3457,
											"end": 3545,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3457,
											"end": 3545,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3252,
											"end": 3555,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3622,
											"end": 3625,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 3611,
											"end": 3620,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 3607,
											"end": 3626,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3594,
											"end": 3627,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3654,
											"end": 3672,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3646,
											"end": 3652,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3643,
											"end": 3673,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 3640,
											"end": 3757,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3640,
											"end": 3757,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "103"
										},
										{
											"begin": 3640,
											"end": 3757,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3676,
											"end": 3755,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "104"
										},
										{
											"begin": 3676,
											"end": 3755,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "98"
										},
										{
											"begin": 3676,
											"end": 3755,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 3676,
											"end": 3755,
											"name": "tag",
											"source": 12,
											"value": "104"
										},
										{
											"begin": 3676,
											"end": 3755,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3640,
											"end": 3757,
											"name": "tag",
											"source": 12,
											"value": "103"
										},
										{
											"begin": 3640,
											"end": 3757,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3781,
											"end": 3843,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "105"
										},
										{
											"begin": 3835,
											"end": 3842,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 3826,
											"end": 3832,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3815,
											"end": 3824,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 3811,
											"end": 3833,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3781,
											"end": 3843,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "82"
										},
										{
											"begin": 3781,
											"end": 3843,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 3781,
											"end": 3843,
											"name": "tag",
											"source": 12,
											"value": "105"
										},
										{
											"begin": 3781,
											"end": 3843,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3771,
											"end": 3843,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3771,
											"end": 3843,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3565,
											"end": 3853,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2351,
											"end": 3860,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2351,
											"end": 3860,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 2351,
											"end": 3860,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2351,
											"end": 3860,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2351,
											"end": 3860,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 2351,
											"end": 3860,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2351,
											"end": 3860,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 2351,
											"end": 3860,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2351,
											"end": 3860,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 3866,
											"end": 4809,
											"name": "tag",
											"source": 12,
											"value": "16"
										},
										{
											"begin": 3866,
											"end": 4809,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3961,
											"end": 3967,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3969,
											"end": 3975,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3977,
											"end": 3983,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3985,
											"end": 3991,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4034,
											"end": 4037,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 4022,
											"end": 4031,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4013,
											"end": 4020,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 4009,
											"end": 4032,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4005,
											"end": 4038,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 4002,
											"end": 4122,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4002,
											"end": 4122,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "107"
										},
										{
											"begin": 4002,
											"end": 4122,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4041,
											"end": 4120,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "108"
										},
										{
											"begin": 4041,
											"end": 4120,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "93"
										},
										{
											"begin": 4041,
											"end": 4120,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 4041,
											"end": 4120,
											"name": "tag",
											"source": 12,
											"value": "108"
										},
										{
											"begin": 4041,
											"end": 4120,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4002,
											"end": 4122,
											"name": "tag",
											"source": 12,
											"value": "107"
										},
										{
											"begin": 4002,
											"end": 4122,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4161,
											"end": 4162,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4186,
											"end": 4239,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "109"
										},
										{
											"begin": 4231,
											"end": 4238,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 4222,
											"end": 4228,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4211,
											"end": 4220,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 4207,
											"end": 4229,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4186,
											"end": 4239,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "68"
										},
										{
											"begin": 4186,
											"end": 4239,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 4186,
											"end": 4239,
											"name": "tag",
											"source": 12,
											"value": "109"
										},
										{
											"begin": 4186,
											"end": 4239,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4176,
											"end": 4239,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 4176,
											"end": 4239,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4132,
											"end": 4249,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4288,
											"end": 4290,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4314,
											"end": 4367,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "110"
										},
										{
											"begin": 4359,
											"end": 4366,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 4350,
											"end": 4356,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4339,
											"end": 4348,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 4335,
											"end": 4357,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4314,
											"end": 4367,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "68"
										},
										{
											"begin": 4314,
											"end": 4367,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 4314,
											"end": 4367,
											"name": "tag",
											"source": 12,
											"value": "110"
										},
										{
											"begin": 4314,
											"end": 4367,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4304,
											"end": 4367,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 4304,
											"end": 4367,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4259,
											"end": 4377,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4416,
											"end": 4418,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4442,
											"end": 4495,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "111"
										},
										{
											"begin": 4487,
											"end": 4494,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 4478,
											"end": 4484,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4467,
											"end": 4476,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 4463,
											"end": 4485,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4442,
											"end": 4495,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "57"
										},
										{
											"begin": 4442,
											"end": 4495,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 4442,
											"end": 4495,
											"name": "tag",
											"source": 12,
											"value": "111"
										},
										{
											"begin": 4442,
											"end": 4495,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4432,
											"end": 4495,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4432,
											"end": 4495,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4387,
											"end": 4505,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4572,
											"end": 4574,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 4561,
											"end": 4570,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4557,
											"end": 4575,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4544,
											"end": 4576,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 4603,
											"end": 4621,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4595,
											"end": 4601,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4592,
											"end": 4622,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 4589,
											"end": 4706,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4589,
											"end": 4706,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "112"
										},
										{
											"begin": 4589,
											"end": 4706,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4625,
											"end": 4704,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "113"
										},
										{
											"begin": 4625,
											"end": 4704,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "98"
										},
										{
											"begin": 4625,
											"end": 4704,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 4625,
											"end": 4704,
											"name": "tag",
											"source": 12,
											"value": "113"
										},
										{
											"begin": 4625,
											"end": 4704,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4589,
											"end": 4706,
											"name": "tag",
											"source": 12,
											"value": "112"
										},
										{
											"begin": 4589,
											"end": 4706,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4730,
											"end": 4792,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "114"
										},
										{
											"begin": 4784,
											"end": 4791,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 4775,
											"end": 4781,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4764,
											"end": 4773,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 4760,
											"end": 4782,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4730,
											"end": 4792,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "82"
										},
										{
											"begin": 4730,
											"end": 4792,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 4730,
											"end": 4792,
											"name": "tag",
											"source": 12,
											"value": "114"
										},
										{
											"begin": 4730,
											"end": 4792,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4720,
											"end": 4792,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4720,
											"end": 4792,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4515,
											"end": 4802,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3866,
											"end": 4809,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3866,
											"end": 4809,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 3866,
											"end": 4809,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3866,
											"end": 4809,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 3866,
											"end": 4809,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3866,
											"end": 4809,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3866,
											"end": 4809,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3866,
											"end": 4809,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 4815,
											"end": 5904,
											"name": "tag",
											"source": 12,
											"value": "31"
										},
										{
											"begin": 4815,
											"end": 5904,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4919,
											"end": 4925,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4927,
											"end": 4933,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4935,
											"end": 4941,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4943,
											"end": 4949,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4951,
											"end": 4957,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5000,
											"end": 5003,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 4988,
											"end": 4997,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4979,
											"end": 4986,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 4975,
											"end": 4998,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4971,
											"end": 5004,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 4968,
											"end": 5088,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4968,
											"end": 5088,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "116"
										},
										{
											"begin": 4968,
											"end": 5088,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5007,
											"end": 5086,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "117"
										},
										{
											"begin": 5007,
											"end": 5086,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "93"
										},
										{
											"begin": 5007,
											"end": 5086,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 5007,
											"end": 5086,
											"name": "tag",
											"source": 12,
											"value": "117"
										},
										{
											"begin": 5007,
											"end": 5086,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4968,
											"end": 5088,
											"name": "tag",
											"source": 12,
											"value": "116"
										},
										{
											"begin": 4968,
											"end": 5088,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5127,
											"end": 5128,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5152,
											"end": 5205,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "118"
										},
										{
											"begin": 5197,
											"end": 5204,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 5188,
											"end": 5194,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5177,
											"end": 5186,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 5173,
											"end": 5195,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5152,
											"end": 5205,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "68"
										},
										{
											"begin": 5152,
											"end": 5205,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 5152,
											"end": 5205,
											"name": "tag",
											"source": 12,
											"value": "118"
										},
										{
											"begin": 5152,
											"end": 5205,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5142,
											"end": 5205,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 5142,
											"end": 5205,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5098,
											"end": 5215,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5254,
											"end": 5256,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5280,
											"end": 5333,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "119"
										},
										{
											"begin": 5325,
											"end": 5332,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 5316,
											"end": 5322,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5305,
											"end": 5314,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 5301,
											"end": 5323,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5280,
											"end": 5333,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "68"
										},
										{
											"begin": 5280,
											"end": 5333,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 5280,
											"end": 5333,
											"name": "tag",
											"source": 12,
											"value": "119"
										},
										{
											"begin": 5280,
											"end": 5333,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5270,
											"end": 5333,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 5270,
											"end": 5333,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5225,
											"end": 5343,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5382,
											"end": 5384,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5408,
											"end": 5461,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "120"
										},
										{
											"begin": 5453,
											"end": 5460,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 5444,
											"end": 5450,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5433,
											"end": 5442,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 5429,
											"end": 5451,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5408,
											"end": 5461,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "57"
										},
										{
											"begin": 5408,
											"end": 5461,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 5408,
											"end": 5461,
											"name": "tag",
											"source": 12,
											"value": "120"
										},
										{
											"begin": 5408,
											"end": 5461,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5398,
											"end": 5461,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 5398,
											"end": 5461,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5353,
											"end": 5471,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5510,
											"end": 5512,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 5536,
											"end": 5589,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "121"
										},
										{
											"begin": 5581,
											"end": 5588,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 5572,
											"end": 5578,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5561,
											"end": 5570,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 5557,
											"end": 5579,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5536,
											"end": 5589,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "57"
										},
										{
											"begin": 5536,
											"end": 5589,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 5536,
											"end": 5589,
											"name": "tag",
											"source": 12,
											"value": "121"
										},
										{
											"begin": 5536,
											"end": 5589,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5526,
											"end": 5589,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5526,
											"end": 5589,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5481,
											"end": 5599,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5666,
											"end": 5669,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 5655,
											"end": 5664,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 5651,
											"end": 5670,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5638,
											"end": 5671,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 5698,
											"end": 5716,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5690,
											"end": 5696,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5687,
											"end": 5717,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 5684,
											"end": 5801,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5684,
											"end": 5801,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "122"
										},
										{
											"begin": 5684,
											"end": 5801,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5720,
											"end": 5799,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "123"
										},
										{
											"begin": 5720,
											"end": 5799,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "98"
										},
										{
											"begin": 5720,
											"end": 5799,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 5720,
											"end": 5799,
											"name": "tag",
											"source": 12,
											"value": "123"
										},
										{
											"begin": 5720,
											"end": 5799,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5684,
											"end": 5801,
											"name": "tag",
											"source": 12,
											"value": "122"
										},
										{
											"begin": 5684,
											"end": 5801,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5825,
											"end": 5887,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "124"
										},
										{
											"begin": 5879,
											"end": 5886,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 5870,
											"end": 5876,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5859,
											"end": 5868,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 5855,
											"end": 5877,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5825,
											"end": 5887,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "82"
										},
										{
											"begin": 5825,
											"end": 5887,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 5825,
											"end": 5887,
											"name": "tag",
											"source": 12,
											"value": "124"
										},
										{
											"begin": 5825,
											"end": 5887,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5815,
											"end": 5887,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5815,
											"end": 5887,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5609,
											"end": 5897,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4815,
											"end": 5904,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4815,
											"end": 5904,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 4815,
											"end": 5904,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4815,
											"end": 5904,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4815,
											"end": 5904,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 4815,
											"end": 5904,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4815,
											"end": 5904,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 4815,
											"end": 5904,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4815,
											"end": 5904,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 5910,
											"end": 6237,
											"name": "tag",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 5910,
											"end": 6237,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5968,
											"end": 5974,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6017,
											"end": 6019,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6005,
											"end": 6014,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5996,
											"end": 6003,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5992,
											"end": 6015,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5988,
											"end": 6020,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 5985,
											"end": 6104,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5985,
											"end": 6104,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "126"
										},
										{
											"begin": 5985,
											"end": 6104,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6023,
											"end": 6102,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "127"
										},
										{
											"begin": 6023,
											"end": 6102,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "93"
										},
										{
											"begin": 6023,
											"end": 6102,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 6023,
											"end": 6102,
											"name": "tag",
											"source": 12,
											"value": "127"
										},
										{
											"begin": 6023,
											"end": 6102,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5985,
											"end": 6104,
											"name": "tag",
											"source": 12,
											"value": "126"
										},
										{
											"begin": 5985,
											"end": 6104,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6143,
											"end": 6144,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6168,
											"end": 6220,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "128"
										},
										{
											"begin": 6212,
											"end": 6219,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6203,
											"end": 6209,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6192,
											"end": 6201,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6188,
											"end": 6210,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6168,
											"end": 6220,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "78"
										},
										{
											"begin": 6168,
											"end": 6220,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 6168,
											"end": 6220,
											"name": "tag",
											"source": 12,
											"value": "128"
										},
										{
											"begin": 6168,
											"end": 6220,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6158,
											"end": 6220,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6158,
											"end": 6220,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6114,
											"end": 6230,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5910,
											"end": 6237,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5910,
											"end": 6237,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5910,
											"end": 6237,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5910,
											"end": 6237,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5910,
											"end": 6237,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 6243,
											"end": 6361,
											"name": "tag",
											"source": 12,
											"value": "129"
										},
										{
											"begin": 6243,
											"end": 6361,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6330,
											"end": 6354,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "131"
										},
										{
											"begin": 6348,
											"end": 6353,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6330,
											"end": 6354,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "132"
										},
										{
											"begin": 6330,
											"end": 6354,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 6330,
											"end": 6354,
											"name": "tag",
											"source": 12,
											"value": "131"
										},
										{
											"begin": 6330,
											"end": 6354,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6325,
											"end": 6328,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6318,
											"end": 6355,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6243,
											"end": 6361,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6243,
											"end": 6361,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6243,
											"end": 6361,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 6367,
											"end": 6476,
											"name": "tag",
											"source": 12,
											"value": "133"
										},
										{
											"begin": 6367,
											"end": 6476,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6448,
											"end": 6469,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "135"
										},
										{
											"begin": 6463,
											"end": 6468,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6448,
											"end": 6469,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "136"
										},
										{
											"begin": 6448,
											"end": 6469,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 6448,
											"end": 6469,
											"name": "tag",
											"source": 12,
											"value": "135"
										},
										{
											"begin": 6448,
											"end": 6469,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6443,
											"end": 6446,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6436,
											"end": 6470,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6367,
											"end": 6476,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6367,
											"end": 6476,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6367,
											"end": 6476,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 6482,
											"end": 6597,
											"name": "tag",
											"source": 12,
											"value": "137"
										},
										{
											"begin": 6482,
											"end": 6597,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6567,
											"end": 6590,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "139"
										},
										{
											"begin": 6584,
											"end": 6589,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6567,
											"end": 6590,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "140"
										},
										{
											"begin": 6567,
											"end": 6590,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 6567,
											"end": 6590,
											"name": "tag",
											"source": 12,
											"value": "139"
										},
										{
											"begin": 6567,
											"end": 6590,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6562,
											"end": 6565,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6555,
											"end": 6591,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6482,
											"end": 6597,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6482,
											"end": 6597,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6482,
											"end": 6597,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 6603,
											"end": 6825,
											"name": "tag",
											"source": 12,
											"value": "23"
										},
										{
											"begin": 6603,
											"end": 6825,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6696,
											"end": 6700,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6734,
											"end": 6736,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6723,
											"end": 6732,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6719,
											"end": 6737,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6711,
											"end": 6737,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6711,
											"end": 6737,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6747,
											"end": 6818,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "142"
										},
										{
											"begin": 6815,
											"end": 6816,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6804,
											"end": 6813,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6800,
											"end": 6817,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6791,
											"end": 6797,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6747,
											"end": 6818,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "129"
										},
										{
											"begin": 6747,
											"end": 6818,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 6747,
											"end": 6818,
											"name": "tag",
											"source": 12,
											"value": "142"
										},
										{
											"begin": 6747,
											"end": 6818,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6603,
											"end": 6825,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6603,
											"end": 6825,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6603,
											"end": 6825,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6603,
											"end": 6825,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6603,
											"end": 6825,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 6831,
											"end": 7041,
											"name": "tag",
											"source": 12,
											"value": "13"
										},
										{
											"begin": 6831,
											"end": 7041,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6918,
											"end": 6922,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6956,
											"end": 6958,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6945,
											"end": 6954,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6941,
											"end": 6959,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6933,
											"end": 6959,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6933,
											"end": 6959,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6969,
											"end": 7034,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "144"
										},
										{
											"begin": 7031,
											"end": 7032,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7020,
											"end": 7029,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7016,
											"end": 7033,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7007,
											"end": 7013,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6969,
											"end": 7034,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "133"
										},
										{
											"begin": 6969,
											"end": 7034,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 6969,
											"end": 7034,
											"name": "tag",
											"source": 12,
											"value": "144"
										},
										{
											"begin": 6969,
											"end": 7034,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6831,
											"end": 7041,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6831,
											"end": 7041,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6831,
											"end": 7041,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6831,
											"end": 7041,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6831,
											"end": 7041,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 7047,
											"end": 7265,
											"name": "tag",
											"source": 12,
											"value": "19"
										},
										{
											"begin": 7047,
											"end": 7265,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7138,
											"end": 7142,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7176,
											"end": 7178,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7165,
											"end": 7174,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7161,
											"end": 7179,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7153,
											"end": 7179,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7153,
											"end": 7179,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7189,
											"end": 7258,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "146"
										},
										{
											"begin": 7255,
											"end": 7256,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7244,
											"end": 7253,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7240,
											"end": 7257,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7231,
											"end": 7237,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7189,
											"end": 7258,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "137"
										},
										{
											"begin": 7189,
											"end": 7258,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 7189,
											"end": 7258,
											"name": "tag",
											"source": 12,
											"value": "146"
										},
										{
											"begin": 7189,
											"end": 7258,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7047,
											"end": 7265,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7047,
											"end": 7265,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7047,
											"end": 7265,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7047,
											"end": 7265,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7047,
											"end": 7265,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 7271,
											"end": 7400,
											"name": "tag",
											"source": 12,
											"value": "49"
										},
										{
											"begin": 7271,
											"end": 7400,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7305,
											"end": 7311,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7332,
											"end": 7352,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "148"
										},
										{
											"begin": 7332,
											"end": 7352,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "149"
										},
										{
											"begin": 7332,
											"end": 7352,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 7332,
											"end": 7352,
											"name": "tag",
											"source": 12,
											"value": "148"
										},
										{
											"begin": 7332,
											"end": 7352,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7322,
											"end": 7352,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7322,
											"end": 7352,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7361,
											"end": 7394,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "150"
										},
										{
											"begin": 7389,
											"end": 7393,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7381,
											"end": 7387,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7361,
											"end": 7394,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "151"
										},
										{
											"begin": 7361,
											"end": 7394,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 7361,
											"end": 7394,
											"name": "tag",
											"source": 12,
											"value": "150"
										},
										{
											"begin": 7361,
											"end": 7394,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7271,
											"end": 7400,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7271,
											"end": 7400,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7271,
											"end": 7400,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7271,
											"end": 7400,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 7406,
											"end": 7481,
											"name": "tag",
											"source": 12,
											"value": "149"
										},
										{
											"begin": 7406,
											"end": 7481,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7439,
											"end": 7445,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7472,
											"end": 7474,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7466,
											"end": 7475,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 7456,
											"end": 7475,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7456,
											"end": 7475,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7406,
											"end": 7481,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7406,
											"end": 7481,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 7487,
											"end": 7798,
											"name": "tag",
											"source": 12,
											"value": "48"
										},
										{
											"begin": 7487,
											"end": 7798,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7564,
											"end": 7568,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7654,
											"end": 7672,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7646,
											"end": 7652,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7643,
											"end": 7673,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 7640,
											"end": 7696,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7640,
											"end": 7696,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "154"
										},
										{
											"begin": 7640,
											"end": 7696,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7676,
											"end": 7694,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "155"
										},
										{
											"begin": 7676,
											"end": 7694,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "156"
										},
										{
											"begin": 7676,
											"end": 7694,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 7676,
											"end": 7694,
											"name": "tag",
											"source": 12,
											"value": "155"
										},
										{
											"begin": 7676,
											"end": 7694,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7640,
											"end": 7696,
											"name": "tag",
											"source": 12,
											"value": "154"
										},
										{
											"begin": 7640,
											"end": 7696,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7726,
											"end": 7730,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7718,
											"end": 7724,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7714,
											"end": 7731,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 7706,
											"end": 7731,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7706,
											"end": 7731,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7786,
											"end": 7790,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7780,
											"end": 7784,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7776,
											"end": 7791,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7768,
											"end": 7791,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7768,
											"end": 7791,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7487,
											"end": 7798,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7487,
											"end": 7798,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7487,
											"end": 7798,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7487,
											"end": 7798,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 7804,
											"end": 8111,
											"name": "tag",
											"source": 12,
											"value": "62"
										},
										{
											"begin": 7804,
											"end": 8111,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7865,
											"end": 7869,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7955,
											"end": 7973,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7947,
											"end": 7953,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7944,
											"end": 7974,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 7941,
											"end": 7997,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7941,
											"end": 7997,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "158"
										},
										{
											"begin": 7941,
											"end": 7997,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7977,
											"end": 7995,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "159"
										},
										{
											"begin": 7977,
											"end": 7995,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "156"
										},
										{
											"begin": 7977,
											"end": 7995,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 7977,
											"end": 7995,
											"name": "tag",
											"source": 12,
											"value": "159"
										},
										{
											"begin": 7977,
											"end": 7995,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7941,
											"end": 7997,
											"name": "tag",
											"source": 12,
											"value": "158"
										},
										{
											"begin": 7941,
											"end": 7997,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8015,
											"end": 8044,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "160"
										},
										{
											"begin": 8037,
											"end": 8043,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8015,
											"end": 8044,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "161"
										},
										{
											"begin": 8015,
											"end": 8044,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 8015,
											"end": 8044,
											"name": "tag",
											"source": 12,
											"value": "160"
										},
										{
											"begin": 8015,
											"end": 8044,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8007,
											"end": 8044,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8007,
											"end": 8044,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8099,
											"end": 8103,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8093,
											"end": 8097,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8089,
											"end": 8104,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8081,
											"end": 8104,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8081,
											"end": 8104,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7804,
											"end": 8111,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7804,
											"end": 8111,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7804,
											"end": 8111,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7804,
											"end": 8111,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 8117,
											"end": 8213,
											"name": "tag",
											"source": 12,
											"value": "132"
										},
										{
											"begin": 8117,
											"end": 8213,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8154,
											"end": 8161,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8183,
											"end": 8207,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "163"
										},
										{
											"begin": 8201,
											"end": 8206,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8183,
											"end": 8207,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "164"
										},
										{
											"begin": 8183,
											"end": 8207,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 8183,
											"end": 8207,
											"name": "tag",
											"source": 12,
											"value": "163"
										},
										{
											"begin": 8183,
											"end": 8207,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8172,
											"end": 8207,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8172,
											"end": 8207,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8117,
											"end": 8213,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8117,
											"end": 8213,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8117,
											"end": 8213,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8117,
											"end": 8213,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 8219,
											"end": 8309,
											"name": "tag",
											"source": 12,
											"value": "136"
										},
										{
											"begin": 8219,
											"end": 8309,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8253,
											"end": 8260,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8296,
											"end": 8301,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8289,
											"end": 8302,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8282,
											"end": 8303,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8271,
											"end": 8303,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8271,
											"end": 8303,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8219,
											"end": 8309,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8219,
											"end": 8309,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8219,
											"end": 8309,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8219,
											"end": 8309,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 8315,
											"end": 8464,
											"name": "tag",
											"source": 12,
											"value": "140"
										},
										{
											"begin": 8315,
											"end": 8464,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8351,
											"end": 8358,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8391,
											"end": 8457,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8384,
											"end": 8389,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8380,
											"end": 8458,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8369,
											"end": 8458,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8369,
											"end": 8458,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8315,
											"end": 8464,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8315,
											"end": 8464,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8315,
											"end": 8464,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8315,
											"end": 8464,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 8470,
											"end": 8596,
											"name": "tag",
											"source": 12,
											"value": "164"
										},
										{
											"begin": 8470,
											"end": 8596,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8507,
											"end": 8514,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8547,
											"end": 8589,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8540,
											"end": 8545,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8536,
											"end": 8590,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8525,
											"end": 8590,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8525,
											"end": 8590,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8470,
											"end": 8596,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8470,
											"end": 8596,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8470,
											"end": 8596,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8470,
											"end": 8596,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 8602,
											"end": 8679,
											"name": "tag",
											"source": 12,
											"value": "168"
										},
										{
											"begin": 8602,
											"end": 8679,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8639,
											"end": 8646,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8668,
											"end": 8673,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8657,
											"end": 8673,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8657,
											"end": 8673,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8602,
											"end": 8679,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8602,
											"end": 8679,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8602,
											"end": 8679,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8602,
											"end": 8679,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 8685,
											"end": 8839,
											"name": "tag",
											"source": 12,
											"value": "67"
										},
										{
											"begin": 8685,
											"end": 8839,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8769,
											"end": 8775,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8764,
											"end": 8767,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8759,
											"end": 8762,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8746,
											"end": 8776,
											"name": "CALLDATACOPY",
											"source": 12
										},
										{
											"begin": 8831,
											"end": 8832,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8822,
											"end": 8828,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8817,
											"end": 8820,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8813,
											"end": 8829,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8806,
											"end": 8833,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8685,
											"end": 8839,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8685,
											"end": 8839,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8685,
											"end": 8839,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8685,
											"end": 8839,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 8845,
											"end": 9126,
											"name": "tag",
											"source": 12,
											"value": "151"
										},
										{
											"begin": 8845,
											"end": 9126,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8928,
											"end": 8955,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "172"
										},
										{
											"begin": 8950,
											"end": 8954,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8928,
											"end": 8955,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "161"
										},
										{
											"begin": 8928,
											"end": 8955,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 8928,
											"end": 8955,
											"name": "tag",
											"source": 12,
											"value": "172"
										},
										{
											"begin": 8928,
											"end": 8955,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8920,
											"end": 8926,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8916,
											"end": 8956,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9058,
											"end": 9064,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9046,
											"end": 9056,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9043,
											"end": 9065,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 9022,
											"end": 9040,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9010,
											"end": 9020,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9007,
											"end": 9041,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 9004,
											"end": 9066,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 9001,
											"end": 9089,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9001,
											"end": 9089,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "173"
										},
										{
											"begin": 9001,
											"end": 9089,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9069,
											"end": 9087,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "174"
										},
										{
											"begin": 9069,
											"end": 9087,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "156"
										},
										{
											"begin": 9069,
											"end": 9087,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 9069,
											"end": 9087,
											"name": "tag",
											"source": 12,
											"value": "174"
										},
										{
											"begin": 9069,
											"end": 9087,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9001,
											"end": 9089,
											"name": "tag",
											"source": 12,
											"value": "173"
										},
										{
											"begin": 9001,
											"end": 9089,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9109,
											"end": 9119,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9105,
											"end": 9107,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9098,
											"end": 9120,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8888,
											"end": 9126,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8845,
											"end": 9126,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8845,
											"end": 9126,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8845,
											"end": 9126,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 9132,
											"end": 9312,
											"name": "tag",
											"source": 12,
											"value": "156"
										},
										{
											"begin": 9132,
											"end": 9312,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9180,
											"end": 9257,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9177,
											"end": 9178,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9170,
											"end": 9258,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9277,
											"end": 9281,
											"name": "PUSH",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 9274,
											"end": 9275,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 9267,
											"end": 9282,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9301,
											"end": 9305,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 9298,
											"end": 9299,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9291,
											"end": 9306,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 9318,
											"end": 9435,
											"name": "tag",
											"source": 12,
											"value": "76"
										},
										{
											"begin": 9318,
											"end": 9435,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9427,
											"end": 9428,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9424,
											"end": 9425,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9417,
											"end": 9429,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 9441,
											"end": 9558,
											"name": "tag",
											"source": 12,
											"value": "52"
										},
										{
											"begin": 9441,
											"end": 9558,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9550,
											"end": 9551,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9547,
											"end": 9548,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9540,
											"end": 9552,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 9564,
											"end": 9681,
											"name": "tag",
											"source": 12,
											"value": "65"
										},
										{
											"begin": 9564,
											"end": 9681,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9673,
											"end": 9674,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9670,
											"end": 9671,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9663,
											"end": 9675,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 9687,
											"end": 9804,
											"name": "tag",
											"source": 12,
											"value": "98"
										},
										{
											"begin": 9687,
											"end": 9804,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9796,
											"end": 9797,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9793,
											"end": 9794,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9786,
											"end": 9798,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 9810,
											"end": 9927,
											"name": "tag",
											"source": 12,
											"value": "93"
										},
										{
											"begin": 9810,
											"end": 9927,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9919,
											"end": 9920,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9916,
											"end": 9917,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9909,
											"end": 9921,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 9933,
											"end": 10035,
											"name": "tag",
											"source": 12,
											"value": "161"
										},
										{
											"begin": 9933,
											"end": 10035,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9974,
											"end": 9980,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10025,
											"end": 10027,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 10021,
											"end": 10028,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 10016,
											"end": 10018,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 10009,
											"end": 10014,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10005,
											"end": 10019,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10001,
											"end": 10029,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9991,
											"end": 10029,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9991,
											"end": 10029,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9933,
											"end": 10035,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9933,
											"end": 10035,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9933,
											"end": 10035,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9933,
											"end": 10035,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 10041,
											"end": 10163,
											"name": "tag",
											"source": 12,
											"value": "71"
										},
										{
											"begin": 10041,
											"end": 10163,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10114,
											"end": 10138,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "183"
										},
										{
											"begin": 10132,
											"end": 10137,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10114,
											"end": 10138,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "132"
										},
										{
											"begin": 10114,
											"end": 10138,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 10114,
											"end": 10138,
											"name": "tag",
											"source": 12,
											"value": "183"
										},
										{
											"begin": 10114,
											"end": 10138,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10107,
											"end": 10112,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10104,
											"end": 10139,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 10094,
											"end": 10157,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "184"
										},
										{
											"begin": 10094,
											"end": 10157,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10153,
											"end": 10154,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10150,
											"end": 10151,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10143,
											"end": 10155,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 10094,
											"end": 10157,
											"name": "tag",
											"source": 12,
											"value": "184"
										},
										{
											"begin": 10094,
											"end": 10157,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10041,
											"end": 10163,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10041,
											"end": 10163,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 10169,
											"end": 10289,
											"name": "tag",
											"source": 12,
											"value": "81"
										},
										{
											"begin": 10169,
											"end": 10289,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10241,
											"end": 10264,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "186"
										},
										{
											"begin": 10258,
											"end": 10263,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10241,
											"end": 10264,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "140"
										},
										{
											"begin": 10241,
											"end": 10264,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 10241,
											"end": 10264,
											"name": "tag",
											"source": 12,
											"value": "186"
										},
										{
											"begin": 10241,
											"end": 10264,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10234,
											"end": 10239,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10231,
											"end": 10265,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 10221,
											"end": 10283,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "187"
										},
										{
											"begin": 10221,
											"end": 10283,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10279,
											"end": 10280,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10276,
											"end": 10277,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10269,
											"end": 10281,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 10221,
											"end": 10283,
											"name": "tag",
											"source": 12,
											"value": "187"
										},
										{
											"begin": 10221,
											"end": 10283,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10169,
											"end": 10289,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10169,
											"end": 10289,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 10295,
											"end": 10417,
											"name": "tag",
											"source": 12,
											"value": "89"
										},
										{
											"begin": 10295,
											"end": 10417,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10368,
											"end": 10392,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "189"
										},
										{
											"begin": 10386,
											"end": 10391,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10368,
											"end": 10392,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "168"
										},
										{
											"begin": 10368,
											"end": 10392,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 10368,
											"end": 10392,
											"name": "tag",
											"source": 12,
											"value": "189"
										},
										{
											"begin": 10368,
											"end": 10392,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10361,
											"end": 10366,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10358,
											"end": 10393,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 10348,
											"end": 10411,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "190"
										},
										{
											"begin": 10348,
											"end": 10411,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10407,
											"end": 10408,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10404,
											"end": 10405,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10397,
											"end": 10409,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 10348,
											"end": 10411,
											"name": "tag",
											"source": 12,
											"value": "190"
										},
										{
											"begin": 10348,
											"end": 10411,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10295,
											"end": 10417,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10295,
											"end": 10417,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"onERC721Received(address,address,uint256,bytes)": "150b7a02",
							"owner()": "8da5cb5b",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Pratice2nd.sol\":\"TwoFactor\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x8e93de94c9062ebc94fb7e2e3929b0781ac6a2b7772e2f7a59045861c93e5be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f920a631bf986c610fe573d3c70a2bb6f224f86f4a8550016470c7ee476c9ab5\",\"dweb:/ipfs/QmYzsyVMfnaREKHcHv5RPS8Xg5r1Q38E2SDsGBTnXeFWzb\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":{\"keccak256\":\"0x2e024ca51ce5abe16c0d34e6992a1104f356e2244eb4ccbec970435e8b3405e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a74009db3c6fc8db851ba69ddb6795b5c1ef1120c5a00fd1a8dc3a717dd9d519\",\"dweb:/ipfs/QmZMk8Yh2X3gPS51ckUVLEXjZUhMSEeGApnA53WtjvLb9h\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":{\"keccak256\":\"0x3dd5e1a66a56f30302108a1da97d677a42b1daa60e503696b2bcbbf3e4c95bcb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0808de0ae4918c664643c885ca7fa6503e8ef2bd75609dfc85152c0128a3422d\",\"dweb:/ipfs/QmNrhFC1XgBKuuxfahFeiwi1MCdu3FLNpHj2uStgmf4iJj\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x0d4de01fe5360c38b4ad2b0822a12722958428f5138a7ff47c1720eb6fa52bba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77724cecdfba8814632ab58737c2b0f2d4ad2d532bc614aee559b5593c1152f0\",\"dweb:/ipfs/QmUcE6gXyv7CQh4sUdcDABYKGTovTe1zLMZSEq95nkc3ph\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":{\"keccak256\":\"0x0108bf6a6ebd5f96678bed33a35947537263f96766131ee91461fb6485805028\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ae2d274bf3d56a6d49a9bbd0a4871c54997a82551eb3eb1c0c39dc98698ff8bf\",\"dweb:/ipfs/QmTT7ty5DPGAmRnx94Xu3TUDYGSPDVLN2bppJAjjedrg1e\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"Ownable.sol\":{\"keccak256\":\"0x27859030a47f274f647c726d7154207782f41c299a471ad984fb937a96726e9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://03dc74c9002f66b328d3cf2146f8684fe1a4574b771948933a39ecda1467ab89\",\"dweb:/ipfs/QmPJq3SLdXqcbaejBs6UxANXkaYryGwjBSixR2CcWzVgQw\"]},\"Pratice2nd.sol\":{\"keccak256\":\"0xe5b407279dd94b31688d39a3579d48a88aa579ce836c7bba8e01f5f731beeb35\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bcbb9920c9155551e03b80663729e1cd8a2a55e59b01280877068f0f3fb063ec\",\"dweb:/ipfs/QmatijwHEoU2SDCiqCbw2bTeM4coSnYb9d9w1VYEkg1yrV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 474,
								"contract": "Pratice2nd.sol:TwoFactor",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
					"exportedSymbols": {
						"IERC1155": [
							121
						],
						"IERC165": [
							466
						]
					},
					"id": 122,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "95:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 122,
							"sourceUnit": 467,
							"src": "120:47:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 466,
										"src": "357:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "357:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "169:165:0",
								"text": " @dev Required interface of an ERC1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[EIP].\n _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 121,
							"linearizedBaseContracts": [
								121,
								466
							],
							"name": "IERC1155",
							"nameLocation": "345:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 6,
										"nodeType": "StructuredDocumentation",
										"src": "371:121:0",
										"text": " @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
									},
									"id": 18,
									"name": "TransferSingle",
									"nameLocation": "503:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "534:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "518:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 7,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "518:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 10,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "560:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "544:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 9,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "544:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 12,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "582:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "566:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 11,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "566:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 14,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "594:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "586:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "586:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "606:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "598:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 15,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "598:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "517:95:0"
									},
									"src": "497:116:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 19,
										"nodeType": "StructuredDocumentation",
										"src": "619:144:0",
										"text": " @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."
									},
									"id": 33,
									"name": "TransferBatch",
									"nameLocation": "774:13:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "813:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "797:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 20,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "797:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 23,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "847:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "831:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 22,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "831:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 25,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "877:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "861:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 24,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "861:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"indexed": false,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "899:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "889:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 26,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "889:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 27,
													"nodeType": "ArrayTypeName",
													"src": "889:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 31,
												"indexed": false,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "922:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "912:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 29,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "912:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 30,
													"nodeType": "ArrayTypeName",
													"src": "912:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "787:147:0"
									},
									"src": "768:167:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 34,
										"nodeType": "StructuredDocumentation",
										"src": "941:147:0",
										"text": " @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."
									},
									"id": 42,
									"name": "ApprovalForAll",
									"nameLocation": "1099:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 36,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1130:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "1114:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 35,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1114:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1155:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "1139:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1139:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 40,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "1170:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "1165:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 39,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1165:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1113:66:0"
									},
									"src": "1093:87:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "1186:343:0",
										"text": " @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."
									},
									"id": 49,
									"name": "URI",
									"nameLocation": "1540:3:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1551:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 49,
												"src": "1544:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 44,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1544:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 47,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1574:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 49,
												"src": "1558:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 46,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1558:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1543:34:0"
									},
									"src": "1534:44:0"
								},
								{
									"documentation": {
										"id": 50,
										"nodeType": "StructuredDocumentation",
										"src": "1584:173:0",
										"text": " @dev Returns the amount of tokens of token type `id` owned by `account`.\n Requirements:\n - `account` cannot be the zero address."
									},
									"functionSelector": "00fdd58e",
									"id": 59,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1771:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1789:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "1781:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 51,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1781:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1806:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "1798:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 53,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1798:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1780:29:0"
									},
									"returnParameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "1833:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1833:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1832:9:0"
									},
									"scope": 121,
									"src": "1762:80:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 60,
										"nodeType": "StructuredDocumentation",
										"src": "1848:188:0",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 72,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "2050:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "2084:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "2065:27:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 61,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2065:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 62,
													"nodeType": "ArrayTypeName",
													"src": "2065:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2113:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "2094:22:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 64,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2094:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 65,
													"nodeType": "ArrayTypeName",
													"src": "2094:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2064:53:0"
									},
									"returnParameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "2165:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 68,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2165:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 69,
													"nodeType": "ArrayTypeName",
													"src": "2165:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2164:18:0"
									},
									"scope": 121,
									"src": "2041:142:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 73,
										"nodeType": "StructuredDocumentation",
										"src": "2189:248:0",
										"text": " @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the caller."
									},
									"functionSelector": "a22cb465",
									"id": 80,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "2451:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2477:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2469:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 74,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "2492:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2487:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 76,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2487:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:33:0"
									},
									"returnParameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2510:0:0"
									},
									"scope": 121,
									"src": "2442:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "2517:135:0",
										"text": " @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 90,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "2666:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2691:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "2683:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2683:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2708:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "2700:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 84,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2700:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2682:35:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 88,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "2741:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 87,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2741:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2740:6:0"
									},
									"scope": 121,
									"src": "2657:90:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "2753:559:0",
										"text": " @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `amount`.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"functionSelector": "f242432a",
									"id": 104,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3326:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3360:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "3352:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3352:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3382:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "3374:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 94,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3374:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3402:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "3394:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3394:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3422:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "3414:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3414:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3453:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "3438:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 100,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3438:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3342:121:0"
									},
									"returnParameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3472:0:0"
									},
									"scope": 121,
									"src": "3317:156:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 105,
										"nodeType": "StructuredDocumentation",
										"src": "3479:390:0",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `amounts` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"functionSelector": "2eb2c2d6",
									"id": 120,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "3883:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3922:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "3914:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 106,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3914:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3944:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "3936:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3936:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "3975:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "3956:22:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 110,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3956:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 111,
													"nodeType": "ArrayTypeName",
													"src": "3956:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "4007:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "3988:26:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 113,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3988:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 114,
													"nodeType": "ArrayTypeName",
													"src": "3988:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4039:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "4024:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 116,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4024:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3904:145:0"
									},
									"returnParameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4058:0:0"
									},
									"scope": 121,
									"src": "3874:185:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 122,
							"src": "335:3726:0",
							"usedErrors": []
						}
					],
					"src": "95:3967:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
					"exportedSymbols": {
						"IERC1155Receiver": [
							162
						],
						"IERC165": [
							466
						]
					},
					"id": 163,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 123,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "118:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 124,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 163,
							"sourceUnit": 467,
							"src": "143:47:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 126,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 466,
										"src": "262:7:1"
									},
									"id": 127,
									"nodeType": "InheritanceSpecifier",
									"src": "262:7:1"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 125,
								"nodeType": "StructuredDocumentation",
								"src": "192:39:1",
								"text": " @dev _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 162,
							"linearizedBaseContracts": [
								162,
								466
							],
							"name": "IERC1155Receiver",
							"nameLocation": "242:16:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 128,
										"nodeType": "StructuredDocumentation",
										"src": "276:826:1",
										"text": " @dev Handles the receipt of a single ERC1155 token type. This function is\n called at the end of a `safeTransferFrom` after the balance has been updated.\n NOTE: To accept the transfer, this must return\n `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n (i.e. 0xf23a6e61, or its own function selector).\n @param operator The address which initiated the transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param id The ID of the token being transferred\n @param value The amount of tokens being transferred\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "f23a6e61",
									"id": 143,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155Received",
									"nameLocation": "1116:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 130,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1151:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "1143:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 129,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1143:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1177:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "1169:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 131,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1169:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1199:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "1191:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 133,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1191:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1219:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "1211:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1249:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "1234:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 137,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1234:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1133:126:1"
									},
									"returnParameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 141,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "1278:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 140,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1278:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1277:8:1"
									},
									"scope": 162,
									"src": "1107:179:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 144,
										"nodeType": "StructuredDocumentation",
										"src": "1292:994:1",
										"text": " @dev Handles the receipt of a multiple ERC1155 token types. This function\n is called at the end of a `safeBatchTransferFrom` after the balances have\n been updated.\n NOTE: To accept the transfer(s), this must return\n `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n (i.e. 0xbc197c81, or its own function selector).\n @param operator The address which initiated the batch transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param ids An array containing ids of each token being transferred (order and length must match values array)\n @param values An array containing amounts of each token being transferred (order and length must match ids array)\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "bc197c81",
									"id": 161,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155BatchReceived",
									"nameLocation": "2300:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2340:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "2332:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 145,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2332:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2366:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "2358:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2358:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2399:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "2380:22:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 149,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2380:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 150,
													"nodeType": "ArrayTypeName",
													"src": "2380:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "2431:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "2412:25:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 152,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2412:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 153,
													"nodeType": "ArrayTypeName",
													"src": "2412:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2462:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "2447:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 155,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2447:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:150:1"
									},
									"returnParameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "2491:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 158,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2491:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2490:8:1"
									},
									"scope": 162,
									"src": "2291:208:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 163,
							"src": "232:2269:1",
							"usedErrors": []
						}
					],
					"src": "118:2384:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol",
					"exportedSymbols": {
						"ERC1155Holder": [
							213
						],
						"ERC1155Receiver": [
							247
						],
						"ERC165": [
							454
						],
						"IERC1155Receiver": [
							162
						],
						"IERC165": [
							466
						]
					},
					"id": 214,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 164,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "121:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol",
							"file": "./ERC1155Receiver.sol",
							"id": 165,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 214,
							"sourceUnit": 248,
							"src": "146:31:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 167,
										"name": "ERC1155Receiver",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 247,
										"src": "477:15:2"
									},
									"id": 168,
									"nodeType": "InheritanceSpecifier",
									"src": "477:15:2"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 166,
								"nodeType": "StructuredDocumentation",
								"src": "179:271:2",
								"text": " Simple implementation of `ERC1155Receiver` that will allow a contract to hold ERC1155 tokens.\n IMPORTANT: When inheriting this contract, you must include a way to use the received tokens, otherwise they will be\n stuck.\n @dev _Available since v3.1._"
							},
							"fullyImplemented": true,
							"id": 213,
							"linearizedBaseContracts": [
								213,
								247,
								162,
								454,
								466
							],
							"name": "ERC1155Holder",
							"nameLocation": "460:13:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										143
									],
									"body": {
										"id": 188,
										"nodeType": "Block",
										"src": "663:55:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 184,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967268,
															"src": "680:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC1155Holder_$213",
																"typeString": "contract ERC1155Holder"
															}
														},
														"id": 185,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "onERC1155Received",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 189,
														"src": "680:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
															"typeString": "function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"
														}
													},
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberName": "selector",
													"nodeType": "MemberAccess",
													"src": "680:31:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"functionReturnParameters": 183,
												"id": 187,
												"nodeType": "Return",
												"src": "673:38:2"
											}
										]
									},
									"functionSelector": "f23a6e61",
									"id": 189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155Received",
									"nameLocation": "508:17:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 180,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "637:8:2"
									},
									"parameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "535:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 169,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "535:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "552:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "552:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "569:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "569:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "586:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "586:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "603:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 177,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "603:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "525:96:2"
									},
									"returnParameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "655:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 181,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "655:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:8:2"
									},
									"scope": 213,
									"src": "499:219:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										161
									],
									"body": {
										"id": 211,
										"nodeType": "Block",
										"src": "911:60:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 207,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967268,
															"src": "928:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC1155Holder_$213",
																"typeString": "contract ERC1155Holder"
															}
														},
														"id": 208,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "onERC1155BatchReceived",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 212,
														"src": "928:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"
														}
													},
													"id": 209,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberName": "selector",
													"nodeType": "MemberAccess",
													"src": "928:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"functionReturnParameters": 206,
												"id": 210,
												"nodeType": "Return",
												"src": "921:43:2"
											}
										]
									},
									"functionSelector": "bc197c81",
									"id": 212,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155BatchReceived",
									"nameLocation": "733:22:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 203,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "885:8:2"
									},
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "765:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 190,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "765:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "782:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "782:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "799:16:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 194,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "799:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 195,
													"nodeType": "ArrayTypeName",
													"src": "799:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "825:16:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 197,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "825:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 198,
													"nodeType": "ArrayTypeName",
													"src": "825:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "851:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 200,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "851:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "755:114:2"
									},
									"returnParameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "903:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 204,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "903:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "902:8:2"
									},
									"scope": 213,
									"src": "724:247:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 214,
							"src": "451:522:2",
							"usedErrors": []
						}
					],
					"src": "121:853:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol",
					"exportedSymbols": {
						"ERC1155Receiver": [
							247
						],
						"ERC165": [
							454
						],
						"IERC1155Receiver": [
							162
						],
						"IERC165": [
							466
						]
					},
					"id": 248,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 215,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
							"file": "../IERC1155Receiver.sol",
							"id": 216,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 248,
							"sourceUnit": 163,
							"src": "133:33:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../../utils/introspection/ERC165.sol",
							"id": 217,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 248,
							"sourceUnit": 455,
							"src": "167:49:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 219,
										"name": "ERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 454,
										"src": "295:6:3"
									},
									"id": 220,
									"nodeType": "InheritanceSpecifier",
									"src": "295:6:3"
								},
								{
									"baseName": {
										"id": 221,
										"name": "IERC1155Receiver",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 162,
										"src": "303:16:3"
									},
									"id": 222,
									"nodeType": "InheritanceSpecifier",
									"src": "303:16:3"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 218,
								"nodeType": "StructuredDocumentation",
								"src": "218:39:3",
								"text": " @dev _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 247,
							"linearizedBaseContracts": [
								247,
								162,
								454,
								466
							],
							"name": "ERC1155Receiver",
							"nameLocation": "276:15:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										453,
										465
									],
									"body": {
										"id": 245,
										"nodeType": "Block",
										"src": "495:113:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 238,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 233,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 225,
															"src": "512:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 235,
																		"name": "IERC1155Receiver",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 162,
																		"src": "532:16:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$162_$",
																			"typeString": "type(contract IERC1155Receiver)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$162_$",
																			"typeString": "type(contract IERC1155Receiver)"
																		}
																	],
																	"id": 234,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "527:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 236,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "527:22:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155Receiver_$162",
																	"typeString": "type(contract IERC1155Receiver)"
																}
															},
															"id": 237,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "527:34:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "512:49:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 241,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 225,
																"src": "589:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 239,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "565:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC1155Receiver_$247_$",
																	"typeString": "type(contract super ERC1155Receiver)"
																}
															},
															"id": 240,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 453,
															"src": "565:23:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 242,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "565:36:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "512:89:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 232,
												"id": 244,
												"nodeType": "Return",
												"src": "505:96:3"
											}
										]
									},
									"documentation": {
										"id": 223,
										"nodeType": "StructuredDocumentation",
										"src": "326:56:3",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 246,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "396:17:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 229,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 227,
												"name": "ERC165",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 454,
												"src": "463:6:3"
											},
											{
												"id": 228,
												"name": "IERC165",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 466,
												"src": "471:7:3"
											}
										],
										"src": "454:25:3"
									},
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "421:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "414:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 224,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "414:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "413:20:3"
									},
									"returnParameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "489:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 230,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "489:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "488:6:3"
									},
									"scope": 247,
									"src": "387:221:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 248,
							"src": "258:352:3",
							"usedErrors": []
						}
					],
					"src": "108:503:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							466
						],
						"IERC721": [
							363
						]
					},
					"id": 364,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 249,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 250,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 364,
							"sourceUnit": 467,
							"src": "133:47:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 252,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 466,
										"src": "271:7:4"
									},
									"id": 253,
									"nodeType": "InheritanceSpecifier",
									"src": "271:7:4"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 251,
								"nodeType": "StructuredDocumentation",
								"src": "182:67:4",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 363,
							"linearizedBaseContracts": [
								363,
								466
							],
							"name": "IERC721",
							"nameLocation": "260:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 254,
										"nodeType": "StructuredDocumentation",
										"src": "285:88:4",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"id": 262,
									"name": "Transfer",
									"nameLocation": "384:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 256,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "409:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "393:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 255,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "393:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 258,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "431:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "415:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 257,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "415:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 260,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "451:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "435:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "435:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "392:67:4"
									},
									"src": "378:82:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 263,
										"nodeType": "StructuredDocumentation",
										"src": "466:94:4",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"id": 271,
									"name": "Approval",
									"nameLocation": "571:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "596:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "580:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 264,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "580:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "619:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "603:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 266,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "603:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 269,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "645:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "629:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "629:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "579:74:4"
									},
									"src": "565:89:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "660:117:4",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"id": 280,
									"name": "ApprovalForAll",
									"nameLocation": "788:14:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "819:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "803:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "803:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 276,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "842:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "826:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 275,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "826:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 278,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "857:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "852:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 277,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "852:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "802:64:4"
									},
									"src": "782:85:4"
								},
								{
									"documentation": {
										"id": 281,
										"nodeType": "StructuredDocumentation",
										"src": "873:76:4",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 288,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "963:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "981:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 288,
												"src": "973:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 282,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "973:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "972:15:4"
									},
									"returnParameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1019:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 288,
												"src": "1011:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 285,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1010:17:4"
									},
									"scope": 363,
									"src": "954:74:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 289,
										"nodeType": "StructuredDocumentation",
										"src": "1034:131:4",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 296,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1179:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1195:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "1187:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 290,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1187:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1186:17:4"
									},
									"returnParameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1235:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "1227:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 293,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1227:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1226:15:4"
									},
									"scope": 363,
									"src": "1170:72:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 297,
										"nodeType": "StructuredDocumentation",
										"src": "1248:556:4",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 308,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1818:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 299,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1852:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "1844:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 298,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1844:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1874:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "1866:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1866:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1894:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "1886:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 302,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1926:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "1911:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 304,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1911:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1834:102:4"
									},
									"returnParameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1945:0:4"
									},
									"scope": 363,
									"src": "1809:137:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "1952:690:4",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 318,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2656:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2690:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "2682:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 310,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2682:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2712:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "2704:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 312,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2704:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2732:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "2724:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 314,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2724:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2672:73:4"
									},
									"returnParameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2754:0:4"
									},
									"scope": 363,
									"src": "2647:108:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 319,
										"nodeType": "StructuredDocumentation",
										"src": "2761:504:4",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 328,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3279:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3309:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "3301:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 320,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3301:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3331:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "3323:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 322,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3323:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 325,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3351:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "3343:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 324,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3343:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3291:73:4"
									},
									"returnParameters": {
										"id": 327,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3373:0:4"
									},
									"scope": 363,
									"src": "3270:104:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 329,
										"nodeType": "StructuredDocumentation",
										"src": "3380:452:4",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 336,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3846:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3862:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "3854:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3854:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3874:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "3866:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3866:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3853:29:4"
									},
									"returnParameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3891:0:4"
									},
									"scope": 363,
									"src": "3837:55:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "3898:309:4",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 344,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4221:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4247:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "4239:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4239:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "4262:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "4257:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 340,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4257:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4238:34:4"
									},
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4281:0:4"
									},
									"scope": 363,
									"src": "4212:70:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 345,
										"nodeType": "StructuredDocumentation",
										"src": "4288:139:4",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 352,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4441:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4461:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "4453:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 346,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4453:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4452:17:4"
									},
									"returnParameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4501:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "4493:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 349,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4493:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4492:18:4"
									},
									"scope": 363,
									"src": "4432:79:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 353,
										"nodeType": "StructuredDocumentation",
										"src": "4517:138:4",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 362,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4669:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4694:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "4686:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 354,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4686:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4709:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "4701:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 356,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4701:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4685:33:4"
									},
									"returnParameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "4742:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 359,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4742:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4741:6:4"
									},
									"scope": 363,
									"src": "4660:88:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 364,
							"src": "250:4500:4",
							"usedErrors": []
						}
					],
					"src": "108:4643:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							381
						]
					},
					"id": 382,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 365,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "116:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 366,
								"nodeType": "StructuredDocumentation",
								"src": "141:152:5",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 381,
							"linearizedBaseContracts": [
								381
							],
							"name": "IERC721Receiver",
							"nameLocation": "304:15:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 367,
										"nodeType": "StructuredDocumentation",
										"src": "326:493:5",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 380,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "833:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "867:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "859:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 368,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "859:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "893:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "885:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 370,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "885:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "915:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "907:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 372,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "907:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "947:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "932:19:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 374,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "932:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:108:5"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "976:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 377,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "976:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "975:8:5"
									},
									"scope": 381,
									"src": "824:160:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 382,
							"src": "294:692:5",
							"usedErrors": []
						}
					],
					"src": "116:871:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol",
					"exportedSymbols": {
						"ERC721Holder": [
							408
						],
						"IERC721Receiver": [
							381
						]
					},
					"id": 409,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 383,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "104:23:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"file": "../IERC721Receiver.sol",
							"id": 384,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 409,
							"sourceUnit": 382,
							"src": "129:32:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 386,
										"name": "IERC721Receiver",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 381,
										"src": "424:15:6"
									},
									"id": 387,
									"nodeType": "InheritanceSpecifier",
									"src": "424:15:6"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 385,
								"nodeType": "StructuredDocumentation",
								"src": "163:235:6",
								"text": " @dev Implementation of the {IERC721Receiver} interface.\n Accepts all token transfers.\n Make sure the contract is able to use its token with {IERC721-safeTransferFrom}, {IERC721-approve} or {IERC721-setApprovalForAll}."
							},
							"fullyImplemented": true,
							"id": 408,
							"linearizedBaseContracts": [
								408,
								381
							],
							"name": "ERC721Holder",
							"nameLocation": "408:12:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										380
									],
									"body": {
										"id": 406,
										"nodeType": "Block",
										"src": "734:54:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 402,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967268,
															"src": "751:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC721Holder_$408",
																"typeString": "contract ERC721Holder"
															}
														},
														"id": 403,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "onERC721Received",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 407,
														"src": "751:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
															"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberName": "selector",
													"nodeType": "MemberAccess",
													"src": "751:30:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"functionReturnParameters": 401,
												"id": 405,
												"nodeType": "Return",
												"src": "744:37:6"
											}
										]
									},
									"documentation": {
										"id": 388,
										"nodeType": "StructuredDocumentation",
										"src": "446:137:6",
										"text": " @dev See {IERC721Receiver-onERC721Received}.\n Always returns `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 407,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "597:16:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 398,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "708:8:6"
									},
									"parameters": {
										"id": 397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "623:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "623:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "640:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 391,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "640:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "657:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 393,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "674:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 395,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "613:79:6"
									},
									"returnParameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "726:6:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 399,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "726:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "725:8:6"
									},
									"scope": 408,
									"src": "588:200:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 409,
							"src": "399:391:6",
							"usedErrors": []
						}
					],
					"src": "104:687:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							430
						]
					},
					"id": 431,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 410,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:7"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 411,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:7",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 430,
							"linearizedBaseContracts": [
								430
							],
							"name": "Context",
							"nameLocation": "626:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 419,
										"nodeType": "Block",
										"src": "702:34:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 416,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 415,
												"id": 418,
												"nodeType": "Return",
												"src": "712:17:7"
											}
										]
									},
									"id": 420,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:7"
									},
									"returnParameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "693:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:7"
									},
									"scope": 430,
									"src": "640:96:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 428,
										"nodeType": "Block",
										"src": "809:32:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 425,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 424,
												"id": 427,
												"nodeType": "Return",
												"src": "819:15:7"
											}
										]
									},
									"id": 429,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:7"
									},
									"returnParameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 429,
												"src": "793:14:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 422,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:7"
									},
									"scope": 430,
									"src": "742:99:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 431,
							"src": "608:235:7",
							"usedErrors": []
						}
					],
					"src": "86:758:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							454
						],
						"IERC165": [
							466
						]
					},
					"id": 455,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 432,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "99:23:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 433,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 455,
							"sourceUnit": 467,
							"src": "124:23:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 435,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 466,
										"src": "754:7:8"
									},
									"id": 436,
									"nodeType": "InheritanceSpecifier",
									"src": "754:7:8"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 434,
								"nodeType": "StructuredDocumentation",
								"src": "149:576:8",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 454,
							"linearizedBaseContracts": [
								454,
								466
							],
							"name": "ERC165",
							"nameLocation": "744:6:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										465
									],
									"body": {
										"id": 452,
										"nodeType": "Block",
										"src": "920:64:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 445,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 439,
														"src": "937:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 447,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 466,
																	"src": "957:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$466_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$466_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 446,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "952:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 448,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "952:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$466",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 449,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "952:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "937:40:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 444,
												"id": 451,
												"nodeType": "Return",
												"src": "930:47:8"
											}
										]
									},
									"documentation": {
										"id": 437,
										"nodeType": "StructuredDocumentation",
										"src": "768:56:8",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 453,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "838:17:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 441,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "896:8:8"
									},
									"parameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "863:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "856:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 438,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "856:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "855:20:8"
									},
									"returnParameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "914:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 442,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "914:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "913:6:8"
									},
									"scope": 454,
									"src": "829:155:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 455,
							"src": "726:260:8",
							"usedErrors": []
						}
					],
					"src": "99:888:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							466
						]
					},
					"id": 467,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 456,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 457,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:9",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 466,
							"linearizedBaseContracts": [
								466
							],
							"name": "IERC165",
							"nameLocation": "415:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 458,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:9",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 465,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "801:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 459,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:9"
									},
									"returnParameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "844:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 462,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:9"
									},
									"scope": 466,
									"src": "774:76:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 467,
							"src": "405:447:9",
							"usedErrors": []
						}
					],
					"src": "100:753:9"
				},
				"id": 9
			},
			"Ownable.sol": {
				"ast": {
					"absolutePath": "Ownable.sol",
					"exportedSymbols": {
						"Context": [
							430
						],
						"Ownable": [
							534
						]
					},
					"id": 535,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 468,
							"literals": [
								"solidity",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "32:22:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "@openzeppelin/contracts/utils/Context.sol",
							"id": 469,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 535,
							"sourceUnit": 431,
							"src": "55:51:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 471,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 430,
										"src": "543:7:10"
									},
									"id": 472,
									"nodeType": "InheritanceSpecifier",
									"src": "543:7:10"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 470,
								"nodeType": "StructuredDocumentation",
								"src": "107:406:10",
								"text": " @dev This contract module is inspired from \n https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\n OpenZepplin Ownable contract. The code is forked from Ownable except \n 2 functions i.e. renounce and transfer ownership. In our usecase, we do not require users \n to transfer or renounce ownership as it is always aligned with the original user."
							},
							"fullyImplemented": true,
							"id": 534,
							"linearizedBaseContracts": [
								534,
								430
							],
							"name": "Ownable",
							"nameLocation": "532:7:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 474,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "573:6:10",
									"nodeType": "VariableDeclaration",
									"scope": 534,
									"src": "557:22:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 473,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "557:7:10",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 480,
									"name": "OwnershipTransferred",
									"nameLocation": "592:20:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 476,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "638:13:10",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "622:29:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 475,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "622:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 478,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "677:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "661:24:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 477,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "661:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "612:79:10"
									},
									"src": "586:106:10"
								},
								{
									"body": {
										"id": 489,
										"nodeType": "Block",
										"src": "808:49:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 485,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 420,
																"src": "837:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 486,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "837:12:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 484,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 533,
														"src": "818:18:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "818:32:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 488,
												"nodeType": "ExpressionStatement",
												"src": "818:32:10"
											}
										]
									},
									"documentation": {
										"id": 481,
										"nodeType": "StructuredDocumentation",
										"src": "698:91:10",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 490,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "805:2:10"
									},
									"returnParameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "808:0:10"
									},
									"scope": 534,
									"src": "794:63:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 498,
										"nodeType": "Block",
										"src": "988:30:10",
										"statements": [
											{
												"expression": {
													"id": 496,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 474,
													"src": "1005:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 495,
												"id": 497,
												"nodeType": "Return",
												"src": "998:13:10"
											}
										]
									},
									"documentation": {
										"id": 491,
										"nodeType": "StructuredDocumentation",
										"src": "863:65:10",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 499,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "942:5:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "947:2:10"
									},
									"returnParameters": {
										"id": 495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "979:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "979:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "978:9:10"
									},
									"scope": 534,
									"src": "933:85:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 512,
										"nodeType": "Block",
										"src": "1127:96:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 507,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 503,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 499,
																	"src": "1145:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 504,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1145:7:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 505,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 420,
																	"src": "1156:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 506,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1156:12:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1145:23:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 508,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1170:34:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 502,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1137:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1137:68:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 510,
												"nodeType": "ExpressionStatement",
												"src": "1137:68:10"
											},
											{
												"id": 511,
												"nodeType": "PlaceholderStatement",
												"src": "1215:1:10"
											}
										]
									},
									"documentation": {
										"id": 500,
										"nodeType": "StructuredDocumentation",
										"src": "1024:77:10",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 513,
									"name": "onlyOwner",
									"nameLocation": "1115:9:10",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1124:2:10"
									},
									"src": "1106:117:10",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 532,
										"nodeType": "Block",
										"src": "1440:124:10",
										"statements": [
											{
												"assignments": [
													520
												],
												"declarations": [
													{
														"constant": false,
														"id": 520,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "1458:8:10",
														"nodeType": "VariableDeclaration",
														"scope": 532,
														"src": "1450:16:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 519,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1450:7:10",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 522,
												"initialValue": {
													"id": 521,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 474,
													"src": "1469:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1450:25:10"
											},
											{
												"expression": {
													"id": 525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 523,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 474,
														"src": "1485:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 524,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 516,
														"src": "1494:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1485:17:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 526,
												"nodeType": "ExpressionStatement",
												"src": "1485:17:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 528,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 520,
															"src": "1538:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 529,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 516,
															"src": "1548:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 527,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 480,
														"src": "1517:20:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1517:40:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 531,
												"nodeType": "EmitStatement",
												"src": "1512:45:10"
											}
										]
									},
									"documentation": {
										"id": 514,
										"nodeType": "StructuredDocumentation",
										"src": "1229:143:10",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 533,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "1386:18:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1413:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "1405:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 515,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1405:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1404:18:10"
									},
									"returnParameters": {
										"id": 518,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1440:0:10"
									},
									"scope": 534,
									"src": "1377:187:10",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 535,
							"src": "514:1052:10",
							"usedErrors": []
						}
					],
					"src": "32:1534:10"
				},
				"id": 10
			},
			"Pratice2nd.sol": {
				"ast": {
					"absolutePath": "Pratice2nd.sol",
					"exportedSymbols": {
						"Context": [
							430
						],
						"ERC1155Holder": [
							213
						],
						"ERC1155Receiver": [
							247
						],
						"ERC165": [
							454
						],
						"ERC721Holder": [
							408
						],
						"IERC1155": [
							121
						],
						"IERC1155Receiver": [
							162
						],
						"IERC165": [
							466
						],
						"IERC721": [
							363
						],
						"IERC721Receiver": [
							381
						],
						"Ownable": [
							534
						],
						"TwoFactor": [
							570
						]
					},
					"id": 571,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 536,
							"literals": [
								"solidity",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "32:22:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"id": 537,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 571,
							"sourceUnit": 364,
							"src": "57:58:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol",
							"file": "@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol",
							"id": 538,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 571,
							"sourceUnit": 409,
							"src": "116:69:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
							"file": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
							"id": 539,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 571,
							"sourceUnit": 122,
							"src": "186:60:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol",
							"file": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol",
							"id": 540,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 571,
							"sourceUnit": 214,
							"src": "247:71:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Ownable.sol",
							"file": "./Ownable.sol",
							"id": 541,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 571,
							"sourceUnit": 535,
							"src": "319:23:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 542,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 534,
										"src": "367:7:11"
									},
									"id": 543,
									"nodeType": "InheritanceSpecifier",
									"src": "367:7:11"
								},
								{
									"baseName": {
										"id": 544,
										"name": "ERC721Holder",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 408,
										"src": "376:12:11"
									},
									"id": 545,
									"nodeType": "InheritanceSpecifier",
									"src": "376:12:11"
								},
								{
									"baseName": {
										"id": 546,
										"name": "ERC1155Holder",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 213,
										"src": "390:13:11"
									},
									"id": 547,
									"nodeType": "InheritanceSpecifier",
									"src": "390:13:11"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 570,
							"linearizedBaseContracts": [
								570,
								213,
								247,
								162,
								454,
								466,
								408,
								381,
								534,
								430
							],
							"name": "TwoFactor",
							"nameLocation": "354:9:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 568,
										"nodeType": "Block",
										"src": "550:90:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 562,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "607:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_TwoFactor_$570",
																		"typeString": "contract TwoFactor"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_TwoFactor_$570",
																		"typeString": "contract TwoFactor"
																	}
																],
																"id": 561,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "599:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 560,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "599:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 563,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "599:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 564,
															"name": "toAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 549,
															"src": "614:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 565,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 553,
															"src": "625:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 557,
																	"name": "tokenAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 551,
																	"src": "568:12:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 556,
																"name": "IERC721",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 363,
																"src": "560:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC721_$363_$",
																	"typeString": "type(contract IERC721)"
																}
															},
															"id": 558,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "560:21:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$363",
																"typeString": "contract IERC721"
															}
														},
														"id": 559,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 318,
														"src": "560:38:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 566,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "560:73:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 567,
												"nodeType": "ExpressionStatement",
												"src": "560:73:11"
											}
										]
									},
									"id": 569,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferERC721FundsToAddress",
									"nameLocation": "424:29:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "toAddress",
												"nameLocation": "471:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 569,
												"src": "463:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 548,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "463:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "tokenAddress",
												"nameLocation": "498:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 569,
												"src": "490:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 550,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "490:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "528:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 569,
												"src": "520:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 552,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "520:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "453:88:11"
									},
									"returnParameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "550:0:11"
									},
									"scope": 570,
									"src": "415:225:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 571,
							"src": "345:297:11",
							"usedErrors": []
						}
					],
					"src": "32:610:11"
				},
				"id": 11
			}
		}
	}
}