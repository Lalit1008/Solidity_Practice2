{
	"id": "6bf110ee35e7b1603d717ec8f6daa163",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"Pratice2nd.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.7;\n\n\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\n\n\ncontract ManiTransfer {\n    \n    function _transferERC721FundsToAddress(\n        address toAddress,\n        address tokenAddress,\n        uint256 tokenId\n    ) public {\n        IERC721(tokenAddress).safeTransferFrom(address(this), toAddress, tokenId);\n    }\n\n  /*  function setApprovalForAll(address operator, bool approved) public virtual override {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n     function _setApprovalForAll(\n        address owner,\n        address operator,\n        bool approved\n    ) internal virtual {\n        require(owner != operator, \"ERC721: approve to caller\");\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    } */\n\n}"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x0d4de01fe5360c38b4ad2b0822a12722958428f5138a7ff47c1720eb6fa52bba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77724cecdfba8814632ab58737c2b0f2d4ad2d532bc614aee559b5593c1152f0\",\"dweb:/ipfs/QmUcE6gXyv7CQh4sUdcDABYKGTovTe1zLMZSEq95nkc3ph\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Pratice2nd.sol": {
				"ManiTransfer": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "toAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "_transferERC721FundsToAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Pratice2nd.sol\":118:856  contract ManiTransfer {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Pratice2nd.sol\":118:856  contract ManiTransfer {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xcb9354cd\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Pratice2nd.sol\":151:375  function _transferERC721FundsToAddress(... */\n    tag_3:\n      tag_4\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_5\n      swap2\n      swap1\n      tag_6\n      jump\t// in\n    tag_5:\n      tag_7\n      jump\t// in\n    tag_4:\n      stop\n    tag_7:\n        /* \"Pratice2nd.sol\":303:315  tokenAddress */\n      dup2\n        /* \"Pratice2nd.sol\":295:333  IERC721(tokenAddress).safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x42842e0e\n        /* \"Pratice2nd.sol\":342:346  this */\n      address\n        /* \"Pratice2nd.sol\":349:358  toAddress */\n      dup6\n        /* \"Pratice2nd.sol\":360:367  tokenId */\n      dup5\n        /* \"Pratice2nd.sol\":295:368  IERC721(tokenAddress).safeTransferFrom(address(this), toAddress, tokenId) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_9\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_11:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_13\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_13:\n      pop\n      pop\n      pop\n      pop\n        /* \"Pratice2nd.sol\":151:375  function _transferERC721FundsToAddress(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_15:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_17\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_18\n      jump\t// in\n    tag_17:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:291   */\n    tag_19:\n        /* \"#utility.yul\":198:203   */\n      0x00\n        /* \"#utility.yul\":236:242   */\n      dup2\n        /* \"#utility.yul\":223:243   */\n      calldataload\n        /* \"#utility.yul\":214:243   */\n      swap1\n      pop\n        /* \"#utility.yul\":252:285   */\n      tag_21\n        /* \"#utility.yul\":279:284   */\n      dup2\n        /* \"#utility.yul\":252:285   */\n      tag_22\n      jump\t// in\n    tag_21:\n        /* \"#utility.yul\":152:291   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":297:916   */\n    tag_6:\n        /* \"#utility.yul\":374:380   */\n      0x00\n        /* \"#utility.yul\":382:388   */\n      dup1\n        /* \"#utility.yul\":390:396   */\n      0x00\n        /* \"#utility.yul\":439:441   */\n      0x60\n        /* \"#utility.yul\":427:436   */\n      dup5\n        /* \"#utility.yul\":418:425   */\n      dup7\n        /* \"#utility.yul\":414:437   */\n      sub\n        /* \"#utility.yul\":410:442   */\n      slt\n        /* \"#utility.yul\":407:526   */\n      iszero\n      tag_24\n      jumpi\n        /* \"#utility.yul\":445:524   */\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n        /* \"#utility.yul\":407:526   */\n    tag_24:\n        /* \"#utility.yul\":565:566   */\n      0x00\n        /* \"#utility.yul\":590:643   */\n      tag_27\n        /* \"#utility.yul\":635:642   */\n      dup7\n        /* \"#utility.yul\":626:632   */\n      dup3\n        /* \"#utility.yul\":615:624   */\n      dup8\n        /* \"#utility.yul\":611:633   */\n      add\n        /* \"#utility.yul\":590:643   */\n      tag_15\n      jump\t// in\n    tag_27:\n        /* \"#utility.yul\":580:643   */\n      swap4\n      pop\n        /* \"#utility.yul\":536:653   */\n      pop\n        /* \"#utility.yul\":692:694   */\n      0x20\n        /* \"#utility.yul\":718:771   */\n      tag_28\n        /* \"#utility.yul\":763:770   */\n      dup7\n        /* \"#utility.yul\":754:760   */\n      dup3\n        /* \"#utility.yul\":743:752   */\n      dup8\n        /* \"#utility.yul\":739:761   */\n      add\n        /* \"#utility.yul\":718:771   */\n      tag_15\n      jump\t// in\n    tag_28:\n        /* \"#utility.yul\":708:771   */\n      swap3\n      pop\n        /* \"#utility.yul\":663:781   */\n      pop\n        /* \"#utility.yul\":820:822   */\n      0x40\n        /* \"#utility.yul\":846:899   */\n      tag_29\n        /* \"#utility.yul\":891:898   */\n      dup7\n        /* \"#utility.yul\":882:888   */\n      dup3\n        /* \"#utility.yul\":871:880   */\n      dup8\n        /* \"#utility.yul\":867:889   */\n      add\n        /* \"#utility.yul\":846:899   */\n      tag_19\n      jump\t// in\n    tag_29:\n        /* \"#utility.yul\":836:899   */\n      swap2\n      pop\n        /* \"#utility.yul\":791:909   */\n      pop\n        /* \"#utility.yul\":297:916   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":922:1040   */\n    tag_30:\n        /* \"#utility.yul\":1009:1033   */\n      tag_32\n        /* \"#utility.yul\":1027:1032   */\n      dup2\n        /* \"#utility.yul\":1009:1033   */\n      tag_33\n      jump\t// in\n    tag_32:\n        /* \"#utility.yul\":1004:1007   */\n      dup3\n        /* \"#utility.yul\":997:1034   */\n      mstore\n        /* \"#utility.yul\":922:1040   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1046:1164   */\n    tag_34:\n        /* \"#utility.yul\":1133:1157   */\n      tag_36\n        /* \"#utility.yul\":1151:1156   */\n      dup2\n        /* \"#utility.yul\":1133:1157   */\n      tag_37\n      jump\t// in\n    tag_36:\n        /* \"#utility.yul\":1128:1131   */\n      dup3\n        /* \"#utility.yul\":1121:1158   */\n      mstore\n        /* \"#utility.yul\":1046:1164   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1170:1612   */\n    tag_10:\n        /* \"#utility.yul\":1319:1323   */\n      0x00\n        /* \"#utility.yul\":1357:1359   */\n      0x60\n        /* \"#utility.yul\":1346:1355   */\n      dup3\n        /* \"#utility.yul\":1342:1360   */\n      add\n        /* \"#utility.yul\":1334:1360   */\n      swap1\n      pop\n        /* \"#utility.yul\":1370:1441   */\n      tag_39\n        /* \"#utility.yul\":1438:1439   */\n      0x00\n        /* \"#utility.yul\":1427:1436   */\n      dup4\n        /* \"#utility.yul\":1423:1440   */\n      add\n        /* \"#utility.yul\":1414:1420   */\n      dup7\n        /* \"#utility.yul\":1370:1441   */\n      tag_30\n      jump\t// in\n    tag_39:\n        /* \"#utility.yul\":1451:1523   */\n      tag_40\n        /* \"#utility.yul\":1519:1521   */\n      0x20\n        /* \"#utility.yul\":1508:1517   */\n      dup4\n        /* \"#utility.yul\":1504:1522   */\n      add\n        /* \"#utility.yul\":1495:1501   */\n      dup6\n        /* \"#utility.yul\":1451:1523   */\n      tag_30\n      jump\t// in\n    tag_40:\n        /* \"#utility.yul\":1533:1605   */\n      tag_41\n        /* \"#utility.yul\":1601:1603   */\n      0x40\n        /* \"#utility.yul\":1590:1599   */\n      dup4\n        /* \"#utility.yul\":1586:1604   */\n      add\n        /* \"#utility.yul\":1577:1583   */\n      dup5\n        /* \"#utility.yul\":1533:1605   */\n      tag_34\n      jump\t// in\n    tag_41:\n        /* \"#utility.yul\":1170:1612   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1699:1795   */\n    tag_33:\n        /* \"#utility.yul\":1736:1743   */\n      0x00\n        /* \"#utility.yul\":1765:1789   */\n      tag_45\n        /* \"#utility.yul\":1783:1788   */\n      dup3\n        /* \"#utility.yul\":1765:1789   */\n      tag_46\n      jump\t// in\n    tag_45:\n        /* \"#utility.yul\":1754:1789   */\n      swap1\n      pop\n        /* \"#utility.yul\":1699:1795   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1801:1927   */\n    tag_46:\n        /* \"#utility.yul\":1838:1845   */\n      0x00\n        /* \"#utility.yul\":1878:1920   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1871:1876   */\n      dup3\n        /* \"#utility.yul\":1867:1921   */\n      and\n        /* \"#utility.yul\":1856:1921   */\n      swap1\n      pop\n        /* \"#utility.yul\":1801:1927   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1933:2010   */\n    tag_37:\n        /* \"#utility.yul\":1970:1977   */\n      0x00\n        /* \"#utility.yul\":1999:2004   */\n      dup2\n        /* \"#utility.yul\":1988:2004   */\n      swap1\n      pop\n        /* \"#utility.yul\":1933:2010   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2139:2256   */\n    tag_26:\n        /* \"#utility.yul\":2248:2249   */\n      0x00\n        /* \"#utility.yul\":2245:2246   */\n      dup1\n        /* \"#utility.yul\":2238:2250   */\n      revert\n        /* \"#utility.yul\":2262:2384   */\n    tag_18:\n        /* \"#utility.yul\":2335:2359   */\n      tag_53\n        /* \"#utility.yul\":2353:2358   */\n      dup2\n        /* \"#utility.yul\":2335:2359   */\n      tag_33\n      jump\t// in\n    tag_53:\n        /* \"#utility.yul\":2328:2333   */\n      dup2\n        /* \"#utility.yul\":2325:2360   */\n      eq\n        /* \"#utility.yul\":2315:2378   */\n      tag_54\n      jumpi\n        /* \"#utility.yul\":2374:2375   */\n      0x00\n        /* \"#utility.yul\":2371:2372   */\n      dup1\n        /* \"#utility.yul\":2364:2376   */\n      revert\n        /* \"#utility.yul\":2315:2378   */\n    tag_54:\n        /* \"#utility.yul\":2262:2384   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2390:2512   */\n    tag_22:\n        /* \"#utility.yul\":2463:2487   */\n      tag_56\n        /* \"#utility.yul\":2481:2486   */\n      dup2\n        /* \"#utility.yul\":2463:2487   */\n      tag_37\n      jump\t// in\n    tag_56:\n        /* \"#utility.yul\":2456:2461   */\n      dup2\n        /* \"#utility.yul\":2453:2488   */\n      eq\n        /* \"#utility.yul\":2443:2506   */\n      tag_57\n      jumpi\n        /* \"#utility.yul\":2502:2503   */\n      0x00\n        /* \"#utility.yul\":2499:2500   */\n      dup1\n        /* \"#utility.yul\":2492:2504   */\n      revert\n        /* \"#utility.yul\":2443:2506   */\n    tag_57:\n        /* \"#utility.yul\":2390:2512   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220ce45e019ff5adfe0fd12ab6649d25bd7a4df870044557f1682551368cacbe83464736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610237806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063cb9354cd14610030575b600080fd5b61004a600480360381019061004591906100ea565b61004c565b005b8173ffffffffffffffffffffffffffffffffffffffff166342842e0e3085846040518463ffffffff1660e01b81526004016100899392919061015b565b600060405180830381600087803b1580156100a357600080fd5b505af11580156100b7573d6000803e3d6000fd5b50505050505050565b6000813590506100cf816101d3565b92915050565b6000813590506100e4816101ea565b92915050565b600080600060608486031215610103576101026101ce565b5b6000610111868287016100c0565b9350506020610122868287016100c0565b9250506040610133868287016100d5565b9150509250925092565b61014681610192565b82525050565b610155816101c4565b82525050565b6000606082019050610170600083018661013d565b61017d602083018561013d565b61018a604083018461014c565b949350505050565b600061019d826101a4565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600080fd5b6101dc81610192565b81146101e757600080fd5b50565b6101f3816101c4565b81146101fe57600080fd5b5056fea2646970667358221220ce45e019ff5adfe0fd12ab6649d25bd7a4df870044557f1682551368cacbe83464736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x237 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xCB9354CD EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0xEA JUMP JUMPDEST PUSH2 0x4C JUMP JUMPDEST STOP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x42842E0E ADDRESS DUP6 DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x89 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x15B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xCF DUP2 PUSH2 0x1D3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE4 DUP2 PUSH2 0x1EA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x103 JUMPI PUSH2 0x102 PUSH2 0x1CE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x111 DUP7 DUP3 DUP8 ADD PUSH2 0xC0 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x122 DUP7 DUP3 DUP8 ADD PUSH2 0xC0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x133 DUP7 DUP3 DUP8 ADD PUSH2 0xD5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x146 DUP2 PUSH2 0x192 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x155 DUP2 PUSH2 0x1C4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x170 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x13D JUMP JUMPDEST PUSH2 0x17D PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x13D JUMP JUMPDEST PUSH2 0x18A PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x14C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19D DUP3 PUSH2 0x1A4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DC DUP2 PUSH2 0x192 JUMP JUMPDEST DUP2 EQ PUSH2 0x1E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1F3 DUP2 PUSH2 0x1C4 JUMP JUMPDEST DUP2 EQ PUSH2 0x1FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCE GASLIMIT 0xE0 NOT SELFDESTRUCT GAS 0xDF 0xE0 REVERT SLT 0xAB PUSH7 0x49D25BD7A4DF87 STOP DIFFICULTY SSTORE PUSH32 0x1682551368CACBE83464736F6C63430008070033000000000000000000000000 ",
							"sourceMap": "118:738:2:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_transferERC721FundsToAddress_152": {
									"entryPoint": 76,
									"id": 152,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 192,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 213,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 234,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 317,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 332,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 347,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 402,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 420,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 452,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 462,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 467,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 490,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2515:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:3"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:3",
														"type": ""
													}
												],
												"src": "7:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "204:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "214:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "236:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "223:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "214:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "279:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "252:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "252:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "252:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "182:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "190:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "198:5:3",
														"type": ""
													}
												],
												"src": "152:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "397:519:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "443:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "445:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "445:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "445:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "418:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "427:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "414:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "414:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "439:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "410:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "410:32:3"
															},
															"nodeType": "YulIf",
															"src": "407:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "536:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "551:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "565:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "555:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "580:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "615:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "626:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "611:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "611:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "635:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "590:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "590:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "580:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "663:118:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "678:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "692:2:3",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "682:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "708:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "743:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "754:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "739:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "739:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "763:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "718:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "718:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "708:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "791:118:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "806:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "820:2:3",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "810:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "836:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "871:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "882:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "867:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "867:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "891:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "846:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "846:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "836:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "351:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "362:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "374:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "382:6:3",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "390:6:3",
														"type": ""
													}
												],
												"src": "297:619:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "987:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1004:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1027:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1009:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1009:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "997:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "997:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "997:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "975:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "982:3:3",
														"type": ""
													}
												],
												"src": "922:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1111:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1128:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1151:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1133:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1133:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1121:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1121:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1121:37:3"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1099:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1106:3:3",
														"type": ""
													}
												],
												"src": "1046:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1324:288:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1334:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1346:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1357:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1342:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1342:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1334:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1414:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1427:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1438:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1423:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1423:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1370:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1370:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1370:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "1495:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1508:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1519:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1504:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1504:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1451:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1451:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1451:72:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "1577:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1590:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1601:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1586:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1586:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1533:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1533:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1533:72:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1280:9:3",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1292:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1300:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1308:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1319:4:3",
														"type": ""
													}
												],
												"src": "1170:442:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1658:35:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1668:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1684:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1678:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1678:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1668:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1651:6:3",
														"type": ""
													}
												],
												"src": "1618:75:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1744:51:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1754:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1783:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1765:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1765:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1754:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1726:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1736:7:3",
														"type": ""
													}
												],
												"src": "1699:96:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1846:81:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1856:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1871:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1878:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1867:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1867:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1856:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1828:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1838:7:3",
														"type": ""
													}
												],
												"src": "1801:126:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1978:32:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1988:16:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1999:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1988:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1960:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1970:7:3",
														"type": ""
													}
												],
												"src": "1933:77:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2105:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2122:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2125:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2115:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2115:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2115:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "2016:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2228:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2245:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2248:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2238:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2238:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2238:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "2139:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2305:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2362:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2371:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2374:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2364:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2364:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2364:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2328:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2353:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "2335:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2335:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2325:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2325:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2318:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2318:43:3"
															},
															"nodeType": "YulIf",
															"src": "2315:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2298:5:3",
														"type": ""
													}
												],
												"src": "2262:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2433:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2490:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2499:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2502:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2492:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2492:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2492:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2456:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2481:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2463:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2463:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2453:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2453:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2446:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2446:43:3"
															},
															"nodeType": "YulIf",
															"src": "2443:63:3"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2426:5:3",
														"type": ""
													}
												],
												"src": "2390:122:3"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c8063cb9354cd14610030575b600080fd5b61004a600480360381019061004591906100ea565b61004c565b005b8173ffffffffffffffffffffffffffffffffffffffff166342842e0e3085846040518463ffffffff1660e01b81526004016100899392919061015b565b600060405180830381600087803b1580156100a357600080fd5b505af11580156100b7573d6000803e3d6000fd5b50505050505050565b6000813590506100cf816101d3565b92915050565b6000813590506100e4816101ea565b92915050565b600080600060608486031215610103576101026101ce565b5b6000610111868287016100c0565b9350506020610122868287016100c0565b9250506040610133868287016100d5565b9150509250925092565b61014681610192565b82525050565b610155816101c4565b82525050565b6000606082019050610170600083018661013d565b61017d602083018561013d565b61018a604083018461014c565b949350505050565b600061019d826101a4565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600080fd5b6101dc81610192565b81146101e757600080fd5b50565b6101f3816101c4565b81146101fe57600080fd5b5056fea2646970667358221220ce45e019ff5adfe0fd12ab6649d25bd7a4df870044557f1682551368cacbe83464736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xCB9354CD EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0xEA JUMP JUMPDEST PUSH2 0x4C JUMP JUMPDEST STOP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x42842E0E ADDRESS DUP6 DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x89 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x15B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xCF DUP2 PUSH2 0x1D3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE4 DUP2 PUSH2 0x1EA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x103 JUMPI PUSH2 0x102 PUSH2 0x1CE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x111 DUP7 DUP3 DUP8 ADD PUSH2 0xC0 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x122 DUP7 DUP3 DUP8 ADD PUSH2 0xC0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x133 DUP7 DUP3 DUP8 ADD PUSH2 0xD5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x146 DUP2 PUSH2 0x192 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x155 DUP2 PUSH2 0x1C4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x170 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x13D JUMP JUMPDEST PUSH2 0x17D PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x13D JUMP JUMPDEST PUSH2 0x18A PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x14C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19D DUP3 PUSH2 0x1A4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DC DUP2 PUSH2 0x192 JUMP JUMPDEST DUP2 EQ PUSH2 0x1E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1F3 DUP2 PUSH2 0x1C4 JUMP JUMPDEST DUP2 EQ PUSH2 0x1FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCE GASLIMIT 0xE0 NOT SELFDESTRUCT GAS 0xDF 0xE0 REVERT SLT 0xAB PUSH7 0x49D25BD7A4DF87 STOP DIFFICULTY SSTORE PUSH32 0x1682551368CACBE83464736F6C63430008070033000000000000000000000000 ",
							"sourceMap": "118:738:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;151:224;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;303:12;295:38;;;342:4;349:9;360:7;295:73;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;151:224;;;:::o;7:139:3:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:::-;198:5;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;152:139;;;;:::o;297:619::-;374:6;382;390;439:2;427:9;418:7;414:23;410:32;407:119;;;445:79;;:::i;:::-;407:119;565:1;590:53;635:7;626:6;615:9;611:22;590:53;:::i;:::-;580:63;;536:117;692:2;718:53;763:7;754:6;743:9;739:22;718:53;:::i;:::-;708:63;;663:118;820:2;846:53;891:7;882:6;871:9;867:22;846:53;:::i;:::-;836:63;;791:118;297:619;;;;;:::o;922:118::-;1009:24;1027:5;1009:24;:::i;:::-;1004:3;997:37;922:118;;:::o;1046:::-;1133:24;1151:5;1133:24;:::i;:::-;1128:3;1121:37;1046:118;;:::o;1170:442::-;1319:4;1357:2;1346:9;1342:18;1334:26;;1370:71;1438:1;1427:9;1423:17;1414:6;1370:71;:::i;:::-;1451:72;1519:2;1508:9;1504:18;1495:6;1451:72;:::i;:::-;1533;1601:2;1590:9;1586:18;1577:6;1533:72;:::i;:::-;1170:442;;;;;;:::o;1699:96::-;1736:7;1765:24;1783:5;1765:24;:::i;:::-;1754:35;;1699:96;;;:::o;1801:126::-;1838:7;1878:42;1871:5;1867:54;1856:65;;1801:126;;;:::o;1933:77::-;1970:7;1999:5;1988:16;;1933:77;;;:::o;2139:117::-;2248:1;2245;2238:12;2262:122;2335:24;2353:5;2335:24;:::i;:::-;2328:5;2325:35;2315:63;;2374:1;2371;2364:12;2315:63;2262:122;:::o;2390:::-;2463:24;2481:5;2463:24;:::i;:::-;2456:5;2453:35;2443:63;;2502:1;2499;2492:12;2443:63;2390:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "113400",
								"executionCost": "159",
								"totalCost": "113559"
							},
							"external": {
								"_transferERC721FundsToAddress(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 118,
									"end": 856,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 118,
									"end": 856,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 118,
									"end": 856,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 118,
									"end": 856,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 118,
									"end": 856,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 118,
									"end": 856,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 118,
									"end": 856,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 118,
									"end": 856,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 118,
									"end": 856,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 118,
									"end": 856,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 118,
									"end": 856,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 118,
									"end": 856,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 118,
									"end": 856,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 118,
									"end": 856,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 118,
									"end": 856,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 118,
									"end": 856,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 118,
									"end": 856,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 118,
									"end": 856,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 118,
									"end": 856,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 118,
									"end": 856,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 118,
									"end": 856,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ce45e019ff5adfe0fd12ab6649d25bd7a4df870044557f1682551368cacbe83464736f6c63430008070033",
									".code": [
										{
											"begin": 118,
											"end": 856,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 118,
											"end": 856,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 118,
											"end": 856,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 118,
											"end": 856,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 118,
											"end": 856,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 118,
											"end": 856,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 118,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 118,
											"end": 856,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 118,
											"end": 856,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 118,
											"end": 856,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 118,
											"end": 856,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 118,
											"end": 856,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 118,
											"end": 856,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 118,
											"end": 856,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 118,
											"end": 856,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 118,
											"end": 856,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 118,
											"end": 856,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 118,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 118,
											"end": 856,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 118,
											"end": 856,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 118,
											"end": 856,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 118,
											"end": 856,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 118,
											"end": 856,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 118,
											"end": 856,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 118,
											"end": 856,
											"name": "PUSH",
											"source": 2,
											"value": "CB9354CD"
										},
										{
											"begin": 118,
											"end": 856,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 118,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 118,
											"end": 856,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 118,
											"end": 856,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 118,
											"end": 856,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 118,
											"end": 856,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 118,
											"end": 856,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 118,
											"end": 856,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 151,
											"end": 375,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 151,
											"end": 375,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 151,
											"end": 375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 151,
											"end": 375,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 151,
											"end": 375,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 151,
											"end": 375,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 151,
											"end": 375,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 151,
											"end": 375,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 151,
											"end": 375,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 151,
											"end": 375,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 151,
											"end": 375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 151,
											"end": 375,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 151,
											"end": 375,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 151,
											"end": 375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 151,
											"end": 375,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 151,
											"end": 375,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 151,
											"end": 375,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 151,
											"end": 375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 151,
											"end": 375,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 151,
											"end": 375,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 151,
											"end": 375,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 151,
											"end": 375,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 151,
											"end": 375,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 151,
											"end": 375,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 303,
											"end": 315,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 295,
											"end": 333,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 295,
											"end": 333,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 295,
											"end": 333,
											"name": "PUSH",
											"source": 2,
											"value": "42842E0E"
										},
										{
											"begin": 342,
											"end": 346,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 349,
											"end": 358,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 360,
											"end": 367,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 295,
											"end": 368,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 295,
											"end": 368,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 295,
											"end": 368,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 295,
											"end": 368,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 295,
											"end": 368,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 295,
											"end": 368,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 295,
											"end": 368,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 295,
											"end": 368,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 295,
											"end": 368,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 295,
											"end": 368,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 295,
											"end": 368,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 295,
											"end": 368,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 295,
											"end": 368,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 295,
											"end": 368,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 295,
											"end": 368,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 295,
											"end": 368,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 295,
											"end": 368,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 295,
											"end": 368,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 295,
											"end": 368,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 295,
											"end": 368,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 295,
											"end": 368,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 295,
											"end": 368,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 295,
											"end": 368,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 295,
											"end": 368,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 295,
											"end": 368,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 295,
											"end": 368,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 295,
											"end": 368,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 295,
											"end": 368,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 295,
											"end": 368,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 295,
											"end": 368,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 295,
											"end": 368,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 295,
											"end": 368,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 295,
											"end": 368,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 295,
											"end": 368,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 295,
											"end": 368,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 295,
											"end": 368,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 295,
											"end": 368,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 295,
											"end": 368,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 295,
											"end": 368,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 295,
											"end": 368,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 295,
											"end": 368,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 295,
											"end": 368,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 295,
											"end": 368,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 295,
											"end": 368,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 295,
											"end": 368,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 295,
											"end": 368,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 295,
											"end": 368,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 295,
											"end": 368,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 295,
											"end": 368,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 295,
											"end": 368,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 295,
											"end": 368,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 295,
											"end": 368,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 295,
											"end": 368,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 295,
											"end": 368,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 295,
											"end": 368,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 295,
											"end": 368,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 295,
											"end": 368,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 295,
											"end": 368,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 295,
											"end": 368,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 295,
											"end": 368,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 295,
											"end": 368,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 295,
											"end": 368,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 151,
											"end": 375,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 151,
											"end": 375,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 151,
											"end": 375,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 151,
											"end": 375,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 291,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 152,
											"end": 291,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 198,
											"end": 203,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 236,
											"end": 242,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 223,
											"end": 243,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 214,
											"end": 243,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 214,
											"end": 243,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 252,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 279,
											"end": 284,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 252,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 152,
											"end": 291,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 152,
											"end": 291,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 152,
											"end": 291,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 152,
											"end": 291,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 152,
											"end": 291,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 297,
											"end": 916,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 297,
											"end": 916,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 374,
											"end": 380,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 382,
											"end": 388,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 390,
											"end": 396,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 439,
											"end": 441,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 427,
											"end": 436,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 418,
											"end": 425,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 414,
											"end": 437,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 410,
											"end": 442,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 407,
											"end": 526,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 407,
											"end": 526,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 407,
											"end": 526,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 445,
											"end": 524,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 445,
											"end": 524,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 445,
											"end": 524,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 445,
											"end": 524,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 445,
											"end": 524,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 407,
											"end": 526,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 407,
											"end": 526,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 565,
											"end": 566,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 590,
											"end": 643,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 635,
											"end": 642,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 626,
											"end": 632,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 615,
											"end": 624,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 611,
											"end": 633,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 590,
											"end": 643,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 590,
											"end": 643,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 590,
											"end": 643,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 590,
											"end": 643,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 580,
											"end": 643,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 580,
											"end": 643,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 536,
											"end": 653,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 692,
											"end": 694,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 718,
											"end": 771,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 763,
											"end": 770,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 754,
											"end": 760,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 743,
											"end": 752,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 739,
											"end": 761,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 718,
											"end": 771,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 718,
											"end": 771,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 718,
											"end": 771,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 718,
											"end": 771,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 708,
											"end": 771,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 708,
											"end": 771,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 663,
											"end": 781,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 820,
											"end": 822,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 846,
											"end": 899,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 891,
											"end": 898,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 882,
											"end": 888,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 871,
											"end": 880,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 867,
											"end": 889,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 846,
											"end": 899,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 846,
											"end": 899,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 846,
											"end": 899,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 846,
											"end": 899,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 836,
											"end": 899,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 836,
											"end": 899,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 791,
											"end": 909,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 297,
											"end": 916,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 297,
											"end": 916,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 297,
											"end": 916,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 297,
											"end": 916,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 297,
											"end": 916,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 297,
											"end": 916,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 922,
											"end": 1040,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 922,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1009,
											"end": 1033,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 1027,
											"end": 1032,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1009,
											"end": 1033,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 1009,
											"end": 1033,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1009,
											"end": 1033,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 1009,
											"end": 1033,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1004,
											"end": 1007,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 997,
											"end": 1034,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 922,
											"end": 1040,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 922,
											"end": 1040,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 922,
											"end": 1040,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1046,
											"end": 1164,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 1046,
											"end": 1164,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1133,
											"end": 1157,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 1151,
											"end": 1156,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1133,
											"end": 1157,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 1133,
											"end": 1157,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1133,
											"end": 1157,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 1133,
											"end": 1157,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1128,
											"end": 1131,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1121,
											"end": 1158,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1046,
											"end": 1164,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1046,
											"end": 1164,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1046,
											"end": 1164,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1170,
											"end": 1612,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 1170,
											"end": 1612,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1319,
											"end": 1323,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1357,
											"end": 1359,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1346,
											"end": 1355,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1342,
											"end": 1360,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1334,
											"end": 1360,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1334,
											"end": 1360,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 1441,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 1438,
											"end": 1439,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1436,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1423,
											"end": 1440,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1414,
											"end": 1420,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 1441,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 1370,
											"end": 1441,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1370,
											"end": 1441,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 1370,
											"end": 1441,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1451,
											"end": 1523,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1519,
											"end": 1521,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1508,
											"end": 1517,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1504,
											"end": 1522,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1495,
											"end": 1501,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1451,
											"end": 1523,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 1451,
											"end": 1523,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1451,
											"end": 1523,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1451,
											"end": 1523,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1533,
											"end": 1605,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 1601,
											"end": 1603,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1590,
											"end": 1599,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1586,
											"end": 1604,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1577,
											"end": 1583,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1533,
											"end": 1605,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 1533,
											"end": 1605,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1533,
											"end": 1605,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 1533,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1170,
											"end": 1612,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 1170,
											"end": 1612,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1170,
											"end": 1612,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1170,
											"end": 1612,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1170,
											"end": 1612,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1170,
											"end": 1612,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1170,
											"end": 1612,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1699,
											"end": 1795,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 1699,
											"end": 1795,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1736,
											"end": 1743,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1765,
											"end": 1789,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 1783,
											"end": 1788,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1765,
											"end": 1789,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 1765,
											"end": 1789,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1765,
											"end": 1789,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 1765,
											"end": 1789,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1754,
											"end": 1789,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1754,
											"end": 1789,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1699,
											"end": 1795,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1699,
											"end": 1795,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1699,
											"end": 1795,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1699,
											"end": 1795,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1801,
											"end": 1927,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 1801,
											"end": 1927,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1838,
											"end": 1845,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1878,
											"end": 1920,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1871,
											"end": 1876,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1867,
											"end": 1921,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1856,
											"end": 1921,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1856,
											"end": 1921,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1801,
											"end": 1927,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1801,
											"end": 1927,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1801,
											"end": 1927,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1801,
											"end": 1927,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1933,
											"end": 2010,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 1933,
											"end": 2010,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1970,
											"end": 1977,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1999,
											"end": 2004,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2004,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2004,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1933,
											"end": 2010,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1933,
											"end": 2010,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1933,
											"end": 2010,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1933,
											"end": 2010,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2139,
											"end": 2256,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 2139,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2248,
											"end": 2249,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2245,
											"end": 2246,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2262,
											"end": 2384,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 2262,
											"end": 2384,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2335,
											"end": 2359,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 2353,
											"end": 2358,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2335,
											"end": 2359,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 2335,
											"end": 2359,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2335,
											"end": 2359,
											"name": "tag",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 2335,
											"end": 2359,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2328,
											"end": 2333,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2325,
											"end": 2360,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2315,
											"end": 2378,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 2315,
											"end": 2378,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2374,
											"end": 2375,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2372,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2364,
											"end": 2376,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2315,
											"end": 2378,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 2315,
											"end": 2378,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2262,
											"end": 2384,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2262,
											"end": 2384,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2390,
											"end": 2512,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 2390,
											"end": 2512,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2463,
											"end": 2487,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 2481,
											"end": 2486,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2463,
											"end": 2487,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 2463,
											"end": 2487,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2463,
											"end": 2487,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 2463,
											"end": 2487,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2456,
											"end": 2461,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2453,
											"end": 2488,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2443,
											"end": 2506,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 2443,
											"end": 2506,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 2503,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2499,
											"end": 2500,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2492,
											"end": 2504,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2443,
											"end": 2506,
											"name": "tag",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 2443,
											"end": 2506,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2390,
											"end": 2512,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2390,
											"end": 2512,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"_transferERC721FundsToAddress(address,address,uint256)": "cb9354cd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"toAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"_transferERC721FundsToAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Pratice2nd.sol\":\"ManiTransfer\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x0d4de01fe5360c38b4ad2b0822a12722958428f5138a7ff47c1720eb6fa52bba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77724cecdfba8814632ab58737c2b0f2d4ad2d532bc614aee559b5593c1152f0\",\"dweb:/ipfs/QmUcE6gXyv7CQh4sUdcDABYKGTovTe1zLMZSEq95nkc3ph\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"Pratice2nd.sol\":{\"keccak256\":\"0x07a7532e85d61353ac20c1ee07a8fbe277fea9f31427bfdfe8ef8ffcee283dad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01d9c714f8c73da286781c96b090e27d82b97df707e2efe5c6d07b5feedbf32c\",\"dweb:/ipfs/QmUQrFZrkqHnQ4nDuAyYPoKcXxEQYXiuedYWxYr1qckqAK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							127
						],
						"IERC721": [
							115
						]
					},
					"id": 116,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 116,
							"sourceUnit": 128,
							"src": "133:47:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 127,
										"src": "271:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "271:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "182:67:0",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 115,
							"linearizedBaseContracts": [
								115,
								127
							],
							"name": "IERC721",
							"nameLocation": "260:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 6,
										"nodeType": "StructuredDocumentation",
										"src": "285:88:0",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"id": 14,
									"name": "Transfer",
									"nameLocation": "384:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "409:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "393:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 7,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "393:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 10,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "431:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "415:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 9,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "415:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 12,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "451:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "435:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 11,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "435:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "392:67:0"
									},
									"src": "378:82:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 15,
										"nodeType": "StructuredDocumentation",
										"src": "466:94:0",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"id": 23,
									"name": "Approval",
									"nameLocation": "571:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 17,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "596:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "580:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 16,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "580:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 19,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "619:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "603:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "603:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 21,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "645:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "629:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 20,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "629:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "579:74:0"
									},
									"src": "565:89:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "660:117:0",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"id": 32,
									"name": "ApprovalForAll",
									"nameLocation": "788:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 26,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "819:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "803:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 25,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "803:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "842:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "826:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 27,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "826:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 30,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "857:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "852:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 29,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "852:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "802:64:0"
									},
									"src": "782:85:0"
								},
								{
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "873:76:0",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 40,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "963:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "981:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "973:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "973:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "972:15:0"
									},
									"returnParameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1019:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1011:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 37,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1010:17:0"
									},
									"scope": 115,
									"src": "954:74:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1034:131:0",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 48,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1179:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1195:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "1187:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 42,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1187:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1186:17:0"
									},
									"returnParameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1235:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "1227:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 45,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1227:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1226:15:0"
									},
									"scope": 115,
									"src": "1170:72:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 49,
										"nodeType": "StructuredDocumentation",
										"src": "1248:556:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 60,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1818:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1852:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "1844:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 50,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1844:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1874:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "1866:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 52,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1866:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1894:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "1886:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 54,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1926:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "1911:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 56,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1911:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1834:102:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1945:0:0"
									},
									"scope": 115,
									"src": "1809:137:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "1952:690:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 70,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2656:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2690:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "2682:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2682:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2712:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "2704:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 64,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2704:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2732:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "2724:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 66,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2724:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2672:73:0"
									},
									"returnParameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2754:0:0"
									},
									"scope": 115,
									"src": "2647:108:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 71,
										"nodeType": "StructuredDocumentation",
										"src": "2761:504:0",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 80,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3279:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3309:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "3301:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 72,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3301:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3331:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "3323:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 74,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3323:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3351:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "3343:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 76,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3343:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3291:73:0"
									},
									"returnParameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3373:0:0"
									},
									"scope": 115,
									"src": "3270:104:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "3380:452:0",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 88,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3846:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3862:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "3854:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3854:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3874:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "3866:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 84,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3866:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3853:29:0"
									},
									"returnParameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3891:0:0"
									},
									"scope": 115,
									"src": "3837:55:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 89,
										"nodeType": "StructuredDocumentation",
										"src": "3898:309:0",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 96,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4221:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4247:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "4239:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 90,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4239:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "4262:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "4257:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 92,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4257:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4238:34:0"
									},
									"returnParameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4281:0:0"
									},
									"scope": 115,
									"src": "4212:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 97,
										"nodeType": "StructuredDocumentation",
										"src": "4288:139:0",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 104,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4441:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4461:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "4453:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4453:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4452:17:0"
									},
									"returnParameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 102,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4501:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "4493:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 101,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4493:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4492:18:0"
									},
									"scope": 115,
									"src": "4432:79:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 105,
										"nodeType": "StructuredDocumentation",
										"src": "4517:138:0",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 114,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4669:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4694:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "4686:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 106,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4686:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4709:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "4701:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4701:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4685:33:0"
									},
									"returnParameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "4742:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 111,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4742:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4741:6:0"
									},
									"scope": 115,
									"src": "4660:88:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 116,
							"src": "250:4500:0",
							"usedErrors": []
						}
					],
					"src": "108:4643:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							127
						]
					},
					"id": 128,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 117,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 118,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:1",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 127,
							"linearizedBaseContracts": [
								127
							],
							"name": "IERC165",
							"nameLocation": "415:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:1",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 126,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "801:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 120,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:1"
									},
									"returnParameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 124,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "844:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 123,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:1"
									},
									"scope": 127,
									"src": "774:76:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 128,
							"src": "405:447:1",
							"usedErrors": []
						}
					],
					"src": "100:753:1"
				},
				"id": 1
			},
			"Pratice2nd.sol": {
				"ast": {
					"absolutePath": "Pratice2nd.sol",
					"exportedSymbols": {
						"IERC165": [
							127
						],
						"IERC721": [
							115
						],
						"ManiTransfer": [
							153
						]
					},
					"id": 154,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 129,
							"literals": [
								"solidity",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "32:22:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"id": 130,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 154,
							"sourceUnit": 116,
							"src": "57:58:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 153,
							"linearizedBaseContracts": [
								153
							],
							"name": "ManiTransfer",
							"nameLocation": "127:12:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 151,
										"nodeType": "Block",
										"src": "285:90:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 145,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "342:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ManiTransfer_$153",
																		"typeString": "contract ManiTransfer"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ManiTransfer_$153",
																		"typeString": "contract ManiTransfer"
																	}
																],
																"id": 144,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "334:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 143,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "334:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "334:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 147,
															"name": "toAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 132,
															"src": "349:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 148,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 136,
															"src": "360:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 140,
																	"name": "tokenAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 134,
																	"src": "303:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 139,
																"name": "IERC721",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 115,
																"src": "295:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC721_$115_$",
																	"typeString": "type(contract IERC721)"
																}
															},
															"id": 141,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "295:21:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$115",
																"typeString": "contract IERC721"
															}
														},
														"id": 142,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 70,
														"src": "295:38:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "295:73:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 150,
												"nodeType": "ExpressionStatement",
												"src": "295:73:2"
											}
										]
									},
									"functionSelector": "cb9354cd",
									"id": 152,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferERC721FundsToAddress",
									"nameLocation": "160:29:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "toAddress",
												"nameLocation": "207:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "199:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 131,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "199:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "tokenAddress",
												"nameLocation": "234:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "226:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "226:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "264:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "256:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "256:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "189:88:2"
									},
									"returnParameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "285:0:2"
									},
									"scope": 153,
									"src": "151:224:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 154,
							"src": "118:738:2",
							"usedErrors": []
						}
					],
					"src": "32:824:2"
				},
				"id": 2
			}
		}
	}
}