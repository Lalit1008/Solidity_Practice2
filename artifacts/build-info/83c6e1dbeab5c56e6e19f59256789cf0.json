{
	"id": "83c6e1dbeab5c56e6e19f59256789cf0",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"Practice NFT.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.7;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\";\nimport \"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\";\nimport \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\";\nimport \"./Ownable.sol\";\n\n\ncontract TwoFactor is Ownable, ERC721Holder, ERC1155Holder {\n    \n    using SafeERC20 for IERC20;\n\n    \n    bool private isInitialized;\n    address private backupWallet;\n  \n    function init(address _sender, address _backupWallet) external {        \n        require(_sender!= address(0), \"Sender address can not be zero\");\n        require(_backupWallet!= address(0), \"Backup address can not be zero\");\n        require(_backupWallet!= _sender, \"Backup wallet can not be same as sender wallet\");\n        require(isInitialized == false, \"Contract already initialized\");\n        _transferOwnership(_sender);\n        backupWallet = _backupWallet;\n        isInitialized = true;\n    }\n    \n    receive() external payable {        \n    }\n\n   /* function transferERC20AssetsToWallet(\n        bytes memory _oldPassword,\n        bytes32 _newEncryptedPassword,\n        address[] memory erc20tokenAddressList\n    )\n        external\n        onlyOwner\n        passwordMatchAndNewUpdated(_oldPassword, _newEncryptedPassword)\n        encryptedPasswordNotNull(_newEncryptedPassword)\n    {\n        encryptedPassword = _newEncryptedPassword;\n        _transferERC20FundsToAddress(owner(), erc20tokenAddressList);\n    }*/\n\n  /*  function transferERC721AssetsToWallet(\n        address tokenAddress,\n        uint256 tokenId\n    ) external onlyOwner\n     {\n        _transferERC721FundsToAddress(owner(), tokenAddress, tokenId);\n    } */\n \n function _transferERC721FundsToAddress(\n        address toAddress,\n        address tokenAddress,\n        uint256 tokenId\n    ) private {\n        IERC721(tokenAddress).safeTransferFrom(address(this), toAddress, tokenId);\n    }\n   /* function transferERC1155AssetsToWallet(\n        bytes memory _oldPassword,\n        bytes32 _newEncryptedPassword,\n        address tokenAddress,\n        uint256 tokenId\n    )\n        external\n        onlyOwner\n        passwordMatchAndNewUpdated(_oldPassword, _newEncryptedPassword)\n        encryptedPasswordNotNull(_newEncryptedPassword)\n    {\n        encryptedPassword = _newEncryptedPassword;\n        _transferERC1155FundsToAddress(owner(), tokenAddress, tokenId);\n    }*/\n\n   /* function transferNativeAssetToWallet() external onlyOwner {\n        _transferNativeFundsToAddress(payable(owner()));\n    } */\n\n    //put old raw password and new hashed password\n /*   function updatePassword(\n        bytes memory _oldPassword,\n        bytes32 _newEncryptedPassword\n    )\n        external\n        onlyOwner\n        passwordMatchAndNewUpdated(_oldPassword, _newEncryptedPassword)\n        encryptedPasswordNotNull(_newEncryptedPassword)\n    {\n        encryptedPassword = _newEncryptedPassword;\n    }\n\n    modifier passwordMatchAndNewUpdated(\n        bytes memory _oldPassword,\n        bytes32 _newEncryptedPassword\n    ) {\n        bytes32 _passwordSent = keccak256(abi.encodePacked(_oldPassword));\n        require(\n            _passwordSent != _newEncryptedPassword,\n            \"New password should be different\"\n        );\n        require(_passwordSent == encryptedPassword, \"Passwords don't match\");\n        _;\n    }\n\n    modifier encryptedPasswordNotNull(bytes32 _encryptedPassword)\n    {\n        require(_encryptedPassword != keccak256(abi.encodePacked('')), \"Password can not be null\");\n        _;\n\n    }\n\n\n    //WHEN WALLET KEYS GET COMPROMISED OR 2FA PASSWORD IS LOST, WE RECOMMEND TO SEND YOUR ASSETS TO RECOVERY WALLET (OR COLD WALLET)\n\n    function sendERC20FundsToBackupWallet(\n        address[] memory erc20tokenAddressList\n    ) external onlyOwner {\n        _transferERC20FundsToAddress(backupWallet, erc20tokenAddressList);\n    } */\n\n    function sendERC721FundsToBackupWallet(\n        address tokenAddress,\n        uint256 tokenId\n    ) external onlyOwner {\n        _transferERC721FundsToAddress(backupWallet, tokenAddress, tokenId);\n    }\n\n   /* function sendERC1155FundsToBackupWallet(\n        address tokenAddress,\n        uint256 tokenId\n    ) external onlyOwner {\n        _transferERC1155FundsToAddress(backupWallet, tokenAddress, tokenId);\n    } */\n\n    function sendNativeFundsToBackupWallet() external onlyOwner {\n        _transferNativeFundsToAddress(payable(backupWallet));\n    }\n\n   \n\n  /*  function _transferERC1155FundsToAddress(\n        address toAddress,\n        address tokenAddress,\n        uint256 tokenId\n    ) private {\n        uint256 balance = IERC1155(tokenAddress).balanceOf(\n            address(this),\n            tokenId\n        );\n        if (balance > 0) {\n            IERC1155(tokenAddress).safeTransferFrom(\n                address(this),\n                toAddress,\n                tokenId,\n                balance,\n                \"\"\n            );\n        }\n    }\n\n    function _transferERC20FundsToAddress(\n        address toAddress,\n        address[] memory tokenAddressList\n    ) private {\n        require(tokenAddressList.length != 0, \"Assets list cannot be empty\");\n        for (uint256 i = 0; i < tokenAddressList.length; i++) {\n            uint256 balance = IERC20(tokenAddressList[i]).balanceOf(\n                address(this)\n            );\n            if (balance > 0) {\n                IERC20(tokenAddressList[i]).safeTransfer(toAddress, balance);\n            }\n        }\n    }*/\n\n    function _transferNativeFundsToAddress(address payable toAddress) private {\n        uint256 balance = address(this).balance;\n        if (balance > 0) {\n            toAddress.transfer(balance);\n        }\n    }\n}"
			},
			"Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.7;\nimport \"@openzeppelin/contracts/utils/Context.sol\";\n/** \n * @dev This contract module is inspired from \n * https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\n * OpenZepplin Ownable contract. The code is forked from Ownable except \n * 2 functions i.e. renounce and transfer ownership. In our usecase, we do not require users \n * to transfer or renounce ownership as it is always aligned with the original user.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(\n        address indexed previousOwner,\n        address indexed newOwner\n    );\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}"
			},
			"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC1155/utils/ERC1155Holder.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./ERC1155Receiver.sol\";\n\n/**\n * Simple implementation of `ERC1155Receiver` that will allow a contract to hold ERC1155 tokens.\n *\n * IMPORTANT: When inheriting this contract, you must include a way to use the received tokens, otherwise they will be\n * stuck.\n *\n * @dev _Available since v3.1._\n */\ncontract ERC1155Holder is ERC1155Receiver {\n    function onERC1155Received(\n        address,\n        address,\n        uint256,\n        uint256,\n        bytes memory\n    ) public virtual override returns (bytes4) {\n        return this.onERC1155Received.selector;\n    }\n\n    function onERC1155BatchReceived(\n        address,\n        address,\n        uint256[] memory,\n        uint256[] memory,\n        bytes memory\n    ) public virtual override returns (bytes4) {\n        return this.onERC1155BatchReceived.selector;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/IERC1155.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\n *\n * _Available since v3.1._\n */\ninterface IERC1155 is IERC165 {\n    /**\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    event TransferBatch(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256[] ids,\n        uint256[] values\n    );\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) external view returns (uint256);\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids)\n        external\n        view\n        returns (uint256[] memory);\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the caller.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address account, address operator) external view returns (bool);\n\n    /**\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata amounts,\n        bytes calldata data\n    ) external;\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/utils/ERC721Holder.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC721Receiver.sol\";\n\n/**\n * @dev Implementation of the {IERC721Receiver} interface.\n *\n * Accepts all token transfers.\n * Make sure the contract is able to use its token with {IERC721-safeTransferFrom}, {IERC721-approve} or {IERC721-setApprovalForAll}.\n */\ncontract ERC721Holder is IERC721Receiver {\n    /**\n     * @dev See {IERC721Receiver-onERC721Received}.\n     *\n     * Always returns `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address,\n        address,\n        uint256,\n        bytes memory\n    ) public virtual override returns (bytes4) {\n        return this.onERC721Received.selector;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\nimport \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    function safeTransfer(\n        IERC20 token,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(\n        IERC20 token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            uint256 newAllowance = oldAllowance - value;\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) {\n            // Return data is optional\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/utils/ERC1155Receiver.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC1155Receiver.sol\";\nimport \"../../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev _Available since v3.1._\n */\nabstract contract ERC1155Receiver is ERC165, IERC1155Receiver {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return interfaceId == type(IERC1155Receiver).interfaceId || super.supportsInterface(interfaceId);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC1155/IERC1155Receiver.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev _Available since v3.1._\n */\ninterface IERC1155Receiver is IERC165 {\n    /**\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\n     *\n     * NOTE: To accept the transfer, this must return\n     * `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n     * (i.e. 0xf23a6e61, or its own function selector).\n     *\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param id The ID of the token being transferred\n     * @param value The amount of tokens being transferred\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n     */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n\n    /**\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\n     * been updated.\n     *\n     * NOTE: To accept the transfer(s), this must return\n     * `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n     * (i.e. 0xbc197c81, or its own function selector).\n     *\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n     */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"IERC1155": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._",
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":\"IERC1155\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x8e93de94c9062ebc94fb7e2e3929b0781ac6a2b7772e2f7a59045861c93e5be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f920a631bf986c610fe573d3c70a2bb6f224f86f4a8550016470c7ee476c9ab5\",\"dweb:/ipfs/QmYzsyVMfnaREKHcHv5RPS8Xg5r1Q38E2SDsGBTnXeFWzb\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"IERC1155Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "_Available since v3.1._",
						"kind": "dev",
						"methods": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
								"details": "Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"ids": "An array containing ids of each token being transferred (order and length must match values array)",
									"operator": "The address which initiated the batch transfer (i.e. msg.sender)",
									"values": "An array containing amounts of each token being transferred (order and length must match ids array)"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
								}
							},
							"onERC1155Received(address,address,uint256,uint256,bytes)": {
								"details": "Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"id": "The ID of the token being transferred",
									"operator": "The address which initiated the transfer (i.e. msg.sender)",
									"value": "The amount of tokens being transferred"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"_Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol": {
				"ERC1155Holder": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "_Available since v3.1._",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":451:973  contract ERC1155Holder is ERC1155Receiver {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":451:973  contract ERC1155Holder is ERC1155Receiver {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xbc197c81\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xf23a6e61\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":387:608  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_3:\n      tag_6\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      tag_9\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":724:971  function onERC1155BatchReceived(... */\n    tag_4:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":499:718  function onERC1155Received(... */\n    tag_5:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":387:608  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_9:\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":489:493  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":527:561  type(IERC1155Receiver).interfaceId */\n      0x4e2312e000000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":512:561  interfaceId == type(IERC1155Receiver).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":512:523  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":512:561  interfaceId == type(IERC1155Receiver).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":512:601  interfaceId == type(IERC1155Receiver).interfaceId || super.supportsInterface(interfaceId) */\n      dup1\n      tag_24\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":565:601  super.supportsInterface(interfaceId) */\n      tag_25\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":589:600  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":565:588  super.supportsInterface */\n      tag_26\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":565:601  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_25:\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":512:601  interfaceId == type(IERC1155Receiver).interfaceId || super.supportsInterface(interfaceId) */\n    tag_24:\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":505:601  return interfaceId == type(IERC1155Receiver).interfaceId || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":387:608  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":724:971  function onERC1155BatchReceived(... */\n    tag_15:\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":903:909  bytes4 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":928:964  this.onERC1155BatchReceived.selector */\n      shl(0xe0, 0xbc197c81)\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":921:964  return this.onERC1155BatchReceived.selector */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":724:971  function onERC1155BatchReceived(... */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":499:718  function onERC1155Received(... */\n    tag_21:\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":655:661  bytes4 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":680:711  this.onERC1155Received.selector */\n      shl(0xe0, 0xf23a6e61)\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":673:711  return this.onERC1155Received.selector */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":499:718  function onERC1155Received(... */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_26:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":914:918  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":952:977  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:948  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":930:977  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24:746   */\n    tag_31:\n        /* \"#utility.yul\":120:125   */\n      0x00\n        /* \"#utility.yul\":145:226   */\n      tag_33\n        /* \"#utility.yul\":161:225   */\n      tag_34\n        /* \"#utility.yul\":218:224   */\n      dup5\n        /* \"#utility.yul\":161:225   */\n      tag_35\n      jump\t// in\n    tag_34:\n        /* \"#utility.yul\":145:226   */\n      tag_36\n      jump\t// in\n    tag_33:\n        /* \"#utility.yul\":136:226   */\n      swap1\n      pop\n        /* \"#utility.yul\":246:251   */\n      dup1\n        /* \"#utility.yul\":275:281   */\n      dup4\n        /* \"#utility.yul\":268:273   */\n      dup3\n        /* \"#utility.yul\":261:282   */\n      mstore\n        /* \"#utility.yul\":309:313   */\n      0x20\n        /* \"#utility.yul\":302:307   */\n      dup3\n        /* \"#utility.yul\":298:314   */\n      add\n        /* \"#utility.yul\":291:314   */\n      swap1\n      pop\n        /* \"#utility.yul\":335:341   */\n      dup3\n        /* \"#utility.yul\":385:388   */\n      dup6\n        /* \"#utility.yul\":377:381   */\n      0x20\n        /* \"#utility.yul\":369:375   */\n      dup7\n        /* \"#utility.yul\":365:382   */\n      mul\n        /* \"#utility.yul\":360:363   */\n      dup3\n        /* \"#utility.yul\":356:383   */\n      add\n        /* \"#utility.yul\":353:389   */\n      gt\n        /* \"#utility.yul\":350:493   */\n      iszero\n      tag_37\n      jumpi\n        /* \"#utility.yul\":404:483   */\n      tag_38\n      tag_39\n      jump\t// in\n    tag_38:\n        /* \"#utility.yul\":350:493   */\n    tag_37:\n        /* \"#utility.yul\":517:518   */\n      0x00\n        /* \"#utility.yul\":502:740   */\n    tag_40:\n        /* \"#utility.yul\":527:533   */\n      dup6\n        /* \"#utility.yul\":524:525   */\n      dup2\n        /* \"#utility.yul\":521:534   */\n      lt\n        /* \"#utility.yul\":502:740   */\n      iszero\n      tag_42\n      jumpi\n        /* \"#utility.yul\":595:598   */\n      dup2\n        /* \"#utility.yul\":624:661   */\n      tag_43\n        /* \"#utility.yul\":657:660   */\n      dup9\n        /* \"#utility.yul\":645:655   */\n      dup3\n        /* \"#utility.yul\":624:661   */\n      tag_44\n      jump\t// in\n    tag_43:\n        /* \"#utility.yul\":619:622   */\n      dup5\n        /* \"#utility.yul\":612:662   */\n      mstore\n        /* \"#utility.yul\":691:695   */\n      0x20\n        /* \"#utility.yul\":686:689   */\n      dup5\n        /* \"#utility.yul\":682:696   */\n      add\n        /* \"#utility.yul\":675:696   */\n      swap4\n      pop\n        /* \"#utility.yul\":725:729   */\n      0x20\n        /* \"#utility.yul\":720:723   */\n      dup4\n        /* \"#utility.yul\":716:730   */\n      add\n        /* \"#utility.yul\":709:730   */\n      swap3\n      pop\n        /* \"#utility.yul\":562:740   */\n      pop\n        /* \"#utility.yul\":549:550   */\n      0x01\n        /* \"#utility.yul\":546:547   */\n      dup2\n        /* \"#utility.yul\":542:551   */\n      add\n        /* \"#utility.yul\":537:551   */\n      swap1\n      pop\n        /* \"#utility.yul\":502:740   */\n      jump(tag_40)\n    tag_42:\n        /* \"#utility.yul\":506:520   */\n      pop\n        /* \"#utility.yul\":126:746   */\n      pop\n      pop\n        /* \"#utility.yul\":24:746   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":752:1162   */\n    tag_45:\n        /* \"#utility.yul\":829:834   */\n      0x00\n        /* \"#utility.yul\":854:919   */\n      tag_47\n        /* \"#utility.yul\":870:918   */\n      tag_48\n        /* \"#utility.yul\":911:917   */\n      dup5\n        /* \"#utility.yul\":870:918   */\n      tag_49\n      jump\t// in\n    tag_48:\n        /* \"#utility.yul\":854:919   */\n      tag_36\n      jump\t// in\n    tag_47:\n        /* \"#utility.yul\":845:919   */\n      swap1\n      pop\n        /* \"#utility.yul\":942:948   */\n      dup3\n        /* \"#utility.yul\":935:940   */\n      dup2\n        /* \"#utility.yul\":928:949   */\n      mstore\n        /* \"#utility.yul\":980:984   */\n      0x20\n        /* \"#utility.yul\":973:978   */\n      dup2\n        /* \"#utility.yul\":969:985   */\n      add\n        /* \"#utility.yul\":1018:1021   */\n      dup5\n        /* \"#utility.yul\":1009:1015   */\n      dup5\n        /* \"#utility.yul\":1004:1007   */\n      dup5\n        /* \"#utility.yul\":1000:1016   */\n      add\n        /* \"#utility.yul\":997:1022   */\n      gt\n        /* \"#utility.yul\":994:1106   */\n      iszero\n      tag_50\n      jumpi\n        /* \"#utility.yul\":1025:1104   */\n      tag_51\n      tag_52\n      jump\t// in\n    tag_51:\n        /* \"#utility.yul\":994:1106   */\n    tag_50:\n        /* \"#utility.yul\":1115:1156   */\n      tag_53\n        /* \"#utility.yul\":1149:1155   */\n      dup5\n        /* \"#utility.yul\":1144:1147   */\n      dup3\n        /* \"#utility.yul\":1139:1142   */\n      dup6\n        /* \"#utility.yul\":1115:1156   */\n      tag_54\n      jump\t// in\n    tag_53:\n        /* \"#utility.yul\":835:1162   */\n      pop\n        /* \"#utility.yul\":752:1162   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1168:1307   */\n    tag_55:\n        /* \"#utility.yul\":1214:1219   */\n      0x00\n        /* \"#utility.yul\":1252:1258   */\n      dup2\n        /* \"#utility.yul\":1239:1259   */\n      calldataload\n        /* \"#utility.yul\":1230:1259   */\n      swap1\n      pop\n        /* \"#utility.yul\":1268:1301   */\n      tag_57\n        /* \"#utility.yul\":1295:1300   */\n      dup2\n        /* \"#utility.yul\":1268:1301   */\n      tag_58\n      jump\t// in\n    tag_57:\n        /* \"#utility.yul\":1168:1307   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1330:1700   */\n    tag_59:\n        /* \"#utility.yul\":1401:1406   */\n      0x00\n        /* \"#utility.yul\":1450:1453   */\n      dup3\n        /* \"#utility.yul\":1443:1447   */\n      0x1f\n        /* \"#utility.yul\":1435:1441   */\n      dup4\n        /* \"#utility.yul\":1431:1448   */\n      add\n        /* \"#utility.yul\":1427:1454   */\n      slt\n        /* \"#utility.yul\":1417:1539   */\n      tag_61\n      jumpi\n        /* \"#utility.yul\":1458:1537   */\n      tag_62\n      tag_63\n      jump\t// in\n    tag_62:\n        /* \"#utility.yul\":1417:1539   */\n    tag_61:\n        /* \"#utility.yul\":1575:1581   */\n      dup2\n        /* \"#utility.yul\":1562:1582   */\n      calldataload\n        /* \"#utility.yul\":1600:1694   */\n      tag_64\n        /* \"#utility.yul\":1690:1693   */\n      dup5\n        /* \"#utility.yul\":1682:1688   */\n      dup3\n        /* \"#utility.yul\":1675:1679   */\n      0x20\n        /* \"#utility.yul\":1667:1673   */\n      dup7\n        /* \"#utility.yul\":1663:1680   */\n      add\n        /* \"#utility.yul\":1600:1694   */\n      tag_31\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":1591:1694   */\n      swap2\n      pop\n        /* \"#utility.yul\":1407:1700   */\n      pop\n        /* \"#utility.yul\":1330:1700   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1706:1843   */\n    tag_65:\n        /* \"#utility.yul\":1751:1756   */\n      0x00\n        /* \"#utility.yul\":1789:1795   */\n      dup2\n        /* \"#utility.yul\":1776:1796   */\n      calldataload\n        /* \"#utility.yul\":1767:1796   */\n      swap1\n      pop\n        /* \"#utility.yul\":1805:1837   */\n      tag_67\n        /* \"#utility.yul\":1831:1836   */\n      dup2\n        /* \"#utility.yul\":1805:1837   */\n      tag_68\n      jump\t// in\n    tag_67:\n        /* \"#utility.yul\":1706:1843   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1862:2200   */\n    tag_69:\n        /* \"#utility.yul\":1917:1922   */\n      0x00\n        /* \"#utility.yul\":1966:1969   */\n      dup3\n        /* \"#utility.yul\":1959:1963   */\n      0x1f\n        /* \"#utility.yul\":1951:1957   */\n      dup4\n        /* \"#utility.yul\":1947:1964   */\n      add\n        /* \"#utility.yul\":1943:1970   */\n      slt\n        /* \"#utility.yul\":1933:2055   */\n      tag_71\n      jumpi\n        /* \"#utility.yul\":1974:2053   */\n      tag_72\n      tag_63\n      jump\t// in\n    tag_72:\n        /* \"#utility.yul\":1933:2055   */\n    tag_71:\n        /* \"#utility.yul\":2091:2097   */\n      dup2\n        /* \"#utility.yul\":2078:2098   */\n      calldataload\n        /* \"#utility.yul\":2116:2194   */\n      tag_73\n        /* \"#utility.yul\":2190:2193   */\n      dup5\n        /* \"#utility.yul\":2182:2188   */\n      dup3\n        /* \"#utility.yul\":2175:2179   */\n      0x20\n        /* \"#utility.yul\":2167:2173   */\n      dup7\n        /* \"#utility.yul\":2163:2180   */\n      add\n        /* \"#utility.yul\":2116:2194   */\n      tag_45\n      jump\t// in\n    tag_73:\n        /* \"#utility.yul\":2107:2194   */\n      swap2\n      pop\n        /* \"#utility.yul\":1923:2200   */\n      pop\n        /* \"#utility.yul\":1862:2200   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2206:2345   */\n    tag_44:\n        /* \"#utility.yul\":2252:2257   */\n      0x00\n        /* \"#utility.yul\":2290:2296   */\n      dup2\n        /* \"#utility.yul\":2277:2297   */\n      calldataload\n        /* \"#utility.yul\":2268:2297   */\n      swap1\n      pop\n        /* \"#utility.yul\":2306:2339   */\n      tag_75\n        /* \"#utility.yul\":2333:2338   */\n      dup2\n        /* \"#utility.yul\":2306:2339   */\n      tag_76\n      jump\t// in\n    tag_75:\n        /* \"#utility.yul\":2206:2345   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2351:3860   */\n    tag_14:\n        /* \"#utility.yul\":2505:2511   */\n      0x00\n        /* \"#utility.yul\":2513:2519   */\n      dup1\n        /* \"#utility.yul\":2521:2527   */\n      0x00\n        /* \"#utility.yul\":2529:2535   */\n      dup1\n        /* \"#utility.yul\":2537:2543   */\n      0x00\n        /* \"#utility.yul\":2586:2589   */\n      0xa0\n        /* \"#utility.yul\":2574:2583   */\n      dup7\n        /* \"#utility.yul\":2565:2572   */\n      dup9\n        /* \"#utility.yul\":2561:2584   */\n      sub\n        /* \"#utility.yul\":2557:2590   */\n      slt\n        /* \"#utility.yul\":2554:2674   */\n      iszero\n      tag_78\n      jumpi\n        /* \"#utility.yul\":2593:2672   */\n      tag_79\n      tag_80\n      jump\t// in\n    tag_79:\n        /* \"#utility.yul\":2554:2674   */\n    tag_78:\n        /* \"#utility.yul\":2713:2714   */\n      0x00\n        /* \"#utility.yul\":2738:2791   */\n      tag_81\n        /* \"#utility.yul\":2783:2790   */\n      dup9\n        /* \"#utility.yul\":2774:2780   */\n      dup3\n        /* \"#utility.yul\":2763:2772   */\n      dup10\n        /* \"#utility.yul\":2759:2781   */\n      add\n        /* \"#utility.yul\":2738:2791   */\n      tag_55\n      jump\t// in\n    tag_81:\n        /* \"#utility.yul\":2728:2791   */\n      swap6\n      pop\n        /* \"#utility.yul\":2684:2801   */\n      pop\n        /* \"#utility.yul\":2840:2842   */\n      0x20\n        /* \"#utility.yul\":2866:2919   */\n      tag_82\n        /* \"#utility.yul\":2911:2918   */\n      dup9\n        /* \"#utility.yul\":2902:2908   */\n      dup3\n        /* \"#utility.yul\":2891:2900   */\n      dup10\n        /* \"#utility.yul\":2887:2909   */\n      add\n        /* \"#utility.yul\":2866:2919   */\n      tag_55\n      jump\t// in\n    tag_82:\n        /* \"#utility.yul\":2856:2919   */\n      swap5\n      pop\n        /* \"#utility.yul\":2811:2929   */\n      pop\n        /* \"#utility.yul\":2996:2998   */\n      0x40\n        /* \"#utility.yul\":2985:2994   */\n      dup7\n        /* \"#utility.yul\":2981:2999   */\n      add\n        /* \"#utility.yul\":2968:3000   */\n      calldataload\n        /* \"#utility.yul\":3027:3045   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3019:3025   */\n      dup2\n        /* \"#utility.yul\":3016:3046   */\n      gt\n        /* \"#utility.yul\":3013:3130   */\n      iszero\n      tag_83\n      jumpi\n        /* \"#utility.yul\":3049:3128   */\n      tag_84\n      tag_85\n      jump\t// in\n    tag_84:\n        /* \"#utility.yul\":3013:3130   */\n    tag_83:\n        /* \"#utility.yul\":3154:3232   */\n      tag_86\n        /* \"#utility.yul\":3224:3231   */\n      dup9\n        /* \"#utility.yul\":3215:3221   */\n      dup3\n        /* \"#utility.yul\":3204:3213   */\n      dup10\n        /* \"#utility.yul\":3200:3222   */\n      add\n        /* \"#utility.yul\":3154:3232   */\n      tag_59\n      jump\t// in\n    tag_86:\n        /* \"#utility.yul\":3144:3232   */\n      swap4\n      pop\n        /* \"#utility.yul\":2939:3242   */\n      pop\n        /* \"#utility.yul\":3309:3311   */\n      0x60\n        /* \"#utility.yul\":3298:3307   */\n      dup7\n        /* \"#utility.yul\":3294:3312   */\n      add\n        /* \"#utility.yul\":3281:3313   */\n      calldataload\n        /* \"#utility.yul\":3340:3358   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3332:3338   */\n      dup2\n        /* \"#utility.yul\":3329:3359   */\n      gt\n        /* \"#utility.yul\":3326:3443   */\n      iszero\n      tag_87\n      jumpi\n        /* \"#utility.yul\":3362:3441   */\n      tag_88\n      tag_85\n      jump\t// in\n    tag_88:\n        /* \"#utility.yul\":3326:3443   */\n    tag_87:\n        /* \"#utility.yul\":3467:3545   */\n      tag_89\n        /* \"#utility.yul\":3537:3544   */\n      dup9\n        /* \"#utility.yul\":3528:3534   */\n      dup3\n        /* \"#utility.yul\":3517:3526   */\n      dup10\n        /* \"#utility.yul\":3513:3535   */\n      add\n        /* \"#utility.yul\":3467:3545   */\n      tag_59\n      jump\t// in\n    tag_89:\n        /* \"#utility.yul\":3457:3545   */\n      swap3\n      pop\n        /* \"#utility.yul\":3252:3555   */\n      pop\n        /* \"#utility.yul\":3622:3625   */\n      0x80\n        /* \"#utility.yul\":3611:3620   */\n      dup7\n        /* \"#utility.yul\":3607:3626   */\n      add\n        /* \"#utility.yul\":3594:3627   */\n      calldataload\n        /* \"#utility.yul\":3654:3672   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3646:3652   */\n      dup2\n        /* \"#utility.yul\":3643:3673   */\n      gt\n        /* \"#utility.yul\":3640:3757   */\n      iszero\n      tag_90\n      jumpi\n        /* \"#utility.yul\":3676:3755   */\n      tag_91\n      tag_85\n      jump\t// in\n    tag_91:\n        /* \"#utility.yul\":3640:3757   */\n    tag_90:\n        /* \"#utility.yul\":3781:3843   */\n      tag_92\n        /* \"#utility.yul\":3835:3842   */\n      dup9\n        /* \"#utility.yul\":3826:3832   */\n      dup3\n        /* \"#utility.yul\":3815:3824   */\n      dup10\n        /* \"#utility.yul\":3811:3833   */\n      add\n        /* \"#utility.yul\":3781:3843   */\n      tag_69\n      jump\t// in\n    tag_92:\n        /* \"#utility.yul\":3771:3843   */\n      swap2\n      pop\n        /* \"#utility.yul\":3565:3853   */\n      pop\n        /* \"#utility.yul\":2351:3860   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3866:4955   */\n    tag_20:\n        /* \"#utility.yul\":3970:3976   */\n      0x00\n        /* \"#utility.yul\":3978:3984   */\n      dup1\n        /* \"#utility.yul\":3986:3992   */\n      0x00\n        /* \"#utility.yul\":3994:4000   */\n      dup1\n        /* \"#utility.yul\":4002:4008   */\n      0x00\n        /* \"#utility.yul\":4051:4054   */\n      0xa0\n        /* \"#utility.yul\":4039:4048   */\n      dup7\n        /* \"#utility.yul\":4030:4037   */\n      dup9\n        /* \"#utility.yul\":4026:4049   */\n      sub\n        /* \"#utility.yul\":4022:4055   */\n      slt\n        /* \"#utility.yul\":4019:4139   */\n      iszero\n      tag_94\n      jumpi\n        /* \"#utility.yul\":4058:4137   */\n      tag_95\n      tag_80\n      jump\t// in\n    tag_95:\n        /* \"#utility.yul\":4019:4139   */\n    tag_94:\n        /* \"#utility.yul\":4178:4179   */\n      0x00\n        /* \"#utility.yul\":4203:4256   */\n      tag_96\n        /* \"#utility.yul\":4248:4255   */\n      dup9\n        /* \"#utility.yul\":4239:4245   */\n      dup3\n        /* \"#utility.yul\":4228:4237   */\n      dup10\n        /* \"#utility.yul\":4224:4246   */\n      add\n        /* \"#utility.yul\":4203:4256   */\n      tag_55\n      jump\t// in\n    tag_96:\n        /* \"#utility.yul\":4193:4256   */\n      swap6\n      pop\n        /* \"#utility.yul\":4149:4266   */\n      pop\n        /* \"#utility.yul\":4305:4307   */\n      0x20\n        /* \"#utility.yul\":4331:4384   */\n      tag_97\n        /* \"#utility.yul\":4376:4383   */\n      dup9\n        /* \"#utility.yul\":4367:4373   */\n      dup3\n        /* \"#utility.yul\":4356:4365   */\n      dup10\n        /* \"#utility.yul\":4352:4374   */\n      add\n        /* \"#utility.yul\":4331:4384   */\n      tag_55\n      jump\t// in\n    tag_97:\n        /* \"#utility.yul\":4321:4384   */\n      swap5\n      pop\n        /* \"#utility.yul\":4276:4394   */\n      pop\n        /* \"#utility.yul\":4433:4435   */\n      0x40\n        /* \"#utility.yul\":4459:4512   */\n      tag_98\n        /* \"#utility.yul\":4504:4511   */\n      dup9\n        /* \"#utility.yul\":4495:4501   */\n      dup3\n        /* \"#utility.yul\":4484:4493   */\n      dup10\n        /* \"#utility.yul\":4480:4502   */\n      add\n        /* \"#utility.yul\":4459:4512   */\n      tag_44\n      jump\t// in\n    tag_98:\n        /* \"#utility.yul\":4449:4512   */\n      swap4\n      pop\n        /* \"#utility.yul\":4404:4522   */\n      pop\n        /* \"#utility.yul\":4561:4563   */\n      0x60\n        /* \"#utility.yul\":4587:4640   */\n      tag_99\n        /* \"#utility.yul\":4632:4639   */\n      dup9\n        /* \"#utility.yul\":4623:4629   */\n      dup3\n        /* \"#utility.yul\":4612:4621   */\n      dup10\n        /* \"#utility.yul\":4608:4630   */\n      add\n        /* \"#utility.yul\":4587:4640   */\n      tag_44\n      jump\t// in\n    tag_99:\n        /* \"#utility.yul\":4577:4640   */\n      swap3\n      pop\n        /* \"#utility.yul\":4532:4650   */\n      pop\n        /* \"#utility.yul\":4717:4720   */\n      0x80\n        /* \"#utility.yul\":4706:4715   */\n      dup7\n        /* \"#utility.yul\":4702:4721   */\n      add\n        /* \"#utility.yul\":4689:4722   */\n      calldataload\n        /* \"#utility.yul\":4749:4767   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4741:4747   */\n      dup2\n        /* \"#utility.yul\":4738:4768   */\n      gt\n        /* \"#utility.yul\":4735:4852   */\n      iszero\n      tag_100\n      jumpi\n        /* \"#utility.yul\":4771:4850   */\n      tag_101\n      tag_85\n      jump\t// in\n    tag_101:\n        /* \"#utility.yul\":4735:4852   */\n    tag_100:\n        /* \"#utility.yul\":4876:4938   */\n      tag_102\n        /* \"#utility.yul\":4930:4937   */\n      dup9\n        /* \"#utility.yul\":4921:4927   */\n      dup3\n        /* \"#utility.yul\":4910:4919   */\n      dup10\n        /* \"#utility.yul\":4906:4928   */\n      add\n        /* \"#utility.yul\":4876:4938   */\n      tag_69\n      jump\t// in\n    tag_102:\n        /* \"#utility.yul\":4866:4938   */\n      swap2\n      pop\n        /* \"#utility.yul\":4660:4948   */\n      pop\n        /* \"#utility.yul\":3866:4955   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4961:5288   */\n    tag_8:\n        /* \"#utility.yul\":5019:5025   */\n      0x00\n        /* \"#utility.yul\":5068:5070   */\n      0x20\n        /* \"#utility.yul\":5056:5065   */\n      dup3\n        /* \"#utility.yul\":5047:5054   */\n      dup5\n        /* \"#utility.yul\":5043:5066   */\n      sub\n        /* \"#utility.yul\":5039:5071   */\n      slt\n        /* \"#utility.yul\":5036:5155   */\n      iszero\n      tag_104\n      jumpi\n        /* \"#utility.yul\":5074:5153   */\n      tag_105\n      tag_80\n      jump\t// in\n    tag_105:\n        /* \"#utility.yul\":5036:5155   */\n    tag_104:\n        /* \"#utility.yul\":5194:5195   */\n      0x00\n        /* \"#utility.yul\":5219:5271   */\n      tag_106\n        /* \"#utility.yul\":5263:5270   */\n      dup5\n        /* \"#utility.yul\":5254:5260   */\n      dup3\n        /* \"#utility.yul\":5243:5252   */\n      dup6\n        /* \"#utility.yul\":5239:5261   */\n      add\n        /* \"#utility.yul\":5219:5271   */\n      tag_65\n      jump\t// in\n    tag_106:\n        /* \"#utility.yul\":5209:5271   */\n      swap2\n      pop\n        /* \"#utility.yul\":5165:5281   */\n      pop\n        /* \"#utility.yul\":4961:5288   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5294:5403   */\n    tag_107:\n        /* \"#utility.yul\":5375:5396   */\n      tag_109\n        /* \"#utility.yul\":5390:5395   */\n      dup2\n        /* \"#utility.yul\":5375:5396   */\n      tag_110\n      jump\t// in\n    tag_109:\n        /* \"#utility.yul\":5370:5373   */\n      dup3\n        /* \"#utility.yul\":5363:5397   */\n      mstore\n        /* \"#utility.yul\":5294:5403   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5409:5524   */\n    tag_111:\n        /* \"#utility.yul\":5494:5517   */\n      tag_113\n        /* \"#utility.yul\":5511:5516   */\n      dup2\n        /* \"#utility.yul\":5494:5517   */\n      tag_114\n      jump\t// in\n    tag_113:\n        /* \"#utility.yul\":5489:5492   */\n      dup3\n        /* \"#utility.yul\":5482:5518   */\n      mstore\n        /* \"#utility.yul\":5409:5524   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5530:5740   */\n    tag_11:\n        /* \"#utility.yul\":5617:5621   */\n      0x00\n        /* \"#utility.yul\":5655:5657   */\n      0x20\n        /* \"#utility.yul\":5644:5653   */\n      dup3\n        /* \"#utility.yul\":5640:5658   */\n      add\n        /* \"#utility.yul\":5632:5658   */\n      swap1\n      pop\n        /* \"#utility.yul\":5668:5733   */\n      tag_116\n        /* \"#utility.yul\":5730:5731   */\n      0x00\n        /* \"#utility.yul\":5719:5728   */\n      dup4\n        /* \"#utility.yul\":5715:5732   */\n      add\n        /* \"#utility.yul\":5706:5712   */\n      dup5\n        /* \"#utility.yul\":5668:5733   */\n      tag_107\n      jump\t// in\n    tag_116:\n        /* \"#utility.yul\":5530:5740   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5746:5964   */\n    tag_17:\n        /* \"#utility.yul\":5837:5841   */\n      0x00\n        /* \"#utility.yul\":5875:5877   */\n      0x20\n        /* \"#utility.yul\":5864:5873   */\n      dup3\n        /* \"#utility.yul\":5860:5878   */\n      add\n        /* \"#utility.yul\":5852:5878   */\n      swap1\n      pop\n        /* \"#utility.yul\":5888:5957   */\n      tag_118\n        /* \"#utility.yul\":5954:5955   */\n      0x00\n        /* \"#utility.yul\":5943:5952   */\n      dup4\n        /* \"#utility.yul\":5939:5956   */\n      add\n        /* \"#utility.yul\":5930:5936   */\n      dup5\n        /* \"#utility.yul\":5888:5957   */\n      tag_111\n      jump\t// in\n    tag_118:\n        /* \"#utility.yul\":5746:5964   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5970:6099   */\n    tag_36:\n        /* \"#utility.yul\":6004:6010   */\n      0x00\n        /* \"#utility.yul\":6031:6051   */\n      tag_120\n      tag_121\n      jump\t// in\n    tag_120:\n        /* \"#utility.yul\":6021:6051   */\n      swap1\n      pop\n        /* \"#utility.yul\":6060:6093   */\n      tag_122\n        /* \"#utility.yul\":6088:6092   */\n      dup3\n        /* \"#utility.yul\":6080:6086   */\n      dup3\n        /* \"#utility.yul\":6060:6093   */\n      tag_123\n      jump\t// in\n    tag_122:\n        /* \"#utility.yul\":5970:6099   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6105:6180   */\n    tag_121:\n        /* \"#utility.yul\":6138:6144   */\n      0x00\n        /* \"#utility.yul\":6171:6173   */\n      0x40\n        /* \"#utility.yul\":6165:6174   */\n      mload\n        /* \"#utility.yul\":6155:6174   */\n      swap1\n      pop\n        /* \"#utility.yul\":6105:6180   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":6186:6497   */\n    tag_35:\n        /* \"#utility.yul\":6263:6267   */\n      0x00\n        /* \"#utility.yul\":6353:6371   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6345:6351   */\n      dup3\n        /* \"#utility.yul\":6342:6372   */\n      gt\n        /* \"#utility.yul\":6339:6395   */\n      iszero\n      tag_126\n      jumpi\n        /* \"#utility.yul\":6375:6393   */\n      tag_127\n      tag_128\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":6339:6395   */\n    tag_126:\n        /* \"#utility.yul\":6425:6429   */\n      0x20\n        /* \"#utility.yul\":6417:6423   */\n      dup3\n        /* \"#utility.yul\":6413:6430   */\n      mul\n        /* \"#utility.yul\":6405:6430   */\n      swap1\n      pop\n        /* \"#utility.yul\":6485:6489   */\n      0x20\n        /* \"#utility.yul\":6479:6483   */\n      dup2\n        /* \"#utility.yul\":6475:6490   */\n      add\n        /* \"#utility.yul\":6467:6490   */\n      swap1\n      pop\n        /* \"#utility.yul\":6186:6497   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6503:6810   */\n    tag_49:\n        /* \"#utility.yul\":6564:6568   */\n      0x00\n        /* \"#utility.yul\":6654:6672   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6646:6652   */\n      dup3\n        /* \"#utility.yul\":6643:6673   */\n      gt\n        /* \"#utility.yul\":6640:6696   */\n      iszero\n      tag_130\n      jumpi\n        /* \"#utility.yul\":6676:6694   */\n      tag_131\n      tag_128\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":6640:6696   */\n    tag_130:\n        /* \"#utility.yul\":6714:6743   */\n      tag_132\n        /* \"#utility.yul\":6736:6742   */\n      dup3\n        /* \"#utility.yul\":6714:6743   */\n      tag_133\n      jump\t// in\n    tag_132:\n        /* \"#utility.yul\":6706:6743   */\n      swap1\n      pop\n        /* \"#utility.yul\":6798:6802   */\n      0x20\n        /* \"#utility.yul\":6792:6796   */\n      dup2\n        /* \"#utility.yul\":6788:6803   */\n      add\n        /* \"#utility.yul\":6780:6803   */\n      swap1\n      pop\n        /* \"#utility.yul\":6503:6810   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6816:6912   */\n    tag_134:\n        /* \"#utility.yul\":6853:6860   */\n      0x00\n        /* \"#utility.yul\":6882:6906   */\n      tag_136\n        /* \"#utility.yul\":6900:6905   */\n      dup3\n        /* \"#utility.yul\":6882:6906   */\n      tag_137\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":6871:6906   */\n      swap1\n      pop\n        /* \"#utility.yul\":6816:6912   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6918:7008   */\n    tag_110:\n        /* \"#utility.yul\":6952:6959   */\n      0x00\n        /* \"#utility.yul\":6995:7000   */\n      dup2\n        /* \"#utility.yul\":6988:7001   */\n      iszero\n        /* \"#utility.yul\":6981:7002   */\n      iszero\n        /* \"#utility.yul\":6970:7002   */\n      swap1\n      pop\n        /* \"#utility.yul\":6918:7008   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7014:7163   */\n    tag_114:\n        /* \"#utility.yul\":7050:7057   */\n      0x00\n        /* \"#utility.yul\":7090:7156   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7083:7088   */\n      dup3\n        /* \"#utility.yul\":7079:7157   */\n      and\n        /* \"#utility.yul\":7068:7157   */\n      swap1\n      pop\n        /* \"#utility.yul\":7014:7163   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7169:7295   */\n    tag_137:\n        /* \"#utility.yul\":7206:7213   */\n      0x00\n        /* \"#utility.yul\":7246:7288   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":7239:7244   */\n      dup3\n        /* \"#utility.yul\":7235:7289   */\n      and\n        /* \"#utility.yul\":7224:7289   */\n      swap1\n      pop\n        /* \"#utility.yul\":7169:7295   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7301:7378   */\n    tag_141:\n        /* \"#utility.yul\":7338:7345   */\n      0x00\n        /* \"#utility.yul\":7367:7372   */\n      dup2\n        /* \"#utility.yul\":7356:7372   */\n      swap1\n      pop\n        /* \"#utility.yul\":7301:7378   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7384:7538   */\n    tag_54:\n        /* \"#utility.yul\":7468:7474   */\n      dup3\n        /* \"#utility.yul\":7463:7466   */\n      dup2\n        /* \"#utility.yul\":7458:7461   */\n      dup4\n        /* \"#utility.yul\":7445:7475   */\n      calldatacopy\n        /* \"#utility.yul\":7530:7531   */\n      0x00\n        /* \"#utility.yul\":7521:7527   */\n      dup4\n        /* \"#utility.yul\":7516:7519   */\n      dup4\n        /* \"#utility.yul\":7512:7528   */\n      add\n        /* \"#utility.yul\":7505:7532   */\n      mstore\n        /* \"#utility.yul\":7384:7538   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7544:7825   */\n    tag_123:\n        /* \"#utility.yul\":7627:7654   */\n      tag_145\n        /* \"#utility.yul\":7649:7653   */\n      dup3\n        /* \"#utility.yul\":7627:7654   */\n      tag_133\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":7619:7625   */\n      dup2\n        /* \"#utility.yul\":7615:7655   */\n      add\n        /* \"#utility.yul\":7757:7763   */\n      dup2\n        /* \"#utility.yul\":7745:7755   */\n      dup2\n        /* \"#utility.yul\":7742:7764   */\n      lt\n        /* \"#utility.yul\":7721:7739   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7709:7719   */\n      dup3\n        /* \"#utility.yul\":7706:7740   */\n      gt\n        /* \"#utility.yul\":7703:7765   */\n      or\n        /* \"#utility.yul\":7700:7788   */\n      iszero\n      tag_146\n      jumpi\n        /* \"#utility.yul\":7768:7786   */\n      tag_147\n      tag_128\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":7700:7788   */\n    tag_146:\n        /* \"#utility.yul\":7808:7818   */\n      dup1\n        /* \"#utility.yul\":7804:7806   */\n      0x40\n        /* \"#utility.yul\":7797:7819   */\n      mstore\n        /* \"#utility.yul\":7587:7825   */\n      pop\n        /* \"#utility.yul\":7544:7825   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7831:8011   */\n    tag_128:\n        /* \"#utility.yul\":7879:7956   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7876:7877   */\n      0x00\n        /* \"#utility.yul\":7869:7957   */\n      mstore\n        /* \"#utility.yul\":7976:7980   */\n      0x41\n        /* \"#utility.yul\":7973:7974   */\n      0x04\n        /* \"#utility.yul\":7966:7981   */\n      mstore\n        /* \"#utility.yul\":8000:8004   */\n      0x24\n        /* \"#utility.yul\":7997:7998   */\n      0x00\n        /* \"#utility.yul\":7990:8005   */\n      revert\n        /* \"#utility.yul\":8017:8134   */\n    tag_63:\n        /* \"#utility.yul\":8126:8127   */\n      0x00\n        /* \"#utility.yul\":8123:8124   */\n      dup1\n        /* \"#utility.yul\":8116:8128   */\n      revert\n        /* \"#utility.yul\":8140:8257   */\n    tag_39:\n        /* \"#utility.yul\":8249:8250   */\n      0x00\n        /* \"#utility.yul\":8246:8247   */\n      dup1\n        /* \"#utility.yul\":8239:8251   */\n      revert\n        /* \"#utility.yul\":8263:8380   */\n    tag_52:\n        /* \"#utility.yul\":8372:8373   */\n      0x00\n        /* \"#utility.yul\":8369:8370   */\n      dup1\n        /* \"#utility.yul\":8362:8374   */\n      revert\n        /* \"#utility.yul\":8386:8503   */\n    tag_85:\n        /* \"#utility.yul\":8495:8496   */\n      0x00\n        /* \"#utility.yul\":8492:8493   */\n      dup1\n        /* \"#utility.yul\":8485:8497   */\n      revert\n        /* \"#utility.yul\":8509:8626   */\n    tag_80:\n        /* \"#utility.yul\":8618:8619   */\n      0x00\n        /* \"#utility.yul\":8615:8616   */\n      dup1\n        /* \"#utility.yul\":8608:8620   */\n      revert\n        /* \"#utility.yul\":8632:8734   */\n    tag_133:\n        /* \"#utility.yul\":8673:8679   */\n      0x00\n        /* \"#utility.yul\":8724:8726   */\n      0x1f\n        /* \"#utility.yul\":8720:8727   */\n      not\n        /* \"#utility.yul\":8715:8717   */\n      0x1f\n        /* \"#utility.yul\":8708:8713   */\n      dup4\n        /* \"#utility.yul\":8704:8718   */\n      add\n        /* \"#utility.yul\":8700:8728   */\n      and\n        /* \"#utility.yul\":8690:8728   */\n      swap1\n      pop\n        /* \"#utility.yul\":8632:8734   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8740:8862   */\n    tag_58:\n        /* \"#utility.yul\":8813:8837   */\n      tag_156\n        /* \"#utility.yul\":8831:8836   */\n      dup2\n        /* \"#utility.yul\":8813:8837   */\n      tag_134\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":8806:8811   */\n      dup2\n        /* \"#utility.yul\":8803:8838   */\n      eq\n        /* \"#utility.yul\":8793:8856   */\n      tag_157\n      jumpi\n        /* \"#utility.yul\":8852:8853   */\n      0x00\n        /* \"#utility.yul\":8849:8850   */\n      dup1\n        /* \"#utility.yul\":8842:8854   */\n      revert\n        /* \"#utility.yul\":8793:8856   */\n    tag_157:\n        /* \"#utility.yul\":8740:8862   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8868:8988   */\n    tag_68:\n        /* \"#utility.yul\":8940:8963   */\n      tag_159\n        /* \"#utility.yul\":8957:8962   */\n      dup2\n        /* \"#utility.yul\":8940:8963   */\n      tag_114\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":8933:8938   */\n      dup2\n        /* \"#utility.yul\":8930:8964   */\n      eq\n        /* \"#utility.yul\":8920:8982   */\n      tag_160\n      jumpi\n        /* \"#utility.yul\":8978:8979   */\n      0x00\n        /* \"#utility.yul\":8975:8976   */\n      dup1\n        /* \"#utility.yul\":8968:8980   */\n      revert\n        /* \"#utility.yul\":8920:8982   */\n    tag_160:\n        /* \"#utility.yul\":8868:8988   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8994:9116   */\n    tag_76:\n        /* \"#utility.yul\":9067:9091   */\n      tag_162\n        /* \"#utility.yul\":9085:9090   */\n      dup2\n        /* \"#utility.yul\":9067:9091   */\n      tag_141\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":9060:9065   */\n      dup2\n        /* \"#utility.yul\":9057:9092   */\n      eq\n        /* \"#utility.yul\":9047:9110   */\n      tag_163\n      jumpi\n        /* \"#utility.yul\":9106:9107   */\n      0x00\n        /* \"#utility.yul\":9103:9104   */\n      dup1\n        /* \"#utility.yul\":9096:9108   */\n      revert\n        /* \"#utility.yul\":9047:9110   */\n    tag_163:\n        /* \"#utility.yul\":8994:9116   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212205c38a71feef050dfade62137089f79984c2ea208278ab8984649ed46135259f464736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610722806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806301ffc9a714610046578063bc197c8114610076578063f23a6e61146100a6575b600080fd5b610060600480360381019061005b9190610497565b6100d6565b60405161006d91906104e2565b60405180910390f35b610090600480360381019061008b9190610331565b610150565b60405161009d91906104fd565b60405180910390f35b6100c060048036038101906100bb9190610400565b610165565b6040516100cd91906104fd565b60405180910390f35b60007f4e2312e0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061014957506101488261017a565b5b9050919050565b600063bc197c8160e01b905095945050505050565b600063f23a6e6160e01b905095945050505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60006101f76101f28461053d565b610518565b9050808382526020820190508285602086028201111561021a57610219610682565b5b60005b8581101561024a5781610230888261031c565b84526020840193506020830192505060018101905061021d565b5050509392505050565b600061026761026284610569565b610518565b90508281526020810184848401111561028357610282610687565b5b61028e84828561060e565b509392505050565b6000813590506102a5816106a7565b92915050565b600082601f8301126102c0576102bf61067d565b5b81356102d08482602086016101e4565b91505092915050565b6000813590506102e8816106be565b92915050565b600082601f8301126103035761030261067d565b5b8135610313848260208601610254565b91505092915050565b60008135905061032b816106d5565b92915050565b600080600080600060a0868803121561034d5761034c610691565b5b600061035b88828901610296565b955050602061036c88828901610296565b945050604086013567ffffffffffffffff81111561038d5761038c61068c565b5b610399888289016102ab565b935050606086013567ffffffffffffffff8111156103ba576103b961068c565b5b6103c6888289016102ab565b925050608086013567ffffffffffffffff8111156103e7576103e661068c565b5b6103f3888289016102ee565b9150509295509295909350565b600080600080600060a0868803121561041c5761041b610691565b5b600061042a88828901610296565b955050602061043b88828901610296565b945050604061044c8882890161031c565b935050606061045d8882890161031c565b925050608086013567ffffffffffffffff81111561047e5761047d61068c565b5b61048a888289016102ee565b9150509295509295909350565b6000602082840312156104ad576104ac610691565b5b60006104bb848285016102d9565b91505092915050565b6104cd816105ac565b82525050565b6104dc816105b8565b82525050565b60006020820190506104f760008301846104c4565b92915050565b600060208201905061051260008301846104d3565b92915050565b6000610522610533565b905061052e828261061d565b919050565b6000604051905090565b600067ffffffffffffffff8211156105585761055761064e565b5b602082029050602081019050919050565b600067ffffffffffffffff8211156105845761058361064e565b5b61058d82610696565b9050602081019050919050565b60006105a5826105e4565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b61062682610696565b810181811067ffffffffffffffff821117156106455761064461064e565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b6106b08161059a565b81146106bb57600080fd5b50565b6106c7816105b8565b81146106d257600080fd5b50565b6106de81610604565b81146106e957600080fd5b5056fea26469706673582212205c38a71feef050dfade62137089f79984c2ea208278ab8984649ed46135259f464736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x722 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0xBC197C81 EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0xA6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x497 JUMP JUMPDEST PUSH2 0xD6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D SWAP2 SWAP1 PUSH2 0x4E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x90 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x331 JUMP JUMPDEST PUSH2 0x150 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9D SWAP2 SWAP1 PUSH2 0x4FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBB SWAP2 SWAP1 PUSH2 0x400 JUMP JUMPDEST PUSH2 0x165 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCD SWAP2 SWAP1 PUSH2 0x4FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x4E2312E000000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x149 JUMPI POP PUSH2 0x148 DUP3 PUSH2 0x17A JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F7 PUSH2 0x1F2 DUP5 PUSH2 0x53D JUMP JUMPDEST PUSH2 0x518 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x21A JUMPI PUSH2 0x219 PUSH2 0x682 JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x24A JUMPI DUP2 PUSH2 0x230 DUP9 DUP3 PUSH2 0x31C JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x21D JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x267 PUSH2 0x262 DUP5 PUSH2 0x569 JUMP JUMPDEST PUSH2 0x518 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x283 JUMPI PUSH2 0x282 PUSH2 0x687 JUMP JUMPDEST JUMPDEST PUSH2 0x28E DUP5 DUP3 DUP6 PUSH2 0x60E JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2A5 DUP2 PUSH2 0x6A7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2C0 JUMPI PUSH2 0x2BF PUSH2 0x67D JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2D0 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1E4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2E8 DUP2 PUSH2 0x6BE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x303 JUMPI PUSH2 0x302 PUSH2 0x67D JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x313 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x254 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x32B DUP2 PUSH2 0x6D5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x34D JUMPI PUSH2 0x34C PUSH2 0x691 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x35B DUP9 DUP3 DUP10 ADD PUSH2 0x296 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x36C DUP9 DUP3 DUP10 ADD PUSH2 0x296 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x38D JUMPI PUSH2 0x38C PUSH2 0x68C JUMP JUMPDEST JUMPDEST PUSH2 0x399 DUP9 DUP3 DUP10 ADD PUSH2 0x2AB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3BA JUMPI PUSH2 0x3B9 PUSH2 0x68C JUMP JUMPDEST JUMPDEST PUSH2 0x3C6 DUP9 DUP3 DUP10 ADD PUSH2 0x2AB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3E7 JUMPI PUSH2 0x3E6 PUSH2 0x68C JUMP JUMPDEST JUMPDEST PUSH2 0x3F3 DUP9 DUP3 DUP10 ADD PUSH2 0x2EE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x41C JUMPI PUSH2 0x41B PUSH2 0x691 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x42A DUP9 DUP3 DUP10 ADD PUSH2 0x296 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x43B DUP9 DUP3 DUP10 ADD PUSH2 0x296 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x44C DUP9 DUP3 DUP10 ADD PUSH2 0x31C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x45D DUP9 DUP3 DUP10 ADD PUSH2 0x31C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x47E JUMPI PUSH2 0x47D PUSH2 0x68C JUMP JUMPDEST JUMPDEST PUSH2 0x48A DUP9 DUP3 DUP10 ADD PUSH2 0x2EE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4AD JUMPI PUSH2 0x4AC PUSH2 0x691 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4BB DUP5 DUP3 DUP6 ADD PUSH2 0x2D9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4CD DUP2 PUSH2 0x5AC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x4DC DUP2 PUSH2 0x5B8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4F7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4C4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x512 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4D3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x522 PUSH2 0x533 JUMP JUMPDEST SWAP1 POP PUSH2 0x52E DUP3 DUP3 PUSH2 0x61D JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x558 JUMPI PUSH2 0x557 PUSH2 0x64E JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x584 JUMPI PUSH2 0x583 PUSH2 0x64E JUMP JUMPDEST JUMPDEST PUSH2 0x58D DUP3 PUSH2 0x696 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5A5 DUP3 PUSH2 0x5E4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH2 0x626 DUP3 PUSH2 0x696 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x645 JUMPI PUSH2 0x644 PUSH2 0x64E JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6B0 DUP2 PUSH2 0x59A JUMP JUMPDEST DUP2 EQ PUSH2 0x6BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x6C7 DUP2 PUSH2 0x5B8 JUMP JUMPDEST DUP2 EQ PUSH2 0x6D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x6DE DUP2 PUSH2 0x604 JUMP JUMPDEST DUP2 EQ PUSH2 0x6E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5C CODESIZE 0xA7 0x1F 0xEE CREATE POP 0xDF 0xAD 0xE6 0x21 CALLDATACOPY ADDMOD SWAP16 PUSH26 0x984C2EA208278AB8984649ED46135259F464736F6C6343000807 STOP CALLER ",
							"sourceMap": "451:522:2:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@onERC1155BatchReceived_212": {
									"entryPoint": 336,
									"id": 212,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"@onERC1155Received_189": {
									"entryPoint": 357,
									"id": 189,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"@supportsInterface_1050": {
									"entryPoint": 378,
									"id": 1050,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_246": {
									"entryPoint": 214,
									"id": 246,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 484,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 596,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 662,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 683,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 729,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 750,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 796,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr": {
									"entryPoint": 817,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr": {
									"entryPoint": 1024,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 1175,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 1220,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes4_to_t_bytes4_fromStack": {
									"entryPoint": 1235,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 1250,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
									"entryPoint": 1277,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 1304,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 1331,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 1341,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 1385,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1434,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 1452,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 1464,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1508,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1540,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory": {
									"entryPoint": 1550,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"finalize_allocation": {
									"entryPoint": 1565,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1614,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 1661,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 1666,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 1671,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 1676,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1681,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 1686,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 1703,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 1726,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1749,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:9119:15",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "126:620:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "136:90:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "218:6:15"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "161:56:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "161:64:15"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "145:15:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "145:81:15"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "136:5:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "235:16:15",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "246:5:15"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "239:3:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "268:5:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "275:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "261:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "261:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "261:21:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "291:23:15",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "302:5:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "309:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "298:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "298:16:15"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "291:3:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "324:17:15",
															"value": {
																"name": "offset",
																"nodeType": "YulIdentifier",
																"src": "335:6:15"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "328:3:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "390:103:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "404:77:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "404:79:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "404:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "360:3:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "369:6:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "377:4:15",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "365:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "365:17:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "356:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "356:27:15"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "385:3:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "353:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "353:36:15"
															},
															"nodeType": "YulIf",
															"src": "350:143:15"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "562:178:15",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "577:21:15",
																		"value": {
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "595:3:15"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "581:10:15",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "619:3:15"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "645:10:15"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "657:3:15"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_uint256",
																						"nodeType": "YulIdentifier",
																						"src": "624:20:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "624:37:15"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "612:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "612:50:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "612:50:15"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "675:21:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "686:3:15"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "691:4:15",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "682:3:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "682:14:15"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "675:3:15"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "709:21:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "720:3:15"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "725:4:15",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "716:3:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "716:14:15"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "709:3:15"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "524:1:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "527:6:15"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "521:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "521:13:15"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "535:18:15",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "537:14:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "546:1:15"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "549:1:15",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "542:3:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "542:9:15"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "537:1:15"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "506:14:15",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "508:10:15",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "517:1:15",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "512:1:15",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "502:238:15"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "96:6:15",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "104:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "112:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "120:5:15",
														"type": ""
													}
												],
												"src": "24:722:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "835:327:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "845:74:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "911:6:15"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "870:40:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "870:48:15"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "854:15:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "854:65:15"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "845:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "935:5:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "942:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "928:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "928:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "928:21:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "958:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "973:5:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "980:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "969:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "969:16:15"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "962:3:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1023:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "1025:77:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1025:79:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1025:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "1004:3:15"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1009:6:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1000:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1000:16:15"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1018:3:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "997:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "997:25:15"
															},
															"nodeType": "YulIf",
															"src": "994:112:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "1139:3:15"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "1144:3:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1149:6:15"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1115:23:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1115:41:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1115:41:15"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "808:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "813:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "821:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "829:5:15",
														"type": ""
													}
												],
												"src": "752:410:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1220:87:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1230:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1252:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1239:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1239:20:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1230:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1295:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1268:26:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1268:33:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1268:33:15"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1198:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1206:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1214:5:15",
														"type": ""
													}
												],
												"src": "1168:139:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1407:293:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1456:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "1458:77:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1458:79:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1458:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1435:6:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1443:4:15",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1431:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1431:17:15"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "1450:3:15"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1427:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1427:27:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1420:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1420:35:15"
															},
															"nodeType": "YulIf",
															"src": "1417:122:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1548:34:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1575:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1562:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1562:20:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1552:6:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1591:103:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1667:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1675:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1663:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1663:17:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1682:6:15"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1690:3:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "1600:62:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1600:94:15"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1591:5:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1385:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1393:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1401:5:15",
														"type": ""
													}
												],
												"src": "1330:370:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1757:86:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1767:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1789:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1776:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1776:20:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1767:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1831:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "1805:25:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1805:32:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1805:32:15"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1735:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1743:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1751:5:15",
														"type": ""
													}
												],
												"src": "1706:137:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1923:277:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1972:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "1974:77:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1974:79:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1974:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1951:6:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1959:4:15",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1947:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1947:17:15"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "1966:3:15"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1943:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1943:27:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1936:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1936:35:15"
															},
															"nodeType": "YulIf",
															"src": "1933:122:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2064:34:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2091:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2078:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2078:20:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2068:6:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2107:87:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2167:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2175:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2163:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2163:17:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2182:6:15"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2190:3:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2116:46:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2116:78:15"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2107:5:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1901:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1909:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1917:5:15",
														"type": ""
													}
												],
												"src": "1862:338:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2258:87:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2268:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2290:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2277:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2277:20:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2268:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2333:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2306:26:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2306:33:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2306:33:15"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2236:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2244:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2252:5:15",
														"type": ""
													}
												],
												"src": "2206:139:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2544:1316:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2591:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2593:77:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2593:79:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2593:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2565:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2574:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2561:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2561:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2586:3:15",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2557:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2557:33:15"
															},
															"nodeType": "YulIf",
															"src": "2554:120:15"
														},
														{
															"nodeType": "YulBlock",
															"src": "2684:117:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2699:15:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2713:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2703:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2728:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2763:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2774:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2759:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2759:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2783:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2738:20:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2738:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2728:6:15"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2811:118:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2826:16:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2840:2:15",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2830:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2856:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2891:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2902:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2887:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2887:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2911:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2866:20:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2866:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2856:6:15"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2939:303:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2954:46:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2985:9:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2996:2:15",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2981:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2981:18:15"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "2968:12:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2968:32:15"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2958:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3047:83:15",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3049:77:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3049:79:15"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3049:79:15"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3019:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3027:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3016:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3016:30:15"
																	},
																	"nodeType": "YulIf",
																	"src": "3013:117:15"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3144:88:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3204:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3215:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3200:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3200:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3224:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "3154:45:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3154:78:15"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "3144:6:15"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3252:303:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3267:46:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3298:9:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3309:2:15",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3294:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3294:18:15"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "3281:12:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3281:32:15"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3271:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3360:83:15",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3362:77:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3362:79:15"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3362:79:15"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3332:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3340:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3329:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3329:30:15"
																	},
																	"nodeType": "YulIf",
																	"src": "3326:117:15"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3457:88:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3517:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3528:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3513:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3513:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3537:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "3467:45:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3467:78:15"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "3457:6:15"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3565:288:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3580:47:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3611:9:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3622:3:15",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3607:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3607:19:15"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "3594:12:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3594:33:15"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3584:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3674:83:15",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3676:77:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3676:79:15"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3676:79:15"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3646:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3654:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3643:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3643:30:15"
																	},
																	"nodeType": "YulIf",
																	"src": "3640:117:15"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3771:72:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3815:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3826:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3811:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3811:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3835:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "3781:29:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3781:62:15"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "3771:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2482:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2493:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2505:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2513:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2521:6:15",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "2529:6:15",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "2537:6:15",
														"type": ""
													}
												],
												"src": "2351:1509:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4009:946:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4056:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4058:77:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4058:79:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4058:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4030:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4039:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4026:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4026:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4051:3:15",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4022:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4022:33:15"
															},
															"nodeType": "YulIf",
															"src": "4019:120:15"
														},
														{
															"nodeType": "YulBlock",
															"src": "4149:117:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4164:15:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4178:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4168:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4193:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4228:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4239:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4224:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4224:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4248:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4203:20:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4203:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4193:6:15"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4276:118:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4291:16:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4305:2:15",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4295:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4321:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4356:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4367:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4352:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4352:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4376:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4331:20:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4331:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4321:6:15"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4404:118:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4419:16:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4433:2:15",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4423:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4449:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4484:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4495:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4480:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4480:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4504:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4459:20:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4459:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "4449:6:15"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4532:118:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4547:16:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4561:2:15",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4551:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4577:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4612:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4623:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4608:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4608:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4632:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4587:20:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4587:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "4577:6:15"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4660:288:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4675:47:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4706:9:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4717:3:15",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4702:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4702:19:15"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "4689:12:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4689:33:15"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4679:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "4769:83:15",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "4771:77:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4771:79:15"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4771:79:15"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4741:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4749:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4738:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4738:30:15"
																	},
																	"nodeType": "YulIf",
																	"src": "4735:117:15"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4866:72:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4910:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4921:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4906:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4906:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4930:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "4876:29:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4876:62:15"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "4866:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3947:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3958:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3970:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3978:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3986:6:15",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3994:6:15",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "4002:6:15",
														"type": ""
													}
												],
												"src": "3866:1089:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5026:262:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5072:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5074:77:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5074:79:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5074:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5047:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5056:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5043:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5043:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5068:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5039:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5039:32:15"
															},
															"nodeType": "YulIf",
															"src": "5036:119:15"
														},
														{
															"nodeType": "YulBlock",
															"src": "5165:116:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5180:15:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5194:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5184:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5209:62:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5243:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5254:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5239:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5239:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5263:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "5219:19:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5219:52:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5209:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4996:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5007:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5019:6:15",
														"type": ""
													}
												],
												"src": "4961:327:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5353:50:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5370:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5390:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "5375:14:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5375:21:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5363:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5363:34:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5363:34:15"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5341:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5348:3:15",
														"type": ""
													}
												],
												"src": "5294:109:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5472:52:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5489:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5511:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "5494:16:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5494:23:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5482:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5482:36:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5482:36:15"
														}
													]
												},
												"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5460:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5467:3:15",
														"type": ""
													}
												],
												"src": "5409:115:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5622:118:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5632:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5644:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5655:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5640:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5640:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5632:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5706:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5719:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5730:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5715:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5715:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5668:37:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5668:65:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5668:65:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5594:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5606:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5617:4:15",
														"type": ""
													}
												],
												"src": "5530:210:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5842:122:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5852:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5864:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5875:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5860:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5860:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5852:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5930:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5943:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5954:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5939:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5939:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5888:41:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5888:69:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5888:69:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5814:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5826:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5837:4:15",
														"type": ""
													}
												],
												"src": "5746:218:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6011:88:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6021:30:15",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "6031:18:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6031:20:15"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "6021:6:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "6080:6:15"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "6088:4:15"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "6060:19:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6060:33:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6060:33:15"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "5995:4:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6004:6:15",
														"type": ""
													}
												],
												"src": "5970:129:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6145:35:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6155:19:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6171:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6165:5:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6165:9:15"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "6155:6:15"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6138:6:15",
														"type": ""
													}
												],
												"src": "6105:75:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6268:229:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6373:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "6375:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6375:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6375:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6345:6:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6353:18:15",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6342:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6342:30:15"
															},
															"nodeType": "YulIf",
															"src": "6339:56:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6405:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6417:6:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6425:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "6413:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6413:17:15"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "6405:4:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6467:23:15",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "6479:4:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6485:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6475:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6475:15:15"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "6467:4:15"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6252:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "6263:4:15",
														"type": ""
													}
												],
												"src": "6186:311:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6569:241:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6674:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "6676:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6676:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6676:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6646:6:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6654:18:15",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6643:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6643:30:15"
															},
															"nodeType": "YulIf",
															"src": "6640:56:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6706:37:15",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6736:6:15"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "6714:21:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6714:29:15"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "6706:4:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6780:23:15",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "6792:4:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6798:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6788:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6788:15:15"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "6780:4:15"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6553:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "6564:4:15",
														"type": ""
													}
												],
												"src": "6503:307:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6861:51:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6871:35:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6900:5:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "6882:17:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6882:24:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "6871:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6843:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "6853:7:15",
														"type": ""
													}
												],
												"src": "6816:96:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6960:48:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6970:32:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6995:5:15"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "6988:6:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6988:13:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6981:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6981:21:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "6970:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6942:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "6952:7:15",
														"type": ""
													}
												],
												"src": "6918:90:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7058:105:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7068:89:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7083:5:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7090:66:15",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "7079:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7079:78:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "7068:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7040:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "7050:7:15",
														"type": ""
													}
												],
												"src": "7014:149:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7214:81:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7224:65:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7239:5:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7246:42:15",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "7235:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7235:54:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "7224:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7196:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "7206:7:15",
														"type": ""
													}
												],
												"src": "7169:126:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7346:32:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7356:16:15",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "7367:5:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "7356:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7328:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "7338:7:15",
														"type": ""
													}
												],
												"src": "7301:77:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7435:103:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "7458:3:15"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "7463:3:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7468:6:15"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "7445:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7445:30:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7445:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "7516:3:15"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "7521:6:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7512:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7512:16:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7530:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7505:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7505:27:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7505:27:15"
														}
													]
												},
												"name": "copy_calldata_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "7417:3:15",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "7422:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7427:6:15",
														"type": ""
													}
												],
												"src": "7384:154:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7587:238:15",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7597:58:15",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "7619:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "7649:4:15"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "7627:21:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7627:27:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7615:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7615:40:15"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "7601:10:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7766:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7768:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7768:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7768:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "7709:10:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7721:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "7706:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7706:34:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "7745:10:15"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7757:6:15"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "7742:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7742:22:15"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7703:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7703:62:15"
															},
															"nodeType": "YulIf",
															"src": "7700:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7804:2:15",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "7808:10:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7797:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7797:22:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7797:22:15"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7573:6:15",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7581:4:15",
														"type": ""
													}
												],
												"src": "7544:281:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7859:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7876:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7879:77:15",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7869:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7869:88:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7869:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7973:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7976:4:15",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7966:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7966:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7966:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7997:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8000:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7990:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7990:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7990:15:15"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "7831:180:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8106:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8123:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8126:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8116:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8116:12:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8116:12:15"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "8017:117:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8229:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8246:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8249:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8239:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8239:12:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8239:12:15"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nodeType": "YulFunctionDefinition",
												"src": "8140:117:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8352:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8369:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8372:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8362:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8362:12:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8362:12:15"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "8263:117:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8475:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8492:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8495:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8485:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8485:12:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8485:12:15"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "8386:117:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8598:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8615:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8618:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8608:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8608:12:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8608:12:15"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "8509:117:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8680:54:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8690:38:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8708:5:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8715:2:15",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8704:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8704:14:15"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8724:2:15",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "8720:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8720:7:15"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "8700:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8700:28:15"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "8690:6:15"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8663:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "8673:6:15",
														"type": ""
													}
												],
												"src": "8632:102:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8783:79:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8840:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8849:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8852:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8842:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8842:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8842:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8806:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "8831:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "8813:17:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8813:24:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "8803:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8803:35:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8796:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8796:43:15"
															},
															"nodeType": "YulIf",
															"src": "8793:63:15"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8776:5:15",
														"type": ""
													}
												],
												"src": "8740:122:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8910:78:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8966:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8975:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8978:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8968:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8968:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8968:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8933:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "8957:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nodeType": "YulIdentifier",
																					"src": "8940:16:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8940:23:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "8930:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8930:34:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8923:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8923:42:15"
															},
															"nodeType": "YulIf",
															"src": "8920:62:15"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8903:5:15",
														"type": ""
													}
												],
												"src": "8868:120:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9037:79:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9094:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9103:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9106:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9096:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9096:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9096:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9060:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "9085:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "9067:17:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9067:24:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "9057:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9057:35:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9050:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9050:43:15"
															},
															"nodeType": "YulIf",
															"src": "9047:63:15"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9030:5:15",
														"type": ""
													}
												],
												"src": "8994:122:15"
											}
										]
									},
									"contents": "{\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let src := offset\n        if gt(add(src, mul(length, 0x20)), end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n            src := add(src, 0x20)\n        }\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes4(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 15,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c806301ffc9a714610046578063bc197c8114610076578063f23a6e61146100a6575b600080fd5b610060600480360381019061005b9190610497565b6100d6565b60405161006d91906104e2565b60405180910390f35b610090600480360381019061008b9190610331565b610150565b60405161009d91906104fd565b60405180910390f35b6100c060048036038101906100bb9190610400565b610165565b6040516100cd91906104fd565b60405180910390f35b60007f4e2312e0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061014957506101488261017a565b5b9050919050565b600063bc197c8160e01b905095945050505050565b600063f23a6e6160e01b905095945050505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60006101f76101f28461053d565b610518565b9050808382526020820190508285602086028201111561021a57610219610682565b5b60005b8581101561024a5781610230888261031c565b84526020840193506020830192505060018101905061021d565b5050509392505050565b600061026761026284610569565b610518565b90508281526020810184848401111561028357610282610687565b5b61028e84828561060e565b509392505050565b6000813590506102a5816106a7565b92915050565b600082601f8301126102c0576102bf61067d565b5b81356102d08482602086016101e4565b91505092915050565b6000813590506102e8816106be565b92915050565b600082601f8301126103035761030261067d565b5b8135610313848260208601610254565b91505092915050565b60008135905061032b816106d5565b92915050565b600080600080600060a0868803121561034d5761034c610691565b5b600061035b88828901610296565b955050602061036c88828901610296565b945050604086013567ffffffffffffffff81111561038d5761038c61068c565b5b610399888289016102ab565b935050606086013567ffffffffffffffff8111156103ba576103b961068c565b5b6103c6888289016102ab565b925050608086013567ffffffffffffffff8111156103e7576103e661068c565b5b6103f3888289016102ee565b9150509295509295909350565b600080600080600060a0868803121561041c5761041b610691565b5b600061042a88828901610296565b955050602061043b88828901610296565b945050604061044c8882890161031c565b935050606061045d8882890161031c565b925050608086013567ffffffffffffffff81111561047e5761047d61068c565b5b61048a888289016102ee565b9150509295509295909350565b6000602082840312156104ad576104ac610691565b5b60006104bb848285016102d9565b91505092915050565b6104cd816105ac565b82525050565b6104dc816105b8565b82525050565b60006020820190506104f760008301846104c4565b92915050565b600060208201905061051260008301846104d3565b92915050565b6000610522610533565b905061052e828261061d565b919050565b6000604051905090565b600067ffffffffffffffff8211156105585761055761064e565b5b602082029050602081019050919050565b600067ffffffffffffffff8211156105845761058361064e565b5b61058d82610696565b9050602081019050919050565b60006105a5826105e4565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b61062682610696565b810181811067ffffffffffffffff821117156106455761064461064e565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b6106b08161059a565b81146106bb57600080fd5b50565b6106c7816105b8565b81146106d257600080fd5b50565b6106de81610604565b81146106e957600080fd5b5056fea26469706673582212205c38a71feef050dfade62137089f79984c2ea208278ab8984649ed46135259f464736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0xBC197C81 EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0xA6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x497 JUMP JUMPDEST PUSH2 0xD6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D SWAP2 SWAP1 PUSH2 0x4E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x90 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x331 JUMP JUMPDEST PUSH2 0x150 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9D SWAP2 SWAP1 PUSH2 0x4FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBB SWAP2 SWAP1 PUSH2 0x400 JUMP JUMPDEST PUSH2 0x165 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCD SWAP2 SWAP1 PUSH2 0x4FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x4E2312E000000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x149 JUMPI POP PUSH2 0x148 DUP3 PUSH2 0x17A JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F7 PUSH2 0x1F2 DUP5 PUSH2 0x53D JUMP JUMPDEST PUSH2 0x518 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x21A JUMPI PUSH2 0x219 PUSH2 0x682 JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x24A JUMPI DUP2 PUSH2 0x230 DUP9 DUP3 PUSH2 0x31C JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x21D JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x267 PUSH2 0x262 DUP5 PUSH2 0x569 JUMP JUMPDEST PUSH2 0x518 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x283 JUMPI PUSH2 0x282 PUSH2 0x687 JUMP JUMPDEST JUMPDEST PUSH2 0x28E DUP5 DUP3 DUP6 PUSH2 0x60E JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2A5 DUP2 PUSH2 0x6A7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2C0 JUMPI PUSH2 0x2BF PUSH2 0x67D JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2D0 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1E4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2E8 DUP2 PUSH2 0x6BE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x303 JUMPI PUSH2 0x302 PUSH2 0x67D JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x313 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x254 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x32B DUP2 PUSH2 0x6D5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x34D JUMPI PUSH2 0x34C PUSH2 0x691 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x35B DUP9 DUP3 DUP10 ADD PUSH2 0x296 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x36C DUP9 DUP3 DUP10 ADD PUSH2 0x296 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x38D JUMPI PUSH2 0x38C PUSH2 0x68C JUMP JUMPDEST JUMPDEST PUSH2 0x399 DUP9 DUP3 DUP10 ADD PUSH2 0x2AB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3BA JUMPI PUSH2 0x3B9 PUSH2 0x68C JUMP JUMPDEST JUMPDEST PUSH2 0x3C6 DUP9 DUP3 DUP10 ADD PUSH2 0x2AB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3E7 JUMPI PUSH2 0x3E6 PUSH2 0x68C JUMP JUMPDEST JUMPDEST PUSH2 0x3F3 DUP9 DUP3 DUP10 ADD PUSH2 0x2EE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x41C JUMPI PUSH2 0x41B PUSH2 0x691 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x42A DUP9 DUP3 DUP10 ADD PUSH2 0x296 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x43B DUP9 DUP3 DUP10 ADD PUSH2 0x296 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x44C DUP9 DUP3 DUP10 ADD PUSH2 0x31C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x45D DUP9 DUP3 DUP10 ADD PUSH2 0x31C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x47E JUMPI PUSH2 0x47D PUSH2 0x68C JUMP JUMPDEST JUMPDEST PUSH2 0x48A DUP9 DUP3 DUP10 ADD PUSH2 0x2EE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4AD JUMPI PUSH2 0x4AC PUSH2 0x691 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4BB DUP5 DUP3 DUP6 ADD PUSH2 0x2D9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4CD DUP2 PUSH2 0x5AC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x4DC DUP2 PUSH2 0x5B8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4F7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4C4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x512 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4D3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x522 PUSH2 0x533 JUMP JUMPDEST SWAP1 POP PUSH2 0x52E DUP3 DUP3 PUSH2 0x61D JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x558 JUMPI PUSH2 0x557 PUSH2 0x64E JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x584 JUMPI PUSH2 0x583 PUSH2 0x64E JUMP JUMPDEST JUMPDEST PUSH2 0x58D DUP3 PUSH2 0x696 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5A5 DUP3 PUSH2 0x5E4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH2 0x626 DUP3 PUSH2 0x696 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x645 JUMPI PUSH2 0x644 PUSH2 0x64E JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6B0 DUP2 PUSH2 0x59A JUMP JUMPDEST DUP2 EQ PUSH2 0x6BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x6C7 DUP2 PUSH2 0x5B8 JUMP JUMPDEST DUP2 EQ PUSH2 0x6D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x6DE DUP2 PUSH2 0x604 JUMP JUMPDEST DUP2 EQ PUSH2 0x6E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5C CODESIZE 0xA7 0x1F 0xEE CREATE POP 0xDF 0xAD 0xE6 0x21 CALLDATACOPY ADDMOD SWAP16 PUSH26 0x984C2EA208278AB8984649ED46135259F464736F6C6343000807 STOP CALLER ",
							"sourceMap": "451:522:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;387:221:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;724:247:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;499:219;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;387:221:3;489:4;527:34;512:49;;;:11;:49;;;;:89;;;;565:36;589:11;565:23;:36::i;:::-;512:89;505:96;;387:221;;;:::o;724:247:2:-;903:6;928:36;;;921:43;;724:247;;;;;;;:::o;499:219::-;655:6;680:31;;;673:38;;499:219;;;;;;;:::o;829:155:11:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;24:722:15:-;120:5;145:81;161:64;218:6;161:64;:::i;:::-;145:81;:::i;:::-;136:90;;246:5;275:6;268:5;261:21;309:4;302:5;298:16;291:23;;335:6;385:3;377:4;369:6;365:17;360:3;356:27;353:36;350:143;;;404:79;;:::i;:::-;350:143;517:1;502:238;527:6;524:1;521:13;502:238;;;595:3;624:37;657:3;645:10;624:37;:::i;:::-;619:3;612:50;691:4;686:3;682:14;675:21;;725:4;720:3;716:14;709:21;;562:178;549:1;546;542:9;537:14;;502:238;;;506:14;126:620;;24:722;;;;;:::o;752:410::-;829:5;854:65;870:48;911:6;870:48;:::i;:::-;854:65;:::i;:::-;845:74;;942:6;935:5;928:21;980:4;973:5;969:16;1018:3;1009:6;1004:3;1000:16;997:25;994:112;;;1025:79;;:::i;:::-;994:112;1115:41;1149:6;1144:3;1139;1115:41;:::i;:::-;835:327;752:410;;;;;:::o;1168:139::-;1214:5;1252:6;1239:20;1230:29;;1268:33;1295:5;1268:33;:::i;:::-;1168:139;;;;:::o;1330:370::-;1401:5;1450:3;1443:4;1435:6;1431:17;1427:27;1417:122;;1458:79;;:::i;:::-;1417:122;1575:6;1562:20;1600:94;1690:3;1682:6;1675:4;1667:6;1663:17;1600:94;:::i;:::-;1591:103;;1407:293;1330:370;;;;:::o;1706:137::-;1751:5;1789:6;1776:20;1767:29;;1805:32;1831:5;1805:32;:::i;:::-;1706:137;;;;:::o;1862:338::-;1917:5;1966:3;1959:4;1951:6;1947:17;1943:27;1933:122;;1974:79;;:::i;:::-;1933:122;2091:6;2078:20;2116:78;2190:3;2182:6;2175:4;2167:6;2163:17;2116:78;:::i;:::-;2107:87;;1923:277;1862:338;;;;:::o;2206:139::-;2252:5;2290:6;2277:20;2268:29;;2306:33;2333:5;2306:33;:::i;:::-;2206:139;;;;:::o;2351:1509::-;2505:6;2513;2521;2529;2537;2586:3;2574:9;2565:7;2561:23;2557:33;2554:120;;;2593:79;;:::i;:::-;2554:120;2713:1;2738:53;2783:7;2774:6;2763:9;2759:22;2738:53;:::i;:::-;2728:63;;2684:117;2840:2;2866:53;2911:7;2902:6;2891:9;2887:22;2866:53;:::i;:::-;2856:63;;2811:118;2996:2;2985:9;2981:18;2968:32;3027:18;3019:6;3016:30;3013:117;;;3049:79;;:::i;:::-;3013:117;3154:78;3224:7;3215:6;3204:9;3200:22;3154:78;:::i;:::-;3144:88;;2939:303;3309:2;3298:9;3294:18;3281:32;3340:18;3332:6;3329:30;3326:117;;;3362:79;;:::i;:::-;3326:117;3467:78;3537:7;3528:6;3517:9;3513:22;3467:78;:::i;:::-;3457:88;;3252:303;3622:3;3611:9;3607:19;3594:33;3654:18;3646:6;3643:30;3640:117;;;3676:79;;:::i;:::-;3640:117;3781:62;3835:7;3826:6;3815:9;3811:22;3781:62;:::i;:::-;3771:72;;3565:288;2351:1509;;;;;;;;:::o;3866:1089::-;3970:6;3978;3986;3994;4002;4051:3;4039:9;4030:7;4026:23;4022:33;4019:120;;;4058:79;;:::i;:::-;4019:120;4178:1;4203:53;4248:7;4239:6;4228:9;4224:22;4203:53;:::i;:::-;4193:63;;4149:117;4305:2;4331:53;4376:7;4367:6;4356:9;4352:22;4331:53;:::i;:::-;4321:63;;4276:118;4433:2;4459:53;4504:7;4495:6;4484:9;4480:22;4459:53;:::i;:::-;4449:63;;4404:118;4561:2;4587:53;4632:7;4623:6;4612:9;4608:22;4587:53;:::i;:::-;4577:63;;4532:118;4717:3;4706:9;4702:19;4689:33;4749:18;4741:6;4738:30;4735:117;;;4771:79;;:::i;:::-;4735:117;4876:62;4930:7;4921:6;4910:9;4906:22;4876:62;:::i;:::-;4866:72;;4660:288;3866:1089;;;;;;;;:::o;4961:327::-;5019:6;5068:2;5056:9;5047:7;5043:23;5039:32;5036:119;;;5074:79;;:::i;:::-;5036:119;5194:1;5219:52;5263:7;5254:6;5243:9;5239:22;5219:52;:::i;:::-;5209:62;;5165:116;4961:327;;;;:::o;5294:109::-;5375:21;5390:5;5375:21;:::i;:::-;5370:3;5363:34;5294:109;;:::o;5409:115::-;5494:23;5511:5;5494:23;:::i;:::-;5489:3;5482:36;5409:115;;:::o;5530:210::-;5617:4;5655:2;5644:9;5640:18;5632:26;;5668:65;5730:1;5719:9;5715:17;5706:6;5668:65;:::i;:::-;5530:210;;;;:::o;5746:218::-;5837:4;5875:2;5864:9;5860:18;5852:26;;5888:69;5954:1;5943:9;5939:17;5930:6;5888:69;:::i;:::-;5746:218;;;;:::o;5970:129::-;6004:6;6031:20;;:::i;:::-;6021:30;;6060:33;6088:4;6080:6;6060:33;:::i;:::-;5970:129;;;:::o;6105:75::-;6138:6;6171:2;6165:9;6155:19;;6105:75;:::o;6186:311::-;6263:4;6353:18;6345:6;6342:30;6339:56;;;6375:18;;:::i;:::-;6339:56;6425:4;6417:6;6413:17;6405:25;;6485:4;6479;6475:15;6467:23;;6186:311;;;:::o;6503:307::-;6564:4;6654:18;6646:6;6643:30;6640:56;;;6676:18;;:::i;:::-;6640:56;6714:29;6736:6;6714:29;:::i;:::-;6706:37;;6798:4;6792;6788:15;6780:23;;6503:307;;;:::o;6816:96::-;6853:7;6882:24;6900:5;6882:24;:::i;:::-;6871:35;;6816:96;;;:::o;6918:90::-;6952:7;6995:5;6988:13;6981:21;6970:32;;6918:90;;;:::o;7014:149::-;7050:7;7090:66;7083:5;7079:78;7068:89;;7014:149;;;:::o;7169:126::-;7206:7;7246:42;7239:5;7235:54;7224:65;;7169:126;;;:::o;7301:77::-;7338:7;7367:5;7356:16;;7301:77;;;:::o;7384:154::-;7468:6;7463:3;7458;7445:30;7530:1;7521:6;7516:3;7512:16;7505:27;7384:154;;;:::o;7544:281::-;7627:27;7649:4;7627:27;:::i;:::-;7619:6;7615:40;7757:6;7745:10;7742:22;7721:18;7709:10;7706:34;7703:62;7700:88;;;7768:18;;:::i;:::-;7700:88;7808:10;7804:2;7797:22;7587:238;7544:281;;:::o;7831:180::-;7879:77;7876:1;7869:88;7976:4;7973:1;7966:15;8000:4;7997:1;7990:15;8017:117;8126:1;8123;8116:12;8140:117;8249:1;8246;8239:12;8263:117;8372:1;8369;8362:12;8386:117;8495:1;8492;8485:12;8509:117;8618:1;8615;8608:12;8632:102;8673:6;8724:2;8720:7;8715:2;8708:5;8704:14;8700:28;8690:38;;8632:102;;;:::o;8740:122::-;8813:24;8831:5;8813:24;:::i;:::-;8806:5;8803:35;8793:63;;8852:1;8849;8842:12;8793:63;8740:122;:::o;8868:120::-;8940:23;8957:5;8940:23;:::i;:::-;8933:5;8930:34;8920:62;;8978:1;8975;8968:12;8920:62;8868:120;:::o;8994:122::-;9067:24;9085:5;9067:24;:::i;:::-;9060:5;9057:35;9047:63;;9106:1;9103;9096:12;9047:63;8994:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "365200",
								"executionCost": "405",
								"totalCost": "365605"
							},
							"external": {
								"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "infinite",
								"onERC1155Received(address,address,uint256,uint256,bytes)": "infinite",
								"supportsInterface(bytes4)": "705"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 451,
									"end": 973,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 451,
									"end": 973,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 451,
									"end": 973,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 451,
									"end": 973,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 451,
									"end": 973,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 451,
									"end": 973,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 451,
									"end": 973,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 451,
									"end": 973,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 451,
									"end": 973,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 451,
									"end": 973,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 451,
									"end": 973,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 451,
									"end": 973,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 451,
									"end": 973,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 451,
									"end": 973,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 451,
									"end": 973,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 451,
									"end": 973,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 451,
									"end": 973,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 451,
									"end": 973,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 451,
									"end": 973,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 451,
									"end": 973,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 451,
									"end": 973,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205c38a71feef050dfade62137089f79984c2ea208278ab8984649ed46135259f464736f6c63430008070033",
									".code": [
										{
											"begin": 451,
											"end": 973,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 451,
											"end": 973,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 451,
											"end": 973,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 451,
											"end": 973,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 451,
											"end": 973,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 451,
											"end": 973,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 451,
											"end": 973,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 451,
											"end": 973,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 451,
											"end": 973,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 451,
											"end": 973,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 451,
											"end": 973,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 451,
											"end": 973,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 451,
											"end": 973,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 451,
											"end": 973,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 451,
											"end": 973,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 451,
											"end": 973,
											"name": "PUSH",
											"source": 2,
											"value": "1FFC9A7"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 451,
											"end": 973,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 451,
											"end": 973,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 451,
											"end": 973,
											"name": "PUSH",
											"source": 2,
											"value": "BC197C81"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 451,
											"end": 973,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 451,
											"end": 973,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 451,
											"end": 973,
											"name": "PUSH",
											"source": 2,
											"value": "F23A6E61"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 451,
											"end": 973,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 451,
											"end": 973,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 451,
											"end": 973,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 451,
											"end": 973,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 387,
											"end": 608,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 724,
											"end": 971,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 387,
											"end": 608,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 489,
											"end": 493,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 527,
											"end": 561,
											"name": "PUSH",
											"source": 3,
											"value": "4E2312E000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 512,
											"end": 561,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 512,
											"end": 561,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 512,
											"end": 561,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 512,
											"end": 523,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 512,
											"end": 561,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 512,
											"end": 561,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 512,
											"end": 561,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 512,
											"end": 561,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 512,
											"end": 601,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 512,
											"end": 601,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 512,
											"end": 601,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 512,
											"end": 601,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 565,
											"end": 601,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 589,
											"end": 600,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 565,
											"end": 588,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 565,
											"end": 601,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 565,
											"end": 601,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 565,
											"end": 601,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 512,
											"end": 601,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 512,
											"end": 601,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 505,
											"end": 601,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 505,
											"end": 601,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 903,
											"end": 909,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 928,
											"end": 964,
											"name": "PUSH",
											"source": 2,
											"value": "BC197C81"
										},
										{
											"begin": 928,
											"end": 964,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 928,
											"end": 964,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 921,
											"end": 964,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 921,
											"end": 964,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 655,
											"end": 661,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 711,
											"name": "PUSH",
											"source": 2,
											"value": "F23A6E61"
										},
										{
											"begin": 680,
											"end": 711,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 680,
											"end": 711,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 673,
											"end": 711,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 673,
											"end": 711,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "tag",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 914,
											"end": 918,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 952,
											"end": 977,
											"name": "PUSH",
											"source": 11,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 937,
											"end": 948,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 937,
											"end": 977,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 937,
											"end": 977,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 930,
											"end": 977,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 930,
											"end": 977,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 829,
											"end": 984,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 829,
											"end": 984,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 24,
											"end": 746,
											"name": "tag",
											"source": 15,
											"value": "31"
										},
										{
											"begin": 24,
											"end": 746,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 120,
											"end": 125,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 145,
											"end": 226,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "33"
										},
										{
											"begin": 161,
											"end": 225,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "34"
										},
										{
											"begin": 218,
											"end": 224,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 161,
											"end": 225,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "35"
										},
										{
											"begin": 161,
											"end": 225,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 161,
											"end": 225,
											"name": "tag",
											"source": 15,
											"value": "34"
										},
										{
											"begin": 161,
											"end": 225,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 145,
											"end": 226,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "36"
										},
										{
											"begin": 145,
											"end": 226,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 145,
											"end": 226,
											"name": "tag",
											"source": 15,
											"value": "33"
										},
										{
											"begin": 145,
											"end": 226,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 136,
											"end": 226,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 136,
											"end": 226,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 246,
											"end": 251,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 275,
											"end": 281,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 268,
											"end": 273,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 261,
											"end": 282,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 309,
											"end": 313,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 302,
											"end": 307,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 298,
											"end": 314,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 291,
											"end": 314,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 291,
											"end": 314,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 335,
											"end": 341,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 385,
											"end": 388,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 377,
											"end": 381,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 369,
											"end": 375,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 365,
											"end": 382,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 360,
											"end": 363,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 356,
											"end": 383,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 353,
											"end": 389,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 350,
											"end": 493,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 350,
											"end": 493,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "37"
										},
										{
											"begin": 350,
											"end": 493,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 404,
											"end": 483,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "38"
										},
										{
											"begin": 404,
											"end": 483,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "39"
										},
										{
											"begin": 404,
											"end": 483,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 404,
											"end": 483,
											"name": "tag",
											"source": 15,
											"value": "38"
										},
										{
											"begin": 404,
											"end": 483,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 350,
											"end": 493,
											"name": "tag",
											"source": 15,
											"value": "37"
										},
										{
											"begin": 350,
											"end": 493,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 517,
											"end": 518,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 502,
											"end": 740,
											"name": "tag",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 502,
											"end": 740,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 527,
											"end": 533,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 524,
											"end": 525,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 521,
											"end": 534,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 502,
											"end": 740,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 502,
											"end": 740,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "42"
										},
										{
											"begin": 502,
											"end": 740,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 595,
											"end": 598,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 624,
											"end": 661,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "43"
										},
										{
											"begin": 657,
											"end": 660,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 645,
											"end": 655,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 624,
											"end": 661,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 624,
											"end": 661,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 624,
											"end": 661,
											"name": "tag",
											"source": 15,
											"value": "43"
										},
										{
											"begin": 624,
											"end": 661,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 619,
											"end": 622,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 612,
											"end": 662,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 691,
											"end": 695,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 686,
											"end": 689,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 682,
											"end": 696,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 675,
											"end": 696,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 675,
											"end": 696,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 725,
											"end": 729,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 720,
											"end": 723,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 716,
											"end": 730,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 709,
											"end": 730,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 709,
											"end": 730,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 562,
											"end": 740,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 549,
											"end": 550,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 546,
											"end": 547,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 542,
											"end": 551,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 537,
											"end": 551,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 537,
											"end": 551,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 502,
											"end": 740,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 502,
											"end": 740,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 502,
											"end": 740,
											"name": "tag",
											"source": 15,
											"value": "42"
										},
										{
											"begin": 502,
											"end": 740,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 506,
											"end": 520,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 126,
											"end": 746,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 126,
											"end": 746,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 24,
											"end": 746,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 24,
											"end": 746,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 24,
											"end": 746,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 24,
											"end": 746,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 24,
											"end": 746,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 24,
											"end": 746,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 752,
											"end": 1162,
											"name": "tag",
											"source": 15,
											"value": "45"
										},
										{
											"begin": 752,
											"end": 1162,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 829,
											"end": 834,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 854,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "47"
										},
										{
											"begin": 870,
											"end": 918,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "48"
										},
										{
											"begin": 911,
											"end": 917,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 870,
											"end": 918,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "49"
										},
										{
											"begin": 870,
											"end": 918,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 870,
											"end": 918,
											"name": "tag",
											"source": 15,
											"value": "48"
										},
										{
											"begin": 870,
											"end": 918,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 854,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "36"
										},
										{
											"begin": 854,
											"end": 919,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 854,
											"end": 919,
											"name": "tag",
											"source": 15,
											"value": "47"
										},
										{
											"begin": 854,
											"end": 919,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 845,
											"end": 919,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 845,
											"end": 919,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 942,
											"end": 948,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 935,
											"end": 940,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 928,
											"end": 949,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 980,
											"end": 984,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 973,
											"end": 978,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 969,
											"end": 985,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1018,
											"end": 1021,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1009,
											"end": 1015,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1004,
											"end": 1007,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1000,
											"end": 1016,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 997,
											"end": 1022,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 994,
											"end": 1106,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 994,
											"end": 1106,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "50"
										},
										{
											"begin": 994,
											"end": 1106,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1025,
											"end": 1104,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "51"
										},
										{
											"begin": 1025,
											"end": 1104,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "52"
										},
										{
											"begin": 1025,
											"end": 1104,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 1025,
											"end": 1104,
											"name": "tag",
											"source": 15,
											"value": "51"
										},
										{
											"begin": 1025,
											"end": 1104,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 994,
											"end": 1106,
											"name": "tag",
											"source": 15,
											"value": "50"
										},
										{
											"begin": 994,
											"end": 1106,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1115,
											"end": 1156,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "53"
										},
										{
											"begin": 1149,
											"end": 1155,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1144,
											"end": 1147,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1139,
											"end": 1142,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 1115,
											"end": 1156,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "54"
										},
										{
											"begin": 1115,
											"end": 1156,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 1115,
											"end": 1156,
											"name": "tag",
											"source": 15,
											"value": "53"
										},
										{
											"begin": 1115,
											"end": 1156,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 835,
											"end": 1162,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 752,
											"end": 1162,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 752,
											"end": 1162,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 752,
											"end": 1162,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 752,
											"end": 1162,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 752,
											"end": 1162,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 752,
											"end": 1162,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 1168,
											"end": 1307,
											"name": "tag",
											"source": 15,
											"value": "55"
										},
										{
											"begin": 1168,
											"end": 1307,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1214,
											"end": 1219,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1252,
											"end": 1258,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1239,
											"end": 1259,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 1230,
											"end": 1259,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1230,
											"end": 1259,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1268,
											"end": 1301,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "57"
										},
										{
											"begin": 1295,
											"end": 1300,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1268,
											"end": 1301,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "58"
										},
										{
											"begin": 1268,
											"end": 1301,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 1268,
											"end": 1301,
											"name": "tag",
											"source": 15,
											"value": "57"
										},
										{
											"begin": 1268,
											"end": 1301,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1168,
											"end": 1307,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1168,
											"end": 1307,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1168,
											"end": 1307,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1168,
											"end": 1307,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1168,
											"end": 1307,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 1330,
											"end": 1700,
											"name": "tag",
											"source": 15,
											"value": "59"
										},
										{
											"begin": 1330,
											"end": 1700,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1401,
											"end": 1406,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1450,
											"end": 1453,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1443,
											"end": 1447,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 1435,
											"end": 1441,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1431,
											"end": 1448,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1427,
											"end": 1454,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 1417,
											"end": 1539,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "61"
										},
										{
											"begin": 1417,
											"end": 1539,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1458,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "62"
										},
										{
											"begin": 1458,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "63"
										},
										{
											"begin": 1458,
											"end": 1537,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 1458,
											"end": 1537,
											"name": "tag",
											"source": 15,
											"value": "62"
										},
										{
											"begin": 1458,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1417,
											"end": 1539,
											"name": "tag",
											"source": 15,
											"value": "61"
										},
										{
											"begin": 1417,
											"end": 1539,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1575,
											"end": 1581,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1562,
											"end": 1582,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 1600,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 1690,
											"end": 1693,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1682,
											"end": 1688,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1675,
											"end": 1679,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1667,
											"end": 1673,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 1663,
											"end": 1680,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1600,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "31"
										},
										{
											"begin": 1600,
											"end": 1694,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 1600,
											"end": 1694,
											"name": "tag",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 1600,
											"end": 1694,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1591,
											"end": 1694,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1591,
											"end": 1694,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1407,
											"end": 1700,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1330,
											"end": 1700,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1330,
											"end": 1700,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1330,
											"end": 1700,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1330,
											"end": 1700,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1330,
											"end": 1700,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 1706,
											"end": 1843,
											"name": "tag",
											"source": 15,
											"value": "65"
										},
										{
											"begin": 1706,
											"end": 1843,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1751,
											"end": 1756,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1789,
											"end": 1795,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1776,
											"end": 1796,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 1767,
											"end": 1796,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1767,
											"end": 1796,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1805,
											"end": 1837,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "67"
										},
										{
											"begin": 1831,
											"end": 1836,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1805,
											"end": 1837,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "68"
										},
										{
											"begin": 1805,
											"end": 1837,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 1805,
											"end": 1837,
											"name": "tag",
											"source": 15,
											"value": "67"
										},
										{
											"begin": 1805,
											"end": 1837,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1706,
											"end": 1843,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1706,
											"end": 1843,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1706,
											"end": 1843,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1706,
											"end": 1843,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1706,
											"end": 1843,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 1862,
											"end": 2200,
											"name": "tag",
											"source": 15,
											"value": "69"
										},
										{
											"begin": 1862,
											"end": 2200,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1917,
											"end": 1922,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1966,
											"end": 1969,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1959,
											"end": 1963,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 1951,
											"end": 1957,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1947,
											"end": 1964,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1943,
											"end": 1970,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 1933,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "71"
										},
										{
											"begin": 1933,
											"end": 2055,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1974,
											"end": 2053,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "72"
										},
										{
											"begin": 1974,
											"end": 2053,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "63"
										},
										{
											"begin": 1974,
											"end": 2053,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 1974,
											"end": 2053,
											"name": "tag",
											"source": 15,
											"value": "72"
										},
										{
											"begin": 1974,
											"end": 2053,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1933,
											"end": 2055,
											"name": "tag",
											"source": 15,
											"value": "71"
										},
										{
											"begin": 1933,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2091,
											"end": 2097,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 2116,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "73"
										},
										{
											"begin": 2190,
											"end": 2193,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 2182,
											"end": 2188,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2175,
											"end": 2179,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2167,
											"end": 2173,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 2163,
											"end": 2180,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2116,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "45"
										},
										{
											"begin": 2116,
											"end": 2194,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 2116,
											"end": 2194,
											"name": "tag",
											"source": 15,
											"value": "73"
										},
										{
											"begin": 2116,
											"end": 2194,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2107,
											"end": 2194,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2107,
											"end": 2194,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1923,
											"end": 2200,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1862,
											"end": 2200,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1862,
											"end": 2200,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1862,
											"end": 2200,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1862,
											"end": 2200,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1862,
											"end": 2200,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 2206,
											"end": 2345,
											"name": "tag",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 2206,
											"end": 2345,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2252,
											"end": 2257,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2290,
											"end": 2296,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2277,
											"end": 2297,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 2268,
											"end": 2297,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2268,
											"end": 2297,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2306,
											"end": 2339,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "75"
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2306,
											"end": 2339,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "76"
										},
										{
											"begin": 2306,
											"end": 2339,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 2306,
											"end": 2339,
											"name": "tag",
											"source": 15,
											"value": "75"
										},
										{
											"begin": 2306,
											"end": 2339,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2206,
											"end": 2345,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2206,
											"end": 2345,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2206,
											"end": 2345,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2206,
											"end": 2345,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2206,
											"end": 2345,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 2351,
											"end": 3860,
											"name": "tag",
											"source": 15,
											"value": "14"
										},
										{
											"begin": 2351,
											"end": 3860,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2505,
											"end": 2511,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2513,
											"end": 2519,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2521,
											"end": 2527,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2529,
											"end": 2535,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2537,
											"end": 2543,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2586,
											"end": 2589,
											"name": "PUSH",
											"source": 15,
											"value": "A0"
										},
										{
											"begin": 2574,
											"end": 2583,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 2565,
											"end": 2572,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 2561,
											"end": 2584,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 2557,
											"end": 2590,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 2554,
											"end": 2674,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2554,
											"end": 2674,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "78"
										},
										{
											"begin": 2554,
											"end": 2674,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2593,
											"end": 2672,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "79"
										},
										{
											"begin": 2593,
											"end": 2672,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 2593,
											"end": 2672,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 2593,
											"end": 2672,
											"name": "tag",
											"source": 15,
											"value": "79"
										},
										{
											"begin": 2593,
											"end": 2672,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2554,
											"end": 2674,
											"name": "tag",
											"source": 15,
											"value": "78"
										},
										{
											"begin": 2554,
											"end": 2674,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2713,
											"end": 2714,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2738,
											"end": 2791,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "81"
										},
										{
											"begin": 2783,
											"end": 2790,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 2774,
											"end": 2780,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2763,
											"end": 2772,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 2759,
											"end": 2781,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2738,
											"end": 2791,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "55"
										},
										{
											"begin": 2738,
											"end": 2791,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 2738,
											"end": 2791,
											"name": "tag",
											"source": 15,
											"value": "81"
										},
										{
											"begin": 2738,
											"end": 2791,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2728,
											"end": 2791,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 2728,
											"end": 2791,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2684,
											"end": 2801,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2840,
											"end": 2842,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2866,
											"end": 2919,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "82"
										},
										{
											"begin": 2911,
											"end": 2918,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 2902,
											"end": 2908,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2891,
											"end": 2900,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 2887,
											"end": 2909,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2866,
											"end": 2919,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "55"
										},
										{
											"begin": 2866,
											"end": 2919,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 2866,
											"end": 2919,
											"name": "tag",
											"source": 15,
											"value": "82"
										},
										{
											"begin": 2866,
											"end": 2919,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2856,
											"end": 2919,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 2856,
											"end": 2919,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2811,
											"end": 2929,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2996,
											"end": 2998,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2985,
											"end": 2994,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 2981,
											"end": 2999,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2968,
											"end": 3000,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 3027,
											"end": 3045,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3019,
											"end": 3025,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3016,
											"end": 3046,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 3013,
											"end": 3130,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3013,
											"end": 3130,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "83"
										},
										{
											"begin": 3013,
											"end": 3130,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3049,
											"end": 3128,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "84"
										},
										{
											"begin": 3049,
											"end": 3128,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "85"
										},
										{
											"begin": 3049,
											"end": 3128,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 3049,
											"end": 3128,
											"name": "tag",
											"source": 15,
											"value": "84"
										},
										{
											"begin": 3049,
											"end": 3128,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3013,
											"end": 3130,
											"name": "tag",
											"source": 15,
											"value": "83"
										},
										{
											"begin": 3013,
											"end": 3130,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3154,
											"end": 3232,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "86"
										},
										{
											"begin": 3224,
											"end": 3231,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 3215,
											"end": 3221,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3204,
											"end": 3213,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 3200,
											"end": 3222,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3154,
											"end": 3232,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "59"
										},
										{
											"begin": 3154,
											"end": 3232,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 3154,
											"end": 3232,
											"name": "tag",
											"source": 15,
											"value": "86"
										},
										{
											"begin": 3154,
											"end": 3232,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3144,
											"end": 3232,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 3144,
											"end": 3232,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2939,
											"end": 3242,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3309,
											"end": 3311,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 3298,
											"end": 3307,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 3294,
											"end": 3312,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3281,
											"end": 3313,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 3340,
											"end": 3358,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3332,
											"end": 3338,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3329,
											"end": 3359,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 3326,
											"end": 3443,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3326,
											"end": 3443,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "87"
										},
										{
											"begin": 3326,
											"end": 3443,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3362,
											"end": 3441,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "88"
										},
										{
											"begin": 3362,
											"end": 3441,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "85"
										},
										{
											"begin": 3362,
											"end": 3441,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 3362,
											"end": 3441,
											"name": "tag",
											"source": 15,
											"value": "88"
										},
										{
											"begin": 3362,
											"end": 3441,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3326,
											"end": 3443,
											"name": "tag",
											"source": 15,
											"value": "87"
										},
										{
											"begin": 3326,
											"end": 3443,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3467,
											"end": 3545,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "89"
										},
										{
											"begin": 3537,
											"end": 3544,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 3528,
											"end": 3534,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3517,
											"end": 3526,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 3513,
											"end": 3535,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3467,
											"end": 3545,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "59"
										},
										{
											"begin": 3467,
											"end": 3545,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 3467,
											"end": 3545,
											"name": "tag",
											"source": 15,
											"value": "89"
										},
										{
											"begin": 3467,
											"end": 3545,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3457,
											"end": 3545,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 3457,
											"end": 3545,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3252,
											"end": 3555,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3622,
											"end": 3625,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 3611,
											"end": 3620,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 3607,
											"end": 3626,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3594,
											"end": 3627,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 3654,
											"end": 3672,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3646,
											"end": 3652,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3643,
											"end": 3673,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 3640,
											"end": 3757,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3640,
											"end": 3757,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "90"
										},
										{
											"begin": 3640,
											"end": 3757,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3676,
											"end": 3755,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "91"
										},
										{
											"begin": 3676,
											"end": 3755,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "85"
										},
										{
											"begin": 3676,
											"end": 3755,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 3676,
											"end": 3755,
											"name": "tag",
											"source": 15,
											"value": "91"
										},
										{
											"begin": 3676,
											"end": 3755,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3640,
											"end": 3757,
											"name": "tag",
											"source": 15,
											"value": "90"
										},
										{
											"begin": 3640,
											"end": 3757,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3781,
											"end": 3843,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "92"
										},
										{
											"begin": 3835,
											"end": 3842,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 3826,
											"end": 3832,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3815,
											"end": 3824,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 3811,
											"end": 3833,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3781,
											"end": 3843,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "69"
										},
										{
											"begin": 3781,
											"end": 3843,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 3781,
											"end": 3843,
											"name": "tag",
											"source": 15,
											"value": "92"
										},
										{
											"begin": 3781,
											"end": 3843,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3771,
											"end": 3843,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3771,
											"end": 3843,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3565,
											"end": 3853,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2351,
											"end": 3860,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2351,
											"end": 3860,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 2351,
											"end": 3860,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2351,
											"end": 3860,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2351,
											"end": 3860,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 2351,
											"end": 3860,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2351,
											"end": 3860,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 2351,
											"end": 3860,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2351,
											"end": 3860,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 3866,
											"end": 4955,
											"name": "tag",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3866,
											"end": 4955,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3970,
											"end": 3976,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3978,
											"end": 3984,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3986,
											"end": 3992,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3994,
											"end": 4000,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4002,
											"end": 4008,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4051,
											"end": 4054,
											"name": "PUSH",
											"source": 15,
											"value": "A0"
										},
										{
											"begin": 4039,
											"end": 4048,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 4030,
											"end": 4037,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 4026,
											"end": 4049,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 4022,
											"end": 4055,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 4019,
											"end": 4139,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 4019,
											"end": 4139,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "94"
										},
										{
											"begin": 4019,
											"end": 4139,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4058,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "95"
										},
										{
											"begin": 4058,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 4058,
											"end": 4137,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 4058,
											"end": 4137,
											"name": "tag",
											"source": 15,
											"value": "95"
										},
										{
											"begin": 4058,
											"end": 4137,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4019,
											"end": 4139,
											"name": "tag",
											"source": 15,
											"value": "94"
										},
										{
											"begin": 4019,
											"end": 4139,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4178,
											"end": 4179,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4203,
											"end": 4256,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "96"
										},
										{
											"begin": 4248,
											"end": 4255,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 4239,
											"end": 4245,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4228,
											"end": 4237,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 4224,
											"end": 4246,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4203,
											"end": 4256,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "55"
										},
										{
											"begin": 4203,
											"end": 4256,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 4203,
											"end": 4256,
											"name": "tag",
											"source": 15,
											"value": "96"
										},
										{
											"begin": 4203,
											"end": 4256,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4193,
											"end": 4256,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 4193,
											"end": 4256,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4149,
											"end": 4266,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4305,
											"end": 4307,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4331,
											"end": 4384,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "97"
										},
										{
											"begin": 4376,
											"end": 4383,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 4367,
											"end": 4373,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4356,
											"end": 4365,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 4352,
											"end": 4374,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4331,
											"end": 4384,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "55"
										},
										{
											"begin": 4331,
											"end": 4384,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 4331,
											"end": 4384,
											"name": "tag",
											"source": 15,
											"value": "97"
										},
										{
											"begin": 4331,
											"end": 4384,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4321,
											"end": 4384,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 4321,
											"end": 4384,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4276,
											"end": 4394,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4433,
											"end": 4435,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 4459,
											"end": 4512,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "98"
										},
										{
											"begin": 4504,
											"end": 4511,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 4495,
											"end": 4501,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4484,
											"end": 4493,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 4480,
											"end": 4502,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4459,
											"end": 4512,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 4459,
											"end": 4512,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 4459,
											"end": 4512,
											"name": "tag",
											"source": 15,
											"value": "98"
										},
										{
											"begin": 4459,
											"end": 4512,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4449,
											"end": 4512,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 4449,
											"end": 4512,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4404,
											"end": 4522,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4561,
											"end": 4563,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 4587,
											"end": 4640,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "99"
										},
										{
											"begin": 4632,
											"end": 4639,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 4623,
											"end": 4629,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4612,
											"end": 4621,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 4608,
											"end": 4630,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4587,
											"end": 4640,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 4587,
											"end": 4640,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 4587,
											"end": 4640,
											"name": "tag",
											"source": 15,
											"value": "99"
										},
										{
											"begin": 4587,
											"end": 4640,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4577,
											"end": 4640,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4577,
											"end": 4640,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4532,
											"end": 4650,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4717,
											"end": 4720,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 4706,
											"end": 4715,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 4702,
											"end": 4721,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4689,
											"end": 4722,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 4749,
											"end": 4767,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4741,
											"end": 4747,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4738,
											"end": 4768,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 4735,
											"end": 4852,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 4735,
											"end": 4852,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "100"
										},
										{
											"begin": 4735,
											"end": 4852,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4771,
											"end": 4850,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "101"
										},
										{
											"begin": 4771,
											"end": 4850,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "85"
										},
										{
											"begin": 4771,
											"end": 4850,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 4771,
											"end": 4850,
											"name": "tag",
											"source": 15,
											"value": "101"
										},
										{
											"begin": 4771,
											"end": 4850,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4735,
											"end": 4852,
											"name": "tag",
											"source": 15,
											"value": "100"
										},
										{
											"begin": 4735,
											"end": 4852,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4876,
											"end": 4938,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "102"
										},
										{
											"begin": 4930,
											"end": 4937,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 4921,
											"end": 4927,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4910,
											"end": 4919,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 4906,
											"end": 4928,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4876,
											"end": 4938,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "69"
										},
										{
											"begin": 4876,
											"end": 4938,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 4876,
											"end": 4938,
											"name": "tag",
											"source": 15,
											"value": "102"
										},
										{
											"begin": 4876,
											"end": 4938,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4866,
											"end": 4938,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4866,
											"end": 4938,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4660,
											"end": 4948,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3866,
											"end": 4955,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 3866,
											"end": 4955,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 3866,
											"end": 4955,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3866,
											"end": 4955,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 3866,
											"end": 4955,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 3866,
											"end": 4955,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3866,
											"end": 4955,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 3866,
											"end": 4955,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3866,
											"end": 4955,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 4961,
											"end": 5288,
											"name": "tag",
											"source": 15,
											"value": "8"
										},
										{
											"begin": 4961,
											"end": 5288,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5019,
											"end": 5025,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5068,
											"end": 5070,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5056,
											"end": 5065,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5047,
											"end": 5054,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 5043,
											"end": 5066,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 5039,
											"end": 5071,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 5036,
											"end": 5155,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 5036,
											"end": 5155,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "104"
										},
										{
											"begin": 5036,
											"end": 5155,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 5074,
											"end": 5153,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "105"
										},
										{
											"begin": 5074,
											"end": 5153,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 5074,
											"end": 5153,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 5074,
											"end": 5153,
											"name": "tag",
											"source": 15,
											"value": "105"
										},
										{
											"begin": 5074,
											"end": 5153,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5036,
											"end": 5155,
											"name": "tag",
											"source": 15,
											"value": "104"
										},
										{
											"begin": 5036,
											"end": 5155,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5194,
											"end": 5195,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5219,
											"end": 5271,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "106"
										},
										{
											"begin": 5263,
											"end": 5270,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 5254,
											"end": 5260,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5243,
											"end": 5252,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 5239,
											"end": 5261,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5219,
											"end": 5271,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "65"
										},
										{
											"begin": 5219,
											"end": 5271,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 5219,
											"end": 5271,
											"name": "tag",
											"source": 15,
											"value": "106"
										},
										{
											"begin": 5219,
											"end": 5271,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5209,
											"end": 5271,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5209,
											"end": 5271,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5165,
											"end": 5281,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4961,
											"end": 5288,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4961,
											"end": 5288,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4961,
											"end": 5288,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4961,
											"end": 5288,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4961,
											"end": 5288,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 5294,
											"end": 5403,
											"name": "tag",
											"source": 15,
											"value": "107"
										},
										{
											"begin": 5294,
											"end": 5403,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5375,
											"end": 5396,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "109"
										},
										{
											"begin": 5390,
											"end": 5395,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5375,
											"end": 5396,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "110"
										},
										{
											"begin": 5375,
											"end": 5396,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 5375,
											"end": 5396,
											"name": "tag",
											"source": 15,
											"value": "109"
										},
										{
											"begin": 5375,
											"end": 5396,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5370,
											"end": 5373,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5363,
											"end": 5397,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5294,
											"end": 5403,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5294,
											"end": 5403,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5294,
											"end": 5403,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 5409,
											"end": 5524,
											"name": "tag",
											"source": 15,
											"value": "111"
										},
										{
											"begin": 5409,
											"end": 5524,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5494,
											"end": 5517,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "113"
										},
										{
											"begin": 5511,
											"end": 5516,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5494,
											"end": 5517,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "114"
										},
										{
											"begin": 5494,
											"end": 5517,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 5494,
											"end": 5517,
											"name": "tag",
											"source": 15,
											"value": "113"
										},
										{
											"begin": 5494,
											"end": 5517,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5489,
											"end": 5492,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5482,
											"end": 5518,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5409,
											"end": 5524,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5409,
											"end": 5524,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5409,
											"end": 5524,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 5530,
											"end": 5740,
											"name": "tag",
											"source": 15,
											"value": "11"
										},
										{
											"begin": 5530,
											"end": 5740,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5617,
											"end": 5621,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5655,
											"end": 5657,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5644,
											"end": 5653,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5640,
											"end": 5658,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5632,
											"end": 5658,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5632,
											"end": 5658,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5668,
											"end": 5733,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "116"
										},
										{
											"begin": 5730,
											"end": 5731,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5719,
											"end": 5728,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 5715,
											"end": 5732,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5706,
											"end": 5712,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 5668,
											"end": 5733,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "107"
										},
										{
											"begin": 5668,
											"end": 5733,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 5668,
											"end": 5733,
											"name": "tag",
											"source": 15,
											"value": "116"
										},
										{
											"begin": 5668,
											"end": 5733,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5530,
											"end": 5740,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 5530,
											"end": 5740,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5530,
											"end": 5740,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5530,
											"end": 5740,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5530,
											"end": 5740,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 5746,
											"end": 5964,
											"name": "tag",
											"source": 15,
											"value": "17"
										},
										{
											"begin": 5746,
											"end": 5964,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5837,
											"end": 5841,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5875,
											"end": 5877,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5864,
											"end": 5873,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5860,
											"end": 5878,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5852,
											"end": 5878,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5852,
											"end": 5878,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5888,
											"end": 5957,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "118"
										},
										{
											"begin": 5954,
											"end": 5955,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5943,
											"end": 5952,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 5939,
											"end": 5956,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5930,
											"end": 5936,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 5888,
											"end": 5957,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "111"
										},
										{
											"begin": 5888,
											"end": 5957,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 5888,
											"end": 5957,
											"name": "tag",
											"source": 15,
											"value": "118"
										},
										{
											"begin": 5888,
											"end": 5957,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5746,
											"end": 5964,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 5746,
											"end": 5964,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5746,
											"end": 5964,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5746,
											"end": 5964,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5746,
											"end": 5964,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 5970,
											"end": 6099,
											"name": "tag",
											"source": 15,
											"value": "36"
										},
										{
											"begin": 5970,
											"end": 6099,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6004,
											"end": 6010,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6031,
											"end": 6051,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "120"
										},
										{
											"begin": 6031,
											"end": 6051,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "121"
										},
										{
											"begin": 6031,
											"end": 6051,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 6031,
											"end": 6051,
											"name": "tag",
											"source": 15,
											"value": "120"
										},
										{
											"begin": 6031,
											"end": 6051,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6021,
											"end": 6051,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6021,
											"end": 6051,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6060,
											"end": 6093,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "122"
										},
										{
											"begin": 6088,
											"end": 6092,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6080,
											"end": 6086,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6060,
											"end": 6093,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "123"
										},
										{
											"begin": 6060,
											"end": 6093,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 6060,
											"end": 6093,
											"name": "tag",
											"source": 15,
											"value": "122"
										},
										{
											"begin": 6060,
											"end": 6093,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5970,
											"end": 6099,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5970,
											"end": 6099,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5970,
											"end": 6099,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5970,
											"end": 6099,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 6105,
											"end": 6180,
											"name": "tag",
											"source": 15,
											"value": "121"
										},
										{
											"begin": 6105,
											"end": 6180,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6138,
											"end": 6144,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6171,
											"end": 6173,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 6165,
											"end": 6174,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 6155,
											"end": 6174,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6155,
											"end": 6174,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6105,
											"end": 6180,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6105,
											"end": 6180,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 6186,
											"end": 6497,
											"name": "tag",
											"source": 15,
											"value": "35"
										},
										{
											"begin": 6186,
											"end": 6497,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6263,
											"end": 6267,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6353,
											"end": 6371,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6345,
											"end": 6351,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6342,
											"end": 6372,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 6339,
											"end": 6395,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 6339,
											"end": 6395,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "126"
										},
										{
											"begin": 6339,
											"end": 6395,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 6375,
											"end": 6393,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "127"
										},
										{
											"begin": 6375,
											"end": 6393,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "128"
										},
										{
											"begin": 6375,
											"end": 6393,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 6375,
											"end": 6393,
											"name": "tag",
											"source": 15,
											"value": "127"
										},
										{
											"begin": 6375,
											"end": 6393,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6339,
											"end": 6395,
											"name": "tag",
											"source": 15,
											"value": "126"
										},
										{
											"begin": 6339,
											"end": 6395,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6425,
											"end": 6429,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 6417,
											"end": 6423,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6413,
											"end": 6430,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 6405,
											"end": 6430,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6405,
											"end": 6430,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6485,
											"end": 6489,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 6479,
											"end": 6483,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6467,
											"end": 6490,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6467,
											"end": 6490,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6186,
											"end": 6497,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6186,
											"end": 6497,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6186,
											"end": 6497,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6186,
											"end": 6497,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 6503,
											"end": 6810,
											"name": "tag",
											"source": 15,
											"value": "49"
										},
										{
											"begin": 6503,
											"end": 6810,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6564,
											"end": 6568,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6654,
											"end": 6672,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6646,
											"end": 6652,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6643,
											"end": 6673,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 6640,
											"end": 6696,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 6640,
											"end": 6696,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "130"
										},
										{
											"begin": 6640,
											"end": 6696,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 6676,
											"end": 6694,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "131"
										},
										{
											"begin": 6676,
											"end": 6694,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "128"
										},
										{
											"begin": 6676,
											"end": 6694,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 6676,
											"end": 6694,
											"name": "tag",
											"source": 15,
											"value": "131"
										},
										{
											"begin": 6676,
											"end": 6694,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6640,
											"end": 6696,
											"name": "tag",
											"source": 15,
											"value": "130"
										},
										{
											"begin": 6640,
											"end": 6696,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6714,
											"end": 6743,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "132"
										},
										{
											"begin": 6736,
											"end": 6742,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6714,
											"end": 6743,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "133"
										},
										{
											"begin": 6714,
											"end": 6743,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 6714,
											"end": 6743,
											"name": "tag",
											"source": 15,
											"value": "132"
										},
										{
											"begin": 6714,
											"end": 6743,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6706,
											"end": 6743,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6706,
											"end": 6743,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6798,
											"end": 6802,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 6792,
											"end": 6796,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6788,
											"end": 6803,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6780,
											"end": 6803,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6780,
											"end": 6803,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6503,
											"end": 6810,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6503,
											"end": 6810,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6503,
											"end": 6810,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6503,
											"end": 6810,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 6816,
											"end": 6912,
											"name": "tag",
											"source": 15,
											"value": "134"
										},
										{
											"begin": 6816,
											"end": 6912,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6853,
											"end": 6860,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6882,
											"end": 6906,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "136"
										},
										{
											"begin": 6900,
											"end": 6905,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6882,
											"end": 6906,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "137"
										},
										{
											"begin": 6882,
											"end": 6906,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 6882,
											"end": 6906,
											"name": "tag",
											"source": 15,
											"value": "136"
										},
										{
											"begin": 6882,
											"end": 6906,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6871,
											"end": 6906,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6871,
											"end": 6906,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6816,
											"end": 6912,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6816,
											"end": 6912,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6816,
											"end": 6912,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6816,
											"end": 6912,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 6918,
											"end": 7008,
											"name": "tag",
											"source": 15,
											"value": "110"
										},
										{
											"begin": 6918,
											"end": 7008,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6952,
											"end": 6959,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6995,
											"end": 7000,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6988,
											"end": 7001,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 6981,
											"end": 7002,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 6970,
											"end": 7002,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6970,
											"end": 7002,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6918,
											"end": 7008,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6918,
											"end": 7008,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6918,
											"end": 7008,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6918,
											"end": 7008,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 7014,
											"end": 7163,
											"name": "tag",
											"source": 15,
											"value": "114"
										},
										{
											"begin": 7014,
											"end": 7163,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7050,
											"end": 7057,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7090,
											"end": 7156,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7083,
											"end": 7088,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7079,
											"end": 7157,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 7068,
											"end": 7157,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7068,
											"end": 7157,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7014,
											"end": 7163,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 7014,
											"end": 7163,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7014,
											"end": 7163,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7014,
											"end": 7163,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 7169,
											"end": 7295,
											"name": "tag",
											"source": 15,
											"value": "137"
										},
										{
											"begin": 7169,
											"end": 7295,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7206,
											"end": 7213,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7246,
											"end": 7288,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7239,
											"end": 7244,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7235,
											"end": 7289,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 7224,
											"end": 7289,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7224,
											"end": 7289,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7169,
											"end": 7295,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 7169,
											"end": 7295,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7169,
											"end": 7295,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7169,
											"end": 7295,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 7301,
											"end": 7378,
											"name": "tag",
											"source": 15,
											"value": "141"
										},
										{
											"begin": 7301,
											"end": 7378,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7338,
											"end": 7345,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7367,
											"end": 7372,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7356,
											"end": 7372,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7356,
											"end": 7372,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7301,
											"end": 7378,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 7301,
											"end": 7378,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7301,
											"end": 7378,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7301,
											"end": 7378,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 7384,
											"end": 7538,
											"name": "tag",
											"source": 15,
											"value": "54"
										},
										{
											"begin": 7384,
											"end": 7538,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7468,
											"end": 7474,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7463,
											"end": 7466,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7458,
											"end": 7461,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 7445,
											"end": 7475,
											"name": "CALLDATACOPY",
											"source": 15
										},
										{
											"begin": 7530,
											"end": 7531,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7521,
											"end": 7527,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 7516,
											"end": 7519,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 7512,
											"end": 7528,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7505,
											"end": 7532,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7384,
											"end": 7538,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7384,
											"end": 7538,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7384,
											"end": 7538,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7384,
											"end": 7538,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 7544,
											"end": 7825,
											"name": "tag",
											"source": 15,
											"value": "123"
										},
										{
											"begin": 7544,
											"end": 7825,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7627,
											"end": 7654,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "145"
										},
										{
											"begin": 7649,
											"end": 7653,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7627,
											"end": 7654,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "133"
										},
										{
											"begin": 7627,
											"end": 7654,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 7627,
											"end": 7654,
											"name": "tag",
											"source": 15,
											"value": "145"
										},
										{
											"begin": 7627,
											"end": 7654,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7619,
											"end": 7625,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7615,
											"end": 7655,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7757,
											"end": 7763,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7745,
											"end": 7755,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7742,
											"end": 7764,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 7721,
											"end": 7739,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7709,
											"end": 7719,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7706,
											"end": 7740,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 7703,
											"end": 7765,
											"name": "OR",
											"source": 15
										},
										{
											"begin": 7700,
											"end": 7788,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 7700,
											"end": 7788,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "146"
										},
										{
											"begin": 7700,
											"end": 7788,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 7768,
											"end": 7786,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "147"
										},
										{
											"begin": 7768,
											"end": 7786,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "128"
										},
										{
											"begin": 7768,
											"end": 7786,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 7768,
											"end": 7786,
											"name": "tag",
											"source": 15,
											"value": "147"
										},
										{
											"begin": 7768,
											"end": 7786,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7700,
											"end": 7788,
											"name": "tag",
											"source": 15,
											"value": "146"
										},
										{
											"begin": 7700,
											"end": 7788,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7808,
											"end": 7818,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 7804,
											"end": 7806,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 7797,
											"end": 7819,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7587,
											"end": 7825,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7544,
											"end": 7825,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7544,
											"end": 7825,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7544,
											"end": 7825,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 7831,
											"end": 8011,
											"name": "tag",
											"source": 15,
											"value": "128"
										},
										{
											"begin": 7831,
											"end": 8011,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7879,
											"end": 7956,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7876,
											"end": 7877,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7869,
											"end": 7957,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7976,
											"end": 7980,
											"name": "PUSH",
											"source": 15,
											"value": "41"
										},
										{
											"begin": 7973,
											"end": 7974,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 7966,
											"end": 7981,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8000,
											"end": 8004,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 7997,
											"end": 7998,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7990,
											"end": 8005,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 8017,
											"end": 8134,
											"name": "tag",
											"source": 15,
											"value": "63"
										},
										{
											"begin": 8017,
											"end": 8134,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8126,
											"end": 8127,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8123,
											"end": 8124,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 8116,
											"end": 8128,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 8140,
											"end": 8257,
											"name": "tag",
											"source": 15,
											"value": "39"
										},
										{
											"begin": 8140,
											"end": 8257,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8249,
											"end": 8250,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8246,
											"end": 8247,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 8239,
											"end": 8251,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 8263,
											"end": 8380,
											"name": "tag",
											"source": 15,
											"value": "52"
										},
										{
											"begin": 8263,
											"end": 8380,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8372,
											"end": 8373,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8369,
											"end": 8370,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 8362,
											"end": 8374,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 8386,
											"end": 8503,
											"name": "tag",
											"source": 15,
											"value": "85"
										},
										{
											"begin": 8386,
											"end": 8503,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8495,
											"end": 8496,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8492,
											"end": 8493,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 8485,
											"end": 8497,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 8509,
											"end": 8626,
											"name": "tag",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 8509,
											"end": 8626,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8618,
											"end": 8619,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8615,
											"end": 8616,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 8608,
											"end": 8620,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 8632,
											"end": 8734,
											"name": "tag",
											"source": 15,
											"value": "133"
										},
										{
											"begin": 8632,
											"end": 8734,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8673,
											"end": 8679,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8724,
											"end": 8726,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 8720,
											"end": 8727,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 8715,
											"end": 8717,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 8708,
											"end": 8713,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 8704,
											"end": 8718,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8700,
											"end": 8728,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 8690,
											"end": 8728,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8690,
											"end": 8728,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8632,
											"end": 8734,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 8632,
											"end": 8734,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8632,
											"end": 8734,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8632,
											"end": 8734,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 8740,
											"end": 8862,
											"name": "tag",
											"source": 15,
											"value": "58"
										},
										{
											"begin": 8740,
											"end": 8862,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8813,
											"end": 8837,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "156"
										},
										{
											"begin": 8831,
											"end": 8836,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8813,
											"end": 8837,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "134"
										},
										{
											"begin": 8813,
											"end": 8837,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 8813,
											"end": 8837,
											"name": "tag",
											"source": 15,
											"value": "156"
										},
										{
											"begin": 8813,
											"end": 8837,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8806,
											"end": 8811,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8803,
											"end": 8838,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 8793,
											"end": 8856,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "157"
										},
										{
											"begin": 8793,
											"end": 8856,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 8852,
											"end": 8853,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8849,
											"end": 8850,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 8842,
											"end": 8854,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 8793,
											"end": 8856,
											"name": "tag",
											"source": 15,
											"value": "157"
										},
										{
											"begin": 8793,
											"end": 8856,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8740,
											"end": 8862,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8740,
											"end": 8862,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 8868,
											"end": 8988,
											"name": "tag",
											"source": 15,
											"value": "68"
										},
										{
											"begin": 8868,
											"end": 8988,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8940,
											"end": 8963,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "159"
										},
										{
											"begin": 8957,
											"end": 8962,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8940,
											"end": 8963,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "114"
										},
										{
											"begin": 8940,
											"end": 8963,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 8940,
											"end": 8963,
											"name": "tag",
											"source": 15,
											"value": "159"
										},
										{
											"begin": 8940,
											"end": 8963,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8933,
											"end": 8938,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8930,
											"end": 8964,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 8920,
											"end": 8982,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "160"
										},
										{
											"begin": 8920,
											"end": 8982,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 8978,
											"end": 8979,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8975,
											"end": 8976,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 8968,
											"end": 8980,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 8920,
											"end": 8982,
											"name": "tag",
											"source": 15,
											"value": "160"
										},
										{
											"begin": 8920,
											"end": 8982,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8868,
											"end": 8988,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8868,
											"end": 8988,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 8994,
											"end": 9116,
											"name": "tag",
											"source": 15,
											"value": "76"
										},
										{
											"begin": 8994,
											"end": 9116,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9067,
											"end": 9091,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "162"
										},
										{
											"begin": 9085,
											"end": 9090,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9067,
											"end": 9091,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "141"
										},
										{
											"begin": 9067,
											"end": 9091,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 9067,
											"end": 9091,
											"name": "tag",
											"source": 15,
											"value": "162"
										},
										{
											"begin": 9067,
											"end": 9091,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9060,
											"end": 9065,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9057,
											"end": 9092,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 9047,
											"end": 9110,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "163"
										},
										{
											"begin": 9047,
											"end": 9110,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 9106,
											"end": 9107,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9103,
											"end": 9104,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 9096,
											"end": 9108,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 9047,
											"end": 9110,
											"name": "tag",
											"source": 15,
											"value": "163"
										},
										{
											"begin": 9047,
											"end": 9110,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8994,
											"end": 9116,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8994,
											"end": 9116,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"_Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Simple implementation of `ERC1155Receiver` that will allow a contract to hold ERC1155 tokens. IMPORTANT: When inheriting this contract, you must include a way to use the received tokens, otherwise they will be stuck.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":\"ERC1155Holder\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":{\"keccak256\":\"0x2e024ca51ce5abe16c0d34e6992a1104f356e2244eb4ccbec970435e8b3405e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a74009db3c6fc8db851ba69ddb6795b5c1ef1120c5a00fd1a8dc3a717dd9d519\",\"dweb:/ipfs/QmZMk8Yh2X3gPS51ckUVLEXjZUhMSEeGApnA53WtjvLb9h\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":{\"keccak256\":\"0x3dd5e1a66a56f30302108a1da97d677a42b1daa60e503696b2bcbbf3e4c95bcb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0808de0ae4918c664643c885ca7fa6503e8ef2bd75609dfc85152c0128a3422d\",\"dweb:/ipfs/QmNrhFC1XgBKuuxfahFeiwi1MCdu3FLNpHj2uStgmf4iJj\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Simple implementation of `ERC1155Receiver` that will allow a contract to hold ERC1155 tokens. IMPORTANT: When inheriting this contract, you must include a way to use the received tokens, otherwise they will be stuck.",
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol": {
				"ERC1155Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "_Available since v3.1._",
						"kind": "dev",
						"methods": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
								"details": "Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"ids": "An array containing ids of each token being transferred (order and length must match values array)",
									"operator": "The address which initiated the batch transfer (i.e. msg.sender)",
									"values": "An array containing amounts of each token being transferred (order and length must match ids array)"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
								}
							},
							"onERC1155Received(address,address,uint256,uint256,bytes)": {
								"details": "Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"id": "The ID of the token being transferred",
									"operator": "The address which initiated the transfer (i.e. msg.sender)",
									"value": "The amount of tokens being transferred"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"_Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":\"ERC1155Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":{\"keccak256\":\"0x3dd5e1a66a56f30302108a1da97d677a42b1daa60e503696b2bcbbf3e4c95bcb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0808de0ae4918c664643c885ca7fa6503e8ef2bd75609dfc85152c0128a3422d\",\"dweb:/ipfs/QmNrhFC1XgBKuuxfahFeiwi1MCdu3FLNpHj2uStgmf4iJj\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":645:3915  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":645:3915  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220bd072a55fab9b3e6160b74aafb8c77693f6dde1859f0f3fe68f1815438216b8064736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bd072a55fab9b3e6160b74aafb8c77693f6dde1859f0f3fe68f1815438216b8064736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBD SMOD 0x2A SSTORE STATICCALL 0xB9 0xB3 0xE6 AND SIGNEXTEND PUSH21 0xAAFB8C77693F6DDE1859F0F3FE68F1815438216B80 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "645:3270:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bd072a55fab9b3e6160b74aafb8c77693f6dde1859f0f3fe68f1815438216b8064736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBD SMOD 0x2A SSTORE STATICCALL 0xB9 0xB3 0xE6 AND SIGNEXTEND PUSH21 0xAAFB8C77693F6DDE1859F0F3FE68F1815438216B80 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "645:3270:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bd072a55fab9b3e6160b74aafb8c77693f6dde1859f0f3fe68f1815438216b8064736f6c63430008070033",
									".code": [
										{
											"begin": 645,
											"end": 3915,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4632c341a06ba5c079b51ca5a915efab4e6ab57735b37839b3e8365ff806a43e\",\"dweb:/ipfs/QmTHT3xHYed2wajEoA5qu7ii2BxLpPhQZHwAhtLK5Z7ANK\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x0d4de01fe5360c38b4ad2b0822a12722958428f5138a7ff47c1720eb6fa52bba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77724cecdfba8814632ab58737c2b0f2d4ad2d532bc614aee559b5593c1152f0\",\"dweb:/ipfs/QmUcE6gXyv7CQh4sUdcDABYKGTovTe1zLMZSEq95nkc3ph\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol": {
				"ERC721Holder": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC721Receiver} interface. Accepts all token transfers. Make sure the contract is able to use its token with {IERC721-safeTransferFrom}, {IERC721-approve} or {IERC721-setApprovalForAll}.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":399:790  contract ERC721Holder is IERC721Receiver {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":399:790  contract ERC721Holder is IERC721Receiver {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x150b7a02\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":588:788  function onERC721Received(... */\n    tag_3:\n      tag_4\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_5\n      swap2\n      swap1\n      tag_6\n      jump\t// in\n    tag_5:\n      tag_7\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_7:\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":726:732  bytes4 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":751:781  this.onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":744:781  return this.onERC721Received.selector */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":588:788  function onERC721Received(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:417   */\n    tag_12:\n        /* \"#utility.yul\":84:89   */\n      0x00\n        /* \"#utility.yul\":109:174   */\n      tag_14\n        /* \"#utility.yul\":125:173   */\n      tag_15\n        /* \"#utility.yul\":166:172   */\n      dup5\n        /* \"#utility.yul\":125:173   */\n      tag_16\n      jump\t// in\n    tag_15:\n        /* \"#utility.yul\":109:174   */\n      tag_17\n      jump\t// in\n    tag_14:\n        /* \"#utility.yul\":100:174   */\n      swap1\n      pop\n        /* \"#utility.yul\":197:203   */\n      dup3\n        /* \"#utility.yul\":190:195   */\n      dup2\n        /* \"#utility.yul\":183:204   */\n      mstore\n        /* \"#utility.yul\":235:239   */\n      0x20\n        /* \"#utility.yul\":228:233   */\n      dup2\n        /* \"#utility.yul\":224:240   */\n      add\n        /* \"#utility.yul\":273:276   */\n      dup5\n        /* \"#utility.yul\":264:270   */\n      dup5\n        /* \"#utility.yul\":259:262   */\n      dup5\n        /* \"#utility.yul\":255:271   */\n      add\n        /* \"#utility.yul\":252:277   */\n      gt\n        /* \"#utility.yul\":249:361   */\n      iszero\n      tag_18\n      jumpi\n        /* \"#utility.yul\":280:359   */\n      tag_19\n      tag_20\n      jump\t// in\n    tag_19:\n        /* \"#utility.yul\":249:361   */\n    tag_18:\n        /* \"#utility.yul\":370:411   */\n      tag_21\n        /* \"#utility.yul\":404:410   */\n      dup5\n        /* \"#utility.yul\":399:402   */\n      dup3\n        /* \"#utility.yul\":394:397   */\n      dup6\n        /* \"#utility.yul\":370:411   */\n      tag_22\n      jump\t// in\n    tag_21:\n        /* \"#utility.yul\":90:417   */\n      pop\n        /* \"#utility.yul\":7:417   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":423:562   */\n    tag_23:\n        /* \"#utility.yul\":469:474   */\n      0x00\n        /* \"#utility.yul\":507:513   */\n      dup2\n        /* \"#utility.yul\":494:514   */\n      calldataload\n        /* \"#utility.yul\":485:514   */\n      swap1\n      pop\n        /* \"#utility.yul\":523:556   */\n      tag_25\n        /* \"#utility.yul\":550:555   */\n      dup2\n        /* \"#utility.yul\":523:556   */\n      tag_26\n      jump\t// in\n    tag_25:\n        /* \"#utility.yul\":423:562   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":581:919   */\n    tag_27:\n        /* \"#utility.yul\":636:641   */\n      0x00\n        /* \"#utility.yul\":685:688   */\n      dup3\n        /* \"#utility.yul\":678:682   */\n      0x1f\n        /* \"#utility.yul\":670:676   */\n      dup4\n        /* \"#utility.yul\":666:683   */\n      add\n        /* \"#utility.yul\":662:689   */\n      slt\n        /* \"#utility.yul\":652:774   */\n      tag_29\n      jumpi\n        /* \"#utility.yul\":693:772   */\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n        /* \"#utility.yul\":652:774   */\n    tag_29:\n        /* \"#utility.yul\":810:816   */\n      dup2\n        /* \"#utility.yul\":797:817   */\n      calldataload\n        /* \"#utility.yul\":835:913   */\n      tag_32\n        /* \"#utility.yul\":909:912   */\n      dup5\n        /* \"#utility.yul\":901:907   */\n      dup3\n        /* \"#utility.yul\":894:898   */\n      0x20\n        /* \"#utility.yul\":886:892   */\n      dup7\n        /* \"#utility.yul\":882:899   */\n      add\n        /* \"#utility.yul\":835:913   */\n      tag_12\n      jump\t// in\n    tag_32:\n        /* \"#utility.yul\":826:913   */\n      swap2\n      pop\n        /* \"#utility.yul\":642:919   */\n      pop\n        /* \"#utility.yul\":581:919   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":925:1064   */\n    tag_33:\n        /* \"#utility.yul\":971:976   */\n      0x00\n        /* \"#utility.yul\":1009:1015   */\n      dup2\n        /* \"#utility.yul\":996:1016   */\n      calldataload\n        /* \"#utility.yul\":987:1016   */\n      swap1\n      pop\n        /* \"#utility.yul\":1025:1058   */\n      tag_35\n        /* \"#utility.yul\":1052:1057   */\n      dup2\n        /* \"#utility.yul\":1025:1058   */\n      tag_36\n      jump\t// in\n    tag_35:\n        /* \"#utility.yul\":925:1064   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1070:2013   */\n    tag_6:\n        /* \"#utility.yul\":1165:1171   */\n      0x00\n        /* \"#utility.yul\":1173:1179   */\n      dup1\n        /* \"#utility.yul\":1181:1187   */\n      0x00\n        /* \"#utility.yul\":1189:1195   */\n      dup1\n        /* \"#utility.yul\":1238:1241   */\n      0x80\n        /* \"#utility.yul\":1226:1235   */\n      dup6\n        /* \"#utility.yul\":1217:1224   */\n      dup8\n        /* \"#utility.yul\":1213:1236   */\n      sub\n        /* \"#utility.yul\":1209:1242   */\n      slt\n        /* \"#utility.yul\":1206:1326   */\n      iszero\n      tag_38\n      jumpi\n        /* \"#utility.yul\":1245:1324   */\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n        /* \"#utility.yul\":1206:1326   */\n    tag_38:\n        /* \"#utility.yul\":1365:1366   */\n      0x00\n        /* \"#utility.yul\":1390:1443   */\n      tag_41\n        /* \"#utility.yul\":1435:1442   */\n      dup8\n        /* \"#utility.yul\":1426:1432   */\n      dup3\n        /* \"#utility.yul\":1415:1424   */\n      dup9\n        /* \"#utility.yul\":1411:1433   */\n      add\n        /* \"#utility.yul\":1390:1443   */\n      tag_23\n      jump\t// in\n    tag_41:\n        /* \"#utility.yul\":1380:1443   */\n      swap5\n      pop\n        /* \"#utility.yul\":1336:1453   */\n      pop\n        /* \"#utility.yul\":1492:1494   */\n      0x20\n        /* \"#utility.yul\":1518:1571   */\n      tag_42\n        /* \"#utility.yul\":1563:1570   */\n      dup8\n        /* \"#utility.yul\":1554:1560   */\n      dup3\n        /* \"#utility.yul\":1543:1552   */\n      dup9\n        /* \"#utility.yul\":1539:1561   */\n      add\n        /* \"#utility.yul\":1518:1571   */\n      tag_23\n      jump\t// in\n    tag_42:\n        /* \"#utility.yul\":1508:1571   */\n      swap4\n      pop\n        /* \"#utility.yul\":1463:1581   */\n      pop\n        /* \"#utility.yul\":1620:1622   */\n      0x40\n        /* \"#utility.yul\":1646:1699   */\n      tag_43\n        /* \"#utility.yul\":1691:1698   */\n      dup8\n        /* \"#utility.yul\":1682:1688   */\n      dup3\n        /* \"#utility.yul\":1671:1680   */\n      dup9\n        /* \"#utility.yul\":1667:1689   */\n      add\n        /* \"#utility.yul\":1646:1699   */\n      tag_33\n      jump\t// in\n    tag_43:\n        /* \"#utility.yul\":1636:1699   */\n      swap3\n      pop\n        /* \"#utility.yul\":1591:1709   */\n      pop\n        /* \"#utility.yul\":1776:1778   */\n      0x60\n        /* \"#utility.yul\":1765:1774   */\n      dup6\n        /* \"#utility.yul\":1761:1779   */\n      add\n        /* \"#utility.yul\":1748:1780   */\n      calldataload\n        /* \"#utility.yul\":1807:1825   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1799:1805   */\n      dup2\n        /* \"#utility.yul\":1796:1826   */\n      gt\n        /* \"#utility.yul\":1793:1910   */\n      iszero\n      tag_44\n      jumpi\n        /* \"#utility.yul\":1829:1908   */\n      tag_45\n      tag_46\n      jump\t// in\n    tag_45:\n        /* \"#utility.yul\":1793:1910   */\n    tag_44:\n        /* \"#utility.yul\":1934:1996   */\n      tag_47\n        /* \"#utility.yul\":1988:1995   */\n      dup8\n        /* \"#utility.yul\":1979:1985   */\n      dup3\n        /* \"#utility.yul\":1968:1977   */\n      dup9\n        /* \"#utility.yul\":1964:1986   */\n      add\n        /* \"#utility.yul\":1934:1996   */\n      tag_27\n      jump\t// in\n    tag_47:\n        /* \"#utility.yul\":1924:1996   */\n      swap2\n      pop\n        /* \"#utility.yul\":1719:2006   */\n      pop\n        /* \"#utility.yul\":1070:2013   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2019:2134   */\n    tag_48:\n        /* \"#utility.yul\":2104:2127   */\n      tag_50\n        /* \"#utility.yul\":2121:2126   */\n      dup2\n        /* \"#utility.yul\":2104:2127   */\n      tag_51\n      jump\t// in\n    tag_50:\n        /* \"#utility.yul\":2099:2102   */\n      dup3\n        /* \"#utility.yul\":2092:2128   */\n      mstore\n        /* \"#utility.yul\":2019:2134   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2140:2358   */\n    tag_9:\n        /* \"#utility.yul\":2231:2235   */\n      0x00\n        /* \"#utility.yul\":2269:2271   */\n      0x20\n        /* \"#utility.yul\":2258:2267   */\n      dup3\n        /* \"#utility.yul\":2254:2272   */\n      add\n        /* \"#utility.yul\":2246:2272   */\n      swap1\n      pop\n        /* \"#utility.yul\":2282:2351   */\n      tag_53\n        /* \"#utility.yul\":2348:2349   */\n      0x00\n        /* \"#utility.yul\":2337:2346   */\n      dup4\n        /* \"#utility.yul\":2333:2350   */\n      add\n        /* \"#utility.yul\":2324:2330   */\n      dup5\n        /* \"#utility.yul\":2282:2351   */\n      tag_48\n      jump\t// in\n    tag_53:\n        /* \"#utility.yul\":2140:2358   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2364:2493   */\n    tag_17:\n        /* \"#utility.yul\":2398:2404   */\n      0x00\n        /* \"#utility.yul\":2425:2445   */\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n        /* \"#utility.yul\":2415:2445   */\n      swap1\n      pop\n        /* \"#utility.yul\":2454:2487   */\n      tag_57\n        /* \"#utility.yul\":2482:2486   */\n      dup3\n        /* \"#utility.yul\":2474:2480   */\n      dup3\n        /* \"#utility.yul\":2454:2487   */\n      tag_58\n      jump\t// in\n    tag_57:\n        /* \"#utility.yul\":2364:2493   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2499:2574   */\n    tag_56:\n        /* \"#utility.yul\":2532:2538   */\n      0x00\n        /* \"#utility.yul\":2565:2567   */\n      0x40\n        /* \"#utility.yul\":2559:2568   */\n      mload\n        /* \"#utility.yul\":2549:2568   */\n      swap1\n      pop\n        /* \"#utility.yul\":2499:2574   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":2580:2887   */\n    tag_16:\n        /* \"#utility.yul\":2641:2645   */\n      0x00\n        /* \"#utility.yul\":2731:2749   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2723:2729   */\n      dup3\n        /* \"#utility.yul\":2720:2750   */\n      gt\n        /* \"#utility.yul\":2717:2773   */\n      iszero\n      tag_61\n      jumpi\n        /* \"#utility.yul\":2753:2771   */\n      tag_62\n      tag_63\n      jump\t// in\n    tag_62:\n        /* \"#utility.yul\":2717:2773   */\n    tag_61:\n        /* \"#utility.yul\":2791:2820   */\n      tag_64\n        /* \"#utility.yul\":2813:2819   */\n      dup3\n        /* \"#utility.yul\":2791:2820   */\n      tag_65\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":2783:2820   */\n      swap1\n      pop\n        /* \"#utility.yul\":2875:2879   */\n      0x20\n        /* \"#utility.yul\":2869:2873   */\n      dup2\n        /* \"#utility.yul\":2865:2880   */\n      add\n        /* \"#utility.yul\":2857:2880   */\n      swap1\n      pop\n        /* \"#utility.yul\":2580:2887   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2893:2989   */\n    tag_66:\n        /* \"#utility.yul\":2930:2937   */\n      0x00\n        /* \"#utility.yul\":2959:2983   */\n      tag_68\n        /* \"#utility.yul\":2977:2982   */\n      dup3\n        /* \"#utility.yul\":2959:2983   */\n      tag_69\n      jump\t// in\n    tag_68:\n        /* \"#utility.yul\":2948:2983   */\n      swap1\n      pop\n        /* \"#utility.yul\":2893:2989   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2995:3144   */\n    tag_51:\n        /* \"#utility.yul\":3031:3038   */\n      0x00\n        /* \"#utility.yul\":3071:3137   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3064:3069   */\n      dup3\n        /* \"#utility.yul\":3060:3138   */\n      and\n        /* \"#utility.yul\":3049:3138   */\n      swap1\n      pop\n        /* \"#utility.yul\":2995:3144   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3150:3276   */\n    tag_69:\n        /* \"#utility.yul\":3187:3194   */\n      0x00\n        /* \"#utility.yul\":3227:3269   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3220:3225   */\n      dup3\n        /* \"#utility.yul\":3216:3270   */\n      and\n        /* \"#utility.yul\":3205:3270   */\n      swap1\n      pop\n        /* \"#utility.yul\":3150:3276   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3282:3359   */\n    tag_72:\n        /* \"#utility.yul\":3319:3326   */\n      0x00\n        /* \"#utility.yul\":3348:3353   */\n      dup2\n        /* \"#utility.yul\":3337:3353   */\n      swap1\n      pop\n        /* \"#utility.yul\":3282:3359   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3365:3519   */\n    tag_22:\n        /* \"#utility.yul\":3449:3455   */\n      dup3\n        /* \"#utility.yul\":3444:3447   */\n      dup2\n        /* \"#utility.yul\":3439:3442   */\n      dup4\n        /* \"#utility.yul\":3426:3456   */\n      calldatacopy\n        /* \"#utility.yul\":3511:3512   */\n      0x00\n        /* \"#utility.yul\":3502:3508   */\n      dup4\n        /* \"#utility.yul\":3497:3500   */\n      dup4\n        /* \"#utility.yul\":3493:3509   */\n      add\n        /* \"#utility.yul\":3486:3513   */\n      mstore\n        /* \"#utility.yul\":3365:3519   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3525:3806   */\n    tag_58:\n        /* \"#utility.yul\":3608:3635   */\n      tag_76\n        /* \"#utility.yul\":3630:3634   */\n      dup3\n        /* \"#utility.yul\":3608:3635   */\n      tag_65\n      jump\t// in\n    tag_76:\n        /* \"#utility.yul\":3600:3606   */\n      dup2\n        /* \"#utility.yul\":3596:3636   */\n      add\n        /* \"#utility.yul\":3738:3744   */\n      dup2\n        /* \"#utility.yul\":3726:3736   */\n      dup2\n        /* \"#utility.yul\":3723:3745   */\n      lt\n        /* \"#utility.yul\":3702:3720   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3690:3700   */\n      dup3\n        /* \"#utility.yul\":3687:3721   */\n      gt\n        /* \"#utility.yul\":3684:3746   */\n      or\n        /* \"#utility.yul\":3681:3769   */\n      iszero\n      tag_77\n      jumpi\n        /* \"#utility.yul\":3749:3767   */\n      tag_78\n      tag_63\n      jump\t// in\n    tag_78:\n        /* \"#utility.yul\":3681:3769   */\n    tag_77:\n        /* \"#utility.yul\":3789:3799   */\n      dup1\n        /* \"#utility.yul\":3785:3787   */\n      0x40\n        /* \"#utility.yul\":3778:3800   */\n      mstore\n        /* \"#utility.yul\":3568:3806   */\n      pop\n        /* \"#utility.yul\":3525:3806   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3812:3992   */\n    tag_63:\n        /* \"#utility.yul\":3860:3937   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3857:3858   */\n      0x00\n        /* \"#utility.yul\":3850:3938   */\n      mstore\n        /* \"#utility.yul\":3957:3961   */\n      0x41\n        /* \"#utility.yul\":3954:3955   */\n      0x04\n        /* \"#utility.yul\":3947:3962   */\n      mstore\n        /* \"#utility.yul\":3981:3985   */\n      0x24\n        /* \"#utility.yul\":3978:3979   */\n      0x00\n        /* \"#utility.yul\":3971:3986   */\n      revert\n        /* \"#utility.yul\":3998:4115   */\n    tag_31:\n        /* \"#utility.yul\":4107:4108   */\n      0x00\n        /* \"#utility.yul\":4104:4105   */\n      dup1\n        /* \"#utility.yul\":4097:4109   */\n      revert\n        /* \"#utility.yul\":4121:4238   */\n    tag_20:\n        /* \"#utility.yul\":4230:4231   */\n      0x00\n        /* \"#utility.yul\":4227:4228   */\n      dup1\n        /* \"#utility.yul\":4220:4232   */\n      revert\n        /* \"#utility.yul\":4244:4361   */\n    tag_46:\n        /* \"#utility.yul\":4353:4354   */\n      0x00\n        /* \"#utility.yul\":4350:4351   */\n      dup1\n        /* \"#utility.yul\":4343:4355   */\n      revert\n        /* \"#utility.yul\":4367:4484   */\n    tag_40:\n        /* \"#utility.yul\":4476:4477   */\n      0x00\n        /* \"#utility.yul\":4473:4474   */\n      dup1\n        /* \"#utility.yul\":4466:4478   */\n      revert\n        /* \"#utility.yul\":4490:4592   */\n    tag_65:\n        /* \"#utility.yul\":4531:4537   */\n      0x00\n        /* \"#utility.yul\":4582:4584   */\n      0x1f\n        /* \"#utility.yul\":4578:4585   */\n      not\n        /* \"#utility.yul\":4573:4575   */\n      0x1f\n        /* \"#utility.yul\":4566:4571   */\n      dup4\n        /* \"#utility.yul\":4562:4576   */\n      add\n        /* \"#utility.yul\":4558:4586   */\n      and\n        /* \"#utility.yul\":4548:4586   */\n      swap1\n      pop\n        /* \"#utility.yul\":4490:4592   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4598:4720   */\n    tag_26:\n        /* \"#utility.yul\":4671:4695   */\n      tag_86\n        /* \"#utility.yul\":4689:4694   */\n      dup2\n        /* \"#utility.yul\":4671:4695   */\n      tag_66\n      jump\t// in\n    tag_86:\n        /* \"#utility.yul\":4664:4669   */\n      dup2\n        /* \"#utility.yul\":4661:4696   */\n      eq\n        /* \"#utility.yul\":4651:4714   */\n      tag_87\n      jumpi\n        /* \"#utility.yul\":4710:4711   */\n      0x00\n        /* \"#utility.yul\":4707:4708   */\n      dup1\n        /* \"#utility.yul\":4700:4712   */\n      revert\n        /* \"#utility.yul\":4651:4714   */\n    tag_87:\n        /* \"#utility.yul\":4598:4720   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4726:4848   */\n    tag_36:\n        /* \"#utility.yul\":4799:4823   */\n      tag_89\n        /* \"#utility.yul\":4817:4822   */\n      dup2\n        /* \"#utility.yul\":4799:4823   */\n      tag_72\n      jump\t// in\n    tag_89:\n        /* \"#utility.yul\":4792:4797   */\n      dup2\n        /* \"#utility.yul\":4789:4824   */\n      eq\n        /* \"#utility.yul\":4779:4842   */\n      tag_90\n      jumpi\n        /* \"#utility.yul\":4838:4839   */\n      0x00\n        /* \"#utility.yul\":4835:4836   */\n      dup1\n        /* \"#utility.yul\":4828:4840   */\n      revert\n        /* \"#utility.yul\":4779:4842   */\n    tag_90:\n        /* \"#utility.yul\":4726:4848   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220115588fbcdf5dab7da7bd34dccded22eacbc217b00e408cac02adfbab4e87b9164736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610371806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063150b7a0214610030575b600080fd5b61004a6004803603810190610045919061010e565b610060565b60405161005791906101a0565b60405180910390f35b600063150b7a0260e01b9050949350505050565b6000610087610082846101e0565b6101bb565b9050828152602081018484840111156100a3576100a26102ed565b5b6100ae848285610279565b509392505050565b6000813590506100c58161030d565b92915050565b600082601f8301126100e0576100df6102e8565b5b81356100f0848260208601610074565b91505092915050565b60008135905061010881610324565b92915050565b60008060008060808587031215610128576101276102f7565b5b6000610136878288016100b6565b9450506020610147878288016100b6565b9350506040610158878288016100f9565b925050606085013567ffffffffffffffff811115610179576101786102f2565b5b610185878288016100cb565b91505092959194509250565b61019a81610223565b82525050565b60006020820190506101b56000830184610191565b92915050565b60006101c56101d6565b90506101d18282610288565b919050565b6000604051905090565b600067ffffffffffffffff8211156101fb576101fa6102b9565b5b610204826102fc565b9050602081019050919050565b600061021c8261024f565b9050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b610291826102fc565b810181811067ffffffffffffffff821117156102b0576102af6102b9565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b61031681610211565b811461032157600080fd5b50565b61032d8161026f565b811461033857600080fd5b5056fea2646970667358221220115588fbcdf5dab7da7bd34dccded22eacbc217b00e408cac02adfbab4e87b9164736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x371 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x10E JUMP JUMPDEST PUSH2 0x60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57 SWAP2 SWAP1 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH4 0x150B7A02 PUSH1 0xE0 SHL SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x87 PUSH2 0x82 DUP5 PUSH2 0x1E0 JUMP JUMPDEST PUSH2 0x1BB JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0xA3 JUMPI PUSH2 0xA2 PUSH2 0x2ED JUMP JUMPDEST JUMPDEST PUSH2 0xAE DUP5 DUP3 DUP6 PUSH2 0x279 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC5 DUP2 PUSH2 0x30D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xE0 JUMPI PUSH2 0xDF PUSH2 0x2E8 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xF0 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x74 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x108 DUP2 PUSH2 0x324 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x128 JUMPI PUSH2 0x127 PUSH2 0x2F7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x136 DUP8 DUP3 DUP9 ADD PUSH2 0xB6 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x147 DUP8 DUP3 DUP9 ADD PUSH2 0xB6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x158 DUP8 DUP3 DUP9 ADD PUSH2 0xF9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x179 JUMPI PUSH2 0x178 PUSH2 0x2F2 JUMP JUMPDEST JUMPDEST PUSH2 0x185 DUP8 DUP3 DUP9 ADD PUSH2 0xCB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x19A DUP2 PUSH2 0x223 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x191 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C5 PUSH2 0x1D6 JUMP JUMPDEST SWAP1 POP PUSH2 0x1D1 DUP3 DUP3 PUSH2 0x288 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1FB JUMPI PUSH2 0x1FA PUSH2 0x2B9 JUMP JUMPDEST JUMPDEST PUSH2 0x204 DUP3 PUSH2 0x2FC JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21C DUP3 PUSH2 0x24F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH2 0x291 DUP3 PUSH2 0x2FC JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2B0 JUMPI PUSH2 0x2AF PUSH2 0x2B9 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x316 DUP2 PUSH2 0x211 JUMP JUMPDEST DUP2 EQ PUSH2 0x321 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x32D DUP2 PUSH2 0x26F JUMP JUMPDEST DUP2 EQ PUSH2 0x338 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GT SSTORE DUP9 0xFB 0xCD CREATE2 0xDA 0xB7 0xDA PUSH28 0xD34DCCDED22EACBC217B00E408CAC02ADFBAB4E87B9164736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "399:391:8:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@onERC721Received_709": {
									"entryPoint": 96,
									"id": 709,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 116,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 182,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 203,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 249,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 270,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_encode_t_bytes4_to_t_bytes4_fromStack": {
									"entryPoint": 401,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
									"entryPoint": 416,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 443,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 470,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 480,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 529,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 547,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 591,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 623,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory": {
									"entryPoint": 633,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"finalize_allocation": {
									"entryPoint": 648,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 697,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 744,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 749,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 754,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 759,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 764,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 781,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 804,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4851:15",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "90:327:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "100:74:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "166:6:15"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "125:40:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "125:48:15"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "109:15:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "109:65:15"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "100:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "190:5:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "197:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "183:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "183:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "183:21:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "213:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "228:5:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "235:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "224:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "224:16:15"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "217:3:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "278:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "280:77:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "280:79:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "280:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "259:3:15"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "264:6:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "255:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "255:16:15"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "273:3:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "252:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "252:25:15"
															},
															"nodeType": "YulIf",
															"src": "249:112:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "394:3:15"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "399:3:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "404:6:15"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "370:23:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "370:41:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "370:41:15"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "63:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "68:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "76:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "84:5:15",
														"type": ""
													}
												],
												"src": "7:410:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "475:87:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "485:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "507:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "494:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "494:20:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "485:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "523:26:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "523:33:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "523:33:15"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "453:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "461:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "469:5:15",
														"type": ""
													}
												],
												"src": "423:139:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "642:277:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "691:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "693:77:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "693:79:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "693:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "670:6:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "678:4:15",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "666:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "666:17:15"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "685:3:15"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "662:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "662:27:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "655:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "655:35:15"
															},
															"nodeType": "YulIf",
															"src": "652:122:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "783:34:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "810:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "797:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "797:20:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "787:6:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "826:87:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "886:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "894:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "882:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "882:17:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "901:6:15"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "909:3:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "835:46:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "835:78:15"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "826:5:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "620:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "628:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "636:5:15",
														"type": ""
													}
												],
												"src": "581:338:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "977:87:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "987:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1009:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "996:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "996:20:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "987:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1052:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1025:26:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1025:33:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1025:33:15"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "955:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "963:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "971:5:15",
														"type": ""
													}
												],
												"src": "925:139:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1196:817:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1243:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1245:77:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1245:79:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1245:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1217:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1226:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1213:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1213:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1238:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1209:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1209:33:15"
															},
															"nodeType": "YulIf",
															"src": "1206:120:15"
														},
														{
															"nodeType": "YulBlock",
															"src": "1336:117:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1351:15:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1365:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1355:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1380:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1415:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1426:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1411:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1411:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1435:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1390:20:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1390:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1380:6:15"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1463:118:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1478:16:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1492:2:15",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1482:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1508:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1543:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1554:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1539:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1539:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1563:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1518:20:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1518:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1508:6:15"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1591:118:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1606:16:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1620:2:15",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1610:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1636:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1671:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1682:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1667:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1667:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1691:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1646:20:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1646:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "1636:6:15"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1719:287:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1734:46:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1765:9:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1776:2:15",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1761:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1761:18:15"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "1748:12:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1748:32:15"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1738:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1827:83:15",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "1829:77:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1829:79:15"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1829:79:15"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1799:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1807:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1796:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1796:30:15"
																	},
																	"nodeType": "YulIf",
																	"src": "1793:117:15"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1924:72:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1968:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1979:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1964:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1964:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1988:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "1934:29:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1934:62:15"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "1924:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1142:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1153:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1165:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1173:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1181:6:15",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "1189:6:15",
														"type": ""
													}
												],
												"src": "1070:943:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2082:52:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2099:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2121:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "2104:16:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2104:23:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2092:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2092:36:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2092:36:15"
														}
													]
												},
												"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2070:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2077:3:15",
														"type": ""
													}
												],
												"src": "2019:115:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2236:122:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2246:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2258:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2269:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2254:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2254:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2246:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2324:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2337:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2348:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2333:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2333:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2282:41:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2282:69:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2282:69:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2208:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2220:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2231:4:15",
														"type": ""
													}
												],
												"src": "2140:218:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2405:88:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2415:30:15",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "2425:18:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2425:20:15"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "2415:6:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2474:6:15"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "2482:4:15"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "2454:19:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2454:33:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2454:33:15"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2389:4:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2398:6:15",
														"type": ""
													}
												],
												"src": "2364:129:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2539:35:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2549:19:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2565:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2559:5:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2559:9:15"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "2549:6:15"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2532:6:15",
														"type": ""
													}
												],
												"src": "2499:75:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2646:241:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2751:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2753:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2753:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2753:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2723:6:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2731:18:15",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2720:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2720:30:15"
															},
															"nodeType": "YulIf",
															"src": "2717:56:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2783:37:15",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2813:6:15"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "2791:21:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2791:29:15"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "2783:4:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2857:23:15",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "2869:4:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2875:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2865:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2865:15:15"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "2857:4:15"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2630:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2641:4:15",
														"type": ""
													}
												],
												"src": "2580:307:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2938:51:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2948:35:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2977:5:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2959:17:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2959:24:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2948:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2920:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2930:7:15",
														"type": ""
													}
												],
												"src": "2893:96:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3039:105:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3049:89:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3064:5:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3071:66:15",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3060:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3060:78:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3049:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3021:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3031:7:15",
														"type": ""
													}
												],
												"src": "2995:149:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3195:81:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3205:65:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3220:5:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3227:42:15",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3216:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3216:54:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3205:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3177:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3187:7:15",
														"type": ""
													}
												],
												"src": "3150:126:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3327:32:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3337:16:15",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3348:5:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3337:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3309:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3319:7:15",
														"type": ""
													}
												],
												"src": "3282:77:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3416:103:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "3439:3:15"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "3444:3:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3449:6:15"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "3426:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3426:30:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3426:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "3497:3:15"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3502:6:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3493:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3493:16:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3511:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3486:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3486:27:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3486:27:15"
														}
													]
												},
												"name": "copy_calldata_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "3398:3:15",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "3403:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3408:6:15",
														"type": ""
													}
												],
												"src": "3365:154:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3568:238:15",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3578:58:15",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3600:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "3630:4:15"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "3608:21:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3608:27:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3596:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3596:40:15"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "3582:10:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3747:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3749:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3749:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3749:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "3690:10:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3702:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3687:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3687:34:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "3726:10:15"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3738:6:15"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "3723:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3723:22:15"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "3684:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3684:62:15"
															},
															"nodeType": "YulIf",
															"src": "3681:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3785:2:15",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "3789:10:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3778:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3778:22:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3778:22:15"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3554:6:15",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "3562:4:15",
														"type": ""
													}
												],
												"src": "3525:281:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3840:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3857:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3860:77:15",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3850:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3850:88:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3850:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3954:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3957:4:15",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3947:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3947:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3947:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3978:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3981:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3971:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3971:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3971:15:15"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "3812:180:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4087:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4104:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4107:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4097:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4097:12:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4097:12:15"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "3998:117:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4210:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4227:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4230:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4220:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4220:12:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4220:12:15"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "4121:117:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4333:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4350:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4353:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4343:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4343:12:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4343:12:15"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "4244:117:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4456:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4473:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4476:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4466:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4466:12:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4466:12:15"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "4367:117:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4538:54:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4548:38:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4566:5:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4573:2:15",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4562:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4562:14:15"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4582:2:15",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "4578:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4578:7:15"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4558:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4558:28:15"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "4548:6:15"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4521:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "4531:6:15",
														"type": ""
													}
												],
												"src": "4490:102:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4641:79:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4698:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4707:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4710:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4700:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4700:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4700:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4664:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4689:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "4671:17:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4671:24:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4661:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4661:35:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4654:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4654:43:15"
															},
															"nodeType": "YulIf",
															"src": "4651:63:15"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4634:5:15",
														"type": ""
													}
												],
												"src": "4598:122:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4769:79:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4826:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4835:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4838:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4828:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4828:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4828:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4792:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4817:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "4799:17:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4799:24:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4789:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4789:35:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4782:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4782:43:15"
															},
															"nodeType": "YulIf",
															"src": "4779:63:15"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4762:5:15",
														"type": ""
													}
												],
												"src": "4726:122:15"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes4(value))\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 15,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c8063150b7a0214610030575b600080fd5b61004a6004803603810190610045919061010e565b610060565b60405161005791906101a0565b60405180910390f35b600063150b7a0260e01b9050949350505050565b6000610087610082846101e0565b6101bb565b9050828152602081018484840111156100a3576100a26102ed565b5b6100ae848285610279565b509392505050565b6000813590506100c58161030d565b92915050565b600082601f8301126100e0576100df6102e8565b5b81356100f0848260208601610074565b91505092915050565b60008135905061010881610324565b92915050565b60008060008060808587031215610128576101276102f7565b5b6000610136878288016100b6565b9450506020610147878288016100b6565b9350506040610158878288016100f9565b925050606085013567ffffffffffffffff811115610179576101786102f2565b5b610185878288016100cb565b91505092959194509250565b61019a81610223565b82525050565b60006020820190506101b56000830184610191565b92915050565b60006101c56101d6565b90506101d18282610288565b919050565b6000604051905090565b600067ffffffffffffffff8211156101fb576101fa6102b9565b5b610204826102fc565b9050602081019050919050565b600061021c8261024f565b9050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b610291826102fc565b810181811067ffffffffffffffff821117156102b0576102af6102b9565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b61031681610211565b811461032157600080fd5b50565b61032d8161026f565b811461033857600080fd5b5056fea2646970667358221220115588fbcdf5dab7da7bd34dccded22eacbc217b00e408cac02adfbab4e87b9164736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x10E JUMP JUMPDEST PUSH2 0x60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57 SWAP2 SWAP1 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH4 0x150B7A02 PUSH1 0xE0 SHL SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x87 PUSH2 0x82 DUP5 PUSH2 0x1E0 JUMP JUMPDEST PUSH2 0x1BB JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0xA3 JUMPI PUSH2 0xA2 PUSH2 0x2ED JUMP JUMPDEST JUMPDEST PUSH2 0xAE DUP5 DUP3 DUP6 PUSH2 0x279 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC5 DUP2 PUSH2 0x30D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xE0 JUMPI PUSH2 0xDF PUSH2 0x2E8 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xF0 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x74 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x108 DUP2 PUSH2 0x324 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x128 JUMPI PUSH2 0x127 PUSH2 0x2F7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x136 DUP8 DUP3 DUP9 ADD PUSH2 0xB6 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x147 DUP8 DUP3 DUP9 ADD PUSH2 0xB6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x158 DUP8 DUP3 DUP9 ADD PUSH2 0xF9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x179 JUMPI PUSH2 0x178 PUSH2 0x2F2 JUMP JUMPDEST JUMPDEST PUSH2 0x185 DUP8 DUP3 DUP9 ADD PUSH2 0xCB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x19A DUP2 PUSH2 0x223 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x191 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C5 PUSH2 0x1D6 JUMP JUMPDEST SWAP1 POP PUSH2 0x1D1 DUP3 DUP3 PUSH2 0x288 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1FB JUMPI PUSH2 0x1FA PUSH2 0x2B9 JUMP JUMPDEST JUMPDEST PUSH2 0x204 DUP3 PUSH2 0x2FC JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21C DUP3 PUSH2 0x24F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH2 0x291 DUP3 PUSH2 0x2FC JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2B0 JUMPI PUSH2 0x2AF PUSH2 0x2B9 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x316 DUP2 PUSH2 0x211 JUMP JUMPDEST DUP2 EQ PUSH2 0x321 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x32D DUP2 PUSH2 0x26F JUMP JUMPDEST DUP2 EQ PUSH2 0x338 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GT SSTORE DUP9 0xFB 0xCD CREATE2 0xDA 0xB7 0xDA PUSH28 0xD34DCCDED22EACBC217B00E408CAC02ADFBAB4E87B9164736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "399:391:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;588:200;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;726:6;751:30;;;744:37;;588:200;;;;;;:::o;7:410:15:-;84:5;109:65;125:48;166:6;125:48;:::i;:::-;109:65;:::i;:::-;100:74;;197:6;190:5;183:21;235:4;228:5;224:16;273:3;264:6;259:3;255:16;252:25;249:112;;;280:79;;:::i;:::-;249:112;370:41;404:6;399:3;394;370:41;:::i;:::-;90:327;7:410;;;;;:::o;423:139::-;469:5;507:6;494:20;485:29;;523:33;550:5;523:33;:::i;:::-;423:139;;;;:::o;581:338::-;636:5;685:3;678:4;670:6;666:17;662:27;652:122;;693:79;;:::i;:::-;652:122;810:6;797:20;835:78;909:3;901:6;894:4;886:6;882:17;835:78;:::i;:::-;826:87;;642:277;581:338;;;;:::o;925:139::-;971:5;1009:6;996:20;987:29;;1025:33;1052:5;1025:33;:::i;:::-;925:139;;;;:::o;1070:943::-;1165:6;1173;1181;1189;1238:3;1226:9;1217:7;1213:23;1209:33;1206:120;;;1245:79;;:::i;:::-;1206:120;1365:1;1390:53;1435:7;1426:6;1415:9;1411:22;1390:53;:::i;:::-;1380:63;;1336:117;1492:2;1518:53;1563:7;1554:6;1543:9;1539:22;1518:53;:::i;:::-;1508:63;;1463:118;1620:2;1646:53;1691:7;1682:6;1671:9;1667:22;1646:53;:::i;:::-;1636:63;;1591:118;1776:2;1765:9;1761:18;1748:32;1807:18;1799:6;1796:30;1793:117;;;1829:79;;:::i;:::-;1793:117;1934:62;1988:7;1979:6;1968:9;1964:22;1934:62;:::i;:::-;1924:72;;1719:287;1070:943;;;;;;;:::o;2019:115::-;2104:23;2121:5;2104:23;:::i;:::-;2099:3;2092:36;2019:115;;:::o;2140:218::-;2231:4;2269:2;2258:9;2254:18;2246:26;;2282:69;2348:1;2337:9;2333:17;2324:6;2282:69;:::i;:::-;2140:218;;;;:::o;2364:129::-;2398:6;2425:20;;:::i;:::-;2415:30;;2454:33;2482:4;2474:6;2454:33;:::i;:::-;2364:129;;;:::o;2499:75::-;2532:6;2565:2;2559:9;2549:19;;2499:75;:::o;2580:307::-;2641:4;2731:18;2723:6;2720:30;2717:56;;;2753:18;;:::i;:::-;2717:56;2791:29;2813:6;2791:29;:::i;:::-;2783:37;;2875:4;2869;2865:15;2857:23;;2580:307;;;:::o;2893:96::-;2930:7;2959:24;2977:5;2959:24;:::i;:::-;2948:35;;2893:96;;;:::o;2995:149::-;3031:7;3071:66;3064:5;3060:78;3049:89;;2995:149;;;:::o;3150:126::-;3187:7;3227:42;3220:5;3216:54;3205:65;;3150:126;;;:::o;3282:77::-;3319:7;3348:5;3337:16;;3282:77;;;:::o;3365:154::-;3449:6;3444:3;3439;3426:30;3511:1;3502:6;3497:3;3493:16;3486:27;3365:154;;;:::o;3525:281::-;3608:27;3630:4;3608:27;:::i;:::-;3600:6;3596:40;3738:6;3726:10;3723:22;3702:18;3690:10;3687:34;3684:62;3681:88;;;3749:18;;:::i;:::-;3681:88;3789:10;3785:2;3778:22;3568:238;3525:281;;:::o;3812:180::-;3860:77;3857:1;3850:88;3957:4;3954:1;3947:15;3981:4;3978:1;3971:15;3998:117;4107:1;4104;4097:12;4121:117;4230:1;4227;4220:12;4244:117;4353:1;4350;4343:12;4367:117;4476:1;4473;4466:12;4490:102;4531:6;4582:2;4578:7;4573:2;4566:5;4562:14;4558:28;4548:38;;4490:102;;;:::o;4598:122::-;4671:24;4689:5;4671:24;:::i;:::-;4664:5;4661:35;4651:63;;4710:1;4707;4700:12;4651:63;4598:122;:::o;4726:::-;4799:24;4817:5;4799:24;:::i;:::-;4792:5;4789:35;4779:63;;4838:1;4835;4828:12;4779:63;4726:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "176200",
								"executionCost": "220",
								"totalCost": "176420"
							},
							"external": {
								"onERC721Received(address,address,uint256,bytes)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 399,
									"end": 790,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 399,
									"end": 790,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 399,
									"end": 790,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 399,
									"end": 790,
									"name": "CALLVALUE",
									"source": 8
								},
								{
									"begin": 399,
									"end": 790,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 399,
									"end": 790,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 399,
									"end": 790,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 399,
									"end": 790,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 399,
									"end": 790,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 399,
									"end": 790,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 399,
									"end": 790,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 399,
									"end": 790,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 399,
									"end": 790,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 399,
									"end": 790,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 399,
									"end": 790,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 399,
									"end": 790,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 399,
									"end": 790,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 399,
									"end": 790,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 399,
									"end": 790,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 399,
									"end": 790,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 399,
									"end": 790,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220115588fbcdf5dab7da7bd34dccded22eacbc217b00e408cac02adfbab4e87b9164736f6c63430008070033",
									".code": [
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 399,
											"end": 790,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 399,
											"end": 790,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 399,
											"end": 790,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 399,
											"end": 790,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 399,
											"end": 790,
											"name": "tag",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 399,
											"end": 790,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 399,
											"end": 790,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 399,
											"end": 790,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH",
											"source": 8,
											"value": "150B7A02"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 399,
											"end": 790,
											"name": "tag",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 399,
											"end": 790,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "tag",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "tag",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "tag",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "tag",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "tag",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 726,
											"end": 732,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 781,
											"name": "PUSH",
											"source": 8,
											"value": "150B7A02"
										},
										{
											"begin": 751,
											"end": 781,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 751,
											"end": 781,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 744,
											"end": 781,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 744,
											"end": 781,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 417,
											"name": "tag",
											"source": 15,
											"value": "12"
										},
										{
											"begin": 7,
											"end": 417,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 84,
											"end": 89,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 109,
											"end": 174,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "14"
										},
										{
											"begin": 125,
											"end": 173,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "15"
										},
										{
											"begin": 166,
											"end": 172,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 125,
											"end": 173,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "16"
										},
										{
											"begin": 125,
											"end": 173,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 125,
											"end": 173,
											"name": "tag",
											"source": 15,
											"value": "15"
										},
										{
											"begin": 125,
											"end": 173,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 109,
											"end": 174,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "17"
										},
										{
											"begin": 109,
											"end": 174,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 109,
											"end": 174,
											"name": "tag",
											"source": 15,
											"value": "14"
										},
										{
											"begin": 109,
											"end": 174,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 100,
											"end": 174,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 100,
											"end": 174,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 197,
											"end": 203,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 190,
											"end": 195,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 183,
											"end": 204,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 235,
											"end": 239,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 228,
											"end": 233,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 224,
											"end": 240,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 273,
											"end": 276,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 264,
											"end": 270,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 259,
											"end": 262,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 255,
											"end": 271,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 252,
											"end": 277,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 249,
											"end": 361,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 249,
											"end": 361,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "18"
										},
										{
											"begin": 249,
											"end": 361,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 280,
											"end": 359,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "19"
										},
										{
											"begin": 280,
											"end": 359,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 280,
											"end": 359,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 280,
											"end": 359,
											"name": "tag",
											"source": 15,
											"value": "19"
										},
										{
											"begin": 280,
											"end": 359,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 249,
											"end": 361,
											"name": "tag",
											"source": 15,
											"value": "18"
										},
										{
											"begin": 249,
											"end": 361,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 370,
											"end": 411,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "21"
										},
										{
											"begin": 404,
											"end": 410,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 399,
											"end": 402,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 394,
											"end": 397,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 370,
											"end": 411,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "22"
										},
										{
											"begin": 370,
											"end": 411,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 370,
											"end": 411,
											"name": "tag",
											"source": 15,
											"value": "21"
										},
										{
											"begin": 370,
											"end": 411,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 90,
											"end": 417,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7,
											"end": 417,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 7,
											"end": 417,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 7,
											"end": 417,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7,
											"end": 417,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7,
											"end": 417,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7,
											"end": 417,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 423,
											"end": 562,
											"name": "tag",
											"source": 15,
											"value": "23"
										},
										{
											"begin": 423,
											"end": 562,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 469,
											"end": 474,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 507,
											"end": 513,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 494,
											"end": 514,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 485,
											"end": 514,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 485,
											"end": 514,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 523,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "25"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 523,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "26"
										},
										{
											"begin": 523,
											"end": 556,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 523,
											"end": 556,
											"name": "tag",
											"source": 15,
											"value": "25"
										},
										{
											"begin": 523,
											"end": 556,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 423,
											"end": 562,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 423,
											"end": 562,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 423,
											"end": 562,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 423,
											"end": 562,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 423,
											"end": 562,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 581,
											"end": 919,
											"name": "tag",
											"source": 15,
											"value": "27"
										},
										{
											"begin": 581,
											"end": 919,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 636,
											"end": 641,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 685,
											"end": 688,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 678,
											"end": 682,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 670,
											"end": 676,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 666,
											"end": 683,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 662,
											"end": 689,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 652,
											"end": 774,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "29"
										},
										{
											"begin": 652,
											"end": 774,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 693,
											"end": 772,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "30"
										},
										{
											"begin": 693,
											"end": 772,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "31"
										},
										{
											"begin": 693,
											"end": 772,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 693,
											"end": 772,
											"name": "tag",
											"source": 15,
											"value": "30"
										},
										{
											"begin": 693,
											"end": 772,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 652,
											"end": 774,
											"name": "tag",
											"source": 15,
											"value": "29"
										},
										{
											"begin": 652,
											"end": 774,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 810,
											"end": 816,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 797,
											"end": 817,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 835,
											"end": 913,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "32"
										},
										{
											"begin": 909,
											"end": 912,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 901,
											"end": 907,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 894,
											"end": 898,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 886,
											"end": 892,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 882,
											"end": 899,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 835,
											"end": 913,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "12"
										},
										{
											"begin": 835,
											"end": 913,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 835,
											"end": 913,
											"name": "tag",
											"source": 15,
											"value": "32"
										},
										{
											"begin": 835,
											"end": 913,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 826,
											"end": 913,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 826,
											"end": 913,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 642,
											"end": 919,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 581,
											"end": 919,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 581,
											"end": 919,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 581,
											"end": 919,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 581,
											"end": 919,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 581,
											"end": 919,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 925,
											"end": 1064,
											"name": "tag",
											"source": 15,
											"value": "33"
										},
										{
											"begin": 925,
											"end": 1064,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 971,
											"end": 976,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1009,
											"end": 1015,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 996,
											"end": 1016,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 987,
											"end": 1016,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 987,
											"end": 1016,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1025,
											"end": 1058,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "35"
										},
										{
											"begin": 1052,
											"end": 1057,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1025,
											"end": 1058,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "36"
										},
										{
											"begin": 1025,
											"end": 1058,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 1025,
											"end": 1058,
											"name": "tag",
											"source": 15,
											"value": "35"
										},
										{
											"begin": 1025,
											"end": 1058,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 925,
											"end": 1064,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 925,
											"end": 1064,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 925,
											"end": 1064,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 925,
											"end": 1064,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 925,
											"end": 1064,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 1070,
											"end": 2013,
											"name": "tag",
											"source": 15,
											"value": "6"
										},
										{
											"begin": 1070,
											"end": 2013,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1165,
											"end": 1171,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1173,
											"end": 1179,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1181,
											"end": 1187,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1189,
											"end": 1195,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1238,
											"end": 1241,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 1226,
											"end": 1235,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 1217,
											"end": 1224,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 1213,
											"end": 1236,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 1209,
											"end": 1242,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 1206,
											"end": 1326,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1206,
											"end": 1326,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "38"
										},
										{
											"begin": 1206,
											"end": 1326,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1245,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "39"
										},
										{
											"begin": 1245,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1245,
											"end": 1324,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 1245,
											"end": 1324,
											"name": "tag",
											"source": 15,
											"value": "39"
										},
										{
											"begin": 1245,
											"end": 1324,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1206,
											"end": 1326,
											"name": "tag",
											"source": 15,
											"value": "38"
										},
										{
											"begin": 1206,
											"end": 1326,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1365,
											"end": 1366,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1390,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "41"
										},
										{
											"begin": 1435,
											"end": 1442,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 1426,
											"end": 1432,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1415,
											"end": 1424,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 1411,
											"end": 1433,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1390,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "23"
										},
										{
											"begin": 1390,
											"end": 1443,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 1390,
											"end": 1443,
											"name": "tag",
											"source": 15,
											"value": "41"
										},
										{
											"begin": 1390,
											"end": 1443,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1380,
											"end": 1443,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 1380,
											"end": 1443,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1336,
											"end": 1453,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1492,
											"end": 1494,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1518,
											"end": 1571,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "42"
										},
										{
											"begin": 1563,
											"end": 1570,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 1554,
											"end": 1560,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1543,
											"end": 1552,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 1539,
											"end": 1561,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1518,
											"end": 1571,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "23"
										},
										{
											"begin": 1518,
											"end": 1571,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 1518,
											"end": 1571,
											"name": "tag",
											"source": 15,
											"value": "42"
										},
										{
											"begin": 1518,
											"end": 1571,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1508,
											"end": 1571,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 1508,
											"end": 1571,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1463,
											"end": 1581,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1620,
											"end": 1622,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1646,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "43"
										},
										{
											"begin": 1691,
											"end": 1698,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 1682,
											"end": 1688,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1671,
											"end": 1680,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 1667,
											"end": 1689,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1646,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "33"
										},
										{
											"begin": 1646,
											"end": 1699,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 1646,
											"end": 1699,
											"name": "tag",
											"source": 15,
											"value": "43"
										},
										{
											"begin": 1646,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1636,
											"end": 1699,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1636,
											"end": 1699,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1591,
											"end": 1709,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1776,
											"end": 1778,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 1765,
											"end": 1774,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 1761,
											"end": 1779,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1748,
											"end": 1780,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 1807,
											"end": 1825,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1799,
											"end": 1805,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1796,
											"end": 1826,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 1793,
											"end": 1910,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1793,
											"end": 1910,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 1793,
											"end": 1910,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1829,
											"end": 1908,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "45"
										},
										{
											"begin": 1829,
											"end": 1908,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "46"
										},
										{
											"begin": 1829,
											"end": 1908,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 1829,
											"end": 1908,
											"name": "tag",
											"source": 15,
											"value": "45"
										},
										{
											"begin": 1829,
											"end": 1908,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1793,
											"end": 1910,
											"name": "tag",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 1793,
											"end": 1910,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1934,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "47"
										},
										{
											"begin": 1988,
											"end": 1995,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 1979,
											"end": 1985,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1968,
											"end": 1977,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 1964,
											"end": 1986,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1934,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "27"
										},
										{
											"begin": 1934,
											"end": 1996,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 1934,
											"end": 1996,
											"name": "tag",
											"source": 15,
											"value": "47"
										},
										{
											"begin": 1934,
											"end": 1996,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1924,
											"end": 1996,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1924,
											"end": 1996,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1719,
											"end": 2006,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1070,
											"end": 2013,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1070,
											"end": 2013,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 1070,
											"end": 2013,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1070,
											"end": 2013,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 1070,
											"end": 2013,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1070,
											"end": 2013,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1070,
											"end": 2013,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1070,
											"end": 2013,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 2019,
											"end": 2134,
											"name": "tag",
											"source": 15,
											"value": "48"
										},
										{
											"begin": 2019,
											"end": 2134,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2104,
											"end": 2127,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "50"
										},
										{
											"begin": 2121,
											"end": 2126,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2104,
											"end": 2127,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "51"
										},
										{
											"begin": 2104,
											"end": 2127,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 2104,
											"end": 2127,
											"name": "tag",
											"source": 15,
											"value": "50"
										},
										{
											"begin": 2104,
											"end": 2127,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2099,
											"end": 2102,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2092,
											"end": 2128,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2019,
											"end": 2134,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2019,
											"end": 2134,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2019,
											"end": 2134,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 2140,
											"end": 2358,
											"name": "tag",
											"source": 15,
											"value": "9"
										},
										{
											"begin": 2140,
											"end": 2358,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2231,
											"end": 2235,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2269,
											"end": 2271,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2258,
											"end": 2267,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2254,
											"end": 2272,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2246,
											"end": 2272,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2246,
											"end": 2272,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2282,
											"end": 2351,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "53"
										},
										{
											"begin": 2348,
											"end": 2349,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2337,
											"end": 2346,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 2333,
											"end": 2350,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2324,
											"end": 2330,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 2282,
											"end": 2351,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "48"
										},
										{
											"begin": 2282,
											"end": 2351,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 2282,
											"end": 2351,
											"name": "tag",
											"source": 15,
											"value": "53"
										},
										{
											"begin": 2282,
											"end": 2351,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2140,
											"end": 2358,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2140,
											"end": 2358,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2140,
											"end": 2358,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2140,
											"end": 2358,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2140,
											"end": 2358,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 2364,
											"end": 2493,
											"name": "tag",
											"source": 15,
											"value": "17"
										},
										{
											"begin": 2364,
											"end": 2493,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2398,
											"end": 2404,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2425,
											"end": 2445,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "55"
										},
										{
											"begin": 2425,
											"end": 2445,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "56"
										},
										{
											"begin": 2425,
											"end": 2445,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 2425,
											"end": 2445,
											"name": "tag",
											"source": 15,
											"value": "55"
										},
										{
											"begin": 2425,
											"end": 2445,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2415,
											"end": 2445,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2415,
											"end": 2445,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2454,
											"end": 2487,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "57"
										},
										{
											"begin": 2482,
											"end": 2486,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2474,
											"end": 2480,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2454,
											"end": 2487,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "58"
										},
										{
											"begin": 2454,
											"end": 2487,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 2454,
											"end": 2487,
											"name": "tag",
											"source": 15,
											"value": "57"
										},
										{
											"begin": 2454,
											"end": 2487,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2364,
											"end": 2493,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2364,
											"end": 2493,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2364,
											"end": 2493,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2364,
											"end": 2493,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 2499,
											"end": 2574,
											"name": "tag",
											"source": 15,
											"value": "56"
										},
										{
											"begin": 2499,
											"end": 2574,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2532,
											"end": 2538,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2565,
											"end": 2567,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2559,
											"end": 2568,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 2549,
											"end": 2568,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2549,
											"end": 2568,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2499,
											"end": 2574,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2499,
											"end": 2574,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 2580,
											"end": 2887,
											"name": "tag",
											"source": 15,
											"value": "16"
										},
										{
											"begin": 2580,
											"end": 2887,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2641,
											"end": 2645,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2731,
											"end": 2749,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2723,
											"end": 2729,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2720,
											"end": 2750,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 2717,
											"end": 2773,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2717,
											"end": 2773,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "61"
										},
										{
											"begin": 2717,
											"end": 2773,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2753,
											"end": 2771,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "62"
										},
										{
											"begin": 2753,
											"end": 2771,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "63"
										},
										{
											"begin": 2753,
											"end": 2771,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 2753,
											"end": 2771,
											"name": "tag",
											"source": 15,
											"value": "62"
										},
										{
											"begin": 2753,
											"end": 2771,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2717,
											"end": 2773,
											"name": "tag",
											"source": 15,
											"value": "61"
										},
										{
											"begin": 2717,
											"end": 2773,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2791,
											"end": 2820,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 2813,
											"end": 2819,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2791,
											"end": 2820,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "65"
										},
										{
											"begin": 2791,
											"end": 2820,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 2791,
											"end": 2820,
											"name": "tag",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 2791,
											"end": 2820,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2783,
											"end": 2820,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2783,
											"end": 2820,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2875,
											"end": 2879,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2869,
											"end": 2873,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2865,
											"end": 2880,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2857,
											"end": 2880,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2857,
											"end": 2880,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2580,
											"end": 2887,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2580,
											"end": 2887,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2580,
											"end": 2887,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2580,
											"end": 2887,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 2893,
											"end": 2989,
											"name": "tag",
											"source": 15,
											"value": "66"
										},
										{
											"begin": 2893,
											"end": 2989,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2930,
											"end": 2937,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2959,
											"end": 2983,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "68"
										},
										{
											"begin": 2977,
											"end": 2982,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2959,
											"end": 2983,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "69"
										},
										{
											"begin": 2959,
											"end": 2983,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 2959,
											"end": 2983,
											"name": "tag",
											"source": 15,
											"value": "68"
										},
										{
											"begin": 2959,
											"end": 2983,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2948,
											"end": 2983,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2948,
											"end": 2983,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2893,
											"end": 2989,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2893,
											"end": 2989,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2893,
											"end": 2989,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2893,
											"end": 2989,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 2995,
											"end": 3144,
											"name": "tag",
											"source": 15,
											"value": "51"
										},
										{
											"begin": 2995,
											"end": 3144,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3031,
											"end": 3038,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3071,
											"end": 3137,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3064,
											"end": 3069,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3060,
											"end": 3138,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 3049,
											"end": 3138,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3049,
											"end": 3138,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2995,
											"end": 3144,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2995,
											"end": 3144,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2995,
											"end": 3144,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2995,
											"end": 3144,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 3150,
											"end": 3276,
											"name": "tag",
											"source": 15,
											"value": "69"
										},
										{
											"begin": 3150,
											"end": 3276,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3187,
											"end": 3194,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3227,
											"end": 3269,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3220,
											"end": 3225,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3216,
											"end": 3270,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 3205,
											"end": 3270,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3205,
											"end": 3270,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3150,
											"end": 3276,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3150,
											"end": 3276,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3150,
											"end": 3276,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3150,
											"end": 3276,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 3282,
											"end": 3359,
											"name": "tag",
											"source": 15,
											"value": "72"
										},
										{
											"begin": 3282,
											"end": 3359,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3319,
											"end": 3326,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3348,
											"end": 3353,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3337,
											"end": 3353,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3337,
											"end": 3353,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3282,
											"end": 3359,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3282,
											"end": 3359,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3282,
											"end": 3359,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3282,
											"end": 3359,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 3365,
											"end": 3519,
											"name": "tag",
											"source": 15,
											"value": "22"
										},
										{
											"begin": 3365,
											"end": 3519,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3449,
											"end": 3455,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3444,
											"end": 3447,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3439,
											"end": 3442,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3426,
											"end": 3456,
											"name": "CALLDATACOPY",
											"source": 15
										},
										{
											"begin": 3511,
											"end": 3512,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3502,
											"end": 3508,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3497,
											"end": 3500,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3493,
											"end": 3509,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3486,
											"end": 3513,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3365,
											"end": 3519,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3365,
											"end": 3519,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3365,
											"end": 3519,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3365,
											"end": 3519,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 3525,
											"end": 3806,
											"name": "tag",
											"source": 15,
											"value": "58"
										},
										{
											"begin": 3525,
											"end": 3806,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3608,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "76"
										},
										{
											"begin": 3630,
											"end": 3634,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3608,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "65"
										},
										{
											"begin": 3608,
											"end": 3635,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 3608,
											"end": 3635,
											"name": "tag",
											"source": 15,
											"value": "76"
										},
										{
											"begin": 3608,
											"end": 3635,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3600,
											"end": 3606,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3596,
											"end": 3636,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3738,
											"end": 3744,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3726,
											"end": 3736,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3723,
											"end": 3745,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 3702,
											"end": 3720,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3690,
											"end": 3700,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3687,
											"end": 3721,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 3684,
											"end": 3746,
											"name": "OR",
											"source": 15
										},
										{
											"begin": 3681,
											"end": 3769,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3681,
											"end": 3769,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "77"
										},
										{
											"begin": 3681,
											"end": 3769,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3749,
											"end": 3767,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "78"
										},
										{
											"begin": 3749,
											"end": 3767,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "63"
										},
										{
											"begin": 3749,
											"end": 3767,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 3749,
											"end": 3767,
											"name": "tag",
											"source": 15,
											"value": "78"
										},
										{
											"begin": 3749,
											"end": 3767,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3681,
											"end": 3769,
											"name": "tag",
											"source": 15,
											"value": "77"
										},
										{
											"begin": 3681,
											"end": 3769,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3789,
											"end": 3799,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3785,
											"end": 3787,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 3778,
											"end": 3800,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3568,
											"end": 3806,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3525,
											"end": 3806,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3525,
											"end": 3806,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3525,
											"end": 3806,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 3812,
											"end": 3992,
											"name": "tag",
											"source": 15,
											"value": "63"
										},
										{
											"begin": 3812,
											"end": 3992,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3860,
											"end": 3937,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3857,
											"end": 3858,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3850,
											"end": 3938,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3957,
											"end": 3961,
											"name": "PUSH",
											"source": 15,
											"value": "41"
										},
										{
											"begin": 3954,
											"end": 3955,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 3947,
											"end": 3962,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3981,
											"end": 3985,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 3978,
											"end": 3979,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3971,
											"end": 3986,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 3998,
											"end": 4115,
											"name": "tag",
											"source": 15,
											"value": "31"
										},
										{
											"begin": 3998,
											"end": 4115,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4107,
											"end": 4108,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4104,
											"end": 4105,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4097,
											"end": 4109,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 4121,
											"end": 4238,
											"name": "tag",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4121,
											"end": 4238,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4230,
											"end": 4231,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4227,
											"end": 4228,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4220,
											"end": 4232,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 4244,
											"end": 4361,
											"name": "tag",
											"source": 15,
											"value": "46"
										},
										{
											"begin": 4244,
											"end": 4361,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4353,
											"end": 4354,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4350,
											"end": 4351,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4343,
											"end": 4355,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 4367,
											"end": 4484,
											"name": "tag",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 4367,
											"end": 4484,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4476,
											"end": 4477,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4473,
											"end": 4474,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4466,
											"end": 4478,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 4490,
											"end": 4592,
											"name": "tag",
											"source": 15,
											"value": "65"
										},
										{
											"begin": 4490,
											"end": 4592,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4531,
											"end": 4537,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4582,
											"end": 4584,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 4578,
											"end": 4585,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 4573,
											"end": 4575,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 4566,
											"end": 4571,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4562,
											"end": 4576,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4558,
											"end": 4586,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 4548,
											"end": 4586,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4548,
											"end": 4586,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4490,
											"end": 4592,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4490,
											"end": 4592,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4490,
											"end": 4592,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4490,
											"end": 4592,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 4598,
											"end": 4720,
											"name": "tag",
											"source": 15,
											"value": "26"
										},
										{
											"begin": 4598,
											"end": 4720,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4671,
											"end": 4695,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "86"
										},
										{
											"begin": 4689,
											"end": 4694,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4671,
											"end": 4695,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "66"
										},
										{
											"begin": 4671,
											"end": 4695,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 4671,
											"end": 4695,
											"name": "tag",
											"source": 15,
											"value": "86"
										},
										{
											"begin": 4671,
											"end": 4695,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4664,
											"end": 4669,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4661,
											"end": 4696,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 4651,
											"end": 4714,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "87"
										},
										{
											"begin": 4651,
											"end": 4714,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4710,
											"end": 4711,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4707,
											"end": 4708,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4700,
											"end": 4712,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 4651,
											"end": 4714,
											"name": "tag",
											"source": 15,
											"value": "87"
										},
										{
											"begin": 4651,
											"end": 4714,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4598,
											"end": 4720,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4598,
											"end": 4720,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 4726,
											"end": 4848,
											"name": "tag",
											"source": 15,
											"value": "36"
										},
										{
											"begin": 4726,
											"end": 4848,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4799,
											"end": 4823,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "89"
										},
										{
											"begin": 4817,
											"end": 4822,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4799,
											"end": 4823,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "72"
										},
										{
											"begin": 4799,
											"end": 4823,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 4799,
											"end": 4823,
											"name": "tag",
											"source": 15,
											"value": "89"
										},
										{
											"begin": 4799,
											"end": 4823,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4792,
											"end": 4797,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4789,
											"end": 4824,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 4779,
											"end": 4842,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "90"
										},
										{
											"begin": 4779,
											"end": 4842,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4838,
											"end": 4839,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4835,
											"end": 4836,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4828,
											"end": 4840,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 4779,
											"end": 4842,
											"name": "tag",
											"source": 15,
											"value": "90"
										},
										{
											"begin": 4779,
											"end": 4842,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4726,
											"end": 4848,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4726,
											"end": 4848,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC721Receiver} interface. Accepts all token transfers. Make sure the contract is able to use its token with {IERC721-safeTransferFrom}, {IERC721-approve} or {IERC721-setApprovalForAll}.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":\"ERC721Holder\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":{\"keccak256\":\"0x0108bf6a6ebd5f96678bed33a35947537263f96766131ee91461fb6485805028\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ae2d274bf3d56a6d49a9bbd0a4871c54997a82551eb3eb1c0c39dc98698ff8bf\",\"dweb:/ipfs/QmTT7ty5DPGAmRnx94Xu3TUDYGSPDVLN2bppJAjjedrg1e\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":194:8255  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":194:8255  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212205826ef7cf11bbe4053e1f56e9130157b606743914f94cd51f1aadbd16e849d4f64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205826ef7cf11bbe4053e1f56e9130157b606743914f94cd51f1aadbd16e849d4f64736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PC 0x26 0xEF PUSH29 0xF11BBE4053E1F56E9130157B606743914F94CD51F1AADBD16E849D4F64 PUSH20 0x6F6C634300080700330000000000000000000000 ",
							"sourceMap": "194:8061:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205826ef7cf11bbe4053e1f56e9130157b606743914f94cd51f1aadbd16e849d4f64736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PC 0x26 0xEF PUSH29 0xF11BBE4053E1F56E9130157B606743914F94CD51F1AADBD16E849D4F64 PUSH20 0x6F6C634300080700330000000000000000000000 ",
							"sourceMap": "194:8061:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205826ef7cf11bbe4053e1f56e9130157b606743914f94cd51f1aadbd16e849d4f64736f6c63430008070033",
									".code": [
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This contract module is inspired from  https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol OpenZepplin Ownable contract. The code is forked from Ownable except  2 functions i.e. renounce and transfer ownership. In our usecase, we do not require users  to transfer or renounce ownership as it is always aligned with the original user.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This contract module is inspired from  https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol OpenZepplin Ownable contract. The code is forked from Ownable except  2 functions i.e. renounce and transfer ownership. In our usecase, we do not require users  to transfer or renounce ownership as it is always aligned with the original user.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"Ownable.sol\":{\"keccak256\":\"0x27859030a47f274f647c726d7154207782f41c299a471ad984fb937a96726e9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://03dc74c9002f66b328d3cf2146f8684fe1a4574b771948933a39ecda1467ab89\",\"dweb:/ipfs/QmPJq3SLdXqcbaejBs6UxANXkaYryGwjBSixR2CcWzVgQw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1071,
								"contract": "Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Practice NFT.sol": {
				"TwoFactor": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_backupWallet",
									"type": "address"
								}
							],
							"name": "init",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "sendERC721FundsToBackupWallet",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "sendNativeFundsToBackupWallet",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Practice NFT.sol\":467:5862  contract TwoFactor is Ownable, ERC721Holder, ERC1155Holder {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"Ownable.sol\":818:850  _transferOwnership(_msgSender()) */\n  tag_4\n    /* \"Ownable.sol\":837:849  _msgSender() */\n  tag_5\n    /* \"Ownable.sol\":837:847  _msgSender */\n  shl(0x20, tag_6)\n    /* \"Ownable.sol\":837:849  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_5:\n    /* \"Ownable.sol\":818:836  _transferOwnership */\n  shl(0x20, tag_7)\n    /* \"Ownable.sol\":818:850  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_4:\n    /* \"Practice NFT.sol\":467:5862  contract TwoFactor is Ownable, ERC721Holder, ERC1155Holder {... */\n  jump(tag_8)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_6:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"Ownable.sol\":1377:1564  function _transferOwnership(address newOwner) internal virtual {... */\ntag_7:\n    /* \"Ownable.sol\":1450:1466  address oldOwner */\n  0x00\n    /* \"Ownable.sol\":1469:1475  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"Ownable.sol\":1450:1475  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"Ownable.sol\":1494:1502  newOwner */\n  dup2\n    /* \"Ownable.sol\":1485:1491  _owner */\n  0x00\n  dup1\n    /* \"Ownable.sol\":1485:1502  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Ownable.sol\":1548:1556  newOwner */\n  dup2\n    /* \"Ownable.sol\":1517:1557  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"Ownable.sol\":1538:1546  oldOwner */\n  dup2\n    /* \"Ownable.sol\":1517:1557  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"Ownable.sol\":1440:1564  {... */\n  pop\n    /* \"Ownable.sol\":1377:1564  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"Practice NFT.sol\":467:5862  contract TwoFactor is Ownable, ERC721Holder, ERC1155Holder {... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Practice NFT.sol\":467:5862  contract TwoFactor is Ownable, ERC721Holder, ERC1155Holder {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_11\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xbc197c81\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xf09a4016\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xf23a6e61\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_11:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x150b7a02\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x450b2ad7\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x71b4bc99\n      eq\n      tag_6\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":387:608  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      pop\n      tag_15\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      tag_18\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":588:788  function onERC721Received(... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_21\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      pop\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      tag_25\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Practice NFT.sol\":4485:4614  function sendNativeFundsToBackupWallet() external onlyOwner {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_28\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_28:\n      pop\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      stop\n        /* \"Practice NFT.sol\":4062:4264  function sendERC721FundsToBackupWallet(... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      pop\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n    tag_32:\n      stop\n        /* \"Ownable.sol\":933:1018  function owner() public view virtual returns (address) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_36\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      pop\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":724:971  function onERC1155BatchReceived(... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_41\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      pop\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Practice NFT.sol\":644:1144  function init(address _sender, address _backupWallet) external {        ... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      pop\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n    tag_48:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":499:718  function onERC1155Received(... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_52\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_52:\n      pop\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      tag_56\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":387:608  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_18:\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":489:493  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":527:561  type(IERC1155Receiver).interfaceId */\n      0x4e2312e000000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":512:561  interfaceId == type(IERC1155Receiver).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":512:523  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":512:561  interfaceId == type(IERC1155Receiver).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":512:601  interfaceId == type(IERC1155Receiver).interfaceId || super.supportsInterface(interfaceId) */\n      dup1\n      tag_59\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":565:601  super.supportsInterface(interfaceId) */\n      tag_60\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":589:600  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":565:588  super.supportsInterface */\n      tag_61\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":565:601  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_60:\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":512:601  interfaceId == type(IERC1155Receiver).interfaceId || super.supportsInterface(interfaceId) */\n    tag_59:\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":505:601  return interfaceId == type(IERC1155Receiver).interfaceId || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":387:608  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":588:788  function onERC721Received(... */\n    tag_25:\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":726:732  bytes4 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":751:781  this.onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":744:781  return this.onERC721Received.selector */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":588:788  function onERC721Received(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Practice NFT.sol\":4485:4614  function sendNativeFundsToBackupWallet() external onlyOwner {... */\n    tag_30:\n        /* \"Ownable.sol\":1156:1168  _msgSender() */\n      tag_64\n        /* \"Ownable.sol\":1156:1166  _msgSender */\n      tag_65\n        /* \"Ownable.sol\":1156:1168  _msgSender() */\n      jump\t// in\n    tag_64:\n        /* \"Ownable.sol\":1145:1168  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Ownable.sol\":1145:1152  owner() */\n      tag_66\n        /* \"Ownable.sol\":1145:1150  owner */\n      tag_38\n        /* \"Ownable.sol\":1145:1152  owner() */\n      jump\t// in\n    tag_66:\n        /* \"Ownable.sol\":1145:1168  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Ownable.sol\":1137:1205  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_67\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_68\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_67:\n        /* \"Practice NFT.sol\":4555:4607  _transferNativeFundsToAddress(payable(backupWallet)) */\n      tag_71\n        /* \"Practice NFT.sol\":4593:4605  backupWallet */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Practice NFT.sol\":4555:4584  _transferNativeFundsToAddress */\n      tag_72\n        /* \"Practice NFT.sol\":4555:4607  _transferNativeFundsToAddress(payable(backupWallet)) */\n      jump\t// in\n    tag_71:\n        /* \"Practice NFT.sol\":4485:4614  function sendNativeFundsToBackupWallet() external onlyOwner {... */\n      jump\t// out\n        /* \"Practice NFT.sol\":4062:4264  function sendERC721FundsToBackupWallet(... */\n    tag_35:\n        /* \"Ownable.sol\":1156:1168  _msgSender() */\n      tag_74\n        /* \"Ownable.sol\":1156:1166  _msgSender */\n      tag_65\n        /* \"Ownable.sol\":1156:1168  _msgSender() */\n      jump\t// in\n    tag_74:\n        /* \"Ownable.sol\":1145:1168  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Ownable.sol\":1145:1152  owner() */\n      tag_75\n        /* \"Ownable.sol\":1145:1150  owner */\n      tag_38\n        /* \"Ownable.sol\":1145:1152  owner() */\n      jump\t// in\n    tag_75:\n        /* \"Ownable.sol\":1145:1168  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Ownable.sol\":1137:1205  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_76\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_77\n      swap1\n      tag_69\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_76:\n        /* \"Practice NFT.sol\":4191:4257  _transferERC721FundsToAddress(backupWallet, tokenAddress, tokenId) */\n      tag_79\n        /* \"Practice NFT.sol\":4221:4233  backupWallet */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Practice NFT.sol\":4235:4247  tokenAddress */\n      dup4\n        /* \"Practice NFT.sol\":4249:4256  tokenId */\n      dup4\n        /* \"Practice NFT.sol\":4191:4220  _transferERC721FundsToAddress */\n      tag_80\n        /* \"Practice NFT.sol\":4191:4257  _transferERC721FundsToAddress(backupWallet, tokenAddress, tokenId) */\n      jump\t// in\n    tag_79:\n        /* \"Practice NFT.sol\":4062:4264  function sendERC721FundsToBackupWallet(... */\n      pop\n      pop\n      jump\t// out\n        /* \"Ownable.sol\":933:1018  function owner() public view virtual returns (address) {... */\n    tag_38:\n        /* \"Ownable.sol\":979:986  address */\n      0x00\n        /* \"Ownable.sol\":1005:1011  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Ownable.sol\":998:1011  return _owner */\n      swap1\n      pop\n        /* \"Ownable.sol\":933:1018  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":724:971  function onERC1155BatchReceived(... */\n    tag_45:\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":903:909  bytes4 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":928:964  this.onERC1155BatchReceived.selector */\n      shl(0xe0, 0xbc197c81)\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":921:964  return this.onERC1155BatchReceived.selector */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":724:971  function onERC1155BatchReceived(... */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Practice NFT.sol\":644:1144  function init(address _sender, address _backupWallet) external {        ... */\n    tag_51:\n        /* \"Practice NFT.sol\":751:752  0 */\n      0x00\n        /* \"Practice NFT.sol\":733:753  _sender!= address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Practice NFT.sol\":733:740  _sender */\n      dup3\n        /* \"Practice NFT.sol\":733:753  _sender!= address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"Practice NFT.sol\":725:788  require(_sender!= address(0), \"Sender address can not be zero\") */\n      tag_84\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_85\n      swap1\n      tag_86\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_84:\n        /* \"Practice NFT.sol\":830:831  0 */\n      0x00\n        /* \"Practice NFT.sol\":806:832  _backupWallet!= address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Practice NFT.sol\":806:819  _backupWallet */\n      dup2\n        /* \"Practice NFT.sol\":806:832  _backupWallet!= address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"Practice NFT.sol\":798:867  require(_backupWallet!= address(0), \"Backup address can not be zero\") */\n      tag_87\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_88\n      swap1\n      tag_89\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_87:\n        /* \"Practice NFT.sol\":901:908  _sender */\n      dup2\n        /* \"Practice NFT.sol\":885:908  _backupWallet!= _sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Practice NFT.sol\":885:898  _backupWallet */\n      dup2\n        /* \"Practice NFT.sol\":885:908  _backupWallet!= _sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"Practice NFT.sol\":877:959  require(_backupWallet!= _sender, \"Backup wallet can not be same as sender wallet\") */\n      tag_90\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_91\n      swap1\n      tag_92\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_90:\n        /* \"Practice NFT.sol\":994:999  false */\n      0x00\n        /* \"Practice NFT.sol\":977:999  isInitialized == false */\n      iszero\n      iszero\n        /* \"Practice NFT.sol\":977:990  isInitialized */\n      0x00\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Practice NFT.sol\":977:999  isInitialized == false */\n      iszero\n      iszero\n      eq\n        /* \"Practice NFT.sol\":969:1032  require(isInitialized == false, \"Contract already initialized\") */\n      tag_93\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_94\n      swap1\n      tag_95\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_93:\n        /* \"Practice NFT.sol\":1042:1069  _transferOwnership(_sender) */\n      tag_96\n        /* \"Practice NFT.sol\":1061:1068  _sender */\n      dup3\n        /* \"Practice NFT.sol\":1042:1060  _transferOwnership */\n      tag_97\n        /* \"Practice NFT.sol\":1042:1069  _transferOwnership(_sender) */\n      jump\t// in\n    tag_96:\n        /* \"Practice NFT.sol\":1094:1107  _backupWallet */\n      dup1\n        /* \"Practice NFT.sol\":1079:1091  backupWallet */\n      0x01\n      0x00\n        /* \"Practice NFT.sol\":1079:1107  backupWallet = _backupWallet */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Practice NFT.sol\":1133:1137  true */\n      0x01\n        /* \"Practice NFT.sol\":1117:1130  isInitialized */\n      0x00\n      0x14\n        /* \"Practice NFT.sol\":1117:1137  isInitialized = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Practice NFT.sol\":644:1144  function init(address _sender, address _backupWallet) external {        ... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":499:718  function onERC1155Received(... */\n    tag_56:\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":655:661  bytes4 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":680:711  this.onERC1155Received.selector */\n      shl(0xe0, 0xf23a6e61)\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":673:711  return this.onERC1155Received.selector */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":499:718  function onERC1155Received(... */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_61:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":914:918  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":952:977  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:948  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":930:977  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_65:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"Practice NFT.sol\":5652:5860  function _transferNativeFundsToAddress(address payable toAddress) private {... */\n    tag_72:\n        /* \"Practice NFT.sol\":5736:5751  uint256 balance */\n      0x00\n        /* \"Practice NFT.sol\":5754:5775  address(this).balance */\n      selfbalance\n        /* \"Practice NFT.sol\":5736:5775  uint256 balance = address(this).balance */\n      swap1\n      pop\n        /* \"Practice NFT.sol\":5799:5800  0 */\n      0x00\n        /* \"Practice NFT.sol\":5789:5796  balance */\n      dup2\n        /* \"Practice NFT.sol\":5789:5800  balance > 0 */\n      gt\n        /* \"Practice NFT.sol\":5785:5854  if (balance > 0) {... */\n      iszero\n      tag_102\n      jumpi\n        /* \"Practice NFT.sol\":5816:5825  toAddress */\n      dup2\n        /* \"Practice NFT.sol\":5816:5834  toAddress.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Practice NFT.sol\":5816:5843  toAddress.transfer(balance) */\n      0x08fc\n        /* \"Practice NFT.sol\":5835:5842  balance */\n      dup3\n        /* \"Practice NFT.sol\":5816:5843  toAddress.transfer(balance) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_104\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_104:\n      pop\n        /* \"Practice NFT.sol\":5785:5854  if (balance > 0) {... */\n    tag_102:\n        /* \"Practice NFT.sol\":5726:5860  {... */\n      pop\n        /* \"Practice NFT.sol\":5652:5860  function _transferNativeFundsToAddress(address payable toAddress) private {... */\n      pop\n      jump\t// out\n        /* \"Practice NFT.sol\":1882:2107  function _transferERC721FundsToAddress(... */\n    tag_80:\n        /* \"Practice NFT.sol\":2035:2047  tokenAddress */\n      dup2\n        /* \"Practice NFT.sol\":2027:2065  IERC721(tokenAddress).safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x42842e0e\n        /* \"Practice NFT.sol\":2074:2078  this */\n      address\n        /* \"Practice NFT.sol\":2081:2090  toAddress */\n      dup6\n        /* \"Practice NFT.sol\":2092:2099  tokenId */\n      dup5\n        /* \"Practice NFT.sol\":2027:2100  IERC721(tokenAddress).safeTransferFrom(address(this), toAddress, tokenId) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_106\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_107\n      jump\t// in\n    tag_106:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_108\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_108:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_110\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_110:\n      pop\n      pop\n      pop\n      pop\n        /* \"Practice NFT.sol\":1882:2107  function _transferERC721FundsToAddress(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Ownable.sol\":1377:1564  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_97:\n        /* \"Ownable.sol\":1450:1466  address oldOwner */\n      0x00\n        /* \"Ownable.sol\":1469:1475  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Ownable.sol\":1450:1475  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"Ownable.sol\":1494:1502  newOwner */\n      dup2\n        /* \"Ownable.sol\":1485:1491  _owner */\n      0x00\n      dup1\n        /* \"Ownable.sol\":1485:1502  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Ownable.sol\":1548:1556  newOwner */\n      dup2\n        /* \"Ownable.sol\":1517:1557  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Ownable.sol\":1538:1546  oldOwner */\n      dup2\n        /* \"Ownable.sol\":1517:1557  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Ownable.sol\":1440:1564  {... */\n      pop\n        /* \"Ownable.sol\":1377:1564  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24:746   */\n    tag_113:\n        /* \"#utility.yul\":120:125   */\n      0x00\n        /* \"#utility.yul\":145:226   */\n      tag_115\n        /* \"#utility.yul\":161:225   */\n      tag_116\n        /* \"#utility.yul\":218:224   */\n      dup5\n        /* \"#utility.yul\":161:225   */\n      tag_117\n      jump\t// in\n    tag_116:\n        /* \"#utility.yul\":145:226   */\n      tag_118\n      jump\t// in\n    tag_115:\n        /* \"#utility.yul\":136:226   */\n      swap1\n      pop\n        /* \"#utility.yul\":246:251   */\n      dup1\n        /* \"#utility.yul\":275:281   */\n      dup4\n        /* \"#utility.yul\":268:273   */\n      dup3\n        /* \"#utility.yul\":261:282   */\n      mstore\n        /* \"#utility.yul\":309:313   */\n      0x20\n        /* \"#utility.yul\":302:307   */\n      dup3\n        /* \"#utility.yul\":298:314   */\n      add\n        /* \"#utility.yul\":291:314   */\n      swap1\n      pop\n        /* \"#utility.yul\":335:341   */\n      dup3\n        /* \"#utility.yul\":385:388   */\n      dup6\n        /* \"#utility.yul\":377:381   */\n      0x20\n        /* \"#utility.yul\":369:375   */\n      dup7\n        /* \"#utility.yul\":365:382   */\n      mul\n        /* \"#utility.yul\":360:363   */\n      dup3\n        /* \"#utility.yul\":356:383   */\n      add\n        /* \"#utility.yul\":353:389   */\n      gt\n        /* \"#utility.yul\":350:493   */\n      iszero\n      tag_119\n      jumpi\n        /* \"#utility.yul\":404:483   */\n      tag_120\n      tag_121\n      jump\t// in\n    tag_120:\n        /* \"#utility.yul\":350:493   */\n    tag_119:\n        /* \"#utility.yul\":517:518   */\n      0x00\n        /* \"#utility.yul\":502:740   */\n    tag_122:\n        /* \"#utility.yul\":527:533   */\n      dup6\n        /* \"#utility.yul\":524:525   */\n      dup2\n        /* \"#utility.yul\":521:534   */\n      lt\n        /* \"#utility.yul\":502:740   */\n      iszero\n      tag_124\n      jumpi\n        /* \"#utility.yul\":595:598   */\n      dup2\n        /* \"#utility.yul\":624:661   */\n      tag_125\n        /* \"#utility.yul\":657:660   */\n      dup9\n        /* \"#utility.yul\":645:655   */\n      dup3\n        /* \"#utility.yul\":624:661   */\n      tag_126\n      jump\t// in\n    tag_125:\n        /* \"#utility.yul\":619:622   */\n      dup5\n        /* \"#utility.yul\":612:662   */\n      mstore\n        /* \"#utility.yul\":691:695   */\n      0x20\n        /* \"#utility.yul\":686:689   */\n      dup5\n        /* \"#utility.yul\":682:696   */\n      add\n        /* \"#utility.yul\":675:696   */\n      swap4\n      pop\n        /* \"#utility.yul\":725:729   */\n      0x20\n        /* \"#utility.yul\":720:723   */\n      dup4\n        /* \"#utility.yul\":716:730   */\n      add\n        /* \"#utility.yul\":709:730   */\n      swap3\n      pop\n        /* \"#utility.yul\":562:740   */\n      pop\n        /* \"#utility.yul\":549:550   */\n      0x01\n        /* \"#utility.yul\":546:547   */\n      dup2\n        /* \"#utility.yul\":542:551   */\n      add\n        /* \"#utility.yul\":537:551   */\n      swap1\n      pop\n        /* \"#utility.yul\":502:740   */\n      jump(tag_122)\n    tag_124:\n        /* \"#utility.yul\":506:520   */\n      pop\n        /* \"#utility.yul\":126:746   */\n      pop\n      pop\n        /* \"#utility.yul\":24:746   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":752:1162   */\n    tag_127:\n        /* \"#utility.yul\":829:834   */\n      0x00\n        /* \"#utility.yul\":854:919   */\n      tag_129\n        /* \"#utility.yul\":870:918   */\n      tag_130\n        /* \"#utility.yul\":911:917   */\n      dup5\n        /* \"#utility.yul\":870:918   */\n      tag_131\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":854:919   */\n      tag_118\n      jump\t// in\n    tag_129:\n        /* \"#utility.yul\":845:919   */\n      swap1\n      pop\n        /* \"#utility.yul\":942:948   */\n      dup3\n        /* \"#utility.yul\":935:940   */\n      dup2\n        /* \"#utility.yul\":928:949   */\n      mstore\n        /* \"#utility.yul\":980:984   */\n      0x20\n        /* \"#utility.yul\":973:978   */\n      dup2\n        /* \"#utility.yul\":969:985   */\n      add\n        /* \"#utility.yul\":1018:1021   */\n      dup5\n        /* \"#utility.yul\":1009:1015   */\n      dup5\n        /* \"#utility.yul\":1004:1007   */\n      dup5\n        /* \"#utility.yul\":1000:1016   */\n      add\n        /* \"#utility.yul\":997:1022   */\n      gt\n        /* \"#utility.yul\":994:1106   */\n      iszero\n      tag_132\n      jumpi\n        /* \"#utility.yul\":1025:1104   */\n      tag_133\n      tag_134\n      jump\t// in\n    tag_133:\n        /* \"#utility.yul\":994:1106   */\n    tag_132:\n        /* \"#utility.yul\":1115:1156   */\n      tag_135\n        /* \"#utility.yul\":1149:1155   */\n      dup5\n        /* \"#utility.yul\":1144:1147   */\n      dup3\n        /* \"#utility.yul\":1139:1142   */\n      dup6\n        /* \"#utility.yul\":1115:1156   */\n      tag_136\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":835:1162   */\n      pop\n        /* \"#utility.yul\":752:1162   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1168:1307   */\n    tag_137:\n        /* \"#utility.yul\":1214:1219   */\n      0x00\n        /* \"#utility.yul\":1252:1258   */\n      dup2\n        /* \"#utility.yul\":1239:1259   */\n      calldataload\n        /* \"#utility.yul\":1230:1259   */\n      swap1\n      pop\n        /* \"#utility.yul\":1268:1301   */\n      tag_139\n        /* \"#utility.yul\":1295:1300   */\n      dup2\n        /* \"#utility.yul\":1268:1301   */\n      tag_140\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":1168:1307   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1330:1700   */\n    tag_141:\n        /* \"#utility.yul\":1401:1406   */\n      0x00\n        /* \"#utility.yul\":1450:1453   */\n      dup3\n        /* \"#utility.yul\":1443:1447   */\n      0x1f\n        /* \"#utility.yul\":1435:1441   */\n      dup4\n        /* \"#utility.yul\":1431:1448   */\n      add\n        /* \"#utility.yul\":1427:1454   */\n      slt\n        /* \"#utility.yul\":1417:1539   */\n      tag_143\n      jumpi\n        /* \"#utility.yul\":1458:1537   */\n      tag_144\n      tag_145\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":1417:1539   */\n    tag_143:\n        /* \"#utility.yul\":1575:1581   */\n      dup2\n        /* \"#utility.yul\":1562:1582   */\n      calldataload\n        /* \"#utility.yul\":1600:1694   */\n      tag_146\n        /* \"#utility.yul\":1690:1693   */\n      dup5\n        /* \"#utility.yul\":1682:1688   */\n      dup3\n        /* \"#utility.yul\":1675:1679   */\n      0x20\n        /* \"#utility.yul\":1667:1673   */\n      dup7\n        /* \"#utility.yul\":1663:1680   */\n      add\n        /* \"#utility.yul\":1600:1694   */\n      tag_113\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":1591:1694   */\n      swap2\n      pop\n        /* \"#utility.yul\":1407:1700   */\n      pop\n        /* \"#utility.yul\":1330:1700   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1706:1843   */\n    tag_147:\n        /* \"#utility.yul\":1751:1756   */\n      0x00\n        /* \"#utility.yul\":1789:1795   */\n      dup2\n        /* \"#utility.yul\":1776:1796   */\n      calldataload\n        /* \"#utility.yul\":1767:1796   */\n      swap1\n      pop\n        /* \"#utility.yul\":1805:1837   */\n      tag_149\n        /* \"#utility.yul\":1831:1836   */\n      dup2\n        /* \"#utility.yul\":1805:1837   */\n      tag_150\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":1706:1843   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1862:2200   */\n    tag_151:\n        /* \"#utility.yul\":1917:1922   */\n      0x00\n        /* \"#utility.yul\":1966:1969   */\n      dup3\n        /* \"#utility.yul\":1959:1963   */\n      0x1f\n        /* \"#utility.yul\":1951:1957   */\n      dup4\n        /* \"#utility.yul\":1947:1964   */\n      add\n        /* \"#utility.yul\":1943:1970   */\n      slt\n        /* \"#utility.yul\":1933:2055   */\n      tag_153\n      jumpi\n        /* \"#utility.yul\":1974:2053   */\n      tag_154\n      tag_145\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":1933:2055   */\n    tag_153:\n        /* \"#utility.yul\":2091:2097   */\n      dup2\n        /* \"#utility.yul\":2078:2098   */\n      calldataload\n        /* \"#utility.yul\":2116:2194   */\n      tag_155\n        /* \"#utility.yul\":2190:2193   */\n      dup5\n        /* \"#utility.yul\":2182:2188   */\n      dup3\n        /* \"#utility.yul\":2175:2179   */\n      0x20\n        /* \"#utility.yul\":2167:2173   */\n      dup7\n        /* \"#utility.yul\":2163:2180   */\n      add\n        /* \"#utility.yul\":2116:2194   */\n      tag_127\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":2107:2194   */\n      swap2\n      pop\n        /* \"#utility.yul\":1923:2200   */\n      pop\n        /* \"#utility.yul\":1862:2200   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2206:2345   */\n    tag_126:\n        /* \"#utility.yul\":2252:2257   */\n      0x00\n        /* \"#utility.yul\":2290:2296   */\n      dup2\n        /* \"#utility.yul\":2277:2297   */\n      calldataload\n        /* \"#utility.yul\":2268:2297   */\n      swap1\n      pop\n        /* \"#utility.yul\":2306:2339   */\n      tag_157\n        /* \"#utility.yul\":2333:2338   */\n      dup2\n        /* \"#utility.yul\":2306:2339   */\n      tag_158\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":2206:2345   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2351:2825   */\n    tag_50:\n        /* \"#utility.yul\":2419:2425   */\n      0x00\n        /* \"#utility.yul\":2427:2433   */\n      dup1\n        /* \"#utility.yul\":2476:2478   */\n      0x40\n        /* \"#utility.yul\":2464:2473   */\n      dup4\n        /* \"#utility.yul\":2455:2462   */\n      dup6\n        /* \"#utility.yul\":2451:2474   */\n      sub\n        /* \"#utility.yul\":2447:2479   */\n      slt\n        /* \"#utility.yul\":2444:2563   */\n      iszero\n      tag_160\n      jumpi\n        /* \"#utility.yul\":2482:2561   */\n      tag_161\n      tag_162\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":2444:2563   */\n    tag_160:\n        /* \"#utility.yul\":2602:2603   */\n      0x00\n        /* \"#utility.yul\":2627:2680   */\n      tag_163\n        /* \"#utility.yul\":2672:2679   */\n      dup6\n        /* \"#utility.yul\":2663:2669   */\n      dup3\n        /* \"#utility.yul\":2652:2661   */\n      dup7\n        /* \"#utility.yul\":2648:2670   */\n      add\n        /* \"#utility.yul\":2627:2680   */\n      tag_137\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":2617:2680   */\n      swap3\n      pop\n        /* \"#utility.yul\":2573:2690   */\n      pop\n        /* \"#utility.yul\":2729:2731   */\n      0x20\n        /* \"#utility.yul\":2755:2808   */\n      tag_164\n        /* \"#utility.yul\":2800:2807   */\n      dup6\n        /* \"#utility.yul\":2791:2797   */\n      dup3\n        /* \"#utility.yul\":2780:2789   */\n      dup7\n        /* \"#utility.yul\":2776:2798   */\n      add\n        /* \"#utility.yul\":2755:2808   */\n      tag_137\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":2745:2808   */\n      swap2\n      pop\n        /* \"#utility.yul\":2700:2818   */\n      pop\n        /* \"#utility.yul\":2351:2825   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2831:4340   */\n    tag_44:\n        /* \"#utility.yul\":2985:2991   */\n      0x00\n        /* \"#utility.yul\":2993:2999   */\n      dup1\n        /* \"#utility.yul\":3001:3007   */\n      0x00\n        /* \"#utility.yul\":3009:3015   */\n      dup1\n        /* \"#utility.yul\":3017:3023   */\n      0x00\n        /* \"#utility.yul\":3066:3069   */\n      0xa0\n        /* \"#utility.yul\":3054:3063   */\n      dup7\n        /* \"#utility.yul\":3045:3052   */\n      dup9\n        /* \"#utility.yul\":3041:3064   */\n      sub\n        /* \"#utility.yul\":3037:3070   */\n      slt\n        /* \"#utility.yul\":3034:3154   */\n      iszero\n      tag_166\n      jumpi\n        /* \"#utility.yul\":3073:3152   */\n      tag_167\n      tag_162\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":3034:3154   */\n    tag_166:\n        /* \"#utility.yul\":3193:3194   */\n      0x00\n        /* \"#utility.yul\":3218:3271   */\n      tag_168\n        /* \"#utility.yul\":3263:3270   */\n      dup9\n        /* \"#utility.yul\":3254:3260   */\n      dup3\n        /* \"#utility.yul\":3243:3252   */\n      dup10\n        /* \"#utility.yul\":3239:3261   */\n      add\n        /* \"#utility.yul\":3218:3271   */\n      tag_137\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":3208:3271   */\n      swap6\n      pop\n        /* \"#utility.yul\":3164:3281   */\n      pop\n        /* \"#utility.yul\":3320:3322   */\n      0x20\n        /* \"#utility.yul\":3346:3399   */\n      tag_169\n        /* \"#utility.yul\":3391:3398   */\n      dup9\n        /* \"#utility.yul\":3382:3388   */\n      dup3\n        /* \"#utility.yul\":3371:3380   */\n      dup10\n        /* \"#utility.yul\":3367:3389   */\n      add\n        /* \"#utility.yul\":3346:3399   */\n      tag_137\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":3336:3399   */\n      swap5\n      pop\n        /* \"#utility.yul\":3291:3409   */\n      pop\n        /* \"#utility.yul\":3476:3478   */\n      0x40\n        /* \"#utility.yul\":3465:3474   */\n      dup7\n        /* \"#utility.yul\":3461:3479   */\n      add\n        /* \"#utility.yul\":3448:3480   */\n      calldataload\n        /* \"#utility.yul\":3507:3525   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3499:3505   */\n      dup2\n        /* \"#utility.yul\":3496:3526   */\n      gt\n        /* \"#utility.yul\":3493:3610   */\n      iszero\n      tag_170\n      jumpi\n        /* \"#utility.yul\":3529:3608   */\n      tag_171\n      tag_172\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":3493:3610   */\n    tag_170:\n        /* \"#utility.yul\":3634:3712   */\n      tag_173\n        /* \"#utility.yul\":3704:3711   */\n      dup9\n        /* \"#utility.yul\":3695:3701   */\n      dup3\n        /* \"#utility.yul\":3684:3693   */\n      dup10\n        /* \"#utility.yul\":3680:3702   */\n      add\n        /* \"#utility.yul\":3634:3712   */\n      tag_141\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":3624:3712   */\n      swap4\n      pop\n        /* \"#utility.yul\":3419:3722   */\n      pop\n        /* \"#utility.yul\":3789:3791   */\n      0x60\n        /* \"#utility.yul\":3778:3787   */\n      dup7\n        /* \"#utility.yul\":3774:3792   */\n      add\n        /* \"#utility.yul\":3761:3793   */\n      calldataload\n        /* \"#utility.yul\":3820:3838   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3812:3818   */\n      dup2\n        /* \"#utility.yul\":3809:3839   */\n      gt\n        /* \"#utility.yul\":3806:3923   */\n      iszero\n      tag_174\n      jumpi\n        /* \"#utility.yul\":3842:3921   */\n      tag_175\n      tag_172\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":3806:3923   */\n    tag_174:\n        /* \"#utility.yul\":3947:4025   */\n      tag_176\n        /* \"#utility.yul\":4017:4024   */\n      dup9\n        /* \"#utility.yul\":4008:4014   */\n      dup3\n        /* \"#utility.yul\":3997:4006   */\n      dup10\n        /* \"#utility.yul\":3993:4015   */\n      add\n        /* \"#utility.yul\":3947:4025   */\n      tag_141\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":3937:4025   */\n      swap3\n      pop\n        /* \"#utility.yul\":3732:4035   */\n      pop\n        /* \"#utility.yul\":4102:4105   */\n      0x80\n        /* \"#utility.yul\":4091:4100   */\n      dup7\n        /* \"#utility.yul\":4087:4106   */\n      add\n        /* \"#utility.yul\":4074:4107   */\n      calldataload\n        /* \"#utility.yul\":4134:4152   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4126:4132   */\n      dup2\n        /* \"#utility.yul\":4123:4153   */\n      gt\n        /* \"#utility.yul\":4120:4237   */\n      iszero\n      tag_177\n      jumpi\n        /* \"#utility.yul\":4156:4235   */\n      tag_178\n      tag_172\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":4120:4237   */\n    tag_177:\n        /* \"#utility.yul\":4261:4323   */\n      tag_179\n        /* \"#utility.yul\":4315:4322   */\n      dup9\n        /* \"#utility.yul\":4306:4312   */\n      dup3\n        /* \"#utility.yul\":4295:4304   */\n      dup10\n        /* \"#utility.yul\":4291:4313   */\n      add\n        /* \"#utility.yul\":4261:4323   */\n      tag_151\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":4251:4323   */\n      swap2\n      pop\n        /* \"#utility.yul\":4045:4333   */\n      pop\n        /* \"#utility.yul\":2831:4340   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4346:5289   */\n    tag_24:\n        /* \"#utility.yul\":4441:4447   */\n      0x00\n        /* \"#utility.yul\":4449:4455   */\n      dup1\n        /* \"#utility.yul\":4457:4463   */\n      0x00\n        /* \"#utility.yul\":4465:4471   */\n      dup1\n        /* \"#utility.yul\":4514:4517   */\n      0x80\n        /* \"#utility.yul\":4502:4511   */\n      dup6\n        /* \"#utility.yul\":4493:4500   */\n      dup8\n        /* \"#utility.yul\":4489:4512   */\n      sub\n        /* \"#utility.yul\":4485:4518   */\n      slt\n        /* \"#utility.yul\":4482:4602   */\n      iszero\n      tag_181\n      jumpi\n        /* \"#utility.yul\":4521:4600   */\n      tag_182\n      tag_162\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":4482:4602   */\n    tag_181:\n        /* \"#utility.yul\":4641:4642   */\n      0x00\n        /* \"#utility.yul\":4666:4719   */\n      tag_183\n        /* \"#utility.yul\":4711:4718   */\n      dup8\n        /* \"#utility.yul\":4702:4708   */\n      dup3\n        /* \"#utility.yul\":4691:4700   */\n      dup9\n        /* \"#utility.yul\":4687:4709   */\n      add\n        /* \"#utility.yul\":4666:4719   */\n      tag_137\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":4656:4719   */\n      swap5\n      pop\n        /* \"#utility.yul\":4612:4729   */\n      pop\n        /* \"#utility.yul\":4768:4770   */\n      0x20\n        /* \"#utility.yul\":4794:4847   */\n      tag_184\n        /* \"#utility.yul\":4839:4846   */\n      dup8\n        /* \"#utility.yul\":4830:4836   */\n      dup3\n        /* \"#utility.yul\":4819:4828   */\n      dup9\n        /* \"#utility.yul\":4815:4837   */\n      add\n        /* \"#utility.yul\":4794:4847   */\n      tag_137\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":4784:4847   */\n      swap4\n      pop\n        /* \"#utility.yul\":4739:4857   */\n      pop\n        /* \"#utility.yul\":4896:4898   */\n      0x40\n        /* \"#utility.yul\":4922:4975   */\n      tag_185\n        /* \"#utility.yul\":4967:4974   */\n      dup8\n        /* \"#utility.yul\":4958:4964   */\n      dup3\n        /* \"#utility.yul\":4947:4956   */\n      dup9\n        /* \"#utility.yul\":4943:4965   */\n      add\n        /* \"#utility.yul\":4922:4975   */\n      tag_126\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":4912:4975   */\n      swap3\n      pop\n        /* \"#utility.yul\":4867:4985   */\n      pop\n        /* \"#utility.yul\":5052:5054   */\n      0x60\n        /* \"#utility.yul\":5041:5050   */\n      dup6\n        /* \"#utility.yul\":5037:5055   */\n      add\n        /* \"#utility.yul\":5024:5056   */\n      calldataload\n        /* \"#utility.yul\":5083:5101   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5075:5081   */\n      dup2\n        /* \"#utility.yul\":5072:5102   */\n      gt\n        /* \"#utility.yul\":5069:5186   */\n      iszero\n      tag_186\n      jumpi\n        /* \"#utility.yul\":5105:5184   */\n      tag_187\n      tag_172\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":5069:5186   */\n    tag_186:\n        /* \"#utility.yul\":5210:5272   */\n      tag_188\n        /* \"#utility.yul\":5264:5271   */\n      dup8\n        /* \"#utility.yul\":5255:5261   */\n      dup3\n        /* \"#utility.yul\":5244:5253   */\n      dup9\n        /* \"#utility.yul\":5240:5262   */\n      add\n        /* \"#utility.yul\":5210:5272   */\n      tag_151\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":5200:5272   */\n      swap2\n      pop\n        /* \"#utility.yul\":4995:5282   */\n      pop\n        /* \"#utility.yul\":4346:5289   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5295:6384   */\n    tag_55:\n        /* \"#utility.yul\":5399:5405   */\n      0x00\n        /* \"#utility.yul\":5407:5413   */\n      dup1\n        /* \"#utility.yul\":5415:5421   */\n      0x00\n        /* \"#utility.yul\":5423:5429   */\n      dup1\n        /* \"#utility.yul\":5431:5437   */\n      0x00\n        /* \"#utility.yul\":5480:5483   */\n      0xa0\n        /* \"#utility.yul\":5468:5477   */\n      dup7\n        /* \"#utility.yul\":5459:5466   */\n      dup9\n        /* \"#utility.yul\":5455:5478   */\n      sub\n        /* \"#utility.yul\":5451:5484   */\n      slt\n        /* \"#utility.yul\":5448:5568   */\n      iszero\n      tag_190\n      jumpi\n        /* \"#utility.yul\":5487:5566   */\n      tag_191\n      tag_162\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":5448:5568   */\n    tag_190:\n        /* \"#utility.yul\":5607:5608   */\n      0x00\n        /* \"#utility.yul\":5632:5685   */\n      tag_192\n        /* \"#utility.yul\":5677:5684   */\n      dup9\n        /* \"#utility.yul\":5668:5674   */\n      dup3\n        /* \"#utility.yul\":5657:5666   */\n      dup10\n        /* \"#utility.yul\":5653:5675   */\n      add\n        /* \"#utility.yul\":5632:5685   */\n      tag_137\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":5622:5685   */\n      swap6\n      pop\n        /* \"#utility.yul\":5578:5695   */\n      pop\n        /* \"#utility.yul\":5734:5736   */\n      0x20\n        /* \"#utility.yul\":5760:5813   */\n      tag_193\n        /* \"#utility.yul\":5805:5812   */\n      dup9\n        /* \"#utility.yul\":5796:5802   */\n      dup3\n        /* \"#utility.yul\":5785:5794   */\n      dup10\n        /* \"#utility.yul\":5781:5803   */\n      add\n        /* \"#utility.yul\":5760:5813   */\n      tag_137\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":5750:5813   */\n      swap5\n      pop\n        /* \"#utility.yul\":5705:5823   */\n      pop\n        /* \"#utility.yul\":5862:5864   */\n      0x40\n        /* \"#utility.yul\":5888:5941   */\n      tag_194\n        /* \"#utility.yul\":5933:5940   */\n      dup9\n        /* \"#utility.yul\":5924:5930   */\n      dup3\n        /* \"#utility.yul\":5913:5922   */\n      dup10\n        /* \"#utility.yul\":5909:5931   */\n      add\n        /* \"#utility.yul\":5888:5941   */\n      tag_126\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":5878:5941   */\n      swap4\n      pop\n        /* \"#utility.yul\":5833:5951   */\n      pop\n        /* \"#utility.yul\":5990:5992   */\n      0x60\n        /* \"#utility.yul\":6016:6069   */\n      tag_195\n        /* \"#utility.yul\":6061:6068   */\n      dup9\n        /* \"#utility.yul\":6052:6058   */\n      dup3\n        /* \"#utility.yul\":6041:6050   */\n      dup10\n        /* \"#utility.yul\":6037:6059   */\n      add\n        /* \"#utility.yul\":6016:6069   */\n      tag_126\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":6006:6069   */\n      swap3\n      pop\n        /* \"#utility.yul\":5961:6079   */\n      pop\n        /* \"#utility.yul\":6146:6149   */\n      0x80\n        /* \"#utility.yul\":6135:6144   */\n      dup7\n        /* \"#utility.yul\":6131:6150   */\n      add\n        /* \"#utility.yul\":6118:6151   */\n      calldataload\n        /* \"#utility.yul\":6178:6196   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6170:6176   */\n      dup2\n        /* \"#utility.yul\":6167:6197   */\n      gt\n        /* \"#utility.yul\":6164:6281   */\n      iszero\n      tag_196\n      jumpi\n        /* \"#utility.yul\":6200:6279   */\n      tag_197\n      tag_172\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":6164:6281   */\n    tag_196:\n        /* \"#utility.yul\":6305:6367   */\n      tag_198\n        /* \"#utility.yul\":6359:6366   */\n      dup9\n        /* \"#utility.yul\":6350:6356   */\n      dup3\n        /* \"#utility.yul\":6339:6348   */\n      dup10\n        /* \"#utility.yul\":6335:6357   */\n      add\n        /* \"#utility.yul\":6305:6367   */\n      tag_151\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":6295:6367   */\n      swap2\n      pop\n        /* \"#utility.yul\":6089:6377   */\n      pop\n        /* \"#utility.yul\":5295:6384   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6390:6864   */\n    tag_34:\n        /* \"#utility.yul\":6458:6464   */\n      0x00\n        /* \"#utility.yul\":6466:6472   */\n      dup1\n        /* \"#utility.yul\":6515:6517   */\n      0x40\n        /* \"#utility.yul\":6503:6512   */\n      dup4\n        /* \"#utility.yul\":6494:6501   */\n      dup6\n        /* \"#utility.yul\":6490:6513   */\n      sub\n        /* \"#utility.yul\":6486:6518   */\n      slt\n        /* \"#utility.yul\":6483:6602   */\n      iszero\n      tag_200\n      jumpi\n        /* \"#utility.yul\":6521:6600   */\n      tag_201\n      tag_162\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":6483:6602   */\n    tag_200:\n        /* \"#utility.yul\":6641:6642   */\n      0x00\n        /* \"#utility.yul\":6666:6719   */\n      tag_202\n        /* \"#utility.yul\":6711:6718   */\n      dup6\n        /* \"#utility.yul\":6702:6708   */\n      dup3\n        /* \"#utility.yul\":6691:6700   */\n      dup7\n        /* \"#utility.yul\":6687:6709   */\n      add\n        /* \"#utility.yul\":6666:6719   */\n      tag_137\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":6656:6719   */\n      swap3\n      pop\n        /* \"#utility.yul\":6612:6729   */\n      pop\n        /* \"#utility.yul\":6768:6770   */\n      0x20\n        /* \"#utility.yul\":6794:6847   */\n      tag_203\n        /* \"#utility.yul\":6839:6846   */\n      dup6\n        /* \"#utility.yul\":6830:6836   */\n      dup3\n        /* \"#utility.yul\":6819:6828   */\n      dup7\n        /* \"#utility.yul\":6815:6837   */\n      add\n        /* \"#utility.yul\":6794:6847   */\n      tag_126\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":6784:6847   */\n      swap2\n      pop\n        /* \"#utility.yul\":6739:6857   */\n      pop\n        /* \"#utility.yul\":6390:6864   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6870:7197   */\n    tag_17:\n        /* \"#utility.yul\":6928:6934   */\n      0x00\n        /* \"#utility.yul\":6977:6979   */\n      0x20\n        /* \"#utility.yul\":6965:6974   */\n      dup3\n        /* \"#utility.yul\":6956:6963   */\n      dup5\n        /* \"#utility.yul\":6952:6975   */\n      sub\n        /* \"#utility.yul\":6948:6980   */\n      slt\n        /* \"#utility.yul\":6945:7064   */\n      iszero\n      tag_205\n      jumpi\n        /* \"#utility.yul\":6983:7062   */\n      tag_206\n      tag_162\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":6945:7064   */\n    tag_205:\n        /* \"#utility.yul\":7103:7104   */\n      0x00\n        /* \"#utility.yul\":7128:7180   */\n      tag_207\n        /* \"#utility.yul\":7172:7179   */\n      dup5\n        /* \"#utility.yul\":7163:7169   */\n      dup3\n        /* \"#utility.yul\":7152:7161   */\n      dup6\n        /* \"#utility.yul\":7148:7170   */\n      add\n        /* \"#utility.yul\":7128:7180   */\n      tag_147\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":7118:7180   */\n      swap2\n      pop\n        /* \"#utility.yul\":7074:7190   */\n      pop\n        /* \"#utility.yul\":6870:7197   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7203:7321   */\n    tag_208:\n        /* \"#utility.yul\":7290:7314   */\n      tag_210\n        /* \"#utility.yul\":7308:7313   */\n      dup2\n        /* \"#utility.yul\":7290:7314   */\n      tag_211\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":7285:7288   */\n      dup3\n        /* \"#utility.yul\":7278:7315   */\n      mstore\n        /* \"#utility.yul\":7203:7321   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7327:7436   */\n    tag_212:\n        /* \"#utility.yul\":7408:7429   */\n      tag_214\n        /* \"#utility.yul\":7423:7428   */\n      dup2\n        /* \"#utility.yul\":7408:7429   */\n      tag_215\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":7403:7406   */\n      dup3\n        /* \"#utility.yul\":7396:7430   */\n      mstore\n        /* \"#utility.yul\":7327:7436   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7442:7557   */\n    tag_216:\n        /* \"#utility.yul\":7527:7550   */\n      tag_218\n        /* \"#utility.yul\":7544:7549   */\n      dup2\n        /* \"#utility.yul\":7527:7550   */\n      tag_219\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":7522:7525   */\n      dup3\n        /* \"#utility.yul\":7515:7551   */\n      mstore\n        /* \"#utility.yul\":7442:7557   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7563:7929   */\n    tag_220:\n        /* \"#utility.yul\":7705:7708   */\n      0x00\n        /* \"#utility.yul\":7726:7793   */\n      tag_222\n        /* \"#utility.yul\":7790:7792   */\n      0x1e\n        /* \"#utility.yul\":7785:7788   */\n      dup4\n        /* \"#utility.yul\":7726:7793   */\n      tag_223\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":7719:7793   */\n      swap2\n      pop\n        /* \"#utility.yul\":7802:7895   */\n      tag_224\n        /* \"#utility.yul\":7891:7894   */\n      dup3\n        /* \"#utility.yul\":7802:7895   */\n      tag_225\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":7920:7922   */\n      0x20\n        /* \"#utility.yul\":7915:7918   */\n      dup3\n        /* \"#utility.yul\":7911:7923   */\n      add\n        /* \"#utility.yul\":7904:7923   */\n      swap1\n      pop\n        /* \"#utility.yul\":7563:7929   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7935:8301   */\n    tag_226:\n        /* \"#utility.yul\":8077:8080   */\n      0x00\n        /* \"#utility.yul\":8098:8165   */\n      tag_228\n        /* \"#utility.yul\":8162:8164   */\n      0x1e\n        /* \"#utility.yul\":8157:8160   */\n      dup4\n        /* \"#utility.yul\":8098:8165   */\n      tag_223\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":8091:8165   */\n      swap2\n      pop\n        /* \"#utility.yul\":8174:8267   */\n      tag_229\n        /* \"#utility.yul\":8263:8266   */\n      dup3\n        /* \"#utility.yul\":8174:8267   */\n      tag_230\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":8292:8294   */\n      0x20\n        /* \"#utility.yul\":8287:8290   */\n      dup3\n        /* \"#utility.yul\":8283:8295   */\n      add\n        /* \"#utility.yul\":8276:8295   */\n      swap1\n      pop\n        /* \"#utility.yul\":7935:8301   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8307:8673   */\n    tag_231:\n        /* \"#utility.yul\":8449:8452   */\n      0x00\n        /* \"#utility.yul\":8470:8537   */\n      tag_233\n        /* \"#utility.yul\":8534:8536   */\n      0x20\n        /* \"#utility.yul\":8529:8532   */\n      dup4\n        /* \"#utility.yul\":8470:8537   */\n      tag_223\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":8463:8537   */\n      swap2\n      pop\n        /* \"#utility.yul\":8546:8639   */\n      tag_234\n        /* \"#utility.yul\":8635:8638   */\n      dup3\n        /* \"#utility.yul\":8546:8639   */\n      tag_235\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":8664:8666   */\n      0x20\n        /* \"#utility.yul\":8659:8662   */\n      dup3\n        /* \"#utility.yul\":8655:8667   */\n      add\n        /* \"#utility.yul\":8648:8667   */\n      swap1\n      pop\n        /* \"#utility.yul\":8307:8673   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8679:9045   */\n    tag_236:\n        /* \"#utility.yul\":8821:8824   */\n      0x00\n        /* \"#utility.yul\":8842:8909   */\n      tag_238\n        /* \"#utility.yul\":8906:8908   */\n      0x1c\n        /* \"#utility.yul\":8901:8904   */\n      dup4\n        /* \"#utility.yul\":8842:8909   */\n      tag_223\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":8835:8909   */\n      swap2\n      pop\n        /* \"#utility.yul\":8918:9011   */\n      tag_239\n        /* \"#utility.yul\":9007:9010   */\n      dup3\n        /* \"#utility.yul\":8918:9011   */\n      tag_240\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":9036:9038   */\n      0x20\n        /* \"#utility.yul\":9031:9034   */\n      dup3\n        /* \"#utility.yul\":9027:9039   */\n      add\n        /* \"#utility.yul\":9020:9039   */\n      swap1\n      pop\n        /* \"#utility.yul\":8679:9045   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9051:9417   */\n    tag_241:\n        /* \"#utility.yul\":9193:9196   */\n      0x00\n        /* \"#utility.yul\":9214:9281   */\n      tag_243\n        /* \"#utility.yul\":9278:9280   */\n      0x2e\n        /* \"#utility.yul\":9273:9276   */\n      dup4\n        /* \"#utility.yul\":9214:9281   */\n      tag_223\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":9207:9281   */\n      swap2\n      pop\n        /* \"#utility.yul\":9290:9383   */\n      tag_244\n        /* \"#utility.yul\":9379:9382   */\n      dup3\n        /* \"#utility.yul\":9290:9383   */\n      tag_245\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":9408:9410   */\n      0x40\n        /* \"#utility.yul\":9403:9406   */\n      dup3\n        /* \"#utility.yul\":9399:9411   */\n      add\n        /* \"#utility.yul\":9392:9411   */\n      swap1\n      pop\n        /* \"#utility.yul\":9051:9417   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9423:9541   */\n    tag_246:\n        /* \"#utility.yul\":9510:9534   */\n      tag_248\n        /* \"#utility.yul\":9528:9533   */\n      dup2\n        /* \"#utility.yul\":9510:9534   */\n      tag_249\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":9505:9508   */\n      dup3\n        /* \"#utility.yul\":9498:9535   */\n      mstore\n        /* \"#utility.yul\":9423:9541   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9547:9769   */\n    tag_40:\n        /* \"#utility.yul\":9640:9644   */\n      0x00\n        /* \"#utility.yul\":9678:9680   */\n      0x20\n        /* \"#utility.yul\":9667:9676   */\n      dup3\n        /* \"#utility.yul\":9663:9681   */\n      add\n        /* \"#utility.yul\":9655:9681   */\n      swap1\n      pop\n        /* \"#utility.yul\":9691:9762   */\n      tag_251\n        /* \"#utility.yul\":9759:9760   */\n      0x00\n        /* \"#utility.yul\":9748:9757   */\n      dup4\n        /* \"#utility.yul\":9744:9761   */\n      add\n        /* \"#utility.yul\":9735:9741   */\n      dup5\n        /* \"#utility.yul\":9691:9762   */\n      tag_208\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":9547:9769   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9775:10217   */\n    tag_107:\n        /* \"#utility.yul\":9924:9928   */\n      0x00\n        /* \"#utility.yul\":9962:9964   */\n      0x60\n        /* \"#utility.yul\":9951:9960   */\n      dup3\n        /* \"#utility.yul\":9947:9965   */\n      add\n        /* \"#utility.yul\":9939:9965   */\n      swap1\n      pop\n        /* \"#utility.yul\":9975:10046   */\n      tag_253\n        /* \"#utility.yul\":10043:10044   */\n      0x00\n        /* \"#utility.yul\":10032:10041   */\n      dup4\n        /* \"#utility.yul\":10028:10045   */\n      add\n        /* \"#utility.yul\":10019:10025   */\n      dup7\n        /* \"#utility.yul\":9975:10046   */\n      tag_208\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":10056:10128   */\n      tag_254\n        /* \"#utility.yul\":10124:10126   */\n      0x20\n        /* \"#utility.yul\":10113:10122   */\n      dup4\n        /* \"#utility.yul\":10109:10127   */\n      add\n        /* \"#utility.yul\":10100:10106   */\n      dup6\n        /* \"#utility.yul\":10056:10128   */\n      tag_208\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":10138:10210   */\n      tag_255\n        /* \"#utility.yul\":10206:10208   */\n      0x40\n        /* \"#utility.yul\":10195:10204   */\n      dup4\n        /* \"#utility.yul\":10191:10209   */\n      add\n        /* \"#utility.yul\":10182:10188   */\n      dup5\n        /* \"#utility.yul\":10138:10210   */\n      tag_246\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":9775:10217   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10223:10433   */\n    tag_20:\n        /* \"#utility.yul\":10310:10314   */\n      0x00\n        /* \"#utility.yul\":10348:10350   */\n      0x20\n        /* \"#utility.yul\":10337:10346   */\n      dup3\n        /* \"#utility.yul\":10333:10351   */\n      add\n        /* \"#utility.yul\":10325:10351   */\n      swap1\n      pop\n        /* \"#utility.yul\":10361:10426   */\n      tag_257\n        /* \"#utility.yul\":10423:10424   */\n      0x00\n        /* \"#utility.yul\":10412:10421   */\n      dup4\n        /* \"#utility.yul\":10408:10425   */\n      add\n        /* \"#utility.yul\":10399:10405   */\n      dup5\n        /* \"#utility.yul\":10361:10426   */\n      tag_212\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":10223:10433   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10439:10657   */\n    tag_27:\n        /* \"#utility.yul\":10530:10534   */\n      0x00\n        /* \"#utility.yul\":10568:10570   */\n      0x20\n        /* \"#utility.yul\":10557:10566   */\n      dup3\n        /* \"#utility.yul\":10553:10571   */\n      add\n        /* \"#utility.yul\":10545:10571   */\n      swap1\n      pop\n        /* \"#utility.yul\":10581:10650   */\n      tag_259\n        /* \"#utility.yul\":10647:10648   */\n      0x00\n        /* \"#utility.yul\":10636:10645   */\n      dup4\n        /* \"#utility.yul\":10632:10649   */\n      add\n        /* \"#utility.yul\":10623:10629   */\n      dup5\n        /* \"#utility.yul\":10581:10650   */\n      tag_216\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":10439:10657   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10663:11082   */\n    tag_89:\n        /* \"#utility.yul\":10829:10833   */\n      0x00\n        /* \"#utility.yul\":10867:10869   */\n      0x20\n        /* \"#utility.yul\":10856:10865   */\n      dup3\n        /* \"#utility.yul\":10852:10870   */\n      add\n        /* \"#utility.yul\":10844:10870   */\n      swap1\n      pop\n        /* \"#utility.yul\":10916:10925   */\n      dup2\n        /* \"#utility.yul\":10910:10914   */\n      dup2\n        /* \"#utility.yul\":10906:10926   */\n      sub\n        /* \"#utility.yul\":10902:10903   */\n      0x00\n        /* \"#utility.yul\":10891:10900   */\n      dup4\n        /* \"#utility.yul\":10887:10904   */\n      add\n        /* \"#utility.yul\":10880:10927   */\n      mstore\n        /* \"#utility.yul\":10944:11075   */\n      tag_261\n        /* \"#utility.yul\":11070:11074   */\n      dup2\n        /* \"#utility.yul\":10944:11075   */\n      tag_220\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":10936:11075   */\n      swap1\n      pop\n        /* \"#utility.yul\":10663:11082   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11088:11507   */\n    tag_86:\n        /* \"#utility.yul\":11254:11258   */\n      0x00\n        /* \"#utility.yul\":11292:11294   */\n      0x20\n        /* \"#utility.yul\":11281:11290   */\n      dup3\n        /* \"#utility.yul\":11277:11295   */\n      add\n        /* \"#utility.yul\":11269:11295   */\n      swap1\n      pop\n        /* \"#utility.yul\":11341:11350   */\n      dup2\n        /* \"#utility.yul\":11335:11339   */\n      dup2\n        /* \"#utility.yul\":11331:11351   */\n      sub\n        /* \"#utility.yul\":11327:11328   */\n      0x00\n        /* \"#utility.yul\":11316:11325   */\n      dup4\n        /* \"#utility.yul\":11312:11329   */\n      add\n        /* \"#utility.yul\":11305:11352   */\n      mstore\n        /* \"#utility.yul\":11369:11500   */\n      tag_263\n        /* \"#utility.yul\":11495:11499   */\n      dup2\n        /* \"#utility.yul\":11369:11500   */\n      tag_226\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":11361:11500   */\n      swap1\n      pop\n        /* \"#utility.yul\":11088:11507   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11513:11932   */\n    tag_69:\n        /* \"#utility.yul\":11679:11683   */\n      0x00\n        /* \"#utility.yul\":11717:11719   */\n      0x20\n        /* \"#utility.yul\":11706:11715   */\n      dup3\n        /* \"#utility.yul\":11702:11720   */\n      add\n        /* \"#utility.yul\":11694:11720   */\n      swap1\n      pop\n        /* \"#utility.yul\":11766:11775   */\n      dup2\n        /* \"#utility.yul\":11760:11764   */\n      dup2\n        /* \"#utility.yul\":11756:11776   */\n      sub\n        /* \"#utility.yul\":11752:11753   */\n      0x00\n        /* \"#utility.yul\":11741:11750   */\n      dup4\n        /* \"#utility.yul\":11737:11754   */\n      add\n        /* \"#utility.yul\":11730:11777   */\n      mstore\n        /* \"#utility.yul\":11794:11925   */\n      tag_265\n        /* \"#utility.yul\":11920:11924   */\n      dup2\n        /* \"#utility.yul\":11794:11925   */\n      tag_231\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":11786:11925   */\n      swap1\n      pop\n        /* \"#utility.yul\":11513:11932   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11938:12357   */\n    tag_95:\n        /* \"#utility.yul\":12104:12108   */\n      0x00\n        /* \"#utility.yul\":12142:12144   */\n      0x20\n        /* \"#utility.yul\":12131:12140   */\n      dup3\n        /* \"#utility.yul\":12127:12145   */\n      add\n        /* \"#utility.yul\":12119:12145   */\n      swap1\n      pop\n        /* \"#utility.yul\":12191:12200   */\n      dup2\n        /* \"#utility.yul\":12185:12189   */\n      dup2\n        /* \"#utility.yul\":12181:12201   */\n      sub\n        /* \"#utility.yul\":12177:12178   */\n      0x00\n        /* \"#utility.yul\":12166:12175   */\n      dup4\n        /* \"#utility.yul\":12162:12179   */\n      add\n        /* \"#utility.yul\":12155:12202   */\n      mstore\n        /* \"#utility.yul\":12219:12350   */\n      tag_267\n        /* \"#utility.yul\":12345:12349   */\n      dup2\n        /* \"#utility.yul\":12219:12350   */\n      tag_236\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":12211:12350   */\n      swap1\n      pop\n        /* \"#utility.yul\":11938:12357   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12363:12782   */\n    tag_92:\n        /* \"#utility.yul\":12529:12533   */\n      0x00\n        /* \"#utility.yul\":12567:12569   */\n      0x20\n        /* \"#utility.yul\":12556:12565   */\n      dup3\n        /* \"#utility.yul\":12552:12570   */\n      add\n        /* \"#utility.yul\":12544:12570   */\n      swap1\n      pop\n        /* \"#utility.yul\":12616:12625   */\n      dup2\n        /* \"#utility.yul\":12610:12614   */\n      dup2\n        /* \"#utility.yul\":12606:12626   */\n      sub\n        /* \"#utility.yul\":12602:12603   */\n      0x00\n        /* \"#utility.yul\":12591:12600   */\n      dup4\n        /* \"#utility.yul\":12587:12604   */\n      add\n        /* \"#utility.yul\":12580:12627   */\n      mstore\n        /* \"#utility.yul\":12644:12775   */\n      tag_269\n        /* \"#utility.yul\":12770:12774   */\n      dup2\n        /* \"#utility.yul\":12644:12775   */\n      tag_241\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":12636:12775   */\n      swap1\n      pop\n        /* \"#utility.yul\":12363:12782   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12788:12917   */\n    tag_118:\n        /* \"#utility.yul\":12822:12828   */\n      0x00\n        /* \"#utility.yul\":12849:12869   */\n      tag_271\n      tag_272\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":12839:12869   */\n      swap1\n      pop\n        /* \"#utility.yul\":12878:12911   */\n      tag_273\n        /* \"#utility.yul\":12906:12910   */\n      dup3\n        /* \"#utility.yul\":12898:12904   */\n      dup3\n        /* \"#utility.yul\":12878:12911   */\n      tag_274\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":12788:12917   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12923:12998   */\n    tag_272:\n        /* \"#utility.yul\":12956:12962   */\n      0x00\n        /* \"#utility.yul\":12989:12991   */\n      0x40\n        /* \"#utility.yul\":12983:12992   */\n      mload\n        /* \"#utility.yul\":12973:12992   */\n      swap1\n      pop\n        /* \"#utility.yul\":12923:12998   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":13004:13315   */\n    tag_117:\n        /* \"#utility.yul\":13081:13085   */\n      0x00\n        /* \"#utility.yul\":13171:13189   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":13163:13169   */\n      dup3\n        /* \"#utility.yul\":13160:13190   */\n      gt\n        /* \"#utility.yul\":13157:13213   */\n      iszero\n      tag_277\n      jumpi\n        /* \"#utility.yul\":13193:13211   */\n      tag_278\n      tag_279\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":13157:13213   */\n    tag_277:\n        /* \"#utility.yul\":13243:13247   */\n      0x20\n        /* \"#utility.yul\":13235:13241   */\n      dup3\n        /* \"#utility.yul\":13231:13248   */\n      mul\n        /* \"#utility.yul\":13223:13248   */\n      swap1\n      pop\n        /* \"#utility.yul\":13303:13307   */\n      0x20\n        /* \"#utility.yul\":13297:13301   */\n      dup2\n        /* \"#utility.yul\":13293:13308   */\n      add\n        /* \"#utility.yul\":13285:13308   */\n      swap1\n      pop\n        /* \"#utility.yul\":13004:13315   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13321:13628   */\n    tag_131:\n        /* \"#utility.yul\":13382:13386   */\n      0x00\n        /* \"#utility.yul\":13472:13490   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":13464:13470   */\n      dup3\n        /* \"#utility.yul\":13461:13491   */\n      gt\n        /* \"#utility.yul\":13458:13514   */\n      iszero\n      tag_281\n      jumpi\n        /* \"#utility.yul\":13494:13512   */\n      tag_282\n      tag_279\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":13458:13514   */\n    tag_281:\n        /* \"#utility.yul\":13532:13561   */\n      tag_283\n        /* \"#utility.yul\":13554:13560   */\n      dup3\n        /* \"#utility.yul\":13532:13561   */\n      tag_284\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":13524:13561   */\n      swap1\n      pop\n        /* \"#utility.yul\":13616:13620   */\n      0x20\n        /* \"#utility.yul\":13610:13614   */\n      dup2\n        /* \"#utility.yul\":13606:13621   */\n      add\n        /* \"#utility.yul\":13598:13621   */\n      swap1\n      pop\n        /* \"#utility.yul\":13321:13628   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13634:13803   */\n    tag_223:\n        /* \"#utility.yul\":13718:13729   */\n      0x00\n        /* \"#utility.yul\":13752:13758   */\n      dup3\n        /* \"#utility.yul\":13747:13750   */\n      dup3\n        /* \"#utility.yul\":13740:13759   */\n      mstore\n        /* \"#utility.yul\":13792:13796   */\n      0x20\n        /* \"#utility.yul\":13787:13790   */\n      dup3\n        /* \"#utility.yul\":13783:13797   */\n      add\n        /* \"#utility.yul\":13768:13797   */\n      swap1\n      pop\n        /* \"#utility.yul\":13634:13803   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13809:13905   */\n    tag_211:\n        /* \"#utility.yul\":13846:13853   */\n      0x00\n        /* \"#utility.yul\":13875:13899   */\n      tag_287\n        /* \"#utility.yul\":13893:13898   */\n      dup3\n        /* \"#utility.yul\":13875:13899   */\n      tag_288\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":13864:13899   */\n      swap1\n      pop\n        /* \"#utility.yul\":13809:13905   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13911:14001   */\n    tag_215:\n        /* \"#utility.yul\":13945:13952   */\n      0x00\n        /* \"#utility.yul\":13988:13993   */\n      dup2\n        /* \"#utility.yul\":13981:13994   */\n      iszero\n        /* \"#utility.yul\":13974:13995   */\n      iszero\n        /* \"#utility.yul\":13963:13995   */\n      swap1\n      pop\n        /* \"#utility.yul\":13911:14001   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14007:14156   */\n    tag_219:\n        /* \"#utility.yul\":14043:14050   */\n      0x00\n        /* \"#utility.yul\":14083:14149   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14076:14081   */\n      dup3\n        /* \"#utility.yul\":14072:14150   */\n      and\n        /* \"#utility.yul\":14061:14150   */\n      swap1\n      pop\n        /* \"#utility.yul\":14007:14156   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14162:14288   */\n    tag_288:\n        /* \"#utility.yul\":14199:14206   */\n      0x00\n        /* \"#utility.yul\":14239:14281   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":14232:14237   */\n      dup3\n        /* \"#utility.yul\":14228:14282   */\n      and\n        /* \"#utility.yul\":14217:14282   */\n      swap1\n      pop\n        /* \"#utility.yul\":14162:14288   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14294:14371   */\n    tag_249:\n        /* \"#utility.yul\":14331:14338   */\n      0x00\n        /* \"#utility.yul\":14360:14365   */\n      dup2\n        /* \"#utility.yul\":14349:14365   */\n      swap1\n      pop\n        /* \"#utility.yul\":14294:14371   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14377:14531   */\n    tag_136:\n        /* \"#utility.yul\":14461:14467   */\n      dup3\n        /* \"#utility.yul\":14456:14459   */\n      dup2\n        /* \"#utility.yul\":14451:14454   */\n      dup4\n        /* \"#utility.yul\":14438:14468   */\n      calldatacopy\n        /* \"#utility.yul\":14523:14524   */\n      0x00\n        /* \"#utility.yul\":14514:14520   */\n      dup4\n        /* \"#utility.yul\":14509:14512   */\n      dup4\n        /* \"#utility.yul\":14505:14521   */\n      add\n        /* \"#utility.yul\":14498:14525   */\n      mstore\n        /* \"#utility.yul\":14377:14531   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14537:14818   */\n    tag_274:\n        /* \"#utility.yul\":14620:14647   */\n      tag_295\n        /* \"#utility.yul\":14642:14646   */\n      dup3\n        /* \"#utility.yul\":14620:14647   */\n      tag_284\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":14612:14618   */\n      dup2\n        /* \"#utility.yul\":14608:14648   */\n      add\n        /* \"#utility.yul\":14750:14756   */\n      dup2\n        /* \"#utility.yul\":14738:14748   */\n      dup2\n        /* \"#utility.yul\":14735:14757   */\n      lt\n        /* \"#utility.yul\":14714:14732   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":14702:14712   */\n      dup3\n        /* \"#utility.yul\":14699:14733   */\n      gt\n        /* \"#utility.yul\":14696:14758   */\n      or\n        /* \"#utility.yul\":14693:14781   */\n      iszero\n      tag_296\n      jumpi\n        /* \"#utility.yul\":14761:14779   */\n      tag_297\n      tag_279\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":14693:14781   */\n    tag_296:\n        /* \"#utility.yul\":14801:14811   */\n      dup1\n        /* \"#utility.yul\":14797:14799   */\n      0x40\n        /* \"#utility.yul\":14790:14812   */\n      mstore\n        /* \"#utility.yul\":14580:14818   */\n      pop\n        /* \"#utility.yul\":14537:14818   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14824:15004   */\n    tag_279:\n        /* \"#utility.yul\":14872:14949   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14869:14870   */\n      0x00\n        /* \"#utility.yul\":14862:14950   */\n      mstore\n        /* \"#utility.yul\":14969:14973   */\n      0x41\n        /* \"#utility.yul\":14966:14967   */\n      0x04\n        /* \"#utility.yul\":14959:14974   */\n      mstore\n        /* \"#utility.yul\":14993:14997   */\n      0x24\n        /* \"#utility.yul\":14990:14991   */\n      0x00\n        /* \"#utility.yul\":14983:14998   */\n      revert\n        /* \"#utility.yul\":15010:15127   */\n    tag_145:\n        /* \"#utility.yul\":15119:15120   */\n      0x00\n        /* \"#utility.yul\":15116:15117   */\n      dup1\n        /* \"#utility.yul\":15109:15121   */\n      revert\n        /* \"#utility.yul\":15133:15250   */\n    tag_121:\n        /* \"#utility.yul\":15242:15243   */\n      0x00\n        /* \"#utility.yul\":15239:15240   */\n      dup1\n        /* \"#utility.yul\":15232:15244   */\n      revert\n        /* \"#utility.yul\":15256:15373   */\n    tag_134:\n        /* \"#utility.yul\":15365:15366   */\n      0x00\n        /* \"#utility.yul\":15362:15363   */\n      dup1\n        /* \"#utility.yul\":15355:15367   */\n      revert\n        /* \"#utility.yul\":15379:15496   */\n    tag_172:\n        /* \"#utility.yul\":15488:15489   */\n      0x00\n        /* \"#utility.yul\":15485:15486   */\n      dup1\n        /* \"#utility.yul\":15478:15490   */\n      revert\n        /* \"#utility.yul\":15502:15619   */\n    tag_162:\n        /* \"#utility.yul\":15611:15612   */\n      0x00\n        /* \"#utility.yul\":15608:15609   */\n      dup1\n        /* \"#utility.yul\":15601:15613   */\n      revert\n        /* \"#utility.yul\":15625:15727   */\n    tag_284:\n        /* \"#utility.yul\":15666:15672   */\n      0x00\n        /* \"#utility.yul\":15717:15719   */\n      0x1f\n        /* \"#utility.yul\":15713:15720   */\n      not\n        /* \"#utility.yul\":15708:15710   */\n      0x1f\n        /* \"#utility.yul\":15701:15706   */\n      dup4\n        /* \"#utility.yul\":15697:15711   */\n      add\n        /* \"#utility.yul\":15693:15721   */\n      and\n        /* \"#utility.yul\":15683:15721   */\n      swap1\n      pop\n        /* \"#utility.yul\":15625:15727   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15733:15913   */\n    tag_225:\n        /* \"#utility.yul\":15873:15905   */\n      0x4261636b757020616464726573732063616e206e6f74206265207a65726f0000\n        /* \"#utility.yul\":15869:15870   */\n      0x00\n        /* \"#utility.yul\":15861:15867   */\n      dup3\n        /* \"#utility.yul\":15857:15871   */\n      add\n        /* \"#utility.yul\":15850:15906   */\n      mstore\n        /* \"#utility.yul\":15733:15913   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15919:16099   */\n    tag_230:\n        /* \"#utility.yul\":16059:16091   */\n      0x53656e64657220616464726573732063616e206e6f74206265207a65726f0000\n        /* \"#utility.yul\":16055:16056   */\n      0x00\n        /* \"#utility.yul\":16047:16053   */\n      dup3\n        /* \"#utility.yul\":16043:16057   */\n      add\n        /* \"#utility.yul\":16036:16092   */\n      mstore\n        /* \"#utility.yul\":15919:16099   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16105:16287   */\n    tag_235:\n        /* \"#utility.yul\":16245:16279   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":16241:16242   */\n      0x00\n        /* \"#utility.yul\":16233:16239   */\n      dup3\n        /* \"#utility.yul\":16229:16243   */\n      add\n        /* \"#utility.yul\":16222:16280   */\n      mstore\n        /* \"#utility.yul\":16105:16287   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16293:16471   */\n    tag_240:\n        /* \"#utility.yul\":16433:16463   */\n      0x436f6e747261637420616c726561647920696e697469616c697a656400000000\n        /* \"#utility.yul\":16429:16430   */\n      0x00\n        /* \"#utility.yul\":16421:16427   */\n      dup3\n        /* \"#utility.yul\":16417:16431   */\n      add\n        /* \"#utility.yul\":16410:16464   */\n      mstore\n        /* \"#utility.yul\":16293:16471   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16477:16710   */\n    tag_245:\n        /* \"#utility.yul\":16617:16651   */\n      0x4261636b75702077616c6c65742063616e206e6f742062652073616d65206173\n        /* \"#utility.yul\":16613:16614   */\n      0x00\n        /* \"#utility.yul\":16605:16611   */\n      dup3\n        /* \"#utility.yul\":16601:16615   */\n      add\n        /* \"#utility.yul\":16594:16652   */\n      mstore\n        /* \"#utility.yul\":16686:16702   */\n      0x2073656e6465722077616c6c6574000000000000000000000000000000000000\n        /* \"#utility.yul\":16681:16683   */\n      0x20\n        /* \"#utility.yul\":16673:16679   */\n      dup3\n        /* \"#utility.yul\":16669:16684   */\n      add\n        /* \"#utility.yul\":16662:16703   */\n      mstore\n        /* \"#utility.yul\":16477:16710   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16716:16838   */\n    tag_140:\n        /* \"#utility.yul\":16789:16813   */\n      tag_311\n        /* \"#utility.yul\":16807:16812   */\n      dup2\n        /* \"#utility.yul\":16789:16813   */\n      tag_211\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":16782:16787   */\n      dup2\n        /* \"#utility.yul\":16779:16814   */\n      eq\n        /* \"#utility.yul\":16769:16832   */\n      tag_312\n      jumpi\n        /* \"#utility.yul\":16828:16829   */\n      0x00\n        /* \"#utility.yul\":16825:16826   */\n      dup1\n        /* \"#utility.yul\":16818:16830   */\n      revert\n        /* \"#utility.yul\":16769:16832   */\n    tag_312:\n        /* \"#utility.yul\":16716:16838   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16844:16964   */\n    tag_150:\n        /* \"#utility.yul\":16916:16939   */\n      tag_314\n        /* \"#utility.yul\":16933:16938   */\n      dup2\n        /* \"#utility.yul\":16916:16939   */\n      tag_219\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":16909:16914   */\n      dup2\n        /* \"#utility.yul\":16906:16940   */\n      eq\n        /* \"#utility.yul\":16896:16958   */\n      tag_315\n      jumpi\n        /* \"#utility.yul\":16954:16955   */\n      0x00\n        /* \"#utility.yul\":16951:16952   */\n      dup1\n        /* \"#utility.yul\":16944:16956   */\n      revert\n        /* \"#utility.yul\":16896:16958   */\n    tag_315:\n        /* \"#utility.yul\":16844:16964   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16970:17092   */\n    tag_158:\n        /* \"#utility.yul\":17043:17067   */\n      tag_317\n        /* \"#utility.yul\":17061:17066   */\n      dup2\n        /* \"#utility.yul\":17043:17067   */\n      tag_249\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":17036:17041   */\n      dup2\n        /* \"#utility.yul\":17033:17068   */\n      eq\n        /* \"#utility.yul\":17023:17086   */\n      tag_318\n      jumpi\n        /* \"#utility.yul\":17082:17083   */\n      0x00\n        /* \"#utility.yul\":17079:17080   */\n      dup1\n        /* \"#utility.yul\":17072:17084   */\n      revert\n        /* \"#utility.yul\":17023:17086   */\n    tag_318:\n        /* \"#utility.yul\":16970:17092   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220f1d8b4b0284f12790094990bace63ab8c51b33f2fadcfd7d71ef9fc66b7b00d464736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1087": {
									"entryPoint": null,
									"id": 1087,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_1017": {
									"entryPoint": 50,
									"id": 1017,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_1130": {
									"entryPoint": 58,
									"id": 1130,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6111608061010d6000396000f3fe60806040526004361061007f5760003560e01c80638da5cb5b1161004e5780638da5cb5b14610145578063bc197c8114610170578063f09a4016146101ad578063f23a6e61146101d657610086565b806301ffc9a71461008b578063150b7a02146100c8578063450b2ad71461010557806371b4bc991461011c57610086565b3661008657005b600080fd5b34801561009757600080fd5b506100b260048036038101906100ad9190610c12565b610213565b6040516100bf9190610d7c565b60405180910390f35b3480156100d457600080fd5b506100ef60048036038101906100ea9190610ab8565b61028d565b6040516100fc9190610d97565b60405180910390f35b34801561011157600080fd5b5061011a6102a1565b005b34801561012857600080fd5b50610143600480360381019061013e9190610bd2565b61034a565b005b34801561015157600080fd5b5061015a6103f7565b6040516101679190610d2a565b60405180910390f35b34801561017c57600080fd5b50610197600480360381019061019291906109e9565b610420565b6040516101a49190610d97565b60405180910390f35b3480156101b957600080fd5b506101d460048036038101906101cf91906109a9565b610435565b005b3480156101e257600080fd5b506101fd60048036038101906101f89190610b3b565b610643565b60405161020a9190610d97565b60405180910390f35b60007f4e2312e0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610286575061028582610658565b5b9050919050565b600063150b7a0260e01b9050949350505050565b6102a96106c2565b73ffffffffffffffffffffffffffffffffffffffff166102c76103f7565b73ffffffffffffffffffffffffffffffffffffffff161461031d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161031490610df2565b60405180910390fd5b610348600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166106ca565b565b6103526106c2565b73ffffffffffffffffffffffffffffffffffffffff166103706103f7565b73ffffffffffffffffffffffffffffffffffffffff16146103c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103bd90610df2565b60405180910390fd5b6103f3600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168383610724565b5050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600063bc197c8160e01b905095945050505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156104a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049c90610dd2565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610515576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050c90610db2565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610584576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057b90610e32565b60405180910390fd5b60001515600060149054906101000a900460ff161515146105da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d190610e12565b60405180910390fd5b6105e382610798565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600060146101000a81548160ff0219169083151502179055505050565b600063f23a6e6160e01b905095945050505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600033905090565b60004790506000811115610720578173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505015801561071e573d6000803e3d6000fd5b505b5050565b8173ffffffffffffffffffffffffffffffffffffffff166342842e0e3085846040518463ffffffff1660e01b815260040161076193929190610d45565b600060405180830381600087803b15801561077b57600080fd5b505af115801561078f573d6000803e3d6000fd5b50505050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600061086f61086a84610e77565b610e52565b9050808382526020820190508285602086028201111561089257610891610fcd565b5b60005b858110156108c257816108a88882610994565b845260208401935060208301925050600181019050610895565b5050509392505050565b60006108df6108da84610ea3565b610e52565b9050828152602081018484840111156108fb576108fa610fd2565b5b610906848285610f59565b509392505050565b60008135905061091d816110e5565b92915050565b600082601f83011261093857610937610fc8565b5b813561094884826020860161085c565b91505092915050565b600081359050610960816110fc565b92915050565b600082601f83011261097b5761097a610fc8565b5b813561098b8482602086016108cc565b91505092915050565b6000813590506109a381611113565b92915050565b600080604083850312156109c0576109bf610fdc565b5b60006109ce8582860161090e565b92505060206109df8582860161090e565b9150509250929050565b600080600080600060a08688031215610a0557610a04610fdc565b5b6000610a138882890161090e565b9550506020610a248882890161090e565b945050604086013567ffffffffffffffff811115610a4557610a44610fd7565b5b610a5188828901610923565b935050606086013567ffffffffffffffff811115610a7257610a71610fd7565b5b610a7e88828901610923565b925050608086013567ffffffffffffffff811115610a9f57610a9e610fd7565b5b610aab88828901610966565b9150509295509295909350565b60008060008060808587031215610ad257610ad1610fdc565b5b6000610ae08782880161090e565b9450506020610af18782880161090e565b9350506040610b0287828801610994565b925050606085013567ffffffffffffffff811115610b2357610b22610fd7565b5b610b2f87828801610966565b91505092959194509250565b600080600080600060a08688031215610b5757610b56610fdc565b5b6000610b658882890161090e565b9550506020610b768882890161090e565b9450506040610b8788828901610994565b9350506060610b9888828901610994565b925050608086013567ffffffffffffffff811115610bb957610bb8610fd7565b5b610bc588828901610966565b9150509295509295909350565b60008060408385031215610be957610be8610fdc565b5b6000610bf78582860161090e565b9250506020610c0885828601610994565b9150509250929050565b600060208284031215610c2857610c27610fdc565b5b6000610c3684828501610951565b91505092915050565b610c4881610ee5565b82525050565b610c5781610ef7565b82525050565b610c6681610f03565b82525050565b6000610c79601e83610ed4565b9150610c8482610ff2565b602082019050919050565b6000610c9c601e83610ed4565b9150610ca78261101b565b602082019050919050565b6000610cbf602083610ed4565b9150610cca82611044565b602082019050919050565b6000610ce2601c83610ed4565b9150610ced8261106d565b602082019050919050565b6000610d05602e83610ed4565b9150610d1082611096565b604082019050919050565b610d2481610f4f565b82525050565b6000602082019050610d3f6000830184610c3f565b92915050565b6000606082019050610d5a6000830186610c3f565b610d676020830185610c3f565b610d746040830184610d1b565b949350505050565b6000602082019050610d916000830184610c4e565b92915050565b6000602082019050610dac6000830184610c5d565b92915050565b60006020820190508181036000830152610dcb81610c6c565b9050919050565b60006020820190508181036000830152610deb81610c8f565b9050919050565b60006020820190508181036000830152610e0b81610cb2565b9050919050565b60006020820190508181036000830152610e2b81610cd5565b9050919050565b60006020820190508181036000830152610e4b81610cf8565b9050919050565b6000610e5c610e6d565b9050610e688282610f68565b919050565b6000604051905090565b600067ffffffffffffffff821115610e9257610e91610f99565b5b602082029050602081019050919050565b600067ffffffffffffffff821115610ebe57610ebd610f99565b5b610ec782610fe1565b9050602081019050919050565b600082825260208201905092915050565b6000610ef082610f2f565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b610f7182610fe1565b810181811067ffffffffffffffff82111715610f9057610f8f610f99565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4261636b757020616464726573732063616e206e6f74206265207a65726f0000600082015250565b7f53656e64657220616464726573732063616e206e6f74206265207a65726f0000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f436f6e747261637420616c726561647920696e697469616c697a656400000000600082015250565b7f4261636b75702077616c6c65742063616e206e6f742062652073616d6520617360008201527f2073656e6465722077616c6c6574000000000000000000000000000000000000602082015250565b6110ee81610ee5565b81146110f957600080fd5b50565b61110581610f03565b811461111057600080fd5b50565b61111c81610f4f565b811461112757600080fd5b5056fea2646970667358221220f1d8b4b0284f12790094990bace63ab8c51b33f2fadcfd7d71ef9fc66b7b00d464736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D PUSH2 0x22 PUSH2 0x32 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x3A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0xFE JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1160 DUP1 PUSH2 0x10D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x4E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x145 JUMPI DUP1 PUSH4 0xBC197C81 EQ PUSH2 0x170 JUMPI DUP1 PUSH4 0xF09A4016 EQ PUSH2 0x1AD JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0x1D6 JUMPI PUSH2 0x86 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x8B JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0xC8 JUMPI DUP1 PUSH4 0x450B2AD7 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x71B4BC99 EQ PUSH2 0x11C JUMPI PUSH2 0x86 JUMP JUMPDEST CALLDATASIZE PUSH2 0x86 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAD SWAP2 SWAP1 PUSH2 0xC12 JUMP JUMPDEST PUSH2 0x213 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBF SWAP2 SWAP1 PUSH2 0xD7C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xEF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xEA SWAP2 SWAP1 PUSH2 0xAB8 JUMP JUMPDEST PUSH2 0x28D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFC SWAP2 SWAP1 PUSH2 0xD97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x111 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11A PUSH2 0x2A1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x128 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x143 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13E SWAP2 SWAP1 PUSH2 0xBD2 JUMP JUMPDEST PUSH2 0x34A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x151 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15A PUSH2 0x3F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x167 SWAP2 SWAP1 PUSH2 0xD2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x197 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x192 SWAP2 SWAP1 PUSH2 0x9E9 JUMP JUMPDEST PUSH2 0x420 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A4 SWAP2 SWAP1 PUSH2 0xD97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CF SWAP2 SWAP1 PUSH2 0x9A9 JUMP JUMPDEST PUSH2 0x435 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F8 SWAP2 SWAP1 PUSH2 0xB3B JUMP JUMPDEST PUSH2 0x643 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20A SWAP2 SWAP1 PUSH2 0xD97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x4E2312E000000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x286 JUMPI POP PUSH2 0x285 DUP3 PUSH2 0x658 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0x150B7A02 PUSH1 0xE0 SHL SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x2A9 PUSH2 0x6C2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2C7 PUSH2 0x3F7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x31D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x314 SWAP1 PUSH2 0xDF2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x348 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x6CA JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x352 PUSH2 0x6C2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x370 PUSH2 0x3F7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3C6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3BD SWAP1 PUSH2 0xDF2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3F3 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 DUP4 PUSH2 0x724 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x4A5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x49C SWAP1 PUSH2 0xDD2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x515 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50C SWAP1 PUSH2 0xDB2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x584 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x57B SWAP1 PUSH2 0xE32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x5DA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D1 SWAP1 PUSH2 0xE12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5E3 DUP3 PUSH2 0x798 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x720 JUMPI DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x71E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x42842E0E ADDRESS DUP6 DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x761 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD45 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x77B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x78F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x86F PUSH2 0x86A DUP5 PUSH2 0xE77 JUMP JUMPDEST PUSH2 0xE52 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x892 JUMPI PUSH2 0x891 PUSH2 0xFCD JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x8C2 JUMPI DUP2 PUSH2 0x8A8 DUP9 DUP3 PUSH2 0x994 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x895 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8DF PUSH2 0x8DA DUP5 PUSH2 0xEA3 JUMP JUMPDEST PUSH2 0xE52 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x8FB JUMPI PUSH2 0x8FA PUSH2 0xFD2 JUMP JUMPDEST JUMPDEST PUSH2 0x906 DUP5 DUP3 DUP6 PUSH2 0xF59 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x91D DUP2 PUSH2 0x10E5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x938 JUMPI PUSH2 0x937 PUSH2 0xFC8 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x948 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x85C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x960 DUP2 PUSH2 0x10FC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x97B JUMPI PUSH2 0x97A PUSH2 0xFC8 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x98B DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x8CC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x9A3 DUP2 PUSH2 0x1113 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x9C0 JUMPI PUSH2 0x9BF PUSH2 0xFDC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x9CE DUP6 DUP3 DUP7 ADD PUSH2 0x90E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x9DF DUP6 DUP3 DUP7 ADD PUSH2 0x90E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xA05 JUMPI PUSH2 0xA04 PUSH2 0xFDC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xA13 DUP9 DUP3 DUP10 ADD PUSH2 0x90E JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0xA24 DUP9 DUP3 DUP10 ADD PUSH2 0x90E JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA45 JUMPI PUSH2 0xA44 PUSH2 0xFD7 JUMP JUMPDEST JUMPDEST PUSH2 0xA51 DUP9 DUP3 DUP10 ADD PUSH2 0x923 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA72 JUMPI PUSH2 0xA71 PUSH2 0xFD7 JUMP JUMPDEST JUMPDEST PUSH2 0xA7E DUP9 DUP3 DUP10 ADD PUSH2 0x923 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA9F JUMPI PUSH2 0xA9E PUSH2 0xFD7 JUMP JUMPDEST JUMPDEST PUSH2 0xAAB DUP9 DUP3 DUP10 ADD PUSH2 0x966 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xAD2 JUMPI PUSH2 0xAD1 PUSH2 0xFDC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xAE0 DUP8 DUP3 DUP9 ADD PUSH2 0x90E JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0xAF1 DUP8 DUP3 DUP9 ADD PUSH2 0x90E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0xB02 DUP8 DUP3 DUP9 ADD PUSH2 0x994 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB23 JUMPI PUSH2 0xB22 PUSH2 0xFD7 JUMP JUMPDEST JUMPDEST PUSH2 0xB2F DUP8 DUP3 DUP9 ADD PUSH2 0x966 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xB57 JUMPI PUSH2 0xB56 PUSH2 0xFDC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB65 DUP9 DUP3 DUP10 ADD PUSH2 0x90E JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0xB76 DUP9 DUP3 DUP10 ADD PUSH2 0x90E JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0xB87 DUP9 DUP3 DUP10 ADD PUSH2 0x994 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0xB98 DUP9 DUP3 DUP10 ADD PUSH2 0x994 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xBB9 JUMPI PUSH2 0xBB8 PUSH2 0xFD7 JUMP JUMPDEST JUMPDEST PUSH2 0xBC5 DUP9 DUP3 DUP10 ADD PUSH2 0x966 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBE9 JUMPI PUSH2 0xBE8 PUSH2 0xFDC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBF7 DUP6 DUP3 DUP7 ADD PUSH2 0x90E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xC08 DUP6 DUP3 DUP7 ADD PUSH2 0x994 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC28 JUMPI PUSH2 0xC27 PUSH2 0xFDC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC36 DUP5 DUP3 DUP6 ADD PUSH2 0x951 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC48 DUP2 PUSH2 0xEE5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xC57 DUP2 PUSH2 0xEF7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xC66 DUP2 PUSH2 0xF03 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC79 PUSH1 0x1E DUP4 PUSH2 0xED4 JUMP JUMPDEST SWAP2 POP PUSH2 0xC84 DUP3 PUSH2 0xFF2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC9C PUSH1 0x1E DUP4 PUSH2 0xED4 JUMP JUMPDEST SWAP2 POP PUSH2 0xCA7 DUP3 PUSH2 0x101B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCBF PUSH1 0x20 DUP4 PUSH2 0xED4 JUMP JUMPDEST SWAP2 POP PUSH2 0xCCA DUP3 PUSH2 0x1044 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCE2 PUSH1 0x1C DUP4 PUSH2 0xED4 JUMP JUMPDEST SWAP2 POP PUSH2 0xCED DUP3 PUSH2 0x106D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD05 PUSH1 0x2E DUP4 PUSH2 0xED4 JUMP JUMPDEST SWAP2 POP PUSH2 0xD10 DUP3 PUSH2 0x1096 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD24 DUP2 PUSH2 0xF4F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD3F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC3F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xD5A PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xC3F JUMP JUMPDEST PUSH2 0xD67 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xC3F JUMP JUMPDEST PUSH2 0xD74 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xD1B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD91 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC4E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDAC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC5D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xDCB DUP2 PUSH2 0xC6C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xDEB DUP2 PUSH2 0xC8F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE0B DUP2 PUSH2 0xCB2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE2B DUP2 PUSH2 0xCD5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE4B DUP2 PUSH2 0xCF8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE5C PUSH2 0xE6D JUMP JUMPDEST SWAP1 POP PUSH2 0xE68 DUP3 DUP3 PUSH2 0xF68 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xE92 JUMPI PUSH2 0xE91 PUSH2 0xF99 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xEBE JUMPI PUSH2 0xEBD PUSH2 0xF99 JUMP JUMPDEST JUMPDEST PUSH2 0xEC7 DUP3 PUSH2 0xFE1 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEF0 DUP3 PUSH2 0xF2F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH2 0xF71 DUP3 PUSH2 0xFE1 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xF90 JUMPI PUSH2 0xF8F PUSH2 0xF99 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4261636B757020616464726573732063616E206E6F74206265207A65726F0000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x53656E64657220616464726573732063616E206E6F74206265207A65726F0000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x436F6E747261637420616C726561647920696E697469616C697A656400000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4261636B75702077616C6C65742063616E206E6F742062652073616D65206173 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x2073656E6465722077616C6C6574000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x10EE DUP2 PUSH2 0xEE5 JUMP JUMPDEST DUP2 EQ PUSH2 0x10F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1105 DUP2 PUSH2 0xF03 JUMP JUMPDEST DUP2 EQ PUSH2 0x1110 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x111C DUP2 PUSH2 0xF4F JUMP JUMPDEST DUP2 EQ PUSH2 0x1127 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALL 0xD8 0xB4 0xB0 0x28 0x4F SLT PUSH26 0x94990BACE63AB8C51B33F2FADCFD7D71EF9FC66B7B00D46473 PUSH16 0x6C634300080700330000000000000000 ",
							"sourceMap": "467:5395:14:-:0;;;;;;;;;;;;;818:32:13;837:12;:10;;;:12;;:::i;:::-;818:18;;;:32;;:::i;:::-;467:5395:14;;640:96:10;693:7;719:10;712:17;;640:96;:::o;1377:187:13:-;1450:16;1469:6;;;;;;;;;;;1450:25;;1494:8;1485:6;;:17;;;;;;;;;;;;;;;;;;1548:8;1517:40;;1538:8;1517:40;;;;;;;;;;;;1440:124;1377:187;:::o;467:5395:14:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_1212": {
									"entryPoint": null,
									"id": 1212,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_1017": {
									"entryPoint": 1730,
									"id": 1017,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferERC721FundsToAddress_1234": {
									"entryPoint": 1828,
									"id": 1234,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferNativeFundsToAddress_1288": {
									"entryPoint": 1738,
									"id": 1288,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_1130": {
									"entryPoint": 1944,
									"id": 1130,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@init_1208": {
									"entryPoint": 1077,
									"id": 1208,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@onERC1155BatchReceived_212": {
									"entryPoint": 1056,
									"id": 212,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"@onERC1155Received_189": {
									"entryPoint": 1603,
									"id": 189,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"@onERC721Received_709": {
									"entryPoint": 653,
									"id": 709,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@owner_1096": {
									"entryPoint": 1015,
									"id": 1096,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@sendERC721FundsToBackupWallet_1250": {
									"entryPoint": 842,
									"id": 1250,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@sendNativeFundsToBackupWallet_1263": {
									"entryPoint": 673,
									"id": 1263,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@supportsInterface_1050": {
									"entryPoint": 1624,
									"id": 1050,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_246": {
									"entryPoint": 531,
									"id": 246,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 2140,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 2252,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 2318,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 2339,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 2385,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 2406,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 2452,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 2473,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr": {
									"entryPoint": 2537,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 2744,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr": {
									"entryPoint": 2875,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3026,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 3090,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3135,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 3150,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes4_to_t_bytes4_fromStack": {
									"entryPoint": 3165,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_147837e924905a3bd7649319b6fc22646b0c017a57dd5a6eac862da5a06f6816_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3180,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_2bdef3017b3ab8e90fcdd0203656ef49f1cf91890714ed98466b7f0b7c411dbc_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3215,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3250,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_99a5106e083f54e153095639f5c53baa0d355c3b1a37f6c84924da3b1b45cf57_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3285,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ae81ee44af9e399b79dc430c2aa49760868f55e17e70be2d4b0876841d2be5a2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3320,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3355,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3370,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 3397,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 3452,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
									"entryPoint": 3479,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_147837e924905a3bd7649319b6fc22646b0c017a57dd5a6eac862da5a06f6816__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3506,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2bdef3017b3ab8e90fcdd0203656ef49f1cf91890714ed98466b7f0b7c411dbc__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3538,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3570,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_99a5106e083f54e153095639f5c53baa0d355c3b1a37f6c84924da3b1b45cf57__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3602,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ae81ee44af9e399b79dc430c2aa49760868f55e17e70be2d4b0876841d2be5a2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3634,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 3666,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 3693,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 3703,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 3747,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3796,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3813,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3831,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 3843,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3887,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3919,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory": {
									"entryPoint": 3929,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"finalize_allocation": {
									"entryPoint": 3944,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 3993,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 4040,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 4045,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 4050,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 4055,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4060,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 4065,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_147837e924905a3bd7649319b6fc22646b0c017a57dd5a6eac862da5a06f6816": {
									"entryPoint": 4082,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_2bdef3017b3ab8e90fcdd0203656ef49f1cf91890714ed98466b7f0b7c411dbc": {
									"entryPoint": 4123,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 4164,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_99a5106e083f54e153095639f5c53baa0d355c3b1a37f6c84924da3b1b45cf57": {
									"entryPoint": 4205,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ae81ee44af9e399b79dc430c2aa49760868f55e17e70be2d4b0876841d2be5a2": {
									"entryPoint": 4246,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 4325,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 4348,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4371,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:17095:15",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "126:620:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "136:90:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "218:6:15"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "161:56:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "161:64:15"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "145:15:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "145:81:15"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "136:5:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "235:16:15",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "246:5:15"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "239:3:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "268:5:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "275:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "261:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "261:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "261:21:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "291:23:15",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "302:5:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "309:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "298:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "298:16:15"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "291:3:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "324:17:15",
															"value": {
																"name": "offset",
																"nodeType": "YulIdentifier",
																"src": "335:6:15"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "328:3:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "390:103:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "404:77:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "404:79:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "404:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "360:3:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "369:6:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "377:4:15",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "365:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "365:17:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "356:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "356:27:15"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "385:3:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "353:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "353:36:15"
															},
															"nodeType": "YulIf",
															"src": "350:143:15"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "562:178:15",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "577:21:15",
																		"value": {
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "595:3:15"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "581:10:15",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "619:3:15"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "645:10:15"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "657:3:15"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_uint256",
																						"nodeType": "YulIdentifier",
																						"src": "624:20:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "624:37:15"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "612:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "612:50:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "612:50:15"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "675:21:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "686:3:15"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "691:4:15",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "682:3:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "682:14:15"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "675:3:15"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "709:21:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "720:3:15"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "725:4:15",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "716:3:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "716:14:15"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "709:3:15"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "524:1:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "527:6:15"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "521:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "521:13:15"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "535:18:15",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "537:14:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "546:1:15"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "549:1:15",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "542:3:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "542:9:15"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "537:1:15"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "506:14:15",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "508:10:15",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "517:1:15",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "512:1:15",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "502:238:15"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "96:6:15",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "104:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "112:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "120:5:15",
														"type": ""
													}
												],
												"src": "24:722:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "835:327:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "845:74:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "911:6:15"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "870:40:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "870:48:15"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "854:15:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "854:65:15"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "845:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "935:5:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "942:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "928:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "928:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "928:21:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "958:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "973:5:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "980:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "969:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "969:16:15"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "962:3:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1023:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "1025:77:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1025:79:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1025:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "1004:3:15"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1009:6:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1000:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1000:16:15"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1018:3:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "997:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "997:25:15"
															},
															"nodeType": "YulIf",
															"src": "994:112:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "1139:3:15"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "1144:3:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1149:6:15"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1115:23:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1115:41:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1115:41:15"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "808:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "813:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "821:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "829:5:15",
														"type": ""
													}
												],
												"src": "752:410:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1220:87:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1230:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1252:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1239:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1239:20:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1230:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1295:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1268:26:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1268:33:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1268:33:15"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1198:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1206:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1214:5:15",
														"type": ""
													}
												],
												"src": "1168:139:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1407:293:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1456:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "1458:77:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1458:79:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1458:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1435:6:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1443:4:15",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1431:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1431:17:15"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "1450:3:15"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1427:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1427:27:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1420:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1420:35:15"
															},
															"nodeType": "YulIf",
															"src": "1417:122:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1548:34:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1575:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1562:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1562:20:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1552:6:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1591:103:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1667:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1675:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1663:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1663:17:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1682:6:15"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1690:3:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "1600:62:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1600:94:15"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1591:5:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1385:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1393:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1401:5:15",
														"type": ""
													}
												],
												"src": "1330:370:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1757:86:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1767:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1789:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1776:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1776:20:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1767:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1831:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "1805:25:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1805:32:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1805:32:15"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1735:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1743:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1751:5:15",
														"type": ""
													}
												],
												"src": "1706:137:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1923:277:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1972:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "1974:77:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1974:79:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1974:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1951:6:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1959:4:15",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1947:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1947:17:15"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "1966:3:15"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1943:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1943:27:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1936:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1936:35:15"
															},
															"nodeType": "YulIf",
															"src": "1933:122:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2064:34:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2091:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2078:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2078:20:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2068:6:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2107:87:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2167:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2175:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2163:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2163:17:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2182:6:15"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2190:3:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2116:46:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2116:78:15"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2107:5:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1901:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1909:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1917:5:15",
														"type": ""
													}
												],
												"src": "1862:338:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2258:87:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2268:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2290:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2277:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2277:20:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2268:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2333:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2306:26:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2306:33:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2306:33:15"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2236:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2244:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2252:5:15",
														"type": ""
													}
												],
												"src": "2206:139:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2434:391:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2480:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2482:77:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2482:79:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2482:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2455:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2464:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2451:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2451:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2476:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2447:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2447:32:15"
															},
															"nodeType": "YulIf",
															"src": "2444:119:15"
														},
														{
															"nodeType": "YulBlock",
															"src": "2573:117:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2588:15:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2602:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2592:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2617:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2652:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2663:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2648:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2648:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2672:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2627:20:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2627:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2617:6:15"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2700:118:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2715:16:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2729:2:15",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2719:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2745:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2780:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2791:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2776:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2776:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2800:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2755:20:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2755:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2745:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2396:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2407:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2419:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2427:6:15",
														"type": ""
													}
												],
												"src": "2351:474:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3024:1316:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3071:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3073:77:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3073:79:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3073:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3045:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3054:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3041:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3041:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3066:3:15",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3037:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3037:33:15"
															},
															"nodeType": "YulIf",
															"src": "3034:120:15"
														},
														{
															"nodeType": "YulBlock",
															"src": "3164:117:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3179:15:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3193:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3183:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3208:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3243:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3254:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3239:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3239:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3263:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3218:20:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3218:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3208:6:15"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3291:118:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3306:16:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3320:2:15",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3310:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3336:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3371:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3382:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3367:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3367:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3391:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3346:20:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3346:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3336:6:15"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3419:303:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3434:46:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3465:9:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3476:2:15",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3461:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3461:18:15"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "3448:12:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3448:32:15"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3438:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3527:83:15",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3529:77:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3529:79:15"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3529:79:15"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3499:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3507:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3496:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3496:30:15"
																	},
																	"nodeType": "YulIf",
																	"src": "3493:117:15"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3624:88:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3684:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3695:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3680:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3680:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3704:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "3634:45:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3634:78:15"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "3624:6:15"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3732:303:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3747:46:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3778:9:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3789:2:15",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3774:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3774:18:15"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "3761:12:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3761:32:15"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3751:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3840:83:15",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3842:77:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3842:79:15"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3842:79:15"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3812:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3820:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3809:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3809:30:15"
																	},
																	"nodeType": "YulIf",
																	"src": "3806:117:15"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3937:88:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3997:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4008:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3993:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3993:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4017:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "3947:45:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3947:78:15"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "3937:6:15"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4045:288:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4060:47:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4091:9:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4102:3:15",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4087:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4087:19:15"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "4074:12:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4074:33:15"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4064:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "4154:83:15",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "4156:77:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4156:79:15"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4156:79:15"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4126:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4134:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4123:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4123:30:15"
																	},
																	"nodeType": "YulIf",
																	"src": "4120:117:15"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4251:72:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4295:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4306:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4291:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4291:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4315:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "4261:29:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4261:62:15"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "4251:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2962:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2973:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2985:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2993:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3001:6:15",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3009:6:15",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "3017:6:15",
														"type": ""
													}
												],
												"src": "2831:1509:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4472:817:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4519:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4521:77:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4521:79:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4521:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4493:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4502:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4489:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4489:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4514:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4485:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4485:33:15"
															},
															"nodeType": "YulIf",
															"src": "4482:120:15"
														},
														{
															"nodeType": "YulBlock",
															"src": "4612:117:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4627:15:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4641:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4631:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4656:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4691:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4702:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4687:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4687:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4711:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4666:20:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4666:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4656:6:15"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4739:118:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4754:16:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4768:2:15",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4758:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4784:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4819:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4830:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4815:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4815:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4839:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4794:20:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4794:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4784:6:15"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4867:118:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4882:16:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4896:2:15",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4886:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4912:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4947:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4958:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4943:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4943:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4967:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4922:20:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4922:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "4912:6:15"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4995:287:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5010:46:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5041:9:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5052:2:15",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5037:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5037:18:15"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "5024:12:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5024:32:15"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5014:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "5103:83:15",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "5105:77:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5105:79:15"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "5105:79:15"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5075:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5083:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5072:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5072:30:15"
																	},
																	"nodeType": "YulIf",
																	"src": "5069:117:15"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5200:72:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5244:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5255:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5240:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5240:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5264:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "5210:29:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5210:62:15"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "5200:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4418:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4429:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4441:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4449:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4457:6:15",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "4465:6:15",
														"type": ""
													}
												],
												"src": "4346:943:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5438:946:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5485:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5487:77:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5487:79:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5487:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5459:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5468:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5455:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5455:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5480:3:15",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5451:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5451:33:15"
															},
															"nodeType": "YulIf",
															"src": "5448:120:15"
														},
														{
															"nodeType": "YulBlock",
															"src": "5578:117:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5593:15:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5607:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5597:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5622:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5657:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5668:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5653:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5653:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5677:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5632:20:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5632:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5622:6:15"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5705:118:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5720:16:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5734:2:15",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5724:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5750:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5785:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5796:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5781:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5781:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5805:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5760:20:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5760:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "5750:6:15"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5833:118:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5848:16:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5862:2:15",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5852:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5878:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5913:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5924:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5909:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5909:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5933:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5888:20:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5888:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "5878:6:15"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5961:118:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5976:16:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5990:2:15",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5980:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6006:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6041:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6052:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6037:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6037:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6061:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "6016:20:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6016:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "6006:6:15"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6089:288:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6104:47:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6135:9:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6146:3:15",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6131:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6131:19:15"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "6118:12:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6118:33:15"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6108:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "6198:83:15",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "6200:77:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6200:79:15"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "6200:79:15"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "6170:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6178:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "6167:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6167:30:15"
																	},
																	"nodeType": "YulIf",
																	"src": "6164:117:15"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6295:72:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6339:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6350:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6335:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6335:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6359:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "6305:29:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6305:62:15"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "6295:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5376:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5387:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5399:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5407:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5415:6:15",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "5423:6:15",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "5431:6:15",
														"type": ""
													}
												],
												"src": "5295:1089:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6473:391:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6519:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6521:77:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6521:79:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6521:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6494:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6503:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6490:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6490:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6515:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6486:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6486:32:15"
															},
															"nodeType": "YulIf",
															"src": "6483:119:15"
														},
														{
															"nodeType": "YulBlock",
															"src": "6612:117:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6627:15:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6641:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6631:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6656:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6691:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6702:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6687:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6687:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6711:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6666:20:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6666:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6656:6:15"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6739:118:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6754:16:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6768:2:15",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6758:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6784:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6819:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6830:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6815:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6815:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6839:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "6794:20:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6794:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "6784:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6435:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6446:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6458:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6466:6:15",
														"type": ""
													}
												],
												"src": "6390:474:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6935:262:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6981:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6983:77:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6983:79:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6983:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6956:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6965:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6952:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6952:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6977:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6948:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6948:32:15"
															},
															"nodeType": "YulIf",
															"src": "6945:119:15"
														},
														{
															"nodeType": "YulBlock",
															"src": "7074:116:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7089:15:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7103:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7093:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7118:62:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7152:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7163:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7148:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7148:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7172:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "7128:19:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7128:52:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "7118:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6905:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6916:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6928:6:15",
														"type": ""
													}
												],
												"src": "6870:327:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7268:53:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7285:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7308:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "7290:17:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7290:24:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7278:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7278:37:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7278:37:15"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7256:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7263:3:15",
														"type": ""
													}
												],
												"src": "7203:118:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7386:50:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7403:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7423:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "7408:14:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7408:21:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7396:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7396:34:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7396:34:15"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7374:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7381:3:15",
														"type": ""
													}
												],
												"src": "7327:109:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7505:52:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7522:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7544:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "7527:16:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7527:23:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7515:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7515:36:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7515:36:15"
														}
													]
												},
												"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7493:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7500:3:15",
														"type": ""
													}
												],
												"src": "7442:115:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7709:220:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7719:74:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7785:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7790:2:15",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7726:58:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7726:67:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7719:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7891:3:15"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_147837e924905a3bd7649319b6fc22646b0c017a57dd5a6eac862da5a06f6816",
																	"nodeType": "YulIdentifier",
																	"src": "7802:88:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7802:93:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7802:93:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7904:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7915:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7920:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7911:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7911:12:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7904:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_147837e924905a3bd7649319b6fc22646b0c017a57dd5a6eac862da5a06f6816_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7697:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7705:3:15",
														"type": ""
													}
												],
												"src": "7563:366:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8081:220:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8091:74:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8157:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8162:2:15",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8098:58:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8098:67:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8091:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8263:3:15"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_2bdef3017b3ab8e90fcdd0203656ef49f1cf91890714ed98466b7f0b7c411dbc",
																	"nodeType": "YulIdentifier",
																	"src": "8174:88:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8174:93:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8174:93:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8276:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8287:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8292:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8283:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8283:12:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8276:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_2bdef3017b3ab8e90fcdd0203656ef49f1cf91890714ed98466b7f0b7c411dbc_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8069:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8077:3:15",
														"type": ""
													}
												],
												"src": "7935:366:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8453:220:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8463:74:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8529:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8534:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8470:58:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8470:67:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8463:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8635:3:15"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "8546:88:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8546:93:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8546:93:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8648:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8659:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8664:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8655:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8655:12:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8648:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8441:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8449:3:15",
														"type": ""
													}
												],
												"src": "8307:366:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8825:220:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8835:74:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8901:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8906:2:15",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8842:58:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8842:67:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8835:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9007:3:15"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_99a5106e083f54e153095639f5c53baa0d355c3b1a37f6c84924da3b1b45cf57",
																	"nodeType": "YulIdentifier",
																	"src": "8918:88:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8918:93:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8918:93:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9020:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9031:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9036:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9027:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9027:12:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9020:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_99a5106e083f54e153095639f5c53baa0d355c3b1a37f6c84924da3b1b45cf57_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8813:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8821:3:15",
														"type": ""
													}
												],
												"src": "8679:366:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9197:220:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9207:74:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9273:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9278:2:15",
																		"type": "",
																		"value": "46"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9214:58:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9214:67:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9207:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9379:3:15"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ae81ee44af9e399b79dc430c2aa49760868f55e17e70be2d4b0876841d2be5a2",
																	"nodeType": "YulIdentifier",
																	"src": "9290:88:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9290:93:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9290:93:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9392:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9403:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9408:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9399:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9399:12:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9392:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ae81ee44af9e399b79dc430c2aa49760868f55e17e70be2d4b0876841d2be5a2_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9185:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9193:3:15",
														"type": ""
													}
												],
												"src": "9051:366:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9488:53:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9505:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9528:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "9510:17:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9510:24:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9498:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9498:37:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9498:37:15"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9476:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9483:3:15",
														"type": ""
													}
												],
												"src": "9423:118:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9645:124:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9655:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9667:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9678:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9663:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9663:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9655:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9735:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9748:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9759:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9744:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9744:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9691:43:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9691:71:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9691:71:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9617:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9629:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9640:4:15",
														"type": ""
													}
												],
												"src": "9547:222:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9929:288:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9939:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9951:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9962:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9947:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9947:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9939:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10019:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10032:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10043:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10028:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10028:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9975:43:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9975:71:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9975:71:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "10100:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10113:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10124:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10109:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10109:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10056:43:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10056:72:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10056:72:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "10182:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10195:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10206:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10191:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10191:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10138:43:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10138:72:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10138:72:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9885:9:15",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "9897:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9905:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9913:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9924:4:15",
														"type": ""
													}
												],
												"src": "9775:442:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10315:118:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10325:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10337:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10348:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10333:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10333:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10325:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10399:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10412:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10423:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10408:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10408:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10361:37:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10361:65:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10361:65:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10287:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10299:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10310:4:15",
														"type": ""
													}
												],
												"src": "10223:210:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10535:122:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10545:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10557:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10568:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10553:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10553:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10545:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10623:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10636:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10647:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10632:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10632:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10581:41:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10581:69:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10581:69:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10507:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10519:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10530:4:15",
														"type": ""
													}
												],
												"src": "10439:218:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10834:248:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10844:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10856:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10867:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10852:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10852:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10844:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10891:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10902:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10887:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10887:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10910:4:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10916:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10906:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10906:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10880:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10880:47:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10880:47:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10936:139:15",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11070:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_147837e924905a3bd7649319b6fc22646b0c017a57dd5a6eac862da5a06f6816_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10944:124:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10944:131:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10936:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_147837e924905a3bd7649319b6fc22646b0c017a57dd5a6eac862da5a06f6816__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10814:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10829:4:15",
														"type": ""
													}
												],
												"src": "10663:419:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11259:248:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11269:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11281:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11292:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11277:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11277:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11269:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11316:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11327:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11312:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11312:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11335:4:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11341:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11331:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11331:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11305:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11305:47:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11305:47:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11361:139:15",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11495:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_2bdef3017b3ab8e90fcdd0203656ef49f1cf91890714ed98466b7f0b7c411dbc_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11369:124:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11369:131:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11361:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2bdef3017b3ab8e90fcdd0203656ef49f1cf91890714ed98466b7f0b7c411dbc__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11239:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11254:4:15",
														"type": ""
													}
												],
												"src": "11088:419:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11684:248:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11694:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11706:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11717:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11702:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11702:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11694:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11741:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11752:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11737:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11737:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11760:4:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11766:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11756:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11756:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11730:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11730:47:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11730:47:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11786:139:15",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11920:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11794:124:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11794:131:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11786:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11664:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11679:4:15",
														"type": ""
													}
												],
												"src": "11513:419:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12109:248:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12119:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12131:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12142:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12127:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12127:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12119:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12166:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12177:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12162:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12162:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12185:4:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12191:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12181:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12181:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12155:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12155:47:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12155:47:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12211:139:15",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12345:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_99a5106e083f54e153095639f5c53baa0d355c3b1a37f6c84924da3b1b45cf57_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12219:124:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12219:131:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12211:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_99a5106e083f54e153095639f5c53baa0d355c3b1a37f6c84924da3b1b45cf57__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12089:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12104:4:15",
														"type": ""
													}
												],
												"src": "11938:419:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12534:248:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12544:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12556:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12567:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12552:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12552:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12544:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12591:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12602:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12587:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12587:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12610:4:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12616:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12606:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12606:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12580:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12580:47:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12580:47:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12636:139:15",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12770:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ae81ee44af9e399b79dc430c2aa49760868f55e17e70be2d4b0876841d2be5a2_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12644:124:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12644:131:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12636:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ae81ee44af9e399b79dc430c2aa49760868f55e17e70be2d4b0876841d2be5a2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12514:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12529:4:15",
														"type": ""
													}
												],
												"src": "12363:419:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12829:88:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12839:30:15",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "12849:18:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12849:20:15"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "12839:6:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "12898:6:15"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "12906:4:15"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "12878:19:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12878:33:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12878:33:15"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "12813:4:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12822:6:15",
														"type": ""
													}
												],
												"src": "12788:129:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12963:35:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12973:19:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12989:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "12983:5:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12983:9:15"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "12973:6:15"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12956:6:15",
														"type": ""
													}
												],
												"src": "12923:75:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13086:229:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13191:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "13193:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13193:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13193:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13163:6:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13171:18:15",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "13160:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "13160:30:15"
															},
															"nodeType": "YulIf",
															"src": "13157:56:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13223:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13235:6:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13243:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "13231:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "13231:17:15"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "13223:4:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13285:23:15",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "13297:4:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13303:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13293:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "13293:15:15"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "13285:4:15"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "13070:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "13081:4:15",
														"type": ""
													}
												],
												"src": "13004:311:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13387:241:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13492:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "13494:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13494:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13494:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13464:6:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13472:18:15",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "13461:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "13461:30:15"
															},
															"nodeType": "YulIf",
															"src": "13458:56:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13524:37:15",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13554:6:15"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "13532:21:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "13532:29:15"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "13524:4:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13598:23:15",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "13610:4:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13616:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13606:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "13606:15:15"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "13598:4:15"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "13371:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "13382:4:15",
														"type": ""
													}
												],
												"src": "13321:307:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13730:73:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13747:3:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13752:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13740:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "13740:19:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13740:19:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13768:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13787:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13792:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13783:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "13783:14:15"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "13768:11:15"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13702:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "13707:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "13718:11:15",
														"type": ""
													}
												],
												"src": "13634:169:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13854:51:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13864:35:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13893:5:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "13875:17:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "13875:24:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "13864:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13836:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "13846:7:15",
														"type": ""
													}
												],
												"src": "13809:96:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13953:48:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13963:32:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13988:5:15"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "13981:6:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13981:13:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13974:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "13974:21:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "13963:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13935:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "13945:7:15",
														"type": ""
													}
												],
												"src": "13911:90:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14051:105:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14061:89:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14076:5:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14083:66:15",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "14072:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "14072:78:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "14061:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14033:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "14043:7:15",
														"type": ""
													}
												],
												"src": "14007:149:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14207:81:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14217:65:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14232:5:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14239:42:15",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "14228:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "14228:54:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "14217:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14189:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "14199:7:15",
														"type": ""
													}
												],
												"src": "14162:126:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14339:32:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14349:16:15",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "14360:5:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "14349:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14321:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "14331:7:15",
														"type": ""
													}
												],
												"src": "14294:77:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14428:103:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "14451:3:15"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "14456:3:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14461:6:15"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "14438:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "14438:30:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14438:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "14509:3:15"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "14514:6:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14505:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14505:16:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14523:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14498:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "14498:27:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14498:27:15"
														}
													]
												},
												"name": "copy_calldata_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "14410:3:15",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "14415:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "14420:6:15",
														"type": ""
													}
												],
												"src": "14377:154:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14580:238:15",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14590:58:15",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "14612:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "14642:4:15"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "14620:21:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14620:27:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14608:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "14608:40:15"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "14594:10:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14759:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "14761:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14761:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14761:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "14702:10:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14714:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "14699:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14699:34:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "14738:10:15"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14750:6:15"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "14735:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14735:22:15"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "14696:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "14696:62:15"
															},
															"nodeType": "YulIf",
															"src": "14693:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14797:2:15",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "14801:10:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14790:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "14790:22:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14790:22:15"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14566:6:15",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "14574:4:15",
														"type": ""
													}
												],
												"src": "14537:281:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14852:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14869:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14872:77:15",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14862:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "14862:88:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14862:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14966:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14969:4:15",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14959:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "14959:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14959:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14990:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14993:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "14983:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "14983:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14983:15:15"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14824:180:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15099:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15116:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15119:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "15109:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "15109:12:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15109:12:15"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "15010:117:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15222:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15239:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15242:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "15232:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "15232:12:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15232:12:15"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nodeType": "YulFunctionDefinition",
												"src": "15133:117:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15345:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15362:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15365:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "15355:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "15355:12:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15355:12:15"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "15256:117:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15468:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15485:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15488:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "15478:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "15478:12:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15478:12:15"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "15379:117:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15591:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15608:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15611:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "15601:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "15601:12:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15601:12:15"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "15502:117:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15673:54:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15683:38:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "15701:5:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15708:2:15",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15697:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15697:14:15"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15717:2:15",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "15713:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15713:7:15"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "15693:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "15693:28:15"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "15683:6:15"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15656:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "15666:6:15",
														"type": ""
													}
												],
												"src": "15625:102:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15839:74:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15861:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15869:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15857:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15857:14:15"
																	},
																	{
																		"hexValue": "4261636b757020616464726573732063616e206e6f74206265207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15873:32:15",
																		"type": "",
																		"value": "Backup address can not be zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15850:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "15850:56:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15850:56:15"
														}
													]
												},
												"name": "store_literal_in_memory_147837e924905a3bd7649319b6fc22646b0c017a57dd5a6eac862da5a06f6816",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "15831:6:15",
														"type": ""
													}
												],
												"src": "15733:180:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16025:74:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16047:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16055:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16043:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16043:14:15"
																	},
																	{
																		"hexValue": "53656e64657220616464726573732063616e206e6f74206265207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16059:32:15",
																		"type": "",
																		"value": "Sender address can not be zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16036:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "16036:56:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16036:56:15"
														}
													]
												},
												"name": "store_literal_in_memory_2bdef3017b3ab8e90fcdd0203656ef49f1cf91890714ed98466b7f0b7c411dbc",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "16017:6:15",
														"type": ""
													}
												],
												"src": "15919:180:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16211:76:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16233:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16241:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16229:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16229:14:15"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16245:34:15",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16222:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "16222:58:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16222:58:15"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "16203:6:15",
														"type": ""
													}
												],
												"src": "16105:182:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16399:72:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16421:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16429:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16417:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16417:14:15"
																	},
																	{
																		"hexValue": "436f6e747261637420616c726561647920696e697469616c697a6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16433:30:15",
																		"type": "",
																		"value": "Contract already initialized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16410:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "16410:54:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16410:54:15"
														}
													]
												},
												"name": "store_literal_in_memory_99a5106e083f54e153095639f5c53baa0d355c3b1a37f6c84924da3b1b45cf57",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "16391:6:15",
														"type": ""
													}
												],
												"src": "16293:178:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16583:127:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16605:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16613:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16601:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16601:14:15"
																	},
																	{
																		"hexValue": "4261636b75702077616c6c65742063616e206e6f742062652073616d65206173",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16617:34:15",
																		"type": "",
																		"value": "Backup wallet can not be same as"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16594:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "16594:58:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16594:58:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16673:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16681:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16669:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16669:15:15"
																	},
																	{
																		"hexValue": "2073656e6465722077616c6c6574",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16686:16:15",
																		"type": "",
																		"value": " sender wallet"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16662:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "16662:41:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16662:41:15"
														}
													]
												},
												"name": "store_literal_in_memory_ae81ee44af9e399b79dc430c2aa49760868f55e17e70be2d4b0876841d2be5a2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "16575:6:15",
														"type": ""
													}
												],
												"src": "16477:233:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16759:79:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16816:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16825:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16828:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "16818:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16818:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16818:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "16782:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "16807:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "16789:17:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16789:24:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "16779:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16779:35:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "16772:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "16772:43:15"
															},
															"nodeType": "YulIf",
															"src": "16769:63:15"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16752:5:15",
														"type": ""
													}
												],
												"src": "16716:122:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16886:78:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16942:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16951:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16954:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "16944:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16944:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16944:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "16909:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "16933:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nodeType": "YulIdentifier",
																					"src": "16916:16:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16916:23:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "16906:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16906:34:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "16899:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "16899:42:15"
															},
															"nodeType": "YulIf",
															"src": "16896:62:15"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16879:5:15",
														"type": ""
													}
												],
												"src": "16844:120:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17013:79:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17070:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17079:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17082:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "17072:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17072:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17072:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "17036:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "17061:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "17043:17:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17043:24:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "17033:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17033:35:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "17026:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "17026:43:15"
															},
															"nodeType": "YulIf",
															"src": "17023:63:15"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17006:5:15",
														"type": ""
													}
												],
												"src": "16970:122:15"
											}
										]
									},
									"contents": "{\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let src := offset\n        if gt(add(src, mul(length, 0x20)), end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n            src := add(src, 0x20)\n        }\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes4(value))\n    }\n\n    function abi_encode_t_stringliteral_147837e924905a3bd7649319b6fc22646b0c017a57dd5a6eac862da5a06f6816_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_147837e924905a3bd7649319b6fc22646b0c017a57dd5a6eac862da5a06f6816(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_2bdef3017b3ab8e90fcdd0203656ef49f1cf91890714ed98466b7f0b7c411dbc_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_2bdef3017b3ab8e90fcdd0203656ef49f1cf91890714ed98466b7f0b7c411dbc(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_99a5106e083f54e153095639f5c53baa0d355c3b1a37f6c84924da3b1b45cf57_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_99a5106e083f54e153095639f5c53baa0d355c3b1a37f6c84924da3b1b45cf57(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_ae81ee44af9e399b79dc430c2aa49760868f55e17e70be2d4b0876841d2be5a2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 46)\n        store_literal_in_memory_ae81ee44af9e399b79dc430c2aa49760868f55e17e70be2d4b0876841d2be5a2(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_147837e924905a3bd7649319b6fc22646b0c017a57dd5a6eac862da5a06f6816__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_147837e924905a3bd7649319b6fc22646b0c017a57dd5a6eac862da5a06f6816_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_2bdef3017b3ab8e90fcdd0203656ef49f1cf91890714ed98466b7f0b7c411dbc__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2bdef3017b3ab8e90fcdd0203656ef49f1cf91890714ed98466b7f0b7c411dbc_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_99a5106e083f54e153095639f5c53baa0d355c3b1a37f6c84924da3b1b45cf57__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_99a5106e083f54e153095639f5c53baa0d355c3b1a37f6c84924da3b1b45cf57_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_ae81ee44af9e399b79dc430c2aa49760868f55e17e70be2d4b0876841d2be5a2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ae81ee44af9e399b79dc430c2aa49760868f55e17e70be2d4b0876841d2be5a2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_147837e924905a3bd7649319b6fc22646b0c017a57dd5a6eac862da5a06f6816(memPtr) {\n\n        mstore(add(memPtr, 0), \"Backup address can not be zero\")\n\n    }\n\n    function store_literal_in_memory_2bdef3017b3ab8e90fcdd0203656ef49f1cf91890714ed98466b7f0b7c411dbc(memPtr) {\n\n        mstore(add(memPtr, 0), \"Sender address can not be zero\")\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function store_literal_in_memory_99a5106e083f54e153095639f5c53baa0d355c3b1a37f6c84924da3b1b45cf57(memPtr) {\n\n        mstore(add(memPtr, 0), \"Contract already initialized\")\n\n    }\n\n    function store_literal_in_memory_ae81ee44af9e399b79dc430c2aa49760868f55e17e70be2d4b0876841d2be5a2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Backup wallet can not be same as\")\n\n        mstore(add(memPtr, 32), \" sender wallet\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 15,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061007f5760003560e01c80638da5cb5b1161004e5780638da5cb5b14610145578063bc197c8114610170578063f09a4016146101ad578063f23a6e61146101d657610086565b806301ffc9a71461008b578063150b7a02146100c8578063450b2ad71461010557806371b4bc991461011c57610086565b3661008657005b600080fd5b34801561009757600080fd5b506100b260048036038101906100ad9190610c12565b610213565b6040516100bf9190610d7c565b60405180910390f35b3480156100d457600080fd5b506100ef60048036038101906100ea9190610ab8565b61028d565b6040516100fc9190610d97565b60405180910390f35b34801561011157600080fd5b5061011a6102a1565b005b34801561012857600080fd5b50610143600480360381019061013e9190610bd2565b61034a565b005b34801561015157600080fd5b5061015a6103f7565b6040516101679190610d2a565b60405180910390f35b34801561017c57600080fd5b50610197600480360381019061019291906109e9565b610420565b6040516101a49190610d97565b60405180910390f35b3480156101b957600080fd5b506101d460048036038101906101cf91906109a9565b610435565b005b3480156101e257600080fd5b506101fd60048036038101906101f89190610b3b565b610643565b60405161020a9190610d97565b60405180910390f35b60007f4e2312e0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610286575061028582610658565b5b9050919050565b600063150b7a0260e01b9050949350505050565b6102a96106c2565b73ffffffffffffffffffffffffffffffffffffffff166102c76103f7565b73ffffffffffffffffffffffffffffffffffffffff161461031d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161031490610df2565b60405180910390fd5b610348600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166106ca565b565b6103526106c2565b73ffffffffffffffffffffffffffffffffffffffff166103706103f7565b73ffffffffffffffffffffffffffffffffffffffff16146103c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103bd90610df2565b60405180910390fd5b6103f3600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168383610724565b5050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600063bc197c8160e01b905095945050505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156104a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049c90610dd2565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610515576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050c90610db2565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610584576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057b90610e32565b60405180910390fd5b60001515600060149054906101000a900460ff161515146105da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d190610e12565b60405180910390fd5b6105e382610798565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600060146101000a81548160ff0219169083151502179055505050565b600063f23a6e6160e01b905095945050505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600033905090565b60004790506000811115610720578173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505015801561071e573d6000803e3d6000fd5b505b5050565b8173ffffffffffffffffffffffffffffffffffffffff166342842e0e3085846040518463ffffffff1660e01b815260040161076193929190610d45565b600060405180830381600087803b15801561077b57600080fd5b505af115801561078f573d6000803e3d6000fd5b50505050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600061086f61086a84610e77565b610e52565b9050808382526020820190508285602086028201111561089257610891610fcd565b5b60005b858110156108c257816108a88882610994565b845260208401935060208301925050600181019050610895565b5050509392505050565b60006108df6108da84610ea3565b610e52565b9050828152602081018484840111156108fb576108fa610fd2565b5b610906848285610f59565b509392505050565b60008135905061091d816110e5565b92915050565b600082601f83011261093857610937610fc8565b5b813561094884826020860161085c565b91505092915050565b600081359050610960816110fc565b92915050565b600082601f83011261097b5761097a610fc8565b5b813561098b8482602086016108cc565b91505092915050565b6000813590506109a381611113565b92915050565b600080604083850312156109c0576109bf610fdc565b5b60006109ce8582860161090e565b92505060206109df8582860161090e565b9150509250929050565b600080600080600060a08688031215610a0557610a04610fdc565b5b6000610a138882890161090e565b9550506020610a248882890161090e565b945050604086013567ffffffffffffffff811115610a4557610a44610fd7565b5b610a5188828901610923565b935050606086013567ffffffffffffffff811115610a7257610a71610fd7565b5b610a7e88828901610923565b925050608086013567ffffffffffffffff811115610a9f57610a9e610fd7565b5b610aab88828901610966565b9150509295509295909350565b60008060008060808587031215610ad257610ad1610fdc565b5b6000610ae08782880161090e565b9450506020610af18782880161090e565b9350506040610b0287828801610994565b925050606085013567ffffffffffffffff811115610b2357610b22610fd7565b5b610b2f87828801610966565b91505092959194509250565b600080600080600060a08688031215610b5757610b56610fdc565b5b6000610b658882890161090e565b9550506020610b768882890161090e565b9450506040610b8788828901610994565b9350506060610b9888828901610994565b925050608086013567ffffffffffffffff811115610bb957610bb8610fd7565b5b610bc588828901610966565b9150509295509295909350565b60008060408385031215610be957610be8610fdc565b5b6000610bf78582860161090e565b9250506020610c0885828601610994565b9150509250929050565b600060208284031215610c2857610c27610fdc565b5b6000610c3684828501610951565b91505092915050565b610c4881610ee5565b82525050565b610c5781610ef7565b82525050565b610c6681610f03565b82525050565b6000610c79601e83610ed4565b9150610c8482610ff2565b602082019050919050565b6000610c9c601e83610ed4565b9150610ca78261101b565b602082019050919050565b6000610cbf602083610ed4565b9150610cca82611044565b602082019050919050565b6000610ce2601c83610ed4565b9150610ced8261106d565b602082019050919050565b6000610d05602e83610ed4565b9150610d1082611096565b604082019050919050565b610d2481610f4f565b82525050565b6000602082019050610d3f6000830184610c3f565b92915050565b6000606082019050610d5a6000830186610c3f565b610d676020830185610c3f565b610d746040830184610d1b565b949350505050565b6000602082019050610d916000830184610c4e565b92915050565b6000602082019050610dac6000830184610c5d565b92915050565b60006020820190508181036000830152610dcb81610c6c565b9050919050565b60006020820190508181036000830152610deb81610c8f565b9050919050565b60006020820190508181036000830152610e0b81610cb2565b9050919050565b60006020820190508181036000830152610e2b81610cd5565b9050919050565b60006020820190508181036000830152610e4b81610cf8565b9050919050565b6000610e5c610e6d565b9050610e688282610f68565b919050565b6000604051905090565b600067ffffffffffffffff821115610e9257610e91610f99565b5b602082029050602081019050919050565b600067ffffffffffffffff821115610ebe57610ebd610f99565b5b610ec782610fe1565b9050602081019050919050565b600082825260208201905092915050565b6000610ef082610f2f565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b610f7182610fe1565b810181811067ffffffffffffffff82111715610f9057610f8f610f99565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4261636b757020616464726573732063616e206e6f74206265207a65726f0000600082015250565b7f53656e64657220616464726573732063616e206e6f74206265207a65726f0000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f436f6e747261637420616c726561647920696e697469616c697a656400000000600082015250565b7f4261636b75702077616c6c65742063616e206e6f742062652073616d6520617360008201527f2073656e6465722077616c6c6574000000000000000000000000000000000000602082015250565b6110ee81610ee5565b81146110f957600080fd5b50565b61110581610f03565b811461111057600080fd5b50565b61111c81610f4f565b811461112757600080fd5b5056fea2646970667358221220f1d8b4b0284f12790094990bace63ab8c51b33f2fadcfd7d71ef9fc66b7b00d464736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x4E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x145 JUMPI DUP1 PUSH4 0xBC197C81 EQ PUSH2 0x170 JUMPI DUP1 PUSH4 0xF09A4016 EQ PUSH2 0x1AD JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0x1D6 JUMPI PUSH2 0x86 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x8B JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0xC8 JUMPI DUP1 PUSH4 0x450B2AD7 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x71B4BC99 EQ PUSH2 0x11C JUMPI PUSH2 0x86 JUMP JUMPDEST CALLDATASIZE PUSH2 0x86 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAD SWAP2 SWAP1 PUSH2 0xC12 JUMP JUMPDEST PUSH2 0x213 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBF SWAP2 SWAP1 PUSH2 0xD7C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xEF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xEA SWAP2 SWAP1 PUSH2 0xAB8 JUMP JUMPDEST PUSH2 0x28D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFC SWAP2 SWAP1 PUSH2 0xD97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x111 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11A PUSH2 0x2A1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x128 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x143 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13E SWAP2 SWAP1 PUSH2 0xBD2 JUMP JUMPDEST PUSH2 0x34A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x151 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15A PUSH2 0x3F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x167 SWAP2 SWAP1 PUSH2 0xD2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x197 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x192 SWAP2 SWAP1 PUSH2 0x9E9 JUMP JUMPDEST PUSH2 0x420 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A4 SWAP2 SWAP1 PUSH2 0xD97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CF SWAP2 SWAP1 PUSH2 0x9A9 JUMP JUMPDEST PUSH2 0x435 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F8 SWAP2 SWAP1 PUSH2 0xB3B JUMP JUMPDEST PUSH2 0x643 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20A SWAP2 SWAP1 PUSH2 0xD97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x4E2312E000000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x286 JUMPI POP PUSH2 0x285 DUP3 PUSH2 0x658 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0x150B7A02 PUSH1 0xE0 SHL SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x2A9 PUSH2 0x6C2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2C7 PUSH2 0x3F7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x31D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x314 SWAP1 PUSH2 0xDF2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x348 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x6CA JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x352 PUSH2 0x6C2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x370 PUSH2 0x3F7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3C6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3BD SWAP1 PUSH2 0xDF2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3F3 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 DUP4 PUSH2 0x724 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x4A5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x49C SWAP1 PUSH2 0xDD2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x515 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50C SWAP1 PUSH2 0xDB2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x584 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x57B SWAP1 PUSH2 0xE32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x5DA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D1 SWAP1 PUSH2 0xE12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5E3 DUP3 PUSH2 0x798 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x720 JUMPI DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x71E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x42842E0E ADDRESS DUP6 DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x761 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD45 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x77B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x78F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x86F PUSH2 0x86A DUP5 PUSH2 0xE77 JUMP JUMPDEST PUSH2 0xE52 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x892 JUMPI PUSH2 0x891 PUSH2 0xFCD JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x8C2 JUMPI DUP2 PUSH2 0x8A8 DUP9 DUP3 PUSH2 0x994 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x895 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8DF PUSH2 0x8DA DUP5 PUSH2 0xEA3 JUMP JUMPDEST PUSH2 0xE52 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x8FB JUMPI PUSH2 0x8FA PUSH2 0xFD2 JUMP JUMPDEST JUMPDEST PUSH2 0x906 DUP5 DUP3 DUP6 PUSH2 0xF59 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x91D DUP2 PUSH2 0x10E5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x938 JUMPI PUSH2 0x937 PUSH2 0xFC8 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x948 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x85C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x960 DUP2 PUSH2 0x10FC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x97B JUMPI PUSH2 0x97A PUSH2 0xFC8 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x98B DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x8CC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x9A3 DUP2 PUSH2 0x1113 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x9C0 JUMPI PUSH2 0x9BF PUSH2 0xFDC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x9CE DUP6 DUP3 DUP7 ADD PUSH2 0x90E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x9DF DUP6 DUP3 DUP7 ADD PUSH2 0x90E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xA05 JUMPI PUSH2 0xA04 PUSH2 0xFDC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xA13 DUP9 DUP3 DUP10 ADD PUSH2 0x90E JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0xA24 DUP9 DUP3 DUP10 ADD PUSH2 0x90E JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA45 JUMPI PUSH2 0xA44 PUSH2 0xFD7 JUMP JUMPDEST JUMPDEST PUSH2 0xA51 DUP9 DUP3 DUP10 ADD PUSH2 0x923 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA72 JUMPI PUSH2 0xA71 PUSH2 0xFD7 JUMP JUMPDEST JUMPDEST PUSH2 0xA7E DUP9 DUP3 DUP10 ADD PUSH2 0x923 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA9F JUMPI PUSH2 0xA9E PUSH2 0xFD7 JUMP JUMPDEST JUMPDEST PUSH2 0xAAB DUP9 DUP3 DUP10 ADD PUSH2 0x966 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xAD2 JUMPI PUSH2 0xAD1 PUSH2 0xFDC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xAE0 DUP8 DUP3 DUP9 ADD PUSH2 0x90E JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0xAF1 DUP8 DUP3 DUP9 ADD PUSH2 0x90E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0xB02 DUP8 DUP3 DUP9 ADD PUSH2 0x994 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB23 JUMPI PUSH2 0xB22 PUSH2 0xFD7 JUMP JUMPDEST JUMPDEST PUSH2 0xB2F DUP8 DUP3 DUP9 ADD PUSH2 0x966 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xB57 JUMPI PUSH2 0xB56 PUSH2 0xFDC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB65 DUP9 DUP3 DUP10 ADD PUSH2 0x90E JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0xB76 DUP9 DUP3 DUP10 ADD PUSH2 0x90E JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0xB87 DUP9 DUP3 DUP10 ADD PUSH2 0x994 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0xB98 DUP9 DUP3 DUP10 ADD PUSH2 0x994 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xBB9 JUMPI PUSH2 0xBB8 PUSH2 0xFD7 JUMP JUMPDEST JUMPDEST PUSH2 0xBC5 DUP9 DUP3 DUP10 ADD PUSH2 0x966 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBE9 JUMPI PUSH2 0xBE8 PUSH2 0xFDC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBF7 DUP6 DUP3 DUP7 ADD PUSH2 0x90E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xC08 DUP6 DUP3 DUP7 ADD PUSH2 0x994 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC28 JUMPI PUSH2 0xC27 PUSH2 0xFDC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC36 DUP5 DUP3 DUP6 ADD PUSH2 0x951 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC48 DUP2 PUSH2 0xEE5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xC57 DUP2 PUSH2 0xEF7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xC66 DUP2 PUSH2 0xF03 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC79 PUSH1 0x1E DUP4 PUSH2 0xED4 JUMP JUMPDEST SWAP2 POP PUSH2 0xC84 DUP3 PUSH2 0xFF2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC9C PUSH1 0x1E DUP4 PUSH2 0xED4 JUMP JUMPDEST SWAP2 POP PUSH2 0xCA7 DUP3 PUSH2 0x101B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCBF PUSH1 0x20 DUP4 PUSH2 0xED4 JUMP JUMPDEST SWAP2 POP PUSH2 0xCCA DUP3 PUSH2 0x1044 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCE2 PUSH1 0x1C DUP4 PUSH2 0xED4 JUMP JUMPDEST SWAP2 POP PUSH2 0xCED DUP3 PUSH2 0x106D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD05 PUSH1 0x2E DUP4 PUSH2 0xED4 JUMP JUMPDEST SWAP2 POP PUSH2 0xD10 DUP3 PUSH2 0x1096 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD24 DUP2 PUSH2 0xF4F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD3F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC3F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xD5A PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xC3F JUMP JUMPDEST PUSH2 0xD67 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xC3F JUMP JUMPDEST PUSH2 0xD74 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xD1B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD91 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC4E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDAC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC5D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xDCB DUP2 PUSH2 0xC6C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xDEB DUP2 PUSH2 0xC8F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE0B DUP2 PUSH2 0xCB2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE2B DUP2 PUSH2 0xCD5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE4B DUP2 PUSH2 0xCF8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE5C PUSH2 0xE6D JUMP JUMPDEST SWAP1 POP PUSH2 0xE68 DUP3 DUP3 PUSH2 0xF68 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xE92 JUMPI PUSH2 0xE91 PUSH2 0xF99 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xEBE JUMPI PUSH2 0xEBD PUSH2 0xF99 JUMP JUMPDEST JUMPDEST PUSH2 0xEC7 DUP3 PUSH2 0xFE1 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEF0 DUP3 PUSH2 0xF2F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH2 0xF71 DUP3 PUSH2 0xFE1 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xF90 JUMPI PUSH2 0xF8F PUSH2 0xF99 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4261636B757020616464726573732063616E206E6F74206265207A65726F0000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x53656E64657220616464726573732063616E206E6F74206265207A65726F0000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x436F6E747261637420616C726561647920696E697469616C697A656400000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4261636B75702077616C6C65742063616E206E6F742062652073616D65206173 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x2073656E6465722077616C6C6574000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x10EE DUP2 PUSH2 0xEE5 JUMP JUMPDEST DUP2 EQ PUSH2 0x10F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1105 DUP2 PUSH2 0xF03 JUMP JUMPDEST DUP2 EQ PUSH2 0x1110 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x111C DUP2 PUSH2 0xF4F JUMP JUMPDEST DUP2 EQ PUSH2 0x1127 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALL 0xD8 0xB4 0xB0 0x28 0x4F SLT PUSH26 0x94990BACE63AB8C51B33F2FADCFD7D71EF9FC66B7B00D46473 PUSH16 0x6C634300080700330000000000000000 ",
							"sourceMap": "467:5395:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;387:221:3;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;588:200:8;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4485:129:14;;;;;;;;;;;;;:::i;:::-;;4062:202;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;933:85:13;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;724:247:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;644:500:14;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;499:219:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;387:221:3;489:4;527:34;512:49;;;:11;:49;;;;:89;;;;565:36;589:11;565:23;:36::i;:::-;512:89;505:96;;387:221;;;:::o;588:200:8:-;726:6;751:30;;;744:37;;588:200;;;;;;:::o;4485:129:14:-;1156:12:13;:10;:12::i;:::-;1145:23;;:7;:5;:7::i;:::-;:23;;;1137:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;4555:52:14::1;4593:12;;;;;;;;;;;4555:29;:52::i;:::-;4485:129::o:0;4062:202::-;1156:12:13;:10;:12::i;:::-;1145:23;;:7;:5;:7::i;:::-;:23;;;1137:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;4191:66:14::1;4221:12;;;;;;;;;;;4235;4249:7;4191:29;:66::i;:::-;4062:202:::0;;:::o;933:85:13:-;979:7;1005:6;;;;;;;;;;;998:13;;933:85;:::o;724:247:2:-;903:6;928:36;;;921:43;;724:247;;;;;;;:::o;644:500:14:-;751:1;733:20;;:7;:20;;;;725:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;830:1;806:26;;:13;:26;;;;798:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;901:7;885:23;;:13;:23;;;;877:82;;;;;;;;;;;;:::i;:::-;;;;;;;;;994:5;977:22;;:13;;;;;;;;;;;:22;;;969:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1042:27;1061:7;1042:18;:27::i;:::-;1094:13;1079:12;;:28;;;;;;;;;;;;;;;;;;1133:4;1117:13;;:20;;;;;;;;;;;;;;;;;;644:500;;:::o;499:219:2:-;655:6;680:31;;;673:38;;499:219;;;;;;;:::o;829:155:11:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;640:96:10:-;693:7;719:10;712:17;;640:96;:::o;5652:208:14:-;5736:15;5754:21;5736:39;;5799:1;5789:7;:11;5785:69;;;5816:9;:18;;:27;5835:7;5816:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5785:69;5726:134;5652:208;:::o;1882:225::-;2035:12;2027:38;;;2074:4;2081:9;2092:7;2027:73;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1882:225;;;:::o;1377:187:13:-;1450:16;1469:6;;;;;;;;;;;1450:25;;1494:8;1485:6;;:17;;;;;;;;;;;;;;;;;;1548:8;1517:40;;1538:8;1517:40;;;;;;;;;;;;1440:124;1377:187;:::o;24:722:15:-;120:5;145:81;161:64;218:6;161:64;:::i;:::-;145:81;:::i;:::-;136:90;;246:5;275:6;268:5;261:21;309:4;302:5;298:16;291:23;;335:6;385:3;377:4;369:6;365:17;360:3;356:27;353:36;350:143;;;404:79;;:::i;:::-;350:143;517:1;502:238;527:6;524:1;521:13;502:238;;;595:3;624:37;657:3;645:10;624:37;:::i;:::-;619:3;612:50;691:4;686:3;682:14;675:21;;725:4;720:3;716:14;709:21;;562:178;549:1;546;542:9;537:14;;502:238;;;506:14;126:620;;24:722;;;;;:::o;752:410::-;829:5;854:65;870:48;911:6;870:48;:::i;:::-;854:65;:::i;:::-;845:74;;942:6;935:5;928:21;980:4;973:5;969:16;1018:3;1009:6;1004:3;1000:16;997:25;994:112;;;1025:79;;:::i;:::-;994:112;1115:41;1149:6;1144:3;1139;1115:41;:::i;:::-;835:327;752:410;;;;;:::o;1168:139::-;1214:5;1252:6;1239:20;1230:29;;1268:33;1295:5;1268:33;:::i;:::-;1168:139;;;;:::o;1330:370::-;1401:5;1450:3;1443:4;1435:6;1431:17;1427:27;1417:122;;1458:79;;:::i;:::-;1417:122;1575:6;1562:20;1600:94;1690:3;1682:6;1675:4;1667:6;1663:17;1600:94;:::i;:::-;1591:103;;1407:293;1330:370;;;;:::o;1706:137::-;1751:5;1789:6;1776:20;1767:29;;1805:32;1831:5;1805:32;:::i;:::-;1706:137;;;;:::o;1862:338::-;1917:5;1966:3;1959:4;1951:6;1947:17;1943:27;1933:122;;1974:79;;:::i;:::-;1933:122;2091:6;2078:20;2116:78;2190:3;2182:6;2175:4;2167:6;2163:17;2116:78;:::i;:::-;2107:87;;1923:277;1862:338;;;;:::o;2206:139::-;2252:5;2290:6;2277:20;2268:29;;2306:33;2333:5;2306:33;:::i;:::-;2206:139;;;;:::o;2351:474::-;2419:6;2427;2476:2;2464:9;2455:7;2451:23;2447:32;2444:119;;;2482:79;;:::i;:::-;2444:119;2602:1;2627:53;2672:7;2663:6;2652:9;2648:22;2627:53;:::i;:::-;2617:63;;2573:117;2729:2;2755:53;2800:7;2791:6;2780:9;2776:22;2755:53;:::i;:::-;2745:63;;2700:118;2351:474;;;;;:::o;2831:1509::-;2985:6;2993;3001;3009;3017;3066:3;3054:9;3045:7;3041:23;3037:33;3034:120;;;3073:79;;:::i;:::-;3034:120;3193:1;3218:53;3263:7;3254:6;3243:9;3239:22;3218:53;:::i;:::-;3208:63;;3164:117;3320:2;3346:53;3391:7;3382:6;3371:9;3367:22;3346:53;:::i;:::-;3336:63;;3291:118;3476:2;3465:9;3461:18;3448:32;3507:18;3499:6;3496:30;3493:117;;;3529:79;;:::i;:::-;3493:117;3634:78;3704:7;3695:6;3684:9;3680:22;3634:78;:::i;:::-;3624:88;;3419:303;3789:2;3778:9;3774:18;3761:32;3820:18;3812:6;3809:30;3806:117;;;3842:79;;:::i;:::-;3806:117;3947:78;4017:7;4008:6;3997:9;3993:22;3947:78;:::i;:::-;3937:88;;3732:303;4102:3;4091:9;4087:19;4074:33;4134:18;4126:6;4123:30;4120:117;;;4156:79;;:::i;:::-;4120:117;4261:62;4315:7;4306:6;4295:9;4291:22;4261:62;:::i;:::-;4251:72;;4045:288;2831:1509;;;;;;;;:::o;4346:943::-;4441:6;4449;4457;4465;4514:3;4502:9;4493:7;4489:23;4485:33;4482:120;;;4521:79;;:::i;:::-;4482:120;4641:1;4666:53;4711:7;4702:6;4691:9;4687:22;4666:53;:::i;:::-;4656:63;;4612:117;4768:2;4794:53;4839:7;4830:6;4819:9;4815:22;4794:53;:::i;:::-;4784:63;;4739:118;4896:2;4922:53;4967:7;4958:6;4947:9;4943:22;4922:53;:::i;:::-;4912:63;;4867:118;5052:2;5041:9;5037:18;5024:32;5083:18;5075:6;5072:30;5069:117;;;5105:79;;:::i;:::-;5069:117;5210:62;5264:7;5255:6;5244:9;5240:22;5210:62;:::i;:::-;5200:72;;4995:287;4346:943;;;;;;;:::o;5295:1089::-;5399:6;5407;5415;5423;5431;5480:3;5468:9;5459:7;5455:23;5451:33;5448:120;;;5487:79;;:::i;:::-;5448:120;5607:1;5632:53;5677:7;5668:6;5657:9;5653:22;5632:53;:::i;:::-;5622:63;;5578:117;5734:2;5760:53;5805:7;5796:6;5785:9;5781:22;5760:53;:::i;:::-;5750:63;;5705:118;5862:2;5888:53;5933:7;5924:6;5913:9;5909:22;5888:53;:::i;:::-;5878:63;;5833:118;5990:2;6016:53;6061:7;6052:6;6041:9;6037:22;6016:53;:::i;:::-;6006:63;;5961:118;6146:3;6135:9;6131:19;6118:33;6178:18;6170:6;6167:30;6164:117;;;6200:79;;:::i;:::-;6164:117;6305:62;6359:7;6350:6;6339:9;6335:22;6305:62;:::i;:::-;6295:72;;6089:288;5295:1089;;;;;;;;:::o;6390:474::-;6458:6;6466;6515:2;6503:9;6494:7;6490:23;6486:32;6483:119;;;6521:79;;:::i;:::-;6483:119;6641:1;6666:53;6711:7;6702:6;6691:9;6687:22;6666:53;:::i;:::-;6656:63;;6612:117;6768:2;6794:53;6839:7;6830:6;6819:9;6815:22;6794:53;:::i;:::-;6784:63;;6739:118;6390:474;;;;;:::o;6870:327::-;6928:6;6977:2;6965:9;6956:7;6952:23;6948:32;6945:119;;;6983:79;;:::i;:::-;6945:119;7103:1;7128:52;7172:7;7163:6;7152:9;7148:22;7128:52;:::i;:::-;7118:62;;7074:116;6870:327;;;;:::o;7203:118::-;7290:24;7308:5;7290:24;:::i;:::-;7285:3;7278:37;7203:118;;:::o;7327:109::-;7408:21;7423:5;7408:21;:::i;:::-;7403:3;7396:34;7327:109;;:::o;7442:115::-;7527:23;7544:5;7527:23;:::i;:::-;7522:3;7515:36;7442:115;;:::o;7563:366::-;7705:3;7726:67;7790:2;7785:3;7726:67;:::i;:::-;7719:74;;7802:93;7891:3;7802:93;:::i;:::-;7920:2;7915:3;7911:12;7904:19;;7563:366;;;:::o;7935:::-;8077:3;8098:67;8162:2;8157:3;8098:67;:::i;:::-;8091:74;;8174:93;8263:3;8174:93;:::i;:::-;8292:2;8287:3;8283:12;8276:19;;7935:366;;;:::o;8307:::-;8449:3;8470:67;8534:2;8529:3;8470:67;:::i;:::-;8463:74;;8546:93;8635:3;8546:93;:::i;:::-;8664:2;8659:3;8655:12;8648:19;;8307:366;;;:::o;8679:::-;8821:3;8842:67;8906:2;8901:3;8842:67;:::i;:::-;8835:74;;8918:93;9007:3;8918:93;:::i;:::-;9036:2;9031:3;9027:12;9020:19;;8679:366;;;:::o;9051:::-;9193:3;9214:67;9278:2;9273:3;9214:67;:::i;:::-;9207:74;;9290:93;9379:3;9290:93;:::i;:::-;9408:2;9403:3;9399:12;9392:19;;9051:366;;;:::o;9423:118::-;9510:24;9528:5;9510:24;:::i;:::-;9505:3;9498:37;9423:118;;:::o;9547:222::-;9640:4;9678:2;9667:9;9663:18;9655:26;;9691:71;9759:1;9748:9;9744:17;9735:6;9691:71;:::i;:::-;9547:222;;;;:::o;9775:442::-;9924:4;9962:2;9951:9;9947:18;9939:26;;9975:71;10043:1;10032:9;10028:17;10019:6;9975:71;:::i;:::-;10056:72;10124:2;10113:9;10109:18;10100:6;10056:72;:::i;:::-;10138;10206:2;10195:9;10191:18;10182:6;10138:72;:::i;:::-;9775:442;;;;;;:::o;10223:210::-;10310:4;10348:2;10337:9;10333:18;10325:26;;10361:65;10423:1;10412:9;10408:17;10399:6;10361:65;:::i;:::-;10223:210;;;;:::o;10439:218::-;10530:4;10568:2;10557:9;10553:18;10545:26;;10581:69;10647:1;10636:9;10632:17;10623:6;10581:69;:::i;:::-;10439:218;;;;:::o;10663:419::-;10829:4;10867:2;10856:9;10852:18;10844:26;;10916:9;10910:4;10906:20;10902:1;10891:9;10887:17;10880:47;10944:131;11070:4;10944:131;:::i;:::-;10936:139;;10663:419;;;:::o;11088:::-;11254:4;11292:2;11281:9;11277:18;11269:26;;11341:9;11335:4;11331:20;11327:1;11316:9;11312:17;11305:47;11369:131;11495:4;11369:131;:::i;:::-;11361:139;;11088:419;;;:::o;11513:::-;11679:4;11717:2;11706:9;11702:18;11694:26;;11766:9;11760:4;11756:20;11752:1;11741:9;11737:17;11730:47;11794:131;11920:4;11794:131;:::i;:::-;11786:139;;11513:419;;;:::o;11938:::-;12104:4;12142:2;12131:9;12127:18;12119:26;;12191:9;12185:4;12181:20;12177:1;12166:9;12162:17;12155:47;12219:131;12345:4;12219:131;:::i;:::-;12211:139;;11938:419;;;:::o;12363:::-;12529:4;12567:2;12556:9;12552:18;12544:26;;12616:9;12610:4;12606:20;12602:1;12591:9;12587:17;12580:47;12644:131;12770:4;12644:131;:::i;:::-;12636:139;;12363:419;;;:::o;12788:129::-;12822:6;12849:20;;:::i;:::-;12839:30;;12878:33;12906:4;12898:6;12878:33;:::i;:::-;12788:129;;;:::o;12923:75::-;12956:6;12989:2;12983:9;12973:19;;12923:75;:::o;13004:311::-;13081:4;13171:18;13163:6;13160:30;13157:56;;;13193:18;;:::i;:::-;13157:56;13243:4;13235:6;13231:17;13223:25;;13303:4;13297;13293:15;13285:23;;13004:311;;;:::o;13321:307::-;13382:4;13472:18;13464:6;13461:30;13458:56;;;13494:18;;:::i;:::-;13458:56;13532:29;13554:6;13532:29;:::i;:::-;13524:37;;13616:4;13610;13606:15;13598:23;;13321:307;;;:::o;13634:169::-;13718:11;13752:6;13747:3;13740:19;13792:4;13787:3;13783:14;13768:29;;13634:169;;;;:::o;13809:96::-;13846:7;13875:24;13893:5;13875:24;:::i;:::-;13864:35;;13809:96;;;:::o;13911:90::-;13945:7;13988:5;13981:13;13974:21;13963:32;;13911:90;;;:::o;14007:149::-;14043:7;14083:66;14076:5;14072:78;14061:89;;14007:149;;;:::o;14162:126::-;14199:7;14239:42;14232:5;14228:54;14217:65;;14162:126;;;:::o;14294:77::-;14331:7;14360:5;14349:16;;14294:77;;;:::o;14377:154::-;14461:6;14456:3;14451;14438:30;14523:1;14514:6;14509:3;14505:16;14498:27;14377:154;;;:::o;14537:281::-;14620:27;14642:4;14620:27;:::i;:::-;14612:6;14608:40;14750:6;14738:10;14735:22;14714:18;14702:10;14699:34;14696:62;14693:88;;;14761:18;;:::i;:::-;14693:88;14801:10;14797:2;14790:22;14580:238;14537:281;;:::o;14824:180::-;14872:77;14869:1;14862:88;14969:4;14966:1;14959:15;14993:4;14990:1;14983:15;15010:117;15119:1;15116;15109:12;15133:117;15242:1;15239;15232:12;15256:117;15365:1;15362;15355:12;15379:117;15488:1;15485;15478:12;15502:117;15611:1;15608;15601:12;15625:102;15666:6;15717:2;15713:7;15708:2;15701:5;15697:14;15693:28;15683:38;;15625:102;;;:::o;15733:180::-;15873:32;15869:1;15861:6;15857:14;15850:56;15733:180;:::o;15919:::-;16059:32;16055:1;16047:6;16043:14;16036:56;15919:180;:::o;16105:182::-;16245:34;16241:1;16233:6;16229:14;16222:58;16105:182;:::o;16293:178::-;16433:30;16429:1;16421:6;16417:14;16410:54;16293:178;:::o;16477:233::-;16617:34;16613:1;16605:6;16601:14;16594:58;16686:16;16681:2;16673:6;16669:15;16662:41;16477:233;:::o;16716:122::-;16789:24;16807:5;16789:24;:::i;:::-;16782:5;16779:35;16769:63;;16828:1;16825;16818:12;16769:63;16716:122;:::o;16844:120::-;16916:23;16933:5;16916:23;:::i;:::-;16909:5;16906:34;16896:62;;16954:1;16951;16944:12;16896:62;16844:120;:::o;16970:122::-;17043:24;17061:5;17043:24;:::i;:::-;17036:5;17033:35;17023:63;;17082:1;17079;17072:12;17023:63;16970:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "889600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"init(address,address)": "infinite",
								"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "infinite",
								"onERC1155Received(address,address,uint256,uint256,bytes)": "infinite",
								"onERC721Received(address,address,uint256,bytes)": "infinite",
								"owner()": "2522",
								"sendERC721FundsToBackupWallet(address,uint256)": "infinite",
								"sendNativeFundsToBackupWallet()": "infinite",
								"supportsInterface(bytes4)": "728"
							},
							"internal": {
								"_transferERC721FundsToAddress(address,address,uint256)": "infinite",
								"_transferNativeFundsToAddress(address payable)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 467,
									"end": 5862,
									"name": "PUSH",
									"source": 14,
									"value": "80"
								},
								{
									"begin": 467,
									"end": 5862,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 467,
									"end": 5862,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 467,
									"end": 5862,
									"name": "CALLVALUE",
									"source": 14
								},
								{
									"begin": 467,
									"end": 5862,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 467,
									"end": 5862,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 467,
									"end": 5862,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 467,
									"end": 5862,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 467,
									"end": 5862,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 5862,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 467,
									"end": 5862,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 467,
									"end": 5862,
									"name": "tag",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 467,
									"end": 5862,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 467,
									"end": 5862,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 818,
									"end": 850,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 837,
									"end": 849,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "5"
								},
								{
									"begin": 837,
									"end": 847,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "6"
								},
								{
									"begin": 837,
									"end": 847,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 837,
									"end": 847,
									"name": "SHL",
									"source": 13
								},
								{
									"begin": 837,
									"end": 849,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 837,
									"end": 849,
									"name": "SHR",
									"source": 13
								},
								{
									"begin": 837,
									"end": 849,
									"name": "JUMP",
									"source": 13,
									"value": "[in]"
								},
								{
									"begin": 837,
									"end": 849,
									"name": "tag",
									"source": 13,
									"value": "5"
								},
								{
									"begin": 837,
									"end": 849,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 818,
									"end": 836,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "7"
								},
								{
									"begin": 818,
									"end": 836,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 818,
									"end": 836,
									"name": "SHL",
									"source": 13
								},
								{
									"begin": 818,
									"end": 850,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 818,
									"end": 850,
									"name": "SHR",
									"source": 13
								},
								{
									"begin": 818,
									"end": 850,
									"name": "JUMP",
									"source": 13,
									"value": "[in]"
								},
								{
									"begin": 818,
									"end": 850,
									"name": "tag",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 818,
									"end": 850,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 467,
									"end": 5862,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "8"
								},
								{
									"begin": 467,
									"end": 5862,
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 10,
									"value": "6"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 693,
									"end": 700,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 10
								},
								{
									"begin": 712,
									"end": 729,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 712,
									"end": 729,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMP",
									"source": 10,
									"value": "[out]"
								},
								{
									"begin": 1377,
									"end": 1564,
									"name": "tag",
									"source": 13,
									"value": "7"
								},
								{
									"begin": 1377,
									"end": 1564,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1450,
									"end": 1466,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1469,
									"end": 1475,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1469,
									"end": 1475,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1469,
									"end": 1475,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1469,
									"end": 1475,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": 1469,
									"end": 1475,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1469,
									"end": 1475,
									"name": "PUSH",
									"source": 13,
									"value": "100"
								},
								{
									"begin": 1469,
									"end": 1475,
									"name": "EXP",
									"source": 13
								},
								{
									"begin": 1469,
									"end": 1475,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1469,
									"end": 1475,
									"name": "DIV",
									"source": 13
								},
								{
									"begin": 1469,
									"end": 1475,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1469,
									"end": 1475,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 1450,
									"end": 1475,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1450,
									"end": 1475,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1494,
									"end": 1502,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1485,
									"end": 1491,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1485,
									"end": 1491,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1485,
									"end": 1502,
									"name": "PUSH",
									"source": 13,
									"value": "100"
								},
								{
									"begin": 1485,
									"end": 1502,
									"name": "EXP",
									"source": 13
								},
								{
									"begin": 1485,
									"end": 1502,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1485,
									"end": 1502,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": 1485,
									"end": 1502,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1485,
									"end": 1502,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1485,
									"end": 1502,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 1485,
									"end": 1502,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 1485,
									"end": 1502,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 1485,
									"end": 1502,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1485,
									"end": 1502,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 1485,
									"end": 1502,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1485,
									"end": 1502,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 1485,
									"end": 1502,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 1485,
									"end": 1502,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 1485,
									"end": 1502,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1485,
									"end": 1502,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 1485,
									"end": 1502,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1548,
									"end": 1556,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1517,
									"end": 1557,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1517,
									"end": 1557,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 1538,
									"end": 1546,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1517,
									"end": 1557,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1517,
									"end": 1557,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 1517,
									"end": 1557,
									"name": "PUSH",
									"source": 13,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 1517,
									"end": 1557,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 1517,
									"end": 1557,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 1517,
									"end": 1557,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 1517,
									"end": 1557,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 1517,
									"end": 1557,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1517,
									"end": 1557,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1517,
									"end": 1557,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 1517,
									"end": 1557,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1517,
									"end": 1557,
									"name": "LOG3",
									"source": 13
								},
								{
									"begin": 1440,
									"end": 1564,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1377,
									"end": 1564,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1377,
									"end": 1564,
									"name": "JUMP",
									"source": 13,
									"value": "[out]"
								},
								{
									"begin": 467,
									"end": 5862,
									"name": "tag",
									"source": 14,
									"value": "8"
								},
								{
									"begin": 467,
									"end": 5862,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 467,
									"end": 5862,
									"name": "PUSH #[$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 5862,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 467,
									"end": 5862,
									"name": "PUSH [$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 5862,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 5862,
									"name": "CODECOPY",
									"source": 14
								},
								{
									"begin": 467,
									"end": 5862,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 5862,
									"name": "RETURN",
									"source": 14
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f1d8b4b0284f12790094990bace63ab8c51b33f2fadcfd7d71ef9fc66b7b00d464736f6c63430008070033",
									".code": [
										{
											"begin": 467,
											"end": 5862,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 467,
											"end": 5862,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 467,
											"end": 5862,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 467,
											"end": 5862,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 467,
											"end": 5862,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 467,
											"end": 5862,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 467,
											"end": 5862,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 467,
											"end": 5862,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 467,
											"end": 5862,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 467,
											"end": 5862,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 467,
											"end": 5862,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 467,
											"end": 5862,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 467,
											"end": 5862,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 467,
											"end": 5862,
											"name": "PUSH",
											"source": 14,
											"value": "8DA5CB5B"
										},
										{
											"begin": 467,
											"end": 5862,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 467,
											"end": 5862,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "11"
										},
										{
											"begin": 467,
											"end": 5862,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 467,
											"end": 5862,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 467,
											"end": 5862,
											"name": "PUSH",
											"source": 14,
											"value": "8DA5CB5B"
										},
										{
											"begin": 467,
											"end": 5862,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 467,
											"end": 5862,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "7"
										},
										{
											"begin": 467,
											"end": 5862,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 467,
											"end": 5862,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 467,
											"end": 5862,
											"name": "PUSH",
											"source": 14,
											"value": "BC197C81"
										},
										{
											"begin": 467,
											"end": 5862,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 467,
											"end": 5862,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "8"
										},
										{
											"begin": 467,
											"end": 5862,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 467,
											"end": 5862,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 467,
											"end": 5862,
											"name": "PUSH",
											"source": 14,
											"value": "F09A4016"
										},
										{
											"begin": 467,
											"end": 5862,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 467,
											"end": 5862,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "9"
										},
										{
											"begin": 467,
											"end": 5862,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 467,
											"end": 5862,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 467,
											"end": 5862,
											"name": "PUSH",
											"source": 14,
											"value": "F23A6E61"
										},
										{
											"begin": 467,
											"end": 5862,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 467,
											"end": 5862,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "10"
										},
										{
											"begin": 467,
											"end": 5862,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 467,
											"end": 5862,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 467,
											"end": 5862,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 467,
											"end": 5862,
											"name": "tag",
											"source": 14,
											"value": "11"
										},
										{
											"begin": 467,
											"end": 5862,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 467,
											"end": 5862,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 467,
											"end": 5862,
											"name": "PUSH",
											"source": 14,
											"value": "1FFC9A7"
										},
										{
											"begin": 467,
											"end": 5862,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 467,
											"end": 5862,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 467,
											"end": 5862,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 467,
											"end": 5862,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 467,
											"end": 5862,
											"name": "PUSH",
											"source": 14,
											"value": "150B7A02"
										},
										{
											"begin": 467,
											"end": 5862,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 467,
											"end": 5862,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 467,
											"end": 5862,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 467,
											"end": 5862,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 467,
											"end": 5862,
											"name": "PUSH",
											"source": 14,
											"value": "450B2AD7"
										},
										{
											"begin": 467,
											"end": 5862,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 467,
											"end": 5862,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "5"
										},
										{
											"begin": 467,
											"end": 5862,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 467,
											"end": 5862,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 467,
											"end": 5862,
											"name": "PUSH",
											"source": 14,
											"value": "71B4BC99"
										},
										{
											"begin": 467,
											"end": 5862,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 467,
											"end": 5862,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "6"
										},
										{
											"begin": 467,
											"end": 5862,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 467,
											"end": 5862,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 467,
											"end": 5862,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 467,
											"end": 5862,
											"name": "tag",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 467,
											"end": 5862,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 467,
											"end": 5862,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 467,
											"end": 5862,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 467,
											"end": 5862,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 467,
											"end": 5862,
											"name": "STOP",
											"source": 14
										},
										{
											"begin": 467,
											"end": 5862,
											"name": "tag",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 467,
											"end": 5862,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 467,
											"end": 5862,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 467,
											"end": 5862,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 467,
											"end": 5862,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 387,
											"end": 608,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 588,
											"end": 788,
											"name": "tag",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "tag",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "tag",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "tag",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "tag",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 4485,
											"end": 4614,
											"name": "tag",
											"source": 14,
											"value": "5"
										},
										{
											"begin": 4485,
											"end": 4614,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4485,
											"end": 4614,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 4485,
											"end": 4614,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4485,
											"end": 4614,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4485,
											"end": 4614,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "28"
										},
										{
											"begin": 4485,
											"end": 4614,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4485,
											"end": 4614,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4485,
											"end": 4614,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4485,
											"end": 4614,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 4485,
											"end": 4614,
											"name": "tag",
											"source": 14,
											"value": "28"
										},
										{
											"begin": 4485,
											"end": 4614,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4485,
											"end": 4614,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4485,
											"end": 4614,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "29"
										},
										{
											"begin": 4485,
											"end": 4614,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "30"
										},
										{
											"begin": 4485,
											"end": 4614,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 4485,
											"end": 4614,
											"name": "tag",
											"source": 14,
											"value": "29"
										},
										{
											"begin": 4485,
											"end": 4614,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4485,
											"end": 4614,
											"name": "STOP",
											"source": 14
										},
										{
											"begin": 4062,
											"end": 4264,
											"name": "tag",
											"source": 14,
											"value": "6"
										},
										{
											"begin": 4062,
											"end": 4264,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4062,
											"end": 4264,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 4062,
											"end": 4264,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4062,
											"end": 4264,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4062,
											"end": 4264,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "31"
										},
										{
											"begin": 4062,
											"end": 4264,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4062,
											"end": 4264,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4062,
											"end": 4264,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4062,
											"end": 4264,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 4062,
											"end": 4264,
											"name": "tag",
											"source": 14,
											"value": "31"
										},
										{
											"begin": 4062,
											"end": 4264,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4062,
											"end": 4264,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4062,
											"end": 4264,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "32"
										},
										{
											"begin": 4062,
											"end": 4264,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 4062,
											"end": 4264,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4062,
											"end": 4264,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 4062,
											"end": 4264,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 4062,
											"end": 4264,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4062,
											"end": 4264,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4062,
											"end": 4264,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4062,
											"end": 4264,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "33"
										},
										{
											"begin": 4062,
											"end": 4264,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4062,
											"end": 4264,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4062,
											"end": 4264,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "34"
										},
										{
											"begin": 4062,
											"end": 4264,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 4062,
											"end": 4264,
											"name": "tag",
											"source": 14,
											"value": "33"
										},
										{
											"begin": 4062,
											"end": 4264,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4062,
											"end": 4264,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "35"
										},
										{
											"begin": 4062,
											"end": 4264,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 4062,
											"end": 4264,
											"name": "tag",
											"source": 14,
											"value": "32"
										},
										{
											"begin": 4062,
											"end": 4264,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4062,
											"end": 4264,
											"name": "STOP",
											"source": 14
										},
										{
											"begin": 933,
											"end": 1018,
											"name": "tag",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 933,
											"end": 1018,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 933,
											"end": 1018,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 933,
											"end": 1018,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 933,
											"end": 1018,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 933,
											"end": 1018,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "36"
										},
										{
											"begin": 933,
											"end": 1018,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 933,
											"end": 1018,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 933,
											"end": 1018,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 933,
											"end": 1018,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 933,
											"end": 1018,
											"name": "tag",
											"source": 13,
											"value": "36"
										},
										{
											"begin": 933,
											"end": 1018,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 933,
											"end": 1018,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 933,
											"end": 1018,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "37"
										},
										{
											"begin": 933,
											"end": 1018,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "38"
										},
										{
											"begin": 933,
											"end": 1018,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 933,
											"end": 1018,
											"name": "tag",
											"source": 13,
											"value": "37"
										},
										{
											"begin": 933,
											"end": 1018,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 933,
											"end": 1018,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 933,
											"end": 1018,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 933,
											"end": 1018,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "39"
										},
										{
											"begin": 933,
											"end": 1018,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 933,
											"end": 1018,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 933,
											"end": 1018,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 933,
											"end": 1018,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 933,
											"end": 1018,
											"name": "tag",
											"source": 13,
											"value": "39"
										},
										{
											"begin": 933,
											"end": 1018,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 933,
											"end": 1018,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 933,
											"end": 1018,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 933,
											"end": 1018,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 933,
											"end": 1018,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 933,
											"end": 1018,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 933,
											"end": 1018,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 933,
											"end": 1018,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 724,
											"end": 971,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 644,
											"end": 1144,
											"name": "tag",
											"source": 14,
											"value": "9"
										},
										{
											"begin": 644,
											"end": 1144,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 644,
											"end": 1144,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 644,
											"end": 1144,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 644,
											"end": 1144,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 644,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "47"
										},
										{
											"begin": 644,
											"end": 1144,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 644,
											"end": 1144,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 644,
											"end": 1144,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 644,
											"end": 1144,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 644,
											"end": 1144,
											"name": "tag",
											"source": 14,
											"value": "47"
										},
										{
											"begin": 644,
											"end": 1144,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 644,
											"end": 1144,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 644,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "48"
										},
										{
											"begin": 644,
											"end": 1144,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 644,
											"end": 1144,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 644,
											"end": 1144,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 644,
											"end": 1144,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 644,
											"end": 1144,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 644,
											"end": 1144,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 644,
											"end": 1144,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 644,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "49"
										},
										{
											"begin": 644,
											"end": 1144,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 644,
											"end": 1144,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 644,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "50"
										},
										{
											"begin": 644,
											"end": 1144,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 644,
											"end": 1144,
											"name": "tag",
											"source": 14,
											"value": "49"
										},
										{
											"begin": 644,
											"end": 1144,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 644,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "51"
										},
										{
											"begin": 644,
											"end": 1144,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 644,
											"end": 1144,
											"name": "tag",
											"source": 14,
											"value": "48"
										},
										{
											"begin": 644,
											"end": 1144,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 644,
											"end": 1144,
											"name": "STOP",
											"source": 14
										},
										{
											"begin": 499,
											"end": 718,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 387,
											"end": 608,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 489,
											"end": 493,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 527,
											"end": 561,
											"name": "PUSH",
											"source": 3,
											"value": "4E2312E000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 512,
											"end": 561,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 512,
											"end": 561,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 512,
											"end": 561,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 512,
											"end": 523,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 512,
											"end": 561,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 512,
											"end": 561,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 512,
											"end": 561,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 512,
											"end": 561,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 512,
											"end": 601,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 512,
											"end": 601,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 512,
											"end": 601,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 512,
											"end": 601,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 565,
											"end": 601,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 589,
											"end": 600,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 565,
											"end": 588,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 565,
											"end": 601,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 565,
											"end": 601,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 565,
											"end": 601,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 512,
											"end": 601,
											"name": "tag",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 512,
											"end": 601,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 505,
											"end": 601,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 505,
											"end": 601,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "tag",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 726,
											"end": 732,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 781,
											"name": "PUSH",
											"source": 8,
											"value": "150B7A02"
										},
										{
											"begin": 751,
											"end": 781,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 751,
											"end": 781,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 744,
											"end": 781,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 744,
											"end": 781,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 4485,
											"end": 4614,
											"name": "tag",
											"source": 14,
											"value": "30"
										},
										{
											"begin": 4485,
											"end": 4614,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1156,
											"end": 1168,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 1156,
											"end": 1166,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "65"
										},
										{
											"begin": 1156,
											"end": 1168,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1156,
											"end": 1168,
											"name": "tag",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 1156,
											"end": 1168,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1145,
											"end": 1168,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1145,
											"end": 1168,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "66"
										},
										{
											"begin": 1145,
											"end": 1150,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "38"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "tag",
											"source": 13,
											"value": "66"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1145,
											"end": 1168,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1145,
											"end": 1168,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1145,
											"end": 1168,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "67"
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "68"
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "69"
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "tag",
											"source": 13,
											"value": "68"
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "tag",
											"source": 13,
											"value": "67"
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4555,
											"end": 4607,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "71"
										},
										{
											"begin": 4593,
											"end": 4605,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 4593,
											"end": 4605,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4593,
											"end": 4605,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4593,
											"end": 4605,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 4593,
											"end": 4605,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4593,
											"end": 4605,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 4593,
											"end": 4605,
											"name": "EXP",
											"source": 14
										},
										{
											"begin": 4593,
											"end": 4605,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4593,
											"end": 4605,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 4593,
											"end": 4605,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4593,
											"end": 4605,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4555,
											"end": 4584,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "72"
										},
										{
											"begin": 4555,
											"end": 4607,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 4555,
											"end": 4607,
											"name": "tag",
											"source": 14,
											"value": "71"
										},
										{
											"begin": 4555,
											"end": 4607,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4485,
											"end": 4614,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 4062,
											"end": 4264,
											"name": "tag",
											"source": 14,
											"value": "35"
										},
										{
											"begin": 4062,
											"end": 4264,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1156,
											"end": 1168,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "74"
										},
										{
											"begin": 1156,
											"end": 1166,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "65"
										},
										{
											"begin": 1156,
											"end": 1168,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1156,
											"end": 1168,
											"name": "tag",
											"source": 13,
											"value": "74"
										},
										{
											"begin": 1156,
											"end": 1168,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1145,
											"end": 1168,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1145,
											"end": 1168,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "75"
										},
										{
											"begin": 1145,
											"end": 1150,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "38"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "tag",
											"source": 13,
											"value": "75"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1145,
											"end": 1168,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1145,
											"end": 1168,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1145,
											"end": 1168,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "76"
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "77"
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "69"
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "tag",
											"source": 13,
											"value": "77"
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "tag",
											"source": 13,
											"value": "76"
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4191,
											"end": 4257,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "79"
										},
										{
											"begin": 4221,
											"end": 4233,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 4221,
											"end": 4233,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4221,
											"end": 4233,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4221,
											"end": 4233,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 4221,
											"end": 4233,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4221,
											"end": 4233,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 4221,
											"end": 4233,
											"name": "EXP",
											"source": 14
										},
										{
											"begin": 4221,
											"end": 4233,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4221,
											"end": 4233,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 4221,
											"end": 4233,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4221,
											"end": 4233,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4235,
											"end": 4247,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4249,
											"end": 4256,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4191,
											"end": 4220,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 4191,
											"end": 4257,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 4191,
											"end": 4257,
											"name": "tag",
											"source": 14,
											"value": "79"
										},
										{
											"begin": 4191,
											"end": 4257,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4062,
											"end": 4264,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4062,
											"end": 4264,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4062,
											"end": 4264,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 933,
											"end": 1018,
											"name": "tag",
											"source": 13,
											"value": "38"
										},
										{
											"begin": 933,
											"end": 1018,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 979,
											"end": 986,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1005,
											"end": 1011,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1005,
											"end": 1011,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1005,
											"end": 1011,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1005,
											"end": 1011,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1005,
											"end": 1011,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1005,
											"end": 1011,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 1005,
											"end": 1011,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 1005,
											"end": 1011,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1005,
											"end": 1011,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 1005,
											"end": 1011,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1005,
											"end": 1011,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 998,
											"end": 1011,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 998,
											"end": 1011,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 933,
											"end": 1018,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 933,
											"end": 1018,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 903,
											"end": 909,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 928,
											"end": 964,
											"name": "PUSH",
											"source": 2,
											"value": "BC197C81"
										},
										{
											"begin": 928,
											"end": 964,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 928,
											"end": 964,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 921,
											"end": 964,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 921,
											"end": 964,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 644,
											"end": 1144,
											"name": "tag",
											"source": 14,
											"value": "51"
										},
										{
											"begin": 644,
											"end": 1144,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 751,
											"end": 752,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 733,
											"end": 753,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 733,
											"end": 753,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 733,
											"end": 740,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 733,
											"end": 753,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 733,
											"end": 753,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 733,
											"end": 753,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 733,
											"end": 753,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 725,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "84"
										},
										{
											"begin": 725,
											"end": 788,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 725,
											"end": 788,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 725,
											"end": 788,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 725,
											"end": 788,
											"name": "PUSH",
											"source": 14,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 725,
											"end": 788,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 725,
											"end": 788,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 725,
											"end": 788,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 725,
											"end": 788,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 725,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "85"
										},
										{
											"begin": 725,
											"end": 788,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 725,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "86"
										},
										{
											"begin": 725,
											"end": 788,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 725,
											"end": 788,
											"name": "tag",
											"source": 14,
											"value": "85"
										},
										{
											"begin": 725,
											"end": 788,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 725,
											"end": 788,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 725,
											"end": 788,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 725,
											"end": 788,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 725,
											"end": 788,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 725,
											"end": 788,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 725,
											"end": 788,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 725,
											"end": 788,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 725,
											"end": 788,
											"name": "tag",
											"source": 14,
											"value": "84"
										},
										{
											"begin": 725,
											"end": 788,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 830,
											"end": 831,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 806,
											"end": 832,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 806,
											"end": 832,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 806,
											"end": 819,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 806,
											"end": 832,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 806,
											"end": 832,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 806,
											"end": 832,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 806,
											"end": 832,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 798,
											"end": 867,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "87"
										},
										{
											"begin": 798,
											"end": 867,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 798,
											"end": 867,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 798,
											"end": 867,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 798,
											"end": 867,
											"name": "PUSH",
											"source": 14,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 798,
											"end": 867,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 798,
											"end": 867,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 798,
											"end": 867,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 798,
											"end": 867,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 798,
											"end": 867,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "88"
										},
										{
											"begin": 798,
											"end": 867,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 798,
											"end": 867,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "89"
										},
										{
											"begin": 798,
											"end": 867,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 798,
											"end": 867,
											"name": "tag",
											"source": 14,
											"value": "88"
										},
										{
											"begin": 798,
											"end": 867,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 798,
											"end": 867,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 798,
											"end": 867,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 798,
											"end": 867,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 798,
											"end": 867,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 798,
											"end": 867,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 798,
											"end": 867,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 798,
											"end": 867,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 798,
											"end": 867,
											"name": "tag",
											"source": 14,
											"value": "87"
										},
										{
											"begin": 798,
											"end": 867,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 901,
											"end": 908,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 885,
											"end": 908,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 885,
											"end": 908,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 885,
											"end": 898,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 885,
											"end": 908,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 885,
											"end": 908,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 885,
											"end": 908,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 885,
											"end": 908,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 877,
											"end": 959,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "90"
										},
										{
											"begin": 877,
											"end": 959,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 877,
											"end": 959,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 877,
											"end": 959,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 877,
											"end": 959,
											"name": "PUSH",
											"source": 14,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 877,
											"end": 959,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 877,
											"end": 959,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 877,
											"end": 959,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 877,
											"end": 959,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 877,
											"end": 959,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "91"
										},
										{
											"begin": 877,
											"end": 959,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 877,
											"end": 959,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "92"
										},
										{
											"begin": 877,
											"end": 959,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 877,
											"end": 959,
											"name": "tag",
											"source": 14,
											"value": "91"
										},
										{
											"begin": 877,
											"end": 959,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 877,
											"end": 959,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 877,
											"end": 959,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 877,
											"end": 959,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 877,
											"end": 959,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 877,
											"end": 959,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 877,
											"end": 959,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 877,
											"end": 959,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 877,
											"end": 959,
											"name": "tag",
											"source": 14,
											"value": "90"
										},
										{
											"begin": 877,
											"end": 959,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 994,
											"end": 999,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 977,
											"end": 999,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 977,
											"end": 999,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 977,
											"end": 990,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 977,
											"end": 990,
											"name": "PUSH",
											"source": 14,
											"value": "14"
										},
										{
											"begin": 977,
											"end": 990,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 977,
											"end": 990,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 977,
											"end": 990,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 977,
											"end": 990,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 977,
											"end": 990,
											"name": "EXP",
											"source": 14
										},
										{
											"begin": 977,
											"end": 990,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 977,
											"end": 990,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 977,
											"end": 990,
											"name": "PUSH",
											"source": 14,
											"value": "FF"
										},
										{
											"begin": 977,
											"end": 990,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 977,
											"end": 999,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 977,
											"end": 999,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 977,
											"end": 999,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 969,
											"end": 1032,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "93"
										},
										{
											"begin": 969,
											"end": 1032,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 969,
											"end": 1032,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 969,
											"end": 1032,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 969,
											"end": 1032,
											"name": "PUSH",
											"source": 14,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 969,
											"end": 1032,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 969,
											"end": 1032,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 969,
											"end": 1032,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 969,
											"end": 1032,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 969,
											"end": 1032,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "94"
										},
										{
											"begin": 969,
											"end": 1032,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 969,
											"end": 1032,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "95"
										},
										{
											"begin": 969,
											"end": 1032,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 969,
											"end": 1032,
											"name": "tag",
											"source": 14,
											"value": "94"
										},
										{
											"begin": 969,
											"end": 1032,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 969,
											"end": 1032,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 969,
											"end": 1032,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 969,
											"end": 1032,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 969,
											"end": 1032,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 969,
											"end": 1032,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 969,
											"end": 1032,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 969,
											"end": 1032,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 969,
											"end": 1032,
											"name": "tag",
											"source": 14,
											"value": "93"
										},
										{
											"begin": 969,
											"end": 1032,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1042,
											"end": 1069,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "96"
										},
										{
											"begin": 1061,
											"end": 1068,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1042,
											"end": 1060,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "97"
										},
										{
											"begin": 1042,
											"end": 1069,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 1042,
											"end": 1069,
											"name": "tag",
											"source": 14,
											"value": "96"
										},
										{
											"begin": 1042,
											"end": 1069,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1079,
											"end": 1091,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 1079,
											"end": 1091,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1079,
											"end": 1107,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 1079,
											"end": 1107,
											"name": "EXP",
											"source": 14
										},
										{
											"begin": 1079,
											"end": 1107,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1079,
											"end": 1107,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 1079,
											"end": 1107,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1079,
											"end": 1107,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1079,
											"end": 1107,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 1079,
											"end": 1107,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 1079,
											"end": 1107,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1079,
											"end": 1107,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1079,
											"end": 1107,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1079,
											"end": 1107,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1079,
											"end": 1107,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1079,
											"end": 1107,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 1079,
											"end": 1107,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 1079,
											"end": 1107,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1079,
											"end": 1107,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 1079,
											"end": 1107,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1133,
											"end": 1137,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 1117,
											"end": 1130,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1117,
											"end": 1130,
											"name": "PUSH",
											"source": 14,
											"value": "14"
										},
										{
											"begin": 1117,
											"end": 1137,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 1117,
											"end": 1137,
											"name": "EXP",
											"source": 14
										},
										{
											"begin": 1117,
											"end": 1137,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1117,
											"end": 1137,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 1117,
											"end": 1137,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1117,
											"end": 1137,
											"name": "PUSH",
											"source": 14,
											"value": "FF"
										},
										{
											"begin": 1117,
											"end": 1137,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 1117,
											"end": 1137,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 1117,
											"end": 1137,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1117,
											"end": 1137,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1117,
											"end": 1137,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1117,
											"end": 1137,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1117,
											"end": 1137,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1117,
											"end": 1137,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 1117,
											"end": 1137,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 1117,
											"end": 1137,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1117,
											"end": 1137,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 1117,
											"end": 1137,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 644,
											"end": 1144,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 644,
											"end": 1144,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 644,
											"end": 1144,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 655,
											"end": 661,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 711,
											"name": "PUSH",
											"source": 2,
											"value": "F23A6E61"
										},
										{
											"begin": 680,
											"end": 711,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 680,
											"end": 711,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 673,
											"end": 711,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 673,
											"end": 711,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "tag",
											"source": 11,
											"value": "61"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 914,
											"end": 918,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 952,
											"end": 977,
											"name": "PUSH",
											"source": 11,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 937,
											"end": 948,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 937,
											"end": 977,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 937,
											"end": 977,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 930,
											"end": 977,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 930,
											"end": 977,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 829,
											"end": 984,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 829,
											"end": 984,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 5652,
											"end": 5860,
											"name": "tag",
											"source": 14,
											"value": "72"
										},
										{
											"begin": 5652,
											"end": 5860,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5736,
											"end": 5751,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5754,
											"end": 5775,
											"name": "SELFBALANCE",
											"source": 14
										},
										{
											"begin": 5736,
											"end": 5775,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5736,
											"end": 5775,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5799,
											"end": 5800,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5789,
											"end": 5796,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5789,
											"end": 5800,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 5785,
											"end": 5854,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 5785,
											"end": 5854,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "102"
										},
										{
											"begin": 5785,
											"end": 5854,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5816,
											"end": 5825,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5816,
											"end": 5834,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5816,
											"end": 5834,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 5816,
											"end": 5843,
											"name": "PUSH",
											"source": 14,
											"value": "8FC"
										},
										{
											"begin": 5835,
											"end": 5842,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5816,
											"end": 5843,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5816,
											"end": 5843,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5816,
											"end": 5843,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 5816,
											"end": 5843,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 5816,
											"end": 5843,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5816,
											"end": 5843,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 5816,
											"end": 5843,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 5816,
											"end": 5843,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5816,
											"end": 5843,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 5816,
											"end": 5843,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 5816,
											"end": 5843,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5816,
											"end": 5843,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 5816,
											"end": 5843,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 5816,
											"end": 5843,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5816,
											"end": 5843,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 5816,
											"end": 5843,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 5816,
											"end": 5843,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 5816,
											"end": 5843,
											"name": "CALL",
											"source": 14
										},
										{
											"begin": 5816,
											"end": 5843,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 5816,
											"end": 5843,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5816,
											"end": 5843,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5816,
											"end": 5843,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5816,
											"end": 5843,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5816,
											"end": 5843,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 5816,
											"end": 5843,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5816,
											"end": 5843,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 5816,
											"end": 5843,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "104"
										},
										{
											"begin": 5816,
											"end": 5843,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5816,
											"end": 5843,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 5816,
											"end": 5843,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5816,
											"end": 5843,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5816,
											"end": 5843,
											"name": "RETURNDATACOPY",
											"source": 14
										},
										{
											"begin": 5816,
											"end": 5843,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 5816,
											"end": 5843,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5816,
											"end": 5843,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 5816,
											"end": 5843,
											"name": "tag",
											"source": 14,
											"value": "104"
										},
										{
											"begin": 5816,
											"end": 5843,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5816,
											"end": 5843,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5785,
											"end": 5854,
											"name": "tag",
											"source": 14,
											"value": "102"
										},
										{
											"begin": 5785,
											"end": 5854,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5726,
											"end": 5860,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5652,
											"end": 5860,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5652,
											"end": 5860,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 1882,
											"end": 2107,
											"name": "tag",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 1882,
											"end": 2107,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2035,
											"end": 2047,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2027,
											"end": 2065,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2027,
											"end": 2065,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2027,
											"end": 2065,
											"name": "PUSH",
											"source": 14,
											"value": "42842E0E"
										},
										{
											"begin": 2074,
											"end": 2078,
											"name": "ADDRESS",
											"source": 14
										},
										{
											"begin": 2081,
											"end": 2090,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 2092,
											"end": 2099,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2027,
											"end": 2100,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2027,
											"end": 2100,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2027,
											"end": 2100,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2027,
											"end": 2100,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2027,
											"end": 2100,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2027,
											"end": 2100,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 2027,
											"end": 2100,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 2027,
											"end": 2100,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2027,
											"end": 2100,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2027,
											"end": 2100,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 2027,
											"end": 2100,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2027,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "106"
										},
										{
											"begin": 2027,
											"end": 2100,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 2027,
											"end": 2100,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2027,
											"end": 2100,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2027,
											"end": 2100,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2027,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "107"
										},
										{
											"begin": 2027,
											"end": 2100,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 2027,
											"end": 2100,
											"name": "tag",
											"source": 14,
											"value": "106"
										},
										{
											"begin": 2027,
											"end": 2100,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2027,
											"end": 2100,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2027,
											"end": 2100,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2027,
											"end": 2100,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2027,
											"end": 2100,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2027,
											"end": 2100,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2027,
											"end": 2100,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2027,
											"end": 2100,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2027,
											"end": 2100,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2027,
											"end": 2100,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 2027,
											"end": 2100,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2027,
											"end": 2100,
											"name": "EXTCODESIZE",
											"source": 14
										},
										{
											"begin": 2027,
											"end": 2100,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2027,
											"end": 2100,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2027,
											"end": 2100,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2027,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "108"
										},
										{
											"begin": 2027,
											"end": 2100,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2027,
											"end": 2100,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2027,
											"end": 2100,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2027,
											"end": 2100,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2027,
											"end": 2100,
											"name": "tag",
											"source": 14,
											"value": "108"
										},
										{
											"begin": 2027,
											"end": 2100,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2027,
											"end": 2100,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2027,
											"end": 2100,
											"name": "GAS",
											"source": 14
										},
										{
											"begin": 2027,
											"end": 2100,
											"name": "CALL",
											"source": 14
										},
										{
											"begin": 2027,
											"end": 2100,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2027,
											"end": 2100,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2027,
											"end": 2100,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2027,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "110"
										},
										{
											"begin": 2027,
											"end": 2100,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2027,
											"end": 2100,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 2027,
											"end": 2100,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2027,
											"end": 2100,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2027,
											"end": 2100,
											"name": "RETURNDATACOPY",
											"source": 14
										},
										{
											"begin": 2027,
											"end": 2100,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 2027,
											"end": 2100,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2027,
											"end": 2100,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2027,
											"end": 2100,
											"name": "tag",
											"source": 14,
											"value": "110"
										},
										{
											"begin": 2027,
											"end": 2100,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2027,
											"end": 2100,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2027,
											"end": 2100,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2027,
											"end": 2100,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2027,
											"end": 2100,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1882,
											"end": 2107,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1882,
											"end": 2107,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1882,
											"end": 2107,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1882,
											"end": 2107,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 1377,
											"end": 1564,
											"name": "tag",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 1377,
											"end": 1564,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1450,
											"end": 1466,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1469,
											"end": 1475,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1469,
											"end": 1475,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1469,
											"end": 1475,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1469,
											"end": 1475,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1469,
											"end": 1475,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1469,
											"end": 1475,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 1469,
											"end": 1475,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 1469,
											"end": 1475,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1469,
											"end": 1475,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 1469,
											"end": 1475,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1469,
											"end": 1475,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1450,
											"end": 1475,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1450,
											"end": 1475,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1494,
											"end": 1502,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1485,
											"end": 1491,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1485,
											"end": 1491,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1485,
											"end": 1502,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 1485,
											"end": 1502,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 1485,
											"end": 1502,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1485,
											"end": 1502,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1485,
											"end": 1502,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1485,
											"end": 1502,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1485,
											"end": 1502,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 1485,
											"end": 1502,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 1485,
											"end": 1502,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1485,
											"end": 1502,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1485,
											"end": 1502,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1485,
											"end": 1502,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1485,
											"end": 1502,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1485,
											"end": 1502,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 1485,
											"end": 1502,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 1485,
											"end": 1502,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1485,
											"end": 1502,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 1485,
											"end": 1502,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1548,
											"end": 1556,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1517,
											"end": 1557,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1517,
											"end": 1557,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1538,
											"end": 1546,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1517,
											"end": 1557,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1517,
											"end": 1557,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1517,
											"end": 1557,
											"name": "PUSH",
											"source": 13,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1517,
											"end": 1557,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1517,
											"end": 1557,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1517,
											"end": 1557,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1517,
											"end": 1557,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1517,
											"end": 1557,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1517,
											"end": 1557,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1517,
											"end": 1557,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1517,
											"end": 1557,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1517,
											"end": 1557,
											"name": "LOG3",
											"source": 13
										},
										{
											"begin": 1440,
											"end": 1564,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1377,
											"end": 1564,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1377,
											"end": 1564,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 24,
											"end": 746,
											"name": "tag",
											"source": 15,
											"value": "113"
										},
										{
											"begin": 24,
											"end": 746,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 120,
											"end": 125,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 145,
											"end": 226,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "115"
										},
										{
											"begin": 161,
											"end": 225,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "116"
										},
										{
											"begin": 218,
											"end": 224,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 161,
											"end": 225,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "117"
										},
										{
											"begin": 161,
											"end": 225,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 161,
											"end": 225,
											"name": "tag",
											"source": 15,
											"value": "116"
										},
										{
											"begin": 161,
											"end": 225,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 145,
											"end": 226,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "118"
										},
										{
											"begin": 145,
											"end": 226,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 145,
											"end": 226,
											"name": "tag",
											"source": 15,
											"value": "115"
										},
										{
											"begin": 145,
											"end": 226,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 136,
											"end": 226,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 136,
											"end": 226,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 246,
											"end": 251,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 275,
											"end": 281,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 268,
											"end": 273,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 261,
											"end": 282,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 309,
											"end": 313,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 302,
											"end": 307,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 298,
											"end": 314,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 291,
											"end": 314,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 291,
											"end": 314,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 335,
											"end": 341,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 385,
											"end": 388,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 377,
											"end": 381,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 369,
											"end": 375,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 365,
											"end": 382,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 360,
											"end": 363,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 356,
											"end": 383,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 353,
											"end": 389,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 350,
											"end": 493,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 350,
											"end": 493,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "119"
										},
										{
											"begin": 350,
											"end": 493,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 404,
											"end": 483,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "120"
										},
										{
											"begin": 404,
											"end": 483,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "121"
										},
										{
											"begin": 404,
											"end": 483,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 404,
											"end": 483,
											"name": "tag",
											"source": 15,
											"value": "120"
										},
										{
											"begin": 404,
											"end": 483,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 350,
											"end": 493,
											"name": "tag",
											"source": 15,
											"value": "119"
										},
										{
											"begin": 350,
											"end": 493,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 517,
											"end": 518,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 502,
											"end": 740,
											"name": "tag",
											"source": 15,
											"value": "122"
										},
										{
											"begin": 502,
											"end": 740,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 527,
											"end": 533,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 524,
											"end": 525,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 521,
											"end": 534,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 502,
											"end": 740,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 502,
											"end": 740,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "124"
										},
										{
											"begin": 502,
											"end": 740,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 595,
											"end": 598,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 624,
											"end": 661,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "125"
										},
										{
											"begin": 657,
											"end": 660,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 645,
											"end": 655,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 624,
											"end": 661,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "126"
										},
										{
											"begin": 624,
											"end": 661,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 624,
											"end": 661,
											"name": "tag",
											"source": 15,
											"value": "125"
										},
										{
											"begin": 624,
											"end": 661,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 619,
											"end": 622,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 612,
											"end": 662,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 691,
											"end": 695,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 686,
											"end": 689,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 682,
											"end": 696,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 675,
											"end": 696,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 675,
											"end": 696,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 725,
											"end": 729,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 720,
											"end": 723,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 716,
											"end": 730,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 709,
											"end": 730,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 709,
											"end": 730,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 562,
											"end": 740,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 549,
											"end": 550,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 546,
											"end": 547,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 542,
											"end": 551,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 537,
											"end": 551,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 537,
											"end": 551,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 502,
											"end": 740,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "122"
										},
										{
											"begin": 502,
											"end": 740,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 502,
											"end": 740,
											"name": "tag",
											"source": 15,
											"value": "124"
										},
										{
											"begin": 502,
											"end": 740,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 506,
											"end": 520,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 126,
											"end": 746,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 126,
											"end": 746,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 24,
											"end": 746,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 24,
											"end": 746,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 24,
											"end": 746,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 24,
											"end": 746,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 24,
											"end": 746,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 24,
											"end": 746,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 752,
											"end": 1162,
											"name": "tag",
											"source": 15,
											"value": "127"
										},
										{
											"begin": 752,
											"end": 1162,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 829,
											"end": 834,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 854,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "129"
										},
										{
											"begin": 870,
											"end": 918,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "130"
										},
										{
											"begin": 911,
											"end": 917,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 870,
											"end": 918,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "131"
										},
										{
											"begin": 870,
											"end": 918,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 870,
											"end": 918,
											"name": "tag",
											"source": 15,
											"value": "130"
										},
										{
											"begin": 870,
											"end": 918,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 854,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "118"
										},
										{
											"begin": 854,
											"end": 919,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 854,
											"end": 919,
											"name": "tag",
											"source": 15,
											"value": "129"
										},
										{
											"begin": 854,
											"end": 919,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 845,
											"end": 919,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 845,
											"end": 919,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 942,
											"end": 948,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 935,
											"end": 940,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 928,
											"end": 949,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 980,
											"end": 984,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 973,
											"end": 978,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 969,
											"end": 985,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1018,
											"end": 1021,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1009,
											"end": 1015,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1004,
											"end": 1007,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1000,
											"end": 1016,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 997,
											"end": 1022,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 994,
											"end": 1106,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 994,
											"end": 1106,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "132"
										},
										{
											"begin": 994,
											"end": 1106,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1025,
											"end": 1104,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "133"
										},
										{
											"begin": 1025,
											"end": 1104,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "134"
										},
										{
											"begin": 1025,
											"end": 1104,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 1025,
											"end": 1104,
											"name": "tag",
											"source": 15,
											"value": "133"
										},
										{
											"begin": 1025,
											"end": 1104,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 994,
											"end": 1106,
											"name": "tag",
											"source": 15,
											"value": "132"
										},
										{
											"begin": 994,
											"end": 1106,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1115,
											"end": 1156,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "135"
										},
										{
											"begin": 1149,
											"end": 1155,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1144,
											"end": 1147,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1139,
											"end": 1142,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 1115,
											"end": 1156,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "136"
										},
										{
											"begin": 1115,
											"end": 1156,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 1115,
											"end": 1156,
											"name": "tag",
											"source": 15,
											"value": "135"
										},
										{
											"begin": 1115,
											"end": 1156,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 835,
											"end": 1162,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 752,
											"end": 1162,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 752,
											"end": 1162,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 752,
											"end": 1162,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 752,
											"end": 1162,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 752,
											"end": 1162,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 752,
											"end": 1162,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 1168,
											"end": 1307,
											"name": "tag",
											"source": 15,
											"value": "137"
										},
										{
											"begin": 1168,
											"end": 1307,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1214,
											"end": 1219,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1252,
											"end": 1258,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1239,
											"end": 1259,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 1230,
											"end": 1259,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1230,
											"end": 1259,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1268,
											"end": 1301,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "139"
										},
										{
											"begin": 1295,
											"end": 1300,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1268,
											"end": 1301,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "140"
										},
										{
											"begin": 1268,
											"end": 1301,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 1268,
											"end": 1301,
											"name": "tag",
											"source": 15,
											"value": "139"
										},
										{
											"begin": 1268,
											"end": 1301,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1168,
											"end": 1307,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1168,
											"end": 1307,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1168,
											"end": 1307,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1168,
											"end": 1307,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1168,
											"end": 1307,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 1330,
											"end": 1700,
											"name": "tag",
											"source": 15,
											"value": "141"
										},
										{
											"begin": 1330,
											"end": 1700,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1401,
											"end": 1406,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1450,
											"end": 1453,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1443,
											"end": 1447,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 1435,
											"end": 1441,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1431,
											"end": 1448,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1427,
											"end": 1454,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 1417,
											"end": 1539,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "143"
										},
										{
											"begin": 1417,
											"end": 1539,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1458,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "144"
										},
										{
											"begin": 1458,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "145"
										},
										{
											"begin": 1458,
											"end": 1537,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 1458,
											"end": 1537,
											"name": "tag",
											"source": 15,
											"value": "144"
										},
										{
											"begin": 1458,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1417,
											"end": 1539,
											"name": "tag",
											"source": 15,
											"value": "143"
										},
										{
											"begin": 1417,
											"end": 1539,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1575,
											"end": 1581,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1562,
											"end": 1582,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 1600,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "146"
										},
										{
											"begin": 1690,
											"end": 1693,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1682,
											"end": 1688,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1675,
											"end": 1679,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1667,
											"end": 1673,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 1663,
											"end": 1680,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1600,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "113"
										},
										{
											"begin": 1600,
											"end": 1694,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 1600,
											"end": 1694,
											"name": "tag",
											"source": 15,
											"value": "146"
										},
										{
											"begin": 1600,
											"end": 1694,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1591,
											"end": 1694,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1591,
											"end": 1694,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1407,
											"end": 1700,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1330,
											"end": 1700,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1330,
											"end": 1700,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1330,
											"end": 1700,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1330,
											"end": 1700,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1330,
											"end": 1700,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 1706,
											"end": 1843,
											"name": "tag",
											"source": 15,
											"value": "147"
										},
										{
											"begin": 1706,
											"end": 1843,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1751,
											"end": 1756,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1789,
											"end": 1795,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1776,
											"end": 1796,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 1767,
											"end": 1796,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1767,
											"end": 1796,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1805,
											"end": 1837,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "149"
										},
										{
											"begin": 1831,
											"end": 1836,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1805,
											"end": 1837,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "150"
										},
										{
											"begin": 1805,
											"end": 1837,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 1805,
											"end": 1837,
											"name": "tag",
											"source": 15,
											"value": "149"
										},
										{
											"begin": 1805,
											"end": 1837,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1706,
											"end": 1843,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1706,
											"end": 1843,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1706,
											"end": 1843,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1706,
											"end": 1843,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1706,
											"end": 1843,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 1862,
											"end": 2200,
											"name": "tag",
											"source": 15,
											"value": "151"
										},
										{
											"begin": 1862,
											"end": 2200,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1917,
											"end": 1922,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1966,
											"end": 1969,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1959,
											"end": 1963,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 1951,
											"end": 1957,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1947,
											"end": 1964,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1943,
											"end": 1970,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 1933,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "153"
										},
										{
											"begin": 1933,
											"end": 2055,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1974,
											"end": 2053,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "154"
										},
										{
											"begin": 1974,
											"end": 2053,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "145"
										},
										{
											"begin": 1974,
											"end": 2053,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 1974,
											"end": 2053,
											"name": "tag",
											"source": 15,
											"value": "154"
										},
										{
											"begin": 1974,
											"end": 2053,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1933,
											"end": 2055,
											"name": "tag",
											"source": 15,
											"value": "153"
										},
										{
											"begin": 1933,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2091,
											"end": 2097,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 2116,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "155"
										},
										{
											"begin": 2190,
											"end": 2193,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 2182,
											"end": 2188,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2175,
											"end": 2179,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2167,
											"end": 2173,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 2163,
											"end": 2180,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2116,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "127"
										},
										{
											"begin": 2116,
											"end": 2194,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 2116,
											"end": 2194,
											"name": "tag",
											"source": 15,
											"value": "155"
										},
										{
											"begin": 2116,
											"end": 2194,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2107,
											"end": 2194,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2107,
											"end": 2194,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1923,
											"end": 2200,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1862,
											"end": 2200,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1862,
											"end": 2200,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1862,
											"end": 2200,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1862,
											"end": 2200,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1862,
											"end": 2200,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 2206,
											"end": 2345,
											"name": "tag",
											"source": 15,
											"value": "126"
										},
										{
											"begin": 2206,
											"end": 2345,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2252,
											"end": 2257,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2290,
											"end": 2296,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2277,
											"end": 2297,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 2268,
											"end": 2297,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2268,
											"end": 2297,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2306,
											"end": 2339,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "157"
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2306,
											"end": 2339,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "158"
										},
										{
											"begin": 2306,
											"end": 2339,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 2306,
											"end": 2339,
											"name": "tag",
											"source": 15,
											"value": "157"
										},
										{
											"begin": 2306,
											"end": 2339,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2206,
											"end": 2345,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2206,
											"end": 2345,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2206,
											"end": 2345,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2206,
											"end": 2345,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2206,
											"end": 2345,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 2351,
											"end": 2825,
											"name": "tag",
											"source": 15,
											"value": "50"
										},
										{
											"begin": 2351,
											"end": 2825,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2419,
											"end": 2425,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2427,
											"end": 2433,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2476,
											"end": 2478,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2464,
											"end": 2473,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 2455,
											"end": 2462,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 2451,
											"end": 2474,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 2447,
											"end": 2479,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 2444,
											"end": 2563,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2444,
											"end": 2563,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "160"
										},
										{
											"begin": 2444,
											"end": 2563,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2482,
											"end": 2561,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "161"
										},
										{
											"begin": 2482,
											"end": 2561,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "162"
										},
										{
											"begin": 2482,
											"end": 2561,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 2482,
											"end": 2561,
											"name": "tag",
											"source": 15,
											"value": "161"
										},
										{
											"begin": 2482,
											"end": 2561,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2444,
											"end": 2563,
											"name": "tag",
											"source": 15,
											"value": "160"
										},
										{
											"begin": 2444,
											"end": 2563,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2602,
											"end": 2603,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2680,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "163"
										},
										{
											"begin": 2672,
											"end": 2679,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 2663,
											"end": 2669,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2652,
											"end": 2661,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 2648,
											"end": 2670,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2627,
											"end": 2680,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "137"
										},
										{
											"begin": 2627,
											"end": 2680,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 2627,
											"end": 2680,
											"name": "tag",
											"source": 15,
											"value": "163"
										},
										{
											"begin": 2627,
											"end": 2680,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2617,
											"end": 2680,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2617,
											"end": 2680,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2573,
											"end": 2690,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2729,
											"end": 2731,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2755,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "164"
										},
										{
											"begin": 2800,
											"end": 2807,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 2791,
											"end": 2797,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2780,
											"end": 2789,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 2776,
											"end": 2798,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2755,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "137"
										},
										{
											"begin": 2755,
											"end": 2808,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 2755,
											"end": 2808,
											"name": "tag",
											"source": 15,
											"value": "164"
										},
										{
											"begin": 2755,
											"end": 2808,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2745,
											"end": 2808,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2745,
											"end": 2808,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2700,
											"end": 2818,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2351,
											"end": 2825,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2351,
											"end": 2825,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2351,
											"end": 2825,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2351,
											"end": 2825,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2351,
											"end": 2825,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2351,
											"end": 2825,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 2831,
											"end": 4340,
											"name": "tag",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 2831,
											"end": 4340,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2985,
											"end": 2991,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2993,
											"end": 2999,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3001,
											"end": 3007,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3009,
											"end": 3015,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3017,
											"end": 3023,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3066,
											"end": 3069,
											"name": "PUSH",
											"source": 15,
											"value": "A0"
										},
										{
											"begin": 3054,
											"end": 3063,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 3045,
											"end": 3052,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 3041,
											"end": 3064,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 3037,
											"end": 3070,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 3034,
											"end": 3154,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3034,
											"end": 3154,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "166"
										},
										{
											"begin": 3034,
											"end": 3154,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3073,
											"end": 3152,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "167"
										},
										{
											"begin": 3073,
											"end": 3152,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "162"
										},
										{
											"begin": 3073,
											"end": 3152,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 3073,
											"end": 3152,
											"name": "tag",
											"source": 15,
											"value": "167"
										},
										{
											"begin": 3073,
											"end": 3152,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3034,
											"end": 3154,
											"name": "tag",
											"source": 15,
											"value": "166"
										},
										{
											"begin": 3034,
											"end": 3154,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3193,
											"end": 3194,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3218,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "168"
										},
										{
											"begin": 3263,
											"end": 3270,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 3254,
											"end": 3260,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3243,
											"end": 3252,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 3239,
											"end": 3261,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3218,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "137"
										},
										{
											"begin": 3218,
											"end": 3271,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 3218,
											"end": 3271,
											"name": "tag",
											"source": 15,
											"value": "168"
										},
										{
											"begin": 3218,
											"end": 3271,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3208,
											"end": 3271,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 3208,
											"end": 3271,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3164,
											"end": 3281,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3320,
											"end": 3322,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3346,
											"end": 3399,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "169"
										},
										{
											"begin": 3391,
											"end": 3398,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 3382,
											"end": 3388,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3371,
											"end": 3380,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 3367,
											"end": 3389,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3346,
											"end": 3399,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "137"
										},
										{
											"begin": 3346,
											"end": 3399,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 3346,
											"end": 3399,
											"name": "tag",
											"source": 15,
											"value": "169"
										},
										{
											"begin": 3346,
											"end": 3399,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3336,
											"end": 3399,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 3336,
											"end": 3399,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3291,
											"end": 3409,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3476,
											"end": 3478,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 3465,
											"end": 3474,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 3461,
											"end": 3479,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3448,
											"end": 3480,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 3507,
											"end": 3525,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3499,
											"end": 3505,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3496,
											"end": 3526,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 3493,
											"end": 3610,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3493,
											"end": 3610,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "170"
										},
										{
											"begin": 3493,
											"end": 3610,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3529,
											"end": 3608,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "171"
										},
										{
											"begin": 3529,
											"end": 3608,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "172"
										},
										{
											"begin": 3529,
											"end": 3608,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 3529,
											"end": 3608,
											"name": "tag",
											"source": 15,
											"value": "171"
										},
										{
											"begin": 3529,
											"end": 3608,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3493,
											"end": 3610,
											"name": "tag",
											"source": 15,
											"value": "170"
										},
										{
											"begin": 3493,
											"end": 3610,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3634,
											"end": 3712,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "173"
										},
										{
											"begin": 3704,
											"end": 3711,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 3695,
											"end": 3701,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3684,
											"end": 3693,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 3680,
											"end": 3702,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3634,
											"end": 3712,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "141"
										},
										{
											"begin": 3634,
											"end": 3712,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 3634,
											"end": 3712,
											"name": "tag",
											"source": 15,
											"value": "173"
										},
										{
											"begin": 3634,
											"end": 3712,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3624,
											"end": 3712,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 3624,
											"end": 3712,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3419,
											"end": 3722,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3789,
											"end": 3791,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 3778,
											"end": 3787,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 3774,
											"end": 3792,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3761,
											"end": 3793,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 3820,
											"end": 3838,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3812,
											"end": 3818,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3809,
											"end": 3839,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 3806,
											"end": 3923,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3806,
											"end": 3923,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "174"
										},
										{
											"begin": 3806,
											"end": 3923,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3842,
											"end": 3921,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "175"
										},
										{
											"begin": 3842,
											"end": 3921,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "172"
										},
										{
											"begin": 3842,
											"end": 3921,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 3842,
											"end": 3921,
											"name": "tag",
											"source": 15,
											"value": "175"
										},
										{
											"begin": 3842,
											"end": 3921,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3806,
											"end": 3923,
											"name": "tag",
											"source": 15,
											"value": "174"
										},
										{
											"begin": 3806,
											"end": 3923,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3947,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "176"
										},
										{
											"begin": 4017,
											"end": 4024,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 4008,
											"end": 4014,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3997,
											"end": 4006,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 3993,
											"end": 4015,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3947,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "141"
										},
										{
											"begin": 3947,
											"end": 4025,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 3947,
											"end": 4025,
											"name": "tag",
											"source": 15,
											"value": "176"
										},
										{
											"begin": 3947,
											"end": 4025,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3937,
											"end": 4025,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 3937,
											"end": 4025,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3732,
											"end": 4035,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4102,
											"end": 4105,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 4091,
											"end": 4100,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 4087,
											"end": 4106,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4074,
											"end": 4107,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 4134,
											"end": 4152,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4126,
											"end": 4132,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4123,
											"end": 4153,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 4120,
											"end": 4237,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 4120,
											"end": 4237,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "177"
										},
										{
											"begin": 4120,
											"end": 4237,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4156,
											"end": 4235,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "178"
										},
										{
											"begin": 4156,
											"end": 4235,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "172"
										},
										{
											"begin": 4156,
											"end": 4235,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 4156,
											"end": 4235,
											"name": "tag",
											"source": 15,
											"value": "178"
										},
										{
											"begin": 4156,
											"end": 4235,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4120,
											"end": 4237,
											"name": "tag",
											"source": 15,
											"value": "177"
										},
										{
											"begin": 4120,
											"end": 4237,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4261,
											"end": 4323,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "179"
										},
										{
											"begin": 4315,
											"end": 4322,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 4306,
											"end": 4312,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4295,
											"end": 4304,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 4291,
											"end": 4313,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4261,
											"end": 4323,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "151"
										},
										{
											"begin": 4261,
											"end": 4323,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 4261,
											"end": 4323,
											"name": "tag",
											"source": 15,
											"value": "179"
										},
										{
											"begin": 4261,
											"end": 4323,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4251,
											"end": 4323,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4251,
											"end": 4323,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4045,
											"end": 4333,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2831,
											"end": 4340,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2831,
											"end": 4340,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 2831,
											"end": 4340,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2831,
											"end": 4340,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2831,
											"end": 4340,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 2831,
											"end": 4340,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2831,
											"end": 4340,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 2831,
											"end": 4340,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2831,
											"end": 4340,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 4346,
											"end": 5289,
											"name": "tag",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 4346,
											"end": 5289,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4441,
											"end": 4447,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4449,
											"end": 4455,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4457,
											"end": 4463,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4465,
											"end": 4471,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4514,
											"end": 4517,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 4502,
											"end": 4511,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 4493,
											"end": 4500,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 4489,
											"end": 4512,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 4485,
											"end": 4518,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 4482,
											"end": 4602,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 4482,
											"end": 4602,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "181"
										},
										{
											"begin": 4482,
											"end": 4602,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4521,
											"end": 4600,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "182"
										},
										{
											"begin": 4521,
											"end": 4600,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "162"
										},
										{
											"begin": 4521,
											"end": 4600,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 4521,
											"end": 4600,
											"name": "tag",
											"source": 15,
											"value": "182"
										},
										{
											"begin": 4521,
											"end": 4600,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4482,
											"end": 4602,
											"name": "tag",
											"source": 15,
											"value": "181"
										},
										{
											"begin": 4482,
											"end": 4602,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4641,
											"end": 4642,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4666,
											"end": 4719,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "183"
										},
										{
											"begin": 4711,
											"end": 4718,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 4702,
											"end": 4708,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4691,
											"end": 4700,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 4687,
											"end": 4709,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4666,
											"end": 4719,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "137"
										},
										{
											"begin": 4666,
											"end": 4719,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 4666,
											"end": 4719,
											"name": "tag",
											"source": 15,
											"value": "183"
										},
										{
											"begin": 4666,
											"end": 4719,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4656,
											"end": 4719,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 4656,
											"end": 4719,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4612,
											"end": 4729,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4768,
											"end": 4770,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4794,
											"end": 4847,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "184"
										},
										{
											"begin": 4839,
											"end": 4846,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 4830,
											"end": 4836,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4819,
											"end": 4828,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 4815,
											"end": 4837,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4794,
											"end": 4847,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "137"
										},
										{
											"begin": 4794,
											"end": 4847,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 4794,
											"end": 4847,
											"name": "tag",
											"source": 15,
											"value": "184"
										},
										{
											"begin": 4794,
											"end": 4847,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4784,
											"end": 4847,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 4784,
											"end": 4847,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4739,
											"end": 4857,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4896,
											"end": 4898,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 4922,
											"end": 4975,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "185"
										},
										{
											"begin": 4967,
											"end": 4974,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 4958,
											"end": 4964,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4947,
											"end": 4956,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 4943,
											"end": 4965,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4922,
											"end": 4975,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "126"
										},
										{
											"begin": 4922,
											"end": 4975,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 4922,
											"end": 4975,
											"name": "tag",
											"source": 15,
											"value": "185"
										},
										{
											"begin": 4922,
											"end": 4975,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4912,
											"end": 4975,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4912,
											"end": 4975,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4867,
											"end": 4985,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5052,
											"end": 5054,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 5041,
											"end": 5050,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 5037,
											"end": 5055,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5024,
											"end": 5056,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 5083,
											"end": 5101,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5075,
											"end": 5081,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5072,
											"end": 5102,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 5069,
											"end": 5186,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 5069,
											"end": 5186,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "186"
										},
										{
											"begin": 5069,
											"end": 5186,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 5105,
											"end": 5184,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "187"
										},
										{
											"begin": 5105,
											"end": 5184,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "172"
										},
										{
											"begin": 5105,
											"end": 5184,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 5105,
											"end": 5184,
											"name": "tag",
											"source": 15,
											"value": "187"
										},
										{
											"begin": 5105,
											"end": 5184,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5069,
											"end": 5186,
											"name": "tag",
											"source": 15,
											"value": "186"
										},
										{
											"begin": 5069,
											"end": 5186,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5210,
											"end": 5272,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "188"
										},
										{
											"begin": 5264,
											"end": 5271,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 5255,
											"end": 5261,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5244,
											"end": 5253,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 5240,
											"end": 5262,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5210,
											"end": 5272,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "151"
										},
										{
											"begin": 5210,
											"end": 5272,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 5210,
											"end": 5272,
											"name": "tag",
											"source": 15,
											"value": "188"
										},
										{
											"begin": 5210,
											"end": 5272,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5200,
											"end": 5272,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5200,
											"end": 5272,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4995,
											"end": 5282,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4346,
											"end": 5289,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4346,
											"end": 5289,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 4346,
											"end": 5289,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4346,
											"end": 5289,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 4346,
											"end": 5289,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4346,
											"end": 5289,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4346,
											"end": 5289,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4346,
											"end": 5289,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 5295,
											"end": 6384,
											"name": "tag",
											"source": 15,
											"value": "55"
										},
										{
											"begin": 5295,
											"end": 6384,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5399,
											"end": 5405,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5407,
											"end": 5413,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5415,
											"end": 5421,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5423,
											"end": 5429,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5431,
											"end": 5437,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5480,
											"end": 5483,
											"name": "PUSH",
											"source": 15,
											"value": "A0"
										},
										{
											"begin": 5468,
											"end": 5477,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 5459,
											"end": 5466,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 5455,
											"end": 5478,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 5451,
											"end": 5484,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 5448,
											"end": 5568,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 5448,
											"end": 5568,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "190"
										},
										{
											"begin": 5448,
											"end": 5568,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 5487,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "191"
										},
										{
											"begin": 5487,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "162"
										},
										{
											"begin": 5487,
											"end": 5566,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 5487,
											"end": 5566,
											"name": "tag",
											"source": 15,
											"value": "191"
										},
										{
											"begin": 5487,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5448,
											"end": 5568,
											"name": "tag",
											"source": 15,
											"value": "190"
										},
										{
											"begin": 5448,
											"end": 5568,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5607,
											"end": 5608,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5632,
											"end": 5685,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "192"
										},
										{
											"begin": 5677,
											"end": 5684,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 5668,
											"end": 5674,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5657,
											"end": 5666,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 5653,
											"end": 5675,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5632,
											"end": 5685,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "137"
										},
										{
											"begin": 5632,
											"end": 5685,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 5632,
											"end": 5685,
											"name": "tag",
											"source": 15,
											"value": "192"
										},
										{
											"begin": 5632,
											"end": 5685,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5622,
											"end": 5685,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 5622,
											"end": 5685,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5578,
											"end": 5695,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5734,
											"end": 5736,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5760,
											"end": 5813,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "193"
										},
										{
											"begin": 5805,
											"end": 5812,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 5796,
											"end": 5802,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5785,
											"end": 5794,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 5781,
											"end": 5803,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5760,
											"end": 5813,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "137"
										},
										{
											"begin": 5760,
											"end": 5813,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 5760,
											"end": 5813,
											"name": "tag",
											"source": 15,
											"value": "193"
										},
										{
											"begin": 5760,
											"end": 5813,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5750,
											"end": 5813,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 5750,
											"end": 5813,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5705,
											"end": 5823,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5862,
											"end": 5864,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 5888,
											"end": 5941,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "194"
										},
										{
											"begin": 5933,
											"end": 5940,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 5924,
											"end": 5930,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5913,
											"end": 5922,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 5909,
											"end": 5931,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5888,
											"end": 5941,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "126"
										},
										{
											"begin": 5888,
											"end": 5941,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 5888,
											"end": 5941,
											"name": "tag",
											"source": 15,
											"value": "194"
										},
										{
											"begin": 5888,
											"end": 5941,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5878,
											"end": 5941,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 5878,
											"end": 5941,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5833,
											"end": 5951,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5990,
											"end": 5992,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 6016,
											"end": 6069,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "195"
										},
										{
											"begin": 6061,
											"end": 6068,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 6052,
											"end": 6058,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6041,
											"end": 6050,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 6037,
											"end": 6059,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6016,
											"end": 6069,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "126"
										},
										{
											"begin": 6016,
											"end": 6069,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 6016,
											"end": 6069,
											"name": "tag",
											"source": 15,
											"value": "195"
										},
										{
											"begin": 6016,
											"end": 6069,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6006,
											"end": 6069,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 6006,
											"end": 6069,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5961,
											"end": 6079,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6146,
											"end": 6149,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 6135,
											"end": 6144,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 6131,
											"end": 6150,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6118,
											"end": 6151,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 6178,
											"end": 6196,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6170,
											"end": 6176,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6167,
											"end": 6197,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 6164,
											"end": 6281,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 6164,
											"end": 6281,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "196"
										},
										{
											"begin": 6164,
											"end": 6281,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 6200,
											"end": 6279,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "197"
										},
										{
											"begin": 6200,
											"end": 6279,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "172"
										},
										{
											"begin": 6200,
											"end": 6279,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 6200,
											"end": 6279,
											"name": "tag",
											"source": 15,
											"value": "197"
										},
										{
											"begin": 6200,
											"end": 6279,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6164,
											"end": 6281,
											"name": "tag",
											"source": 15,
											"value": "196"
										},
										{
											"begin": 6164,
											"end": 6281,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6305,
											"end": 6367,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "198"
										},
										{
											"begin": 6359,
											"end": 6366,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 6350,
											"end": 6356,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6339,
											"end": 6348,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 6335,
											"end": 6357,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6305,
											"end": 6367,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "151"
										},
										{
											"begin": 6305,
											"end": 6367,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 6305,
											"end": 6367,
											"name": "tag",
											"source": 15,
											"value": "198"
										},
										{
											"begin": 6305,
											"end": 6367,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6295,
											"end": 6367,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6295,
											"end": 6367,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6089,
											"end": 6377,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5295,
											"end": 6384,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 5295,
											"end": 6384,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 5295,
											"end": 6384,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5295,
											"end": 6384,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 5295,
											"end": 6384,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 5295,
											"end": 6384,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5295,
											"end": 6384,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 5295,
											"end": 6384,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5295,
											"end": 6384,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 6390,
											"end": 6864,
											"name": "tag",
											"source": 15,
											"value": "34"
										},
										{
											"begin": 6390,
											"end": 6864,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6458,
											"end": 6464,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6466,
											"end": 6472,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 6515,
											"end": 6517,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 6503,
											"end": 6512,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 6494,
											"end": 6501,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 6490,
											"end": 6513,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 6486,
											"end": 6518,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 6483,
											"end": 6602,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 6483,
											"end": 6602,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "200"
										},
										{
											"begin": 6483,
											"end": 6602,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 6521,
											"end": 6600,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "201"
										},
										{
											"begin": 6521,
											"end": 6600,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "162"
										},
										{
											"begin": 6521,
											"end": 6600,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 6521,
											"end": 6600,
											"name": "tag",
											"source": 15,
											"value": "201"
										},
										{
											"begin": 6521,
											"end": 6600,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6483,
											"end": 6602,
											"name": "tag",
											"source": 15,
											"value": "200"
										},
										{
											"begin": 6483,
											"end": 6602,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6641,
											"end": 6642,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6666,
											"end": 6719,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "202"
										},
										{
											"begin": 6711,
											"end": 6718,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 6702,
											"end": 6708,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6691,
											"end": 6700,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 6687,
											"end": 6709,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6666,
											"end": 6719,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "137"
										},
										{
											"begin": 6666,
											"end": 6719,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 6666,
											"end": 6719,
											"name": "tag",
											"source": 15,
											"value": "202"
										},
										{
											"begin": 6666,
											"end": 6719,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6656,
											"end": 6719,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 6656,
											"end": 6719,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6612,
											"end": 6729,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6768,
											"end": 6770,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 6794,
											"end": 6847,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "203"
										},
										{
											"begin": 6839,
											"end": 6846,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 6830,
											"end": 6836,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6819,
											"end": 6828,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 6815,
											"end": 6837,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6794,
											"end": 6847,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "126"
										},
										{
											"begin": 6794,
											"end": 6847,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 6794,
											"end": 6847,
											"name": "tag",
											"source": 15,
											"value": "203"
										},
										{
											"begin": 6794,
											"end": 6847,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6784,
											"end": 6847,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6784,
											"end": 6847,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6739,
											"end": 6857,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6390,
											"end": 6864,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 6390,
											"end": 6864,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6390,
											"end": 6864,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 6390,
											"end": 6864,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6390,
											"end": 6864,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6390,
											"end": 6864,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 6870,
											"end": 7197,
											"name": "tag",
											"source": 15,
											"value": "17"
										},
										{
											"begin": 6870,
											"end": 7197,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6928,
											"end": 6934,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6977,
											"end": 6979,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 6965,
											"end": 6974,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6956,
											"end": 6963,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 6952,
											"end": 6975,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 6948,
											"end": 6980,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 6945,
											"end": 7064,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 6945,
											"end": 7064,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "205"
										},
										{
											"begin": 6945,
											"end": 7064,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 6983,
											"end": 7062,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "206"
										},
										{
											"begin": 6983,
											"end": 7062,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "162"
										},
										{
											"begin": 6983,
											"end": 7062,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 6983,
											"end": 7062,
											"name": "tag",
											"source": 15,
											"value": "206"
										},
										{
											"begin": 6983,
											"end": 7062,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6945,
											"end": 7064,
											"name": "tag",
											"source": 15,
											"value": "205"
										},
										{
											"begin": 6945,
											"end": 7064,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7103,
											"end": 7104,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7128,
											"end": 7180,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "207"
										},
										{
											"begin": 7172,
											"end": 7179,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 7163,
											"end": 7169,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7152,
											"end": 7161,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 7148,
											"end": 7170,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7128,
											"end": 7180,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "147"
										},
										{
											"begin": 7128,
											"end": 7180,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 7128,
											"end": 7180,
											"name": "tag",
											"source": 15,
											"value": "207"
										},
										{
											"begin": 7128,
											"end": 7180,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7118,
											"end": 7180,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 7118,
											"end": 7180,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7074,
											"end": 7190,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6870,
											"end": 7197,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 6870,
											"end": 7197,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6870,
											"end": 7197,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6870,
											"end": 7197,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6870,
											"end": 7197,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 7203,
											"end": 7321,
											"name": "tag",
											"source": 15,
											"value": "208"
										},
										{
											"begin": 7203,
											"end": 7321,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7290,
											"end": 7314,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "210"
										},
										{
											"begin": 7308,
											"end": 7313,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7290,
											"end": 7314,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "211"
										},
										{
											"begin": 7290,
											"end": 7314,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 7290,
											"end": 7314,
											"name": "tag",
											"source": 15,
											"value": "210"
										},
										{
											"begin": 7290,
											"end": 7314,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7285,
											"end": 7288,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7278,
											"end": 7315,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7203,
											"end": 7321,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7203,
											"end": 7321,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7203,
											"end": 7321,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 7327,
											"end": 7436,
											"name": "tag",
											"source": 15,
											"value": "212"
										},
										{
											"begin": 7327,
											"end": 7436,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7408,
											"end": 7429,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "214"
										},
										{
											"begin": 7423,
											"end": 7428,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7408,
											"end": 7429,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "215"
										},
										{
											"begin": 7408,
											"end": 7429,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 7408,
											"end": 7429,
											"name": "tag",
											"source": 15,
											"value": "214"
										},
										{
											"begin": 7408,
											"end": 7429,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7403,
											"end": 7406,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7396,
											"end": 7430,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7327,
											"end": 7436,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7327,
											"end": 7436,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7327,
											"end": 7436,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 7442,
											"end": 7557,
											"name": "tag",
											"source": 15,
											"value": "216"
										},
										{
											"begin": 7442,
											"end": 7557,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7527,
											"end": 7550,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "218"
										},
										{
											"begin": 7544,
											"end": 7549,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7527,
											"end": 7550,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "219"
										},
										{
											"begin": 7527,
											"end": 7550,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 7527,
											"end": 7550,
											"name": "tag",
											"source": 15,
											"value": "218"
										},
										{
											"begin": 7527,
											"end": 7550,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7522,
											"end": 7525,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7515,
											"end": 7551,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7442,
											"end": 7557,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7442,
											"end": 7557,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7442,
											"end": 7557,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 7563,
											"end": 7929,
											"name": "tag",
											"source": 15,
											"value": "220"
										},
										{
											"begin": 7563,
											"end": 7929,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7705,
											"end": 7708,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7726,
											"end": 7793,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "222"
										},
										{
											"begin": 7790,
											"end": 7792,
											"name": "PUSH",
											"source": 15,
											"value": "1E"
										},
										{
											"begin": 7785,
											"end": 7788,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 7726,
											"end": 7793,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "223"
										},
										{
											"begin": 7726,
											"end": 7793,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 7726,
											"end": 7793,
											"name": "tag",
											"source": 15,
											"value": "222"
										},
										{
											"begin": 7726,
											"end": 7793,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7719,
											"end": 7793,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 7719,
											"end": 7793,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7802,
											"end": 7895,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "224"
										},
										{
											"begin": 7891,
											"end": 7894,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7802,
											"end": 7895,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "225"
										},
										{
											"begin": 7802,
											"end": 7895,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 7802,
											"end": 7895,
											"name": "tag",
											"source": 15,
											"value": "224"
										},
										{
											"begin": 7802,
											"end": 7895,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7920,
											"end": 7922,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 7915,
											"end": 7918,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7911,
											"end": 7923,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7904,
											"end": 7923,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7904,
											"end": 7923,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7563,
											"end": 7929,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 7563,
											"end": 7929,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7563,
											"end": 7929,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7563,
											"end": 7929,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 7935,
											"end": 8301,
											"name": "tag",
											"source": 15,
											"value": "226"
										},
										{
											"begin": 7935,
											"end": 8301,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8077,
											"end": 8080,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8098,
											"end": 8165,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "228"
										},
										{
											"begin": 8162,
											"end": 8164,
											"name": "PUSH",
											"source": 15,
											"value": "1E"
										},
										{
											"begin": 8157,
											"end": 8160,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 8098,
											"end": 8165,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "223"
										},
										{
											"begin": 8098,
											"end": 8165,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 8098,
											"end": 8165,
											"name": "tag",
											"source": 15,
											"value": "228"
										},
										{
											"begin": 8098,
											"end": 8165,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8091,
											"end": 8165,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 8091,
											"end": 8165,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8174,
											"end": 8267,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "229"
										},
										{
											"begin": 8263,
											"end": 8266,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8174,
											"end": 8267,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "230"
										},
										{
											"begin": 8174,
											"end": 8267,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 8174,
											"end": 8267,
											"name": "tag",
											"source": 15,
											"value": "229"
										},
										{
											"begin": 8174,
											"end": 8267,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8292,
											"end": 8294,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 8287,
											"end": 8290,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8283,
											"end": 8295,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8276,
											"end": 8295,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8276,
											"end": 8295,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7935,
											"end": 8301,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 7935,
											"end": 8301,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7935,
											"end": 8301,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7935,
											"end": 8301,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 8307,
											"end": 8673,
											"name": "tag",
											"source": 15,
											"value": "231"
										},
										{
											"begin": 8307,
											"end": 8673,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8449,
											"end": 8452,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8470,
											"end": 8537,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "233"
										},
										{
											"begin": 8534,
											"end": 8536,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 8529,
											"end": 8532,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 8470,
											"end": 8537,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "223"
										},
										{
											"begin": 8470,
											"end": 8537,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 8470,
											"end": 8537,
											"name": "tag",
											"source": 15,
											"value": "233"
										},
										{
											"begin": 8470,
											"end": 8537,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8463,
											"end": 8537,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 8463,
											"end": 8537,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8546,
											"end": 8639,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "234"
										},
										{
											"begin": 8635,
											"end": 8638,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8546,
											"end": 8639,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "235"
										},
										{
											"begin": 8546,
											"end": 8639,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 8546,
											"end": 8639,
											"name": "tag",
											"source": 15,
											"value": "234"
										},
										{
											"begin": 8546,
											"end": 8639,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8664,
											"end": 8666,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 8659,
											"end": 8662,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8655,
											"end": 8667,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8648,
											"end": 8667,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8648,
											"end": 8667,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8307,
											"end": 8673,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 8307,
											"end": 8673,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8307,
											"end": 8673,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8307,
											"end": 8673,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 8679,
											"end": 9045,
											"name": "tag",
											"source": 15,
											"value": "236"
										},
										{
											"begin": 8679,
											"end": 9045,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8821,
											"end": 8824,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8842,
											"end": 8909,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "238"
										},
										{
											"begin": 8906,
											"end": 8908,
											"name": "PUSH",
											"source": 15,
											"value": "1C"
										},
										{
											"begin": 8901,
											"end": 8904,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 8842,
											"end": 8909,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "223"
										},
										{
											"begin": 8842,
											"end": 8909,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 8842,
											"end": 8909,
											"name": "tag",
											"source": 15,
											"value": "238"
										},
										{
											"begin": 8842,
											"end": 8909,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8835,
											"end": 8909,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 8835,
											"end": 8909,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8918,
											"end": 9011,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "239"
										},
										{
											"begin": 9007,
											"end": 9010,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8918,
											"end": 9011,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "240"
										},
										{
											"begin": 8918,
											"end": 9011,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 8918,
											"end": 9011,
											"name": "tag",
											"source": 15,
											"value": "239"
										},
										{
											"begin": 8918,
											"end": 9011,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9036,
											"end": 9038,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 9031,
											"end": 9034,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9027,
											"end": 9039,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9020,
											"end": 9039,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9020,
											"end": 9039,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8679,
											"end": 9045,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 8679,
											"end": 9045,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8679,
											"end": 9045,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8679,
											"end": 9045,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 9051,
											"end": 9417,
											"name": "tag",
											"source": 15,
											"value": "241"
										},
										{
											"begin": 9051,
											"end": 9417,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9193,
											"end": 9196,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9214,
											"end": 9281,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "243"
										},
										{
											"begin": 9278,
											"end": 9280,
											"name": "PUSH",
											"source": 15,
											"value": "2E"
										},
										{
											"begin": 9273,
											"end": 9276,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 9214,
											"end": 9281,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "223"
										},
										{
											"begin": 9214,
											"end": 9281,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 9214,
											"end": 9281,
											"name": "tag",
											"source": 15,
											"value": "243"
										},
										{
											"begin": 9214,
											"end": 9281,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9207,
											"end": 9281,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 9207,
											"end": 9281,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9290,
											"end": 9383,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "244"
										},
										{
											"begin": 9379,
											"end": 9382,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9290,
											"end": 9383,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "245"
										},
										{
											"begin": 9290,
											"end": 9383,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 9290,
											"end": 9383,
											"name": "tag",
											"source": 15,
											"value": "244"
										},
										{
											"begin": 9290,
											"end": 9383,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9408,
											"end": 9410,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 9403,
											"end": 9406,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9399,
											"end": 9411,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9392,
											"end": 9411,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9392,
											"end": 9411,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9051,
											"end": 9417,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 9051,
											"end": 9417,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9051,
											"end": 9417,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9051,
											"end": 9417,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 9423,
											"end": 9541,
											"name": "tag",
											"source": 15,
											"value": "246"
										},
										{
											"begin": 9423,
											"end": 9541,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9510,
											"end": 9534,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "248"
										},
										{
											"begin": 9528,
											"end": 9533,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9510,
											"end": 9534,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "249"
										},
										{
											"begin": 9510,
											"end": 9534,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 9510,
											"end": 9534,
											"name": "tag",
											"source": 15,
											"value": "248"
										},
										{
											"begin": 9510,
											"end": 9534,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9505,
											"end": 9508,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9498,
											"end": 9535,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 9423,
											"end": 9541,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9423,
											"end": 9541,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9423,
											"end": 9541,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 9547,
											"end": 9769,
											"name": "tag",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 9547,
											"end": 9769,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9640,
											"end": 9644,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9678,
											"end": 9680,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 9667,
											"end": 9676,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9663,
											"end": 9681,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9655,
											"end": 9681,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9655,
											"end": 9681,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9691,
											"end": 9762,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "251"
										},
										{
											"begin": 9759,
											"end": 9760,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9748,
											"end": 9757,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 9744,
											"end": 9761,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9735,
											"end": 9741,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 9691,
											"end": 9762,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "208"
										},
										{
											"begin": 9691,
											"end": 9762,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 9691,
											"end": 9762,
											"name": "tag",
											"source": 15,
											"value": "251"
										},
										{
											"begin": 9691,
											"end": 9762,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9547,
											"end": 9769,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 9547,
											"end": 9769,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 9547,
											"end": 9769,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9547,
											"end": 9769,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9547,
											"end": 9769,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 9775,
											"end": 10217,
											"name": "tag",
											"source": 15,
											"value": "107"
										},
										{
											"begin": 9775,
											"end": 10217,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9924,
											"end": 9928,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9962,
											"end": 9964,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 9951,
											"end": 9960,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9947,
											"end": 9965,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9939,
											"end": 9965,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9939,
											"end": 9965,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9975,
											"end": 10046,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "253"
										},
										{
											"begin": 10043,
											"end": 10044,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10032,
											"end": 10041,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 10028,
											"end": 10045,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10019,
											"end": 10025,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 9975,
											"end": 10046,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "208"
										},
										{
											"begin": 9975,
											"end": 10046,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 9975,
											"end": 10046,
											"name": "tag",
											"source": 15,
											"value": "253"
										},
										{
											"begin": 9975,
											"end": 10046,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10056,
											"end": 10128,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "254"
										},
										{
											"begin": 10124,
											"end": 10126,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 10113,
											"end": 10122,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 10109,
											"end": 10127,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10100,
											"end": 10106,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 10056,
											"end": 10128,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "208"
										},
										{
											"begin": 10056,
											"end": 10128,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 10056,
											"end": 10128,
											"name": "tag",
											"source": 15,
											"value": "254"
										},
										{
											"begin": 10056,
											"end": 10128,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10138,
											"end": 10210,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "255"
										},
										{
											"begin": 10206,
											"end": 10208,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 10195,
											"end": 10204,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 10191,
											"end": 10209,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10182,
											"end": 10188,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 10138,
											"end": 10210,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "246"
										},
										{
											"begin": 10138,
											"end": 10210,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 10138,
											"end": 10210,
											"name": "tag",
											"source": 15,
											"value": "255"
										},
										{
											"begin": 10138,
											"end": 10210,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9775,
											"end": 10217,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 9775,
											"end": 10217,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 9775,
											"end": 10217,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9775,
											"end": 10217,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9775,
											"end": 10217,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9775,
											"end": 10217,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9775,
											"end": 10217,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 10223,
											"end": 10433,
											"name": "tag",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 10223,
											"end": 10433,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10310,
											"end": 10314,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10348,
											"end": 10350,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 10337,
											"end": 10346,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10333,
											"end": 10351,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10325,
											"end": 10351,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 10325,
											"end": 10351,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10361,
											"end": 10426,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "257"
										},
										{
											"begin": 10423,
											"end": 10424,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10412,
											"end": 10421,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 10408,
											"end": 10425,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10399,
											"end": 10405,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 10361,
											"end": 10426,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "212"
										},
										{
											"begin": 10361,
											"end": 10426,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 10361,
											"end": 10426,
											"name": "tag",
											"source": 15,
											"value": "257"
										},
										{
											"begin": 10361,
											"end": 10426,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10223,
											"end": 10433,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 10223,
											"end": 10433,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 10223,
											"end": 10433,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10223,
											"end": 10433,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10223,
											"end": 10433,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 10439,
											"end": 10657,
											"name": "tag",
											"source": 15,
											"value": "27"
										},
										{
											"begin": 10439,
											"end": 10657,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10530,
											"end": 10534,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10568,
											"end": 10570,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 10557,
											"end": 10566,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10553,
											"end": 10571,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10545,
											"end": 10571,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 10545,
											"end": 10571,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10581,
											"end": 10650,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "259"
										},
										{
											"begin": 10647,
											"end": 10648,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10636,
											"end": 10645,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 10632,
											"end": 10649,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10623,
											"end": 10629,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 10581,
											"end": 10650,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "216"
										},
										{
											"begin": 10581,
											"end": 10650,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 10581,
											"end": 10650,
											"name": "tag",
											"source": 15,
											"value": "259"
										},
										{
											"begin": 10581,
											"end": 10650,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10439,
											"end": 10657,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 10439,
											"end": 10657,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 10439,
											"end": 10657,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10439,
											"end": 10657,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10439,
											"end": 10657,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 10663,
											"end": 11082,
											"name": "tag",
											"source": 15,
											"value": "89"
										},
										{
											"begin": 10663,
											"end": 11082,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10829,
											"end": 10833,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10867,
											"end": 10869,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 10856,
											"end": 10865,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10852,
											"end": 10870,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10844,
											"end": 10870,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 10844,
											"end": 10870,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10916,
											"end": 10925,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 10910,
											"end": 10914,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 10906,
											"end": 10926,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 10902,
											"end": 10903,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10891,
											"end": 10900,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 10887,
											"end": 10904,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10880,
											"end": 10927,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 10944,
											"end": 11075,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "261"
										},
										{
											"begin": 11070,
											"end": 11074,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 10944,
											"end": 11075,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "220"
										},
										{
											"begin": 10944,
											"end": 11075,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 10944,
											"end": 11075,
											"name": "tag",
											"source": 15,
											"value": "261"
										},
										{
											"begin": 10944,
											"end": 11075,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10936,
											"end": 11075,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 10936,
											"end": 11075,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10663,
											"end": 11082,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 10663,
											"end": 11082,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 10663,
											"end": 11082,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10663,
											"end": 11082,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 11088,
											"end": 11507,
											"name": "tag",
											"source": 15,
											"value": "86"
										},
										{
											"begin": 11088,
											"end": 11507,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11254,
											"end": 11258,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11292,
											"end": 11294,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 11281,
											"end": 11290,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11277,
											"end": 11295,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11269,
											"end": 11295,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 11269,
											"end": 11295,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11341,
											"end": 11350,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 11335,
											"end": 11339,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 11331,
											"end": 11351,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 11327,
											"end": 11328,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11316,
											"end": 11325,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 11312,
											"end": 11329,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11305,
											"end": 11352,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 11369,
											"end": 11500,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "263"
										},
										{
											"begin": 11495,
											"end": 11499,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 11369,
											"end": 11500,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "226"
										},
										{
											"begin": 11369,
											"end": 11500,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 11369,
											"end": 11500,
											"name": "tag",
											"source": 15,
											"value": "263"
										},
										{
											"begin": 11369,
											"end": 11500,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11361,
											"end": 11500,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 11361,
											"end": 11500,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11088,
											"end": 11507,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 11088,
											"end": 11507,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 11088,
											"end": 11507,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11088,
											"end": 11507,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 11513,
											"end": 11932,
											"name": "tag",
											"source": 15,
											"value": "69"
										},
										{
											"begin": 11513,
											"end": 11932,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11679,
											"end": 11683,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11717,
											"end": 11719,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 11706,
											"end": 11715,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11702,
											"end": 11720,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11694,
											"end": 11720,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 11694,
											"end": 11720,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11766,
											"end": 11775,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 11760,
											"end": 11764,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 11756,
											"end": 11776,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 11752,
											"end": 11753,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11741,
											"end": 11750,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 11737,
											"end": 11754,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11730,
											"end": 11777,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 11794,
											"end": 11925,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "265"
										},
										{
											"begin": 11920,
											"end": 11924,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 11794,
											"end": 11925,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "231"
										},
										{
											"begin": 11794,
											"end": 11925,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 11794,
											"end": 11925,
											"name": "tag",
											"source": 15,
											"value": "265"
										},
										{
											"begin": 11794,
											"end": 11925,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11786,
											"end": 11925,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 11786,
											"end": 11925,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11513,
											"end": 11932,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 11513,
											"end": 11932,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 11513,
											"end": 11932,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11513,
											"end": 11932,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 11938,
											"end": 12357,
											"name": "tag",
											"source": 15,
											"value": "95"
										},
										{
											"begin": 11938,
											"end": 12357,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12104,
											"end": 12108,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12142,
											"end": 12144,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 12131,
											"end": 12140,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12127,
											"end": 12145,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12119,
											"end": 12145,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12119,
											"end": 12145,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12191,
											"end": 12200,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12185,
											"end": 12189,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12181,
											"end": 12201,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 12177,
											"end": 12178,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12166,
											"end": 12175,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 12162,
											"end": 12179,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12155,
											"end": 12202,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 12219,
											"end": 12350,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "267"
										},
										{
											"begin": 12345,
											"end": 12349,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12219,
											"end": 12350,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "236"
										},
										{
											"begin": 12219,
											"end": 12350,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 12219,
											"end": 12350,
											"name": "tag",
											"source": 15,
											"value": "267"
										},
										{
											"begin": 12219,
											"end": 12350,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12211,
											"end": 12350,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12211,
											"end": 12350,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11938,
											"end": 12357,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 11938,
											"end": 12357,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 11938,
											"end": 12357,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11938,
											"end": 12357,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 12363,
											"end": 12782,
											"name": "tag",
											"source": 15,
											"value": "92"
										},
										{
											"begin": 12363,
											"end": 12782,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12529,
											"end": 12533,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12567,
											"end": 12569,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 12556,
											"end": 12565,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12552,
											"end": 12570,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12544,
											"end": 12570,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12544,
											"end": 12570,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12616,
											"end": 12625,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12610,
											"end": 12614,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12606,
											"end": 12626,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 12602,
											"end": 12603,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12591,
											"end": 12600,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 12587,
											"end": 12604,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12580,
											"end": 12627,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 12644,
											"end": 12775,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "269"
										},
										{
											"begin": 12770,
											"end": 12774,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12644,
											"end": 12775,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "241"
										},
										{
											"begin": 12644,
											"end": 12775,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 12644,
											"end": 12775,
											"name": "tag",
											"source": 15,
											"value": "269"
										},
										{
											"begin": 12644,
											"end": 12775,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12636,
											"end": 12775,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12636,
											"end": 12775,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12363,
											"end": 12782,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 12363,
											"end": 12782,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12363,
											"end": 12782,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12363,
											"end": 12782,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 12788,
											"end": 12917,
											"name": "tag",
											"source": 15,
											"value": "118"
										},
										{
											"begin": 12788,
											"end": 12917,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12822,
											"end": 12828,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12849,
											"end": 12869,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "271"
										},
										{
											"begin": 12849,
											"end": 12869,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "272"
										},
										{
											"begin": 12849,
											"end": 12869,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 12849,
											"end": 12869,
											"name": "tag",
											"source": 15,
											"value": "271"
										},
										{
											"begin": 12849,
											"end": 12869,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12839,
											"end": 12869,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12839,
											"end": 12869,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12878,
											"end": 12911,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "273"
										},
										{
											"begin": 12906,
											"end": 12910,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12898,
											"end": 12904,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12878,
											"end": 12911,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "274"
										},
										{
											"begin": 12878,
											"end": 12911,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 12878,
											"end": 12911,
											"name": "tag",
											"source": 15,
											"value": "273"
										},
										{
											"begin": 12878,
											"end": 12911,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12788,
											"end": 12917,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 12788,
											"end": 12917,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12788,
											"end": 12917,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12788,
											"end": 12917,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 12923,
											"end": 12998,
											"name": "tag",
											"source": 15,
											"value": "272"
										},
										{
											"begin": 12923,
											"end": 12998,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12956,
											"end": 12962,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12989,
											"end": 12991,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 12983,
											"end": 12992,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 12973,
											"end": 12992,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12973,
											"end": 12992,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12923,
											"end": 12998,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12923,
											"end": 12998,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 13004,
											"end": 13315,
											"name": "tag",
											"source": 15,
											"value": "117"
										},
										{
											"begin": 13004,
											"end": 13315,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13081,
											"end": 13085,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 13171,
											"end": 13189,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13163,
											"end": 13169,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13160,
											"end": 13190,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 13157,
											"end": 13213,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 13157,
											"end": 13213,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "277"
										},
										{
											"begin": 13157,
											"end": 13213,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 13193,
											"end": 13211,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "278"
										},
										{
											"begin": 13193,
											"end": 13211,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "279"
										},
										{
											"begin": 13193,
											"end": 13211,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 13193,
											"end": 13211,
											"name": "tag",
											"source": 15,
											"value": "278"
										},
										{
											"begin": 13193,
											"end": 13211,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13157,
											"end": 13213,
											"name": "tag",
											"source": 15,
											"value": "277"
										},
										{
											"begin": 13157,
											"end": 13213,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13243,
											"end": 13247,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 13235,
											"end": 13241,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13231,
											"end": 13248,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 13223,
											"end": 13248,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 13223,
											"end": 13248,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13303,
											"end": 13307,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 13297,
											"end": 13301,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 13293,
											"end": 13308,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13285,
											"end": 13308,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 13285,
											"end": 13308,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13004,
											"end": 13315,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 13004,
											"end": 13315,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 13004,
											"end": 13315,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13004,
											"end": 13315,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 13321,
											"end": 13628,
											"name": "tag",
											"source": 15,
											"value": "131"
										},
										{
											"begin": 13321,
											"end": 13628,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13382,
											"end": 13386,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 13472,
											"end": 13490,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13464,
											"end": 13470,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13461,
											"end": 13491,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 13458,
											"end": 13514,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 13458,
											"end": 13514,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "281"
										},
										{
											"begin": 13458,
											"end": 13514,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 13494,
											"end": 13512,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "282"
										},
										{
											"begin": 13494,
											"end": 13512,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "279"
										},
										{
											"begin": 13494,
											"end": 13512,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 13494,
											"end": 13512,
											"name": "tag",
											"source": 15,
											"value": "282"
										},
										{
											"begin": 13494,
											"end": 13512,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13458,
											"end": 13514,
											"name": "tag",
											"source": 15,
											"value": "281"
										},
										{
											"begin": 13458,
											"end": 13514,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13532,
											"end": 13561,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "283"
										},
										{
											"begin": 13554,
											"end": 13560,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13532,
											"end": 13561,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "284"
										},
										{
											"begin": 13532,
											"end": 13561,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 13532,
											"end": 13561,
											"name": "tag",
											"source": 15,
											"value": "283"
										},
										{
											"begin": 13532,
											"end": 13561,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13524,
											"end": 13561,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 13524,
											"end": 13561,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13616,
											"end": 13620,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 13610,
											"end": 13614,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 13606,
											"end": 13621,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13598,
											"end": 13621,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 13598,
											"end": 13621,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13321,
											"end": 13628,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 13321,
											"end": 13628,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 13321,
											"end": 13628,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13321,
											"end": 13628,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 13634,
											"end": 13803,
											"name": "tag",
											"source": 15,
											"value": "223"
										},
										{
											"begin": 13634,
											"end": 13803,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13718,
											"end": 13729,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 13752,
											"end": 13758,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13747,
											"end": 13750,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13740,
											"end": 13759,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 13792,
											"end": 13796,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 13787,
											"end": 13790,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13783,
											"end": 13797,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13768,
											"end": 13797,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 13768,
											"end": 13797,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13634,
											"end": 13803,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 13634,
											"end": 13803,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 13634,
											"end": 13803,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13634,
											"end": 13803,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13634,
											"end": 13803,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 13809,
											"end": 13905,
											"name": "tag",
											"source": 15,
											"value": "211"
										},
										{
											"begin": 13809,
											"end": 13905,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13846,
											"end": 13853,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 13875,
											"end": 13899,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "287"
										},
										{
											"begin": 13893,
											"end": 13898,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13875,
											"end": 13899,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "288"
										},
										{
											"begin": 13875,
											"end": 13899,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 13875,
											"end": 13899,
											"name": "tag",
											"source": 15,
											"value": "287"
										},
										{
											"begin": 13875,
											"end": 13899,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13864,
											"end": 13899,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 13864,
											"end": 13899,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13809,
											"end": 13905,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 13809,
											"end": 13905,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 13809,
											"end": 13905,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13809,
											"end": 13905,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 13911,
											"end": 14001,
											"name": "tag",
											"source": 15,
											"value": "215"
										},
										{
											"begin": 13911,
											"end": 14001,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13945,
											"end": 13952,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 13988,
											"end": 13993,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 13981,
											"end": 13994,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 13974,
											"end": 13995,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 13963,
											"end": 13995,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 13963,
											"end": 13995,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13911,
											"end": 14001,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 13911,
											"end": 14001,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 13911,
											"end": 14001,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13911,
											"end": 14001,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 14007,
											"end": 14156,
											"name": "tag",
											"source": 15,
											"value": "219"
										},
										{
											"begin": 14007,
											"end": 14156,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14043,
											"end": 14050,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 14083,
											"end": 14149,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14076,
											"end": 14081,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14072,
											"end": 14150,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 14061,
											"end": 14150,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 14061,
											"end": 14150,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14007,
											"end": 14156,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 14007,
											"end": 14156,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 14007,
											"end": 14156,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14007,
											"end": 14156,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 14162,
											"end": 14288,
											"name": "tag",
											"source": 15,
											"value": "288"
										},
										{
											"begin": 14162,
											"end": 14288,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14199,
											"end": 14206,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 14239,
											"end": 14281,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14232,
											"end": 14237,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14228,
											"end": 14282,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 14217,
											"end": 14282,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 14217,
											"end": 14282,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14162,
											"end": 14288,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 14162,
											"end": 14288,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 14162,
											"end": 14288,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14162,
											"end": 14288,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 14294,
											"end": 14371,
											"name": "tag",
											"source": 15,
											"value": "249"
										},
										{
											"begin": 14294,
											"end": 14371,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14331,
											"end": 14338,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 14360,
											"end": 14365,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 14349,
											"end": 14365,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 14349,
											"end": 14365,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14294,
											"end": 14371,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 14294,
											"end": 14371,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 14294,
											"end": 14371,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14294,
											"end": 14371,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 14377,
											"end": 14531,
											"name": "tag",
											"source": 15,
											"value": "136"
										},
										{
											"begin": 14377,
											"end": 14531,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14461,
											"end": 14467,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14456,
											"end": 14459,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 14451,
											"end": 14454,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 14438,
											"end": 14468,
											"name": "CALLDATACOPY",
											"source": 15
										},
										{
											"begin": 14523,
											"end": 14524,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 14514,
											"end": 14520,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 14509,
											"end": 14512,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 14505,
											"end": 14521,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14498,
											"end": 14525,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 14377,
											"end": 14531,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14377,
											"end": 14531,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14377,
											"end": 14531,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14377,
											"end": 14531,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 14537,
											"end": 14818,
											"name": "tag",
											"source": 15,
											"value": "274"
										},
										{
											"begin": 14537,
											"end": 14818,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14620,
											"end": 14647,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "295"
										},
										{
											"begin": 14642,
											"end": 14646,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14620,
											"end": 14647,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "284"
										},
										{
											"begin": 14620,
											"end": 14647,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 14620,
											"end": 14647,
											"name": "tag",
											"source": 15,
											"value": "295"
										},
										{
											"begin": 14620,
											"end": 14647,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14612,
											"end": 14618,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 14608,
											"end": 14648,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14750,
											"end": 14756,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 14738,
											"end": 14748,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 14735,
											"end": 14757,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 14714,
											"end": 14732,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14702,
											"end": 14712,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14699,
											"end": 14733,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 14696,
											"end": 14758,
											"name": "OR",
											"source": 15
										},
										{
											"begin": 14693,
											"end": 14781,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 14693,
											"end": 14781,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "296"
										},
										{
											"begin": 14693,
											"end": 14781,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 14761,
											"end": 14779,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "297"
										},
										{
											"begin": 14761,
											"end": 14779,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "279"
										},
										{
											"begin": 14761,
											"end": 14779,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 14761,
											"end": 14779,
											"name": "tag",
											"source": 15,
											"value": "297"
										},
										{
											"begin": 14761,
											"end": 14779,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14693,
											"end": 14781,
											"name": "tag",
											"source": 15,
											"value": "296"
										},
										{
											"begin": 14693,
											"end": 14781,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14801,
											"end": 14811,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 14797,
											"end": 14799,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 14790,
											"end": 14812,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 14580,
											"end": 14818,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14537,
											"end": 14818,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14537,
											"end": 14818,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14537,
											"end": 14818,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 14824,
											"end": 15004,
											"name": "tag",
											"source": 15,
											"value": "279"
										},
										{
											"begin": 14824,
											"end": 15004,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14872,
											"end": 14949,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14869,
											"end": 14870,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 14862,
											"end": 14950,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 14969,
											"end": 14973,
											"name": "PUSH",
											"source": 15,
											"value": "41"
										},
										{
											"begin": 14966,
											"end": 14967,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 14959,
											"end": 14974,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 14993,
											"end": 14997,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 14990,
											"end": 14991,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 14983,
											"end": 14998,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 15010,
											"end": 15127,
											"name": "tag",
											"source": 15,
											"value": "145"
										},
										{
											"begin": 15010,
											"end": 15127,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15119,
											"end": 15120,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 15116,
											"end": 15117,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 15109,
											"end": 15121,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 15133,
											"end": 15250,
											"name": "tag",
											"source": 15,
											"value": "121"
										},
										{
											"begin": 15133,
											"end": 15250,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15242,
											"end": 15243,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 15239,
											"end": 15240,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 15232,
											"end": 15244,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 15256,
											"end": 15373,
											"name": "tag",
											"source": 15,
											"value": "134"
										},
										{
											"begin": 15256,
											"end": 15373,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15365,
											"end": 15366,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 15362,
											"end": 15363,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 15355,
											"end": 15367,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 15379,
											"end": 15496,
											"name": "tag",
											"source": 15,
											"value": "172"
										},
										{
											"begin": 15379,
											"end": 15496,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15488,
											"end": 15489,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 15485,
											"end": 15486,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 15478,
											"end": 15490,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 15502,
											"end": 15619,
											"name": "tag",
											"source": 15,
											"value": "162"
										},
										{
											"begin": 15502,
											"end": 15619,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15611,
											"end": 15612,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 15608,
											"end": 15609,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 15601,
											"end": 15613,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 15625,
											"end": 15727,
											"name": "tag",
											"source": 15,
											"value": "284"
										},
										{
											"begin": 15625,
											"end": 15727,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15666,
											"end": 15672,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 15717,
											"end": 15719,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 15713,
											"end": 15720,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 15708,
											"end": 15710,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 15701,
											"end": 15706,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 15697,
											"end": 15711,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15693,
											"end": 15721,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 15683,
											"end": 15721,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 15683,
											"end": 15721,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15625,
											"end": 15727,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 15625,
											"end": 15727,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 15625,
											"end": 15727,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15625,
											"end": 15727,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 15733,
											"end": 15913,
											"name": "tag",
											"source": 15,
											"value": "225"
										},
										{
											"begin": 15733,
											"end": 15913,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15873,
											"end": 15905,
											"name": "PUSH",
											"source": 15,
											"value": "4261636B757020616464726573732063616E206E6F74206265207A65726F0000"
										},
										{
											"begin": 15869,
											"end": 15870,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 15861,
											"end": 15867,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15857,
											"end": 15871,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15850,
											"end": 15906,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 15733,
											"end": 15913,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15733,
											"end": 15913,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 15919,
											"end": 16099,
											"name": "tag",
											"source": 15,
											"value": "230"
										},
										{
											"begin": 15919,
											"end": 16099,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16059,
											"end": 16091,
											"name": "PUSH",
											"source": 15,
											"value": "53656E64657220616464726573732063616E206E6F74206265207A65726F0000"
										},
										{
											"begin": 16055,
											"end": 16056,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 16047,
											"end": 16053,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 16043,
											"end": 16057,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16036,
											"end": 16092,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 15919,
											"end": 16099,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15919,
											"end": 16099,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 16105,
											"end": 16287,
											"name": "tag",
											"source": 15,
											"value": "235"
										},
										{
											"begin": 16105,
											"end": 16287,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16245,
											"end": 16279,
											"name": "PUSH",
											"source": 15,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 16241,
											"end": 16242,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 16233,
											"end": 16239,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 16229,
											"end": 16243,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16222,
											"end": 16280,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 16105,
											"end": 16287,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16105,
											"end": 16287,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 16293,
											"end": 16471,
											"name": "tag",
											"source": 15,
											"value": "240"
										},
										{
											"begin": 16293,
											"end": 16471,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16433,
											"end": 16463,
											"name": "PUSH",
											"source": 15,
											"value": "436F6E747261637420616C726561647920696E697469616C697A656400000000"
										},
										{
											"begin": 16429,
											"end": 16430,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 16421,
											"end": 16427,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 16417,
											"end": 16431,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16410,
											"end": 16464,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 16293,
											"end": 16471,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16293,
											"end": 16471,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 16477,
											"end": 16710,
											"name": "tag",
											"source": 15,
											"value": "245"
										},
										{
											"begin": 16477,
											"end": 16710,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16617,
											"end": 16651,
											"name": "PUSH",
											"source": 15,
											"value": "4261636B75702077616C6C65742063616E206E6F742062652073616D65206173"
										},
										{
											"begin": 16613,
											"end": 16614,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 16605,
											"end": 16611,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 16601,
											"end": 16615,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16594,
											"end": 16652,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 16686,
											"end": 16702,
											"name": "PUSH",
											"source": 15,
											"value": "2073656E6465722077616C6C6574000000000000000000000000000000000000"
										},
										{
											"begin": 16681,
											"end": 16683,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 16673,
											"end": 16679,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 16669,
											"end": 16684,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16662,
											"end": 16703,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 16477,
											"end": 16710,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16477,
											"end": 16710,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 16716,
											"end": 16838,
											"name": "tag",
											"source": 15,
											"value": "140"
										},
										{
											"begin": 16716,
											"end": 16838,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16789,
											"end": 16813,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "311"
										},
										{
											"begin": 16807,
											"end": 16812,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 16789,
											"end": 16813,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "211"
										},
										{
											"begin": 16789,
											"end": 16813,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 16789,
											"end": 16813,
											"name": "tag",
											"source": 15,
											"value": "311"
										},
										{
											"begin": 16789,
											"end": 16813,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16782,
											"end": 16787,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 16779,
											"end": 16814,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 16769,
											"end": 16832,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "312"
										},
										{
											"begin": 16769,
											"end": 16832,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 16828,
											"end": 16829,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 16825,
											"end": 16826,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 16818,
											"end": 16830,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 16769,
											"end": 16832,
											"name": "tag",
											"source": 15,
											"value": "312"
										},
										{
											"begin": 16769,
											"end": 16832,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16716,
											"end": 16838,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16716,
											"end": 16838,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 16844,
											"end": 16964,
											"name": "tag",
											"source": 15,
											"value": "150"
										},
										{
											"begin": 16844,
											"end": 16964,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16916,
											"end": 16939,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "314"
										},
										{
											"begin": 16933,
											"end": 16938,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 16916,
											"end": 16939,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "219"
										},
										{
											"begin": 16916,
											"end": 16939,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 16916,
											"end": 16939,
											"name": "tag",
											"source": 15,
											"value": "314"
										},
										{
											"begin": 16916,
											"end": 16939,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16909,
											"end": 16914,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 16906,
											"end": 16940,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 16896,
											"end": 16958,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "315"
										},
										{
											"begin": 16896,
											"end": 16958,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 16954,
											"end": 16955,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 16951,
											"end": 16952,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 16944,
											"end": 16956,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 16896,
											"end": 16958,
											"name": "tag",
											"source": 15,
											"value": "315"
										},
										{
											"begin": 16896,
											"end": 16958,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16844,
											"end": 16964,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16844,
											"end": 16964,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 16970,
											"end": 17092,
											"name": "tag",
											"source": 15,
											"value": "158"
										},
										{
											"begin": 16970,
											"end": 17092,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17043,
											"end": 17067,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "317"
										},
										{
											"begin": 17061,
											"end": 17066,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 17043,
											"end": 17067,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "249"
										},
										{
											"begin": 17043,
											"end": 17067,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 17043,
											"end": 17067,
											"name": "tag",
											"source": 15,
											"value": "317"
										},
										{
											"begin": 17043,
											"end": 17067,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17036,
											"end": 17041,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 17033,
											"end": 17068,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 17023,
											"end": 17086,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "318"
										},
										{
											"begin": 17023,
											"end": 17086,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 17082,
											"end": 17083,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 17079,
											"end": 17080,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 17072,
											"end": 17084,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 17023,
											"end": 17086,
											"name": "tag",
											"source": 15,
											"value": "318"
										},
										{
											"begin": 17023,
											"end": 17086,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16970,
											"end": 17092,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16970,
											"end": 17092,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"init(address,address)": "f09a4016",
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"onERC721Received(address,address,uint256,bytes)": "150b7a02",
							"owner()": "8da5cb5b",
							"sendERC721FundsToBackupWallet(address,uint256)": "71b4bc99",
							"sendNativeFundsToBackupWallet()": "450b2ad7",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_backupWallet\",\"type\":\"address\"}],\"name\":\"init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"sendERC721FundsToBackupWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sendNativeFundsToBackupWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Practice NFT.sol\":\"TwoFactor\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x8e93de94c9062ebc94fb7e2e3929b0781ac6a2b7772e2f7a59045861c93e5be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f920a631bf986c610fe573d3c70a2bb6f224f86f4a8550016470c7ee476c9ab5\",\"dweb:/ipfs/QmYzsyVMfnaREKHcHv5RPS8Xg5r1Q38E2SDsGBTnXeFWzb\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":{\"keccak256\":\"0x2e024ca51ce5abe16c0d34e6992a1104f356e2244eb4ccbec970435e8b3405e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a74009db3c6fc8db851ba69ddb6795b5c1ef1120c5a00fd1a8dc3a717dd9d519\",\"dweb:/ipfs/QmZMk8Yh2X3gPS51ckUVLEXjZUhMSEeGApnA53WtjvLb9h\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":{\"keccak256\":\"0x3dd5e1a66a56f30302108a1da97d677a42b1daa60e503696b2bcbbf3e4c95bcb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0808de0ae4918c664643c885ca7fa6503e8ef2bd75609dfc85152c0128a3422d\",\"dweb:/ipfs/QmNrhFC1XgBKuuxfahFeiwi1MCdu3FLNpHj2uStgmf4iJj\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4632c341a06ba5c079b51ca5a915efab4e6ab57735b37839b3e8365ff806a43e\",\"dweb:/ipfs/QmTHT3xHYed2wajEoA5qu7ii2BxLpPhQZHwAhtLK5Z7ANK\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x0d4de01fe5360c38b4ad2b0822a12722958428f5138a7ff47c1720eb6fa52bba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77724cecdfba8814632ab58737c2b0f2d4ad2d532bc614aee559b5593c1152f0\",\"dweb:/ipfs/QmUcE6gXyv7CQh4sUdcDABYKGTovTe1zLMZSEq95nkc3ph\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":{\"keccak256\":\"0x0108bf6a6ebd5f96678bed33a35947537263f96766131ee91461fb6485805028\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ae2d274bf3d56a6d49a9bbd0a4871c54997a82551eb3eb1c0c39dc98698ff8bf\",\"dweb:/ipfs/QmTT7ty5DPGAmRnx94Xu3TUDYGSPDVLN2bppJAjjedrg1e\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"Ownable.sol\":{\"keccak256\":\"0x27859030a47f274f647c726d7154207782f41c299a471ad984fb937a96726e9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://03dc74c9002f66b328d3cf2146f8684fe1a4574b771948933a39ecda1467ab89\",\"dweb:/ipfs/QmPJq3SLdXqcbaejBs6UxANXkaYryGwjBSixR2CcWzVgQw\"]},\"Practice NFT.sol\":{\"keccak256\":\"0x7e970772b6a11f994c31a37ab15fb160a4b9acbbfe23efa1e879e4b900613dad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b450e5222eeaa48f89e32eb87e3f3ea4027a07f859fe9e0390edd6aa7659ddd8\",\"dweb:/ipfs/QmfB2cEVGZqFxv4LHGt1dyqjHQiKCiBop5Q564yVNkLLsu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1071,
								"contract": "Practice NFT.sol:TwoFactor",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 1152,
								"contract": "Practice NFT.sol:TwoFactor",
								"label": "isInitialized",
								"offset": 20,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 1154,
								"contract": "Practice NFT.sol:TwoFactor",
								"label": "backupWallet",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
					"exportedSymbols": {
						"IERC1155": [
							121
						],
						"IERC165": [
							1063
						]
					},
					"id": 122,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "95:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 122,
							"sourceUnit": 1064,
							"src": "120:47:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1063,
										"src": "357:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "357:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "169:165:0",
								"text": " @dev Required interface of an ERC1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[EIP].\n _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 121,
							"linearizedBaseContracts": [
								121,
								1063
							],
							"name": "IERC1155",
							"nameLocation": "345:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 6,
										"nodeType": "StructuredDocumentation",
										"src": "371:121:0",
										"text": " @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
									},
									"id": 18,
									"name": "TransferSingle",
									"nameLocation": "503:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "534:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "518:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 7,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "518:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 10,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "560:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "544:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 9,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "544:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 12,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "582:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "566:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 11,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "566:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 14,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "594:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "586:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "586:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "606:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "598:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 15,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "598:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "517:95:0"
									},
									"src": "497:116:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 19,
										"nodeType": "StructuredDocumentation",
										"src": "619:144:0",
										"text": " @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."
									},
									"id": 33,
									"name": "TransferBatch",
									"nameLocation": "774:13:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "813:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "797:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 20,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "797:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 23,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "847:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "831:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 22,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "831:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 25,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "877:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "861:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 24,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "861:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"indexed": false,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "899:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "889:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 26,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "889:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 27,
													"nodeType": "ArrayTypeName",
													"src": "889:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 31,
												"indexed": false,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "922:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "912:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 29,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "912:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 30,
													"nodeType": "ArrayTypeName",
													"src": "912:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "787:147:0"
									},
									"src": "768:167:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 34,
										"nodeType": "StructuredDocumentation",
										"src": "941:147:0",
										"text": " @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."
									},
									"id": 42,
									"name": "ApprovalForAll",
									"nameLocation": "1099:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 36,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1130:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "1114:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 35,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1114:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1155:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "1139:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1139:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 40,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "1170:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "1165:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 39,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1165:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1113:66:0"
									},
									"src": "1093:87:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "1186:343:0",
										"text": " @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."
									},
									"id": 49,
									"name": "URI",
									"nameLocation": "1540:3:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1551:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 49,
												"src": "1544:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 44,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1544:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 47,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1574:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 49,
												"src": "1558:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 46,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1558:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1543:34:0"
									},
									"src": "1534:44:0"
								},
								{
									"documentation": {
										"id": 50,
										"nodeType": "StructuredDocumentation",
										"src": "1584:173:0",
										"text": " @dev Returns the amount of tokens of token type `id` owned by `account`.\n Requirements:\n - `account` cannot be the zero address."
									},
									"functionSelector": "00fdd58e",
									"id": 59,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1771:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1789:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "1781:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 51,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1781:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1806:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "1798:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 53,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1798:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1780:29:0"
									},
									"returnParameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "1833:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1833:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1832:9:0"
									},
									"scope": 121,
									"src": "1762:80:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 60,
										"nodeType": "StructuredDocumentation",
										"src": "1848:188:0",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 72,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "2050:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "2084:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "2065:27:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 61,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2065:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 62,
													"nodeType": "ArrayTypeName",
													"src": "2065:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2113:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "2094:22:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 64,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2094:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 65,
													"nodeType": "ArrayTypeName",
													"src": "2094:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2064:53:0"
									},
									"returnParameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "2165:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 68,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2165:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 69,
													"nodeType": "ArrayTypeName",
													"src": "2165:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2164:18:0"
									},
									"scope": 121,
									"src": "2041:142:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 73,
										"nodeType": "StructuredDocumentation",
										"src": "2189:248:0",
										"text": " @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the caller."
									},
									"functionSelector": "a22cb465",
									"id": 80,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "2451:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2477:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2469:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 74,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "2492:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2487:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 76,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2487:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:33:0"
									},
									"returnParameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2510:0:0"
									},
									"scope": 121,
									"src": "2442:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "2517:135:0",
										"text": " @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 90,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "2666:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2691:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "2683:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2683:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2708:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "2700:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 84,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2700:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2682:35:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 88,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "2741:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 87,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2741:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2740:6:0"
									},
									"scope": 121,
									"src": "2657:90:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "2753:559:0",
										"text": " @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `amount`.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"functionSelector": "f242432a",
									"id": 104,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3326:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3360:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "3352:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3352:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3382:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "3374:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 94,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3374:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3402:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "3394:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3394:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3422:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "3414:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3414:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3453:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "3438:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 100,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3438:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3342:121:0"
									},
									"returnParameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3472:0:0"
									},
									"scope": 121,
									"src": "3317:156:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 105,
										"nodeType": "StructuredDocumentation",
										"src": "3479:390:0",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `amounts` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"functionSelector": "2eb2c2d6",
									"id": 120,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "3883:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3922:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "3914:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 106,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3914:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3944:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "3936:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3936:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "3975:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "3956:22:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 110,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3956:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 111,
													"nodeType": "ArrayTypeName",
													"src": "3956:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "4007:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "3988:26:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 113,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3988:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 114,
													"nodeType": "ArrayTypeName",
													"src": "3988:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4039:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "4024:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 116,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4024:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3904:145:0"
									},
									"returnParameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4058:0:0"
									},
									"scope": 121,
									"src": "3874:185:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 122,
							"src": "335:3726:0",
							"usedErrors": []
						}
					],
					"src": "95:3967:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
					"exportedSymbols": {
						"IERC1155Receiver": [
							162
						],
						"IERC165": [
							1063
						]
					},
					"id": 163,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 123,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "118:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 124,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 163,
							"sourceUnit": 1064,
							"src": "143:47:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 126,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1063,
										"src": "262:7:1"
									},
									"id": 127,
									"nodeType": "InheritanceSpecifier",
									"src": "262:7:1"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 125,
								"nodeType": "StructuredDocumentation",
								"src": "192:39:1",
								"text": " @dev _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 162,
							"linearizedBaseContracts": [
								162,
								1063
							],
							"name": "IERC1155Receiver",
							"nameLocation": "242:16:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 128,
										"nodeType": "StructuredDocumentation",
										"src": "276:826:1",
										"text": " @dev Handles the receipt of a single ERC1155 token type. This function is\n called at the end of a `safeTransferFrom` after the balance has been updated.\n NOTE: To accept the transfer, this must return\n `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n (i.e. 0xf23a6e61, or its own function selector).\n @param operator The address which initiated the transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param id The ID of the token being transferred\n @param value The amount of tokens being transferred\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "f23a6e61",
									"id": 143,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155Received",
									"nameLocation": "1116:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 130,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1151:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "1143:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 129,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1143:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1177:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "1169:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 131,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1169:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1199:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "1191:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 133,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1191:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1219:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "1211:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1249:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "1234:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 137,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1234:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1133:126:1"
									},
									"returnParameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 141,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "1278:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 140,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1278:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1277:8:1"
									},
									"scope": 162,
									"src": "1107:179:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 144,
										"nodeType": "StructuredDocumentation",
										"src": "1292:994:1",
										"text": " @dev Handles the receipt of a multiple ERC1155 token types. This function\n is called at the end of a `safeBatchTransferFrom` after the balances have\n been updated.\n NOTE: To accept the transfer(s), this must return\n `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n (i.e. 0xbc197c81, or its own function selector).\n @param operator The address which initiated the batch transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param ids An array containing ids of each token being transferred (order and length must match values array)\n @param values An array containing amounts of each token being transferred (order and length must match ids array)\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "bc197c81",
									"id": 161,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155BatchReceived",
									"nameLocation": "2300:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2340:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "2332:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 145,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2332:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2366:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "2358:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2358:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2399:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "2380:22:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 149,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2380:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 150,
													"nodeType": "ArrayTypeName",
													"src": "2380:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "2431:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "2412:25:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 152,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2412:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 153,
													"nodeType": "ArrayTypeName",
													"src": "2412:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2462:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "2447:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 155,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2447:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:150:1"
									},
									"returnParameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "2491:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 158,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2491:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2490:8:1"
									},
									"scope": 162,
									"src": "2291:208:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 163,
							"src": "232:2269:1",
							"usedErrors": []
						}
					],
					"src": "118:2384:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol",
					"exportedSymbols": {
						"ERC1155Holder": [
							213
						],
						"ERC1155Receiver": [
							247
						],
						"ERC165": [
							1051
						],
						"IERC1155Receiver": [
							162
						],
						"IERC165": [
							1063
						]
					},
					"id": 214,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 164,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "121:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol",
							"file": "./ERC1155Receiver.sol",
							"id": 165,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 214,
							"sourceUnit": 248,
							"src": "146:31:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 167,
										"name": "ERC1155Receiver",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 247,
										"src": "477:15:2"
									},
									"id": 168,
									"nodeType": "InheritanceSpecifier",
									"src": "477:15:2"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 166,
								"nodeType": "StructuredDocumentation",
								"src": "179:271:2",
								"text": " Simple implementation of `ERC1155Receiver` that will allow a contract to hold ERC1155 tokens.\n IMPORTANT: When inheriting this contract, you must include a way to use the received tokens, otherwise they will be\n stuck.\n @dev _Available since v3.1._"
							},
							"fullyImplemented": true,
							"id": 213,
							"linearizedBaseContracts": [
								213,
								247,
								162,
								1051,
								1063
							],
							"name": "ERC1155Holder",
							"nameLocation": "460:13:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										143
									],
									"body": {
										"id": 188,
										"nodeType": "Block",
										"src": "663:55:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 184,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967268,
															"src": "680:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC1155Holder_$213",
																"typeString": "contract ERC1155Holder"
															}
														},
														"id": 185,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "onERC1155Received",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 189,
														"src": "680:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
															"typeString": "function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"
														}
													},
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberName": "selector",
													"nodeType": "MemberAccess",
													"src": "680:31:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"functionReturnParameters": 183,
												"id": 187,
												"nodeType": "Return",
												"src": "673:38:2"
											}
										]
									},
									"functionSelector": "f23a6e61",
									"id": 189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155Received",
									"nameLocation": "508:17:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 180,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "637:8:2"
									},
									"parameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "535:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 169,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "535:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "552:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "552:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "569:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "569:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "586:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "586:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "603:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 177,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "603:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "525:96:2"
									},
									"returnParameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "655:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 181,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "655:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:8:2"
									},
									"scope": 213,
									"src": "499:219:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										161
									],
									"body": {
										"id": 211,
										"nodeType": "Block",
										"src": "911:60:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 207,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967268,
															"src": "928:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC1155Holder_$213",
																"typeString": "contract ERC1155Holder"
															}
														},
														"id": 208,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "onERC1155BatchReceived",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 212,
														"src": "928:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"
														}
													},
													"id": 209,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberName": "selector",
													"nodeType": "MemberAccess",
													"src": "928:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"functionReturnParameters": 206,
												"id": 210,
												"nodeType": "Return",
												"src": "921:43:2"
											}
										]
									},
									"functionSelector": "bc197c81",
									"id": 212,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155BatchReceived",
									"nameLocation": "733:22:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 203,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "885:8:2"
									},
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "765:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 190,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "765:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "782:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "782:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "799:16:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 194,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "799:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 195,
													"nodeType": "ArrayTypeName",
													"src": "799:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "825:16:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 197,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "825:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 198,
													"nodeType": "ArrayTypeName",
													"src": "825:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "851:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 200,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "851:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "755:114:2"
									},
									"returnParameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "903:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 204,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "903:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "902:8:2"
									},
									"scope": 213,
									"src": "724:247:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 214,
							"src": "451:522:2",
							"usedErrors": []
						}
					],
					"src": "121:853:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol",
					"exportedSymbols": {
						"ERC1155Receiver": [
							247
						],
						"ERC165": [
							1051
						],
						"IERC1155Receiver": [
							162
						],
						"IERC165": [
							1063
						]
					},
					"id": 248,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 215,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
							"file": "../IERC1155Receiver.sol",
							"id": 216,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 248,
							"sourceUnit": 163,
							"src": "133:33:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../../utils/introspection/ERC165.sol",
							"id": 217,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 248,
							"sourceUnit": 1052,
							"src": "167:49:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 219,
										"name": "ERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1051,
										"src": "295:6:3"
									},
									"id": 220,
									"nodeType": "InheritanceSpecifier",
									"src": "295:6:3"
								},
								{
									"baseName": {
										"id": 221,
										"name": "IERC1155Receiver",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 162,
										"src": "303:16:3"
									},
									"id": 222,
									"nodeType": "InheritanceSpecifier",
									"src": "303:16:3"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 218,
								"nodeType": "StructuredDocumentation",
								"src": "218:39:3",
								"text": " @dev _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 247,
							"linearizedBaseContracts": [
								247,
								162,
								1051,
								1063
							],
							"name": "ERC1155Receiver",
							"nameLocation": "276:15:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1050,
										1062
									],
									"body": {
										"id": 245,
										"nodeType": "Block",
										"src": "495:113:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 238,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 233,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 225,
															"src": "512:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 235,
																		"name": "IERC1155Receiver",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 162,
																		"src": "532:16:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$162_$",
																			"typeString": "type(contract IERC1155Receiver)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$162_$",
																			"typeString": "type(contract IERC1155Receiver)"
																		}
																	],
																	"id": 234,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "527:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 236,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "527:22:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155Receiver_$162",
																	"typeString": "type(contract IERC1155Receiver)"
																}
															},
															"id": 237,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "527:34:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "512:49:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 241,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 225,
																"src": "589:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 239,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "565:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC1155Receiver_$247_$",
																	"typeString": "type(contract super ERC1155Receiver)"
																}
															},
															"id": 240,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1050,
															"src": "565:23:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 242,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "565:36:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "512:89:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 232,
												"id": 244,
												"nodeType": "Return",
												"src": "505:96:3"
											}
										]
									},
									"documentation": {
										"id": 223,
										"nodeType": "StructuredDocumentation",
										"src": "326:56:3",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 246,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "396:17:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 229,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 227,
												"name": "ERC165",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1051,
												"src": "463:6:3"
											},
											{
												"id": 228,
												"name": "IERC165",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1063,
												"src": "471:7:3"
											}
										],
										"src": "454:25:3"
									},
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "421:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "414:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 224,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "414:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "413:20:3"
									},
									"returnParameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "489:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 230,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "489:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "488:6:3"
									},
									"scope": 247,
									"src": "387:221:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 248,
							"src": "258:352:3",
							"usedErrors": []
						}
					],
					"src": "108:503:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							325
						]
					},
					"id": 326,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 249,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 250,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:4",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 325,
							"linearizedBaseContracts": [
								325
							],
							"name": "IERC20",
							"nameLocation": "212:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 251,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:4",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 259,
									"name": "Transfer",
									"nameLocation": "394:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 253,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "403:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 252,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 255,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "425:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 254,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 257,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "445:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 256,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:4"
									},
									"src": "388:72:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:4",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 268,
									"name": "Approval",
									"nameLocation": "625:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "634:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "657:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "682:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 265,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:4"
									},
									"src": "619:78:4"
								},
								{
									"documentation": {
										"id": 269,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:4",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 274,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:4"
									},
									"returnParameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "820:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:4"
									},
									"scope": 325,
									"src": "774:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 275,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:4",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 282,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "931:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 276,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:4"
									},
									"returnParameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "971:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 279,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:4"
									},
									"scope": 325,
									"src": "912:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 283,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:4",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 292,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "1211:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 284,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "1223:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 286,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:4"
									},
									"returnParameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "1257:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 289,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:4"
									},
									"scope": 325,
									"src": "1193:70:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 293,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:4",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 302,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "1557:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 294,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "1572:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 296,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:4"
									},
									"returnParameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "1612:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 299,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:4"
									},
									"scope": 325,
									"src": "1538:83:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:4",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 312,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "2291:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "2308:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 306,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:4"
									},
									"returnParameters": {
										"id": 311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 310,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "2342:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 309,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:4"
									},
									"scope": 325,
									"src": "2274:74:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 313,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:4",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 324,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 324,
												"src": "2677:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 314,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 324,
												"src": "2699:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 316,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 324,
												"src": "2719:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 318,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:4"
									},
									"returnParameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 324,
												"src": "2758:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 321,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:4"
									},
									"scope": 325,
									"src": "2646:118:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 326,
							"src": "202:2564:4",
							"usedErrors": []
						}
					],
					"src": "106:2661:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							1005
						],
						"IERC20": [
							325
						],
						"SafeERC20": [
							549
						]
					},
					"id": 550,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 327,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 328,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 550,
							"sourceUnit": 326,
							"src": "125:23:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 329,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 550,
							"sourceUnit": 1006,
							"src": "149:36:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 330,
								"nodeType": "StructuredDocumentation",
								"src": "187:457:5",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 549,
							"linearizedBaseContracts": [
								549
							],
							"name": "SafeERC20",
							"nameLocation": "653:9:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 333,
									"libraryName": {
										"id": 331,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1005,
										"src": "675:7:5"
									},
									"nodeType": "UsingForDirective",
									"src": "669:26:5",
									"typeName": {
										"id": 332,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "687:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 355,
										"nodeType": "Block",
										"src": "803:103:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 344,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 336,
															"src": "833:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$325",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 347,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 336,
																			"src": "863:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$325",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 348,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 292,
																		"src": "863:14:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 349,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "863:23:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 350,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 338,
																	"src": "888:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 351,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 340,
																	"src": "892:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 345,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "840:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 346,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "840:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 352,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "840:58:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$325",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 343,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 548,
														"src": "813:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$325_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "813:86:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 354,
												"nodeType": "ExpressionStatement",
												"src": "813:86:5"
											}
										]
									},
									"id": 356,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "710:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "739:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 356,
												"src": "732:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$325",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 335,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 334,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 325,
														"src": "732:6:5"
													},
													"referencedDeclaration": 325,
													"src": "732:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$325",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "762:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 356,
												"src": "754:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 337,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "754:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "782:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 356,
												"src": "774:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 339,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "774:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "722:71:5"
									},
									"returnParameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "803:0:5"
									},
									"scope": 549,
									"src": "701:205:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 381,
										"nodeType": "Block",
										"src": "1040:113:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 369,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 359,
															"src": "1070:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$325",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 372,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 359,
																			"src": "1100:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$325",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 373,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 324,
																		"src": "1100:18:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 374,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1100:27:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 375,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 361,
																	"src": "1129:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 376,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 363,
																	"src": "1135:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 377,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 365,
																	"src": "1139:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 370,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1077:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 371,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1077:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 378,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1077:68:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$325",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 368,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 548,
														"src": "1050:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$325_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1050:96:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 380,
												"nodeType": "ExpressionStatement",
												"src": "1050:96:5"
											}
										]
									},
									"id": 382,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "921:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "954:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "947:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$325",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 358,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 357,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 325,
														"src": "947:6:5"
													},
													"referencedDeclaration": 325,
													"src": "947:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$325",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "977:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "969:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 360,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "969:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "999:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "991:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 362,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "991:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1019:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "1011:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 364,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "937:93:5"
									},
									"returnParameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1040:0:5"
									},
									"scope": 549,
									"src": "912:241:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "1519:497:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 409,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 396,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 394,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 390,
																			"src": "1768:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 395,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1777:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1768:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 397,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1767:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 407,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 402,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "1808:4:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$549",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$549",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 401,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1800:7:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 400,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "1800:7:5",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 403,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1800:13:5",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 404,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 388,
																					"src": "1815:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 398,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 386,
																					"src": "1784:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$325",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 399,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 302,
																				"src": "1784:15:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 405,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1784:39:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 406,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1827:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1784:44:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 408,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1783:46:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1767:62:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 410,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1843:56:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 393,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1746:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1746:163:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 412,
												"nodeType": "ExpressionStatement",
												"src": "1746:163:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 414,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "1939:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$325",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 417,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 386,
																			"src": "1969:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$325",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 418,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 312,
																		"src": "1969:13:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 419,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1969:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 420,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "1993:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 421,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 390,
																	"src": "2002:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 415,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1946:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 416,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1946:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 422,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1946:62:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$325",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 413,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 548,
														"src": "1919:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$325_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1919:90:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 424,
												"nodeType": "ExpressionStatement",
												"src": "1919:90:5"
											}
										]
									},
									"documentation": {
										"id": 383,
										"nodeType": "StructuredDocumentation",
										"src": "1159:249:5",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "1422:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1450:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "1443:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$325",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 385,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 384,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 325,
														"src": "1443:6:5"
													},
													"referencedDeclaration": 325,
													"src": "1443:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$325",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1473:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "1465:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1465:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1498:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "1490:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1490:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1433:76:5"
									},
									"returnParameters": {
										"id": 392,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1519:0:5"
									},
									"scope": 549,
									"src": "1413:603:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 461,
										"nodeType": "Block",
										"src": "2138:194:5",
										"statements": [
											{
												"assignments": [
													437
												],
												"declarations": [
													{
														"constant": false,
														"id": 437,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "2156:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 461,
														"src": "2148:20:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 436,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2148:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 448,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 442,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2195:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_SafeERC20_$549",
																			"typeString": "library SafeERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_SafeERC20_$549",
																			"typeString": "library SafeERC20"
																		}
																	],
																	"id": 441,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2187:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 440,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2187:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 443,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2187:13:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 444,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 431,
																"src": "2202:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 438,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 429,
																"src": "2171:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$325",
																	"typeString": "contract IERC20"
																}
															},
															"id": 439,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "allowance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 302,
															"src": "2171:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address,address) view external returns (uint256)"
															}
														},
														"id": 445,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2171:39:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 446,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 433,
														"src": "2213:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2171:47:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2148:70:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 450,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "2248:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$325",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 453,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 429,
																			"src": "2278:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$325",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 454,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 312,
																		"src": "2278:13:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 455,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2278:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 456,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 431,
																	"src": "2302:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 457,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 437,
																	"src": "2311:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 451,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2255:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 452,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2255:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 458,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2255:69:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$325",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 449,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 548,
														"src": "2228:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$325_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2228:97:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 460,
												"nodeType": "ExpressionStatement",
												"src": "2228:97:5"
											}
										]
									},
									"id": 462,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2031:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2069:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "2062:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$325",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 428,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 427,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 325,
														"src": "2062:6:5"
													},
													"referencedDeclaration": 325,
													"src": "2062:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$325",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2092:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "2084:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 430,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2084:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2117:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "2109:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 432,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2109:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2052:76:5"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2138:0:5"
									},
									"scope": 549,
									"src": "2022:310:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 509,
										"nodeType": "Block",
										"src": "2454:370:5",
										"statements": [
											{
												"id": 508,
												"nodeType": "UncheckedBlock",
												"src": "2464:354:5",
												"statements": [
													{
														"assignments": [
															473
														],
														"declarations": [
															{
																"constant": false,
																"id": 473,
																"mutability": "mutable",
																"name": "oldAllowance",
																"nameLocation": "2496:12:5",
																"nodeType": "VariableDeclaration",
																"scope": 508,
																"src": "2488:20:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 472,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2488:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 482,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 478,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2535:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$549",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$549",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 477,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2527:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 476,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2527:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 479,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2527:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 480,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 467,
																	"src": "2542:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 474,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 465,
																	"src": "2511:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$325",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 475,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 302,
																"src": "2511:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 481,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2511:39:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2488:62:5"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 486,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 484,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 473,
																		"src": "2572:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 485,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 469,
																		"src": "2588:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2572:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 487,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2595:43:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	},
																	"value": "SafeERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	}
																],
																"id": 483,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2564:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 488,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2564:75:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 489,
														"nodeType": "ExpressionStatement",
														"src": "2564:75:5"
													},
													{
														"assignments": [
															491
														],
														"declarations": [
															{
																"constant": false,
																"id": 491,
																"mutability": "mutable",
																"name": "newAllowance",
																"nameLocation": "2661:12:5",
																"nodeType": "VariableDeclaration",
																"scope": 508,
																"src": "2653:20:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 490,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2653:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 495,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 492,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 473,
																"src": "2676:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 493,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 469,
																"src": "2691:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2676:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2653:43:5"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 497,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 465,
																	"src": "2730:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$325",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"expression": {
																					"id": 500,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 465,
																					"src": "2760:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$325",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 501,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 312,
																				"src": "2760:13:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 502,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "2760:22:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		{
																			"id": 503,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 467,
																			"src": "2784:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 504,
																			"name": "newAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 491,
																			"src": "2793:12:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 498,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "2737:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 499,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "encodeWithSelector",
																		"nodeType": "MemberAccess",
																		"src": "2737:22:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes4) pure returns (bytes memory)"
																		}
																	},
																	"id": 505,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2737:69:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$325",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 496,
																"name": "_callOptionalReturn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 548,
																"src": "2710:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$325_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (contract IERC20,bytes memory)"
																}
															},
															"id": 506,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2710:97:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 507,
														"nodeType": "ExpressionStatement",
														"src": "2710:97:5"
													}
												]
											}
										]
									},
									"id": 510,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2347:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2385:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 510,
												"src": "2378:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$325",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 464,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 463,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 325,
														"src": "2378:6:5"
													},
													"referencedDeclaration": 325,
													"src": "2378:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$325",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 467,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2408:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 510,
												"src": "2400:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 466,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2400:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 469,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2433:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 510,
												"src": "2425:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 468,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2425:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2368:76:5"
									},
									"returnParameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2454:0:5"
									},
									"scope": 549,
									"src": "2338:486:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 547,
										"nodeType": "Block",
										"src": "3277:636:5",
										"statements": [
											{
												"assignments": [
													520
												],
												"declarations": [
													{
														"constant": false,
														"id": 520,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3639:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 547,
														"src": "3626:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 519,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3626:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 529,
												"initialValue": {
													"arguments": [
														{
															"id": 526,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 516,
															"src": "3680:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 527,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3686:34:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 523,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 514,
																	"src": "3660:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$325",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$325",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 522,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3652:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 521,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3652:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 524,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3652:14:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 525,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 799,
														"src": "3652:27:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 528,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3652:69:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3626:95:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 533,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 530,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 520,
															"src": "3735:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 531,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3735:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 532,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3755:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3735:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 546,
												"nodeType": "IfStatement",
												"src": "3731:176:5",
												"trueBody": {
													"id": 545,
													"nodeType": "Block",
													"src": "3758:149:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 537,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 520,
																				"src": "3830:10:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 539,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "3843:4:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 538,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "3843:4:5",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 540,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3842:6:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 535,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3819:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 536,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "3819:10:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 541,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3819:30:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 542,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3851:44:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 534,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3811:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 543,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3811:85:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 544,
															"nodeType": "ExpressionStatement",
															"src": "3811:85:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 511,
										"nodeType": "StructuredDocumentation",
										"src": "2830:372:5",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 548,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "3216:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3243:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "3236:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$325",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 513,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 512,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 325,
														"src": "3236:6:5"
													},
													"referencedDeclaration": 325,
													"src": "3236:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$325",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3263:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "3250:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 515,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3250:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3235:33:5"
									},
									"returnParameters": {
										"id": 518,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3277:0:5"
									},
									"scope": 549,
									"src": "3207:706:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 550,
							"src": "645:3270:5",
							"usedErrors": []
						}
					],
					"src": "100:3816:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							1063
						],
						"IERC721": [
							665
						]
					},
					"id": 666,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 551,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 552,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 666,
							"sourceUnit": 1064,
							"src": "133:47:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 554,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1063,
										"src": "271:7:6"
									},
									"id": 555,
									"nodeType": "InheritanceSpecifier",
									"src": "271:7:6"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 553,
								"nodeType": "StructuredDocumentation",
								"src": "182:67:6",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 665,
							"linearizedBaseContracts": [
								665,
								1063
							],
							"name": "IERC721",
							"nameLocation": "260:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 556,
										"nodeType": "StructuredDocumentation",
										"src": "285:88:6",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"id": 564,
									"name": "Transfer",
									"nameLocation": "384:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 558,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "409:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "393:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 557,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "393:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 560,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "431:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "415:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 559,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "415:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 562,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "451:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "435:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 561,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "435:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "392:67:6"
									},
									"src": "378:82:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 565,
										"nodeType": "StructuredDocumentation",
										"src": "466:94:6",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"id": 573,
									"name": "Approval",
									"nameLocation": "571:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 567,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "596:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "580:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 566,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "580:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 569,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "619:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "603:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 568,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "603:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 571,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "645:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "629:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 570,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "629:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "579:74:6"
									},
									"src": "565:89:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 574,
										"nodeType": "StructuredDocumentation",
										"src": "660:117:6",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"id": 582,
									"name": "ApprovalForAll",
									"nameLocation": "788:14:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 576,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "819:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 582,
												"src": "803:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 575,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "803:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 578,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "842:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 582,
												"src": "826:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "826:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 580,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "857:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 582,
												"src": "852:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 579,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "852:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "802:64:6"
									},
									"src": "782:85:6"
								},
								{
									"documentation": {
										"id": 583,
										"nodeType": "StructuredDocumentation",
										"src": "873:76:6",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 590,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "963:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "981:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "973:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 584,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "973:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "972:15:6"
									},
									"returnParameters": {
										"id": 589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1019:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "1011:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 587,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1010:17:6"
									},
									"scope": 665,
									"src": "954:74:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 591,
										"nodeType": "StructuredDocumentation",
										"src": "1034:131:6",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 598,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1179:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 593,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1195:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "1187:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 592,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1187:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1186:17:6"
									},
									"returnParameters": {
										"id": 597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 596,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1235:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "1227:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 595,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1227:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1226:15:6"
									},
									"scope": 665,
									"src": "1170:72:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 599,
										"nodeType": "StructuredDocumentation",
										"src": "1248:556:6",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 610,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1818:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 601,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1852:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "1844:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 600,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1844:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 603,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1874:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "1866:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 602,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1866:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1894:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "1886:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 604,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1926:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "1911:19:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 606,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1911:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1834:102:6"
									},
									"returnParameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1945:0:6"
									},
									"scope": 665,
									"src": "1809:137:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 611,
										"nodeType": "StructuredDocumentation",
										"src": "1952:690:6",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 620,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2656:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2690:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "2682:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 612,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2682:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2712:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "2704:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 614,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2704:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 617,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2732:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "2724:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 616,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2724:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2672:73:6"
									},
									"returnParameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2754:0:6"
									},
									"scope": 665,
									"src": "2647:108:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 621,
										"nodeType": "StructuredDocumentation",
										"src": "2761:504:6",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 630,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3279:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 628,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 623,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3309:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "3301:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 622,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3301:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 625,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3331:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "3323:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 624,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3323:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 627,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3351:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "3343:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 626,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3343:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3291:73:6"
									},
									"returnParameters": {
										"id": 629,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3373:0:6"
									},
									"scope": 665,
									"src": "3270:104:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 631,
										"nodeType": "StructuredDocumentation",
										"src": "3380:452:6",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 638,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3846:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3862:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "3854:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 632,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3854:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3874:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "3866:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 634,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3866:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3853:29:6"
									},
									"returnParameters": {
										"id": 637,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3891:0:6"
									},
									"scope": 665,
									"src": "3837:55:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 639,
										"nodeType": "StructuredDocumentation",
										"src": "3898:309:6",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 646,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4221:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 641,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4247:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "4239:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 640,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4239:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "4262:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "4257:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 642,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4257:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4238:34:6"
									},
									"returnParameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4281:0:6"
									},
									"scope": 665,
									"src": "4212:70:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 647,
										"nodeType": "StructuredDocumentation",
										"src": "4288:139:6",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 654,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4441:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4461:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 654,
												"src": "4453:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 648,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4453:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4452:17:6"
									},
									"returnParameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 652,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4501:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 654,
												"src": "4493:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 651,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4493:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4492:18:6"
									},
									"scope": 665,
									"src": "4432:79:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "4517:138:6",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 664,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4669:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4694:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 664,
												"src": "4686:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4686:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4709:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 664,
												"src": "4701:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4701:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4685:33:6"
									},
									"returnParameters": {
										"id": 663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 664,
												"src": "4742:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 661,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4742:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4741:6:6"
									},
									"scope": 665,
									"src": "4660:88:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 666,
							"src": "250:4500:6",
							"usedErrors": []
						}
					],
					"src": "108:4643:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							683
						]
					},
					"id": 684,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 667,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "116:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 668,
								"nodeType": "StructuredDocumentation",
								"src": "141:152:7",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 683,
							"linearizedBaseContracts": [
								683
							],
							"name": "IERC721Receiver",
							"nameLocation": "304:15:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 669,
										"nodeType": "StructuredDocumentation",
										"src": "326:493:7",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 682,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "833:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 678,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "867:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 682,
												"src": "859:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 670,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "859:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 673,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "893:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 682,
												"src": "885:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 672,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "885:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "915:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 682,
												"src": "907:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 674,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "907:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "947:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 682,
												"src": "932:19:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 676,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "932:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:108:7"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 680,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 682,
												"src": "976:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 679,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "976:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "975:8:7"
									},
									"scope": 683,
									"src": "824:160:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 684,
							"src": "294:692:7",
							"usedErrors": []
						}
					],
					"src": "116:871:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol",
					"exportedSymbols": {
						"ERC721Holder": [
							710
						],
						"IERC721Receiver": [
							683
						]
					},
					"id": 711,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 685,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "104:23:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"file": "../IERC721Receiver.sol",
							"id": 686,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 711,
							"sourceUnit": 684,
							"src": "129:32:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 688,
										"name": "IERC721Receiver",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 683,
										"src": "424:15:8"
									},
									"id": 689,
									"nodeType": "InheritanceSpecifier",
									"src": "424:15:8"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 687,
								"nodeType": "StructuredDocumentation",
								"src": "163:235:8",
								"text": " @dev Implementation of the {IERC721Receiver} interface.\n Accepts all token transfers.\n Make sure the contract is able to use its token with {IERC721-safeTransferFrom}, {IERC721-approve} or {IERC721-setApprovalForAll}."
							},
							"fullyImplemented": true,
							"id": 710,
							"linearizedBaseContracts": [
								710,
								683
							],
							"name": "ERC721Holder",
							"nameLocation": "408:12:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										682
									],
									"body": {
										"id": 708,
										"nodeType": "Block",
										"src": "734:54:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 704,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967268,
															"src": "751:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC721Holder_$710",
																"typeString": "contract ERC721Holder"
															}
														},
														"id": 705,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "onERC721Received",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 709,
														"src": "751:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
															"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
														}
													},
													"id": 706,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberName": "selector",
													"nodeType": "MemberAccess",
													"src": "751:30:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"functionReturnParameters": 703,
												"id": 707,
												"nodeType": "Return",
												"src": "744:37:8"
											}
										]
									},
									"documentation": {
										"id": 690,
										"nodeType": "StructuredDocumentation",
										"src": "446:137:8",
										"text": " @dev See {IERC721Receiver-onERC721Received}.\n Always returns `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 709,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "597:16:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 700,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "708:8:8"
									},
									"parameters": {
										"id": 699,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 692,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "623:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 691,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "623:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "640:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 693,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "640:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 696,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "657:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 695,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 698,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "674:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 697,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "613:79:8"
									},
									"returnParameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "726:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 701,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "726:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "725:8:8"
									},
									"scope": 710,
									"src": "588:200:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 711,
							"src": "399:391:8",
							"usedErrors": []
						}
					],
					"src": "104:687:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1005
						]
					},
					"id": 1006,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 712,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 713,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:9",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1005,
							"linearizedBaseContracts": [
								1005
							],
							"name": "Address",
							"nameLocation": "202:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 727,
										"nodeType": "Block",
										"src": "1241:254:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 725,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 721,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 716,
																"src": "1465:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 722,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1465:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 723,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1465:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 724,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1487:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1465:23:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 720,
												"id": 726,
												"nodeType": "Return",
												"src": "1458:30:9"
											}
										]
									},
									"documentation": {
										"id": 714,
										"nodeType": "StructuredDocumentation",
										"src": "216:954:9",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 728,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1184:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1203:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "1195:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 715,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:17:9"
									},
									"returnParameters": {
										"id": 720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "1235:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 718,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1235:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1234:6:9"
									},
									"scope": 1005,
									"src": "1175:320:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 761,
										"nodeType": "Block",
										"src": "2483:241:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 743,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 739,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2509:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1005",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1005",
																				"typeString": "library Address"
																			}
																		],
																		"id": 738,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2501:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 737,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2501:7:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 740,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2501:13:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 741,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2501:21:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 742,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 733,
																"src": "2526:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2501:31:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 744,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2534:31:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 736,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2493:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2493:73:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 746,
												"nodeType": "ExpressionStatement",
												"src": "2493:73:9"
											},
											{
												"assignments": [
													748,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 748,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2583:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 761,
														"src": "2578:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 747,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2578:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 755,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 753,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 749,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 731,
																"src": "2596:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 750,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2596:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 752,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 751,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 733,
																"src": "2618:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2596:29:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2596:33:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2577:52:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 757,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 748,
															"src": "2647:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 758,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2656:60:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 756,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2639:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 759,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2639:78:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 760,
												"nodeType": "ExpressionStatement",
												"src": "2639:78:9"
											}
										]
									},
									"documentation": {
										"id": 729,
										"nodeType": "StructuredDocumentation",
										"src": "1501:906:9",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 762,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2421:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 731,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2447:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "2431:25:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 730,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2431:15:9",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 733,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2466:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "2458:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 732,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2458:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:43:9"
									},
									"returnParameters": {
										"id": 735,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2483:0:9"
									},
									"scope": 1005,
									"src": "2412:312:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 778,
										"nodeType": "Block",
										"src": "3555:84:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 773,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 765,
															"src": "3585:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 774,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 767,
															"src": "3593:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 775,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3599:32:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 772,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															779,
															799
														],
														"referencedDeclaration": 799,
														"src": "3572:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3572:60:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 771,
												"id": 777,
												"nodeType": "Return",
												"src": "3565:67:9"
											}
										]
									},
									"documentation": {
										"id": 763,
										"nodeType": "StructuredDocumentation",
										"src": "2730:731:9",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 779,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3475:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3496:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 779,
												"src": "3488:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 764,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3488:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3517:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 779,
												"src": "3504:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 766,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3504:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3487:35:9"
									},
									"returnParameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 779,
												"src": "3541:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 769,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3541:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3540:14:9"
									},
									"scope": 1005,
									"src": "3466:173:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 798,
										"nodeType": "Block",
										"src": "4008:76:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 792,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 782,
															"src": "4047:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 793,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 784,
															"src": "4055:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 794,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4061:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 795,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 786,
															"src": "4064:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 791,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															819,
															869
														],
														"referencedDeclaration": 869,
														"src": "4025:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 796,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4025:52:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 790,
												"id": 797,
												"nodeType": "Return",
												"src": "4018:59:9"
											}
										]
									},
									"documentation": {
										"id": 780,
										"nodeType": "StructuredDocumentation",
										"src": "3645:211:9",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 799,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3870:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 787,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 782,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3900:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "3892:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 781,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3892:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 784,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3929:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "3916:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 783,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3916:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 786,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3957:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "3943:26:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 785,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3943:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3882:93:9"
									},
									"returnParameters": {
										"id": 790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 789,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "3994:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 788,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3994:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3993:14:9"
									},
									"scope": 1005,
									"src": "3861:223:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 818,
										"nodeType": "Block",
										"src": "4589:111:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 812,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 802,
															"src": "4628:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 813,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 804,
															"src": "4636:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 814,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 806,
															"src": "4642:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 815,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4649:43:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 811,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															819,
															869
														],
														"referencedDeclaration": 869,
														"src": "4606:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4606:87:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 810,
												"id": 817,
												"nodeType": "Return",
												"src": "4599:94:9"
											}
										]
									},
									"documentation": {
										"id": 800,
										"nodeType": "StructuredDocumentation",
										"src": "4090:351:9",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 819,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4455:21:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4494:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "4486:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 801,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4486:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 804,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4523:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "4510:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 803,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4510:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4545:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "4537:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 805,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4537:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4476:80:9"
									},
									"returnParameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 809,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "4575:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 808,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4575:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4574:14:9"
									},
									"scope": 1005,
									"src": "4446:254:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 868,
										"nodeType": "Block",
										"src": "5127:320:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 840,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 836,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5153:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1005",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1005",
																				"typeString": "library Address"
																			}
																		],
																		"id": 835,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5145:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 834,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5145:7:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 837,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5145:13:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 838,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5145:21:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 839,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 826,
																"src": "5170:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5145:30:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 841,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5177:40:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 833,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5137:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 842,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5137:81:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 843,
												"nodeType": "ExpressionStatement",
												"src": "5137:81:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 846,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 822,
																	"src": "5247:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 845,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 728,
																"src": "5236:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 847,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5236:18:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 848,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5256:31:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 844,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5228:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 849,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5228:60:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 850,
												"nodeType": "ExpressionStatement",
												"src": "5228:60:9"
											},
											{
												"assignments": [
													852,
													854
												],
												"declarations": [
													{
														"constant": false,
														"id": 852,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5305:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 868,
														"src": "5300:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 851,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5300:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 854,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5327:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 868,
														"src": "5314:23:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 853,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5314:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 861,
												"initialValue": {
													"arguments": [
														{
															"id": 859,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 824,
															"src": "5367:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 855,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 822,
																"src": "5341:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 856,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5341:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 858,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 857,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 826,
																"src": "5360:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5341:25:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5341:31:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5299:73:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 863,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 852,
															"src": "5406:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 864,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 854,
															"src": "5415:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 865,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 828,
															"src": "5427:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 862,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1004,
														"src": "5389:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 866,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5389:51:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 832,
												"id": 867,
												"nodeType": "Return",
												"src": "5382:58:9"
											}
										]
									},
									"documentation": {
										"id": 820,
										"nodeType": "StructuredDocumentation",
										"src": "4706:237:9",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 869,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4957:21:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 829,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 822,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4996:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "4988:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 821,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4988:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5025:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "5012:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 823,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5012:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 826,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5047:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "5039:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 825,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5039:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 828,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5076:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "5062:26:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 827,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5062:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4978:116:9"
									},
									"returnParameters": {
										"id": 832,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "5113:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 830,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5113:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5112:14:9"
									},
									"scope": 1005,
									"src": "4948:499:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 885,
										"nodeType": "Block",
										"src": "5724:97:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 880,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 872,
															"src": "5760:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 881,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 874,
															"src": "5768:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 882,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5774:39:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 879,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															886,
															921
														],
														"referencedDeclaration": 921,
														"src": "5741:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 883,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5741:73:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 878,
												"id": 884,
												"nodeType": "Return",
												"src": "5734:80:9"
											}
										]
									},
									"documentation": {
										"id": 870,
										"nodeType": "StructuredDocumentation",
										"src": "5453:166:9",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 886,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5633:18:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 872,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5660:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "5652:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 871,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5652:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5681:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "5668:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 873,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5668:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5651:35:9"
									},
									"returnParameters": {
										"id": 878,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 877,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "5710:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 876,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5710:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5709:14:9"
									},
									"scope": 1005,
									"src": "5624:197:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 920,
										"nodeType": "Block",
										"src": "6163:228:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 900,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 889,
																	"src": "6192:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 899,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 728,
																"src": "6181:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 901,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6181:18:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 902,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6201:38:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 898,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6173:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 903,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6173:67:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 904,
												"nodeType": "ExpressionStatement",
												"src": "6173:67:9"
											},
											{
												"assignments": [
													906,
													908
												],
												"declarations": [
													{
														"constant": false,
														"id": 906,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6257:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 920,
														"src": "6252:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 905,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6252:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 908,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6279:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 920,
														"src": "6266:23:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 907,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6266:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 913,
												"initialValue": {
													"arguments": [
														{
															"id": 911,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 891,
															"src": "6311:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 909,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 889,
															"src": "6293:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 910,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6293:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6293:23:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6251:65:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 915,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 906,
															"src": "6350:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 916,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 908,
															"src": "6359:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 917,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 893,
															"src": "6371:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 914,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1004,
														"src": "6333:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6333:51:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 897,
												"id": 919,
												"nodeType": "Return",
												"src": "6326:58:9"
											}
										]
									},
									"documentation": {
										"id": 887,
										"nodeType": "StructuredDocumentation",
										"src": "5827:173:9",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 921,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6014:18:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 894,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 889,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6050:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 921,
												"src": "6042:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 888,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6042:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 891,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6079:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 921,
												"src": "6066:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 890,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6066:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 893,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6107:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 921,
												"src": "6093:26:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 892,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6093:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6032:93:9"
									},
									"returnParameters": {
										"id": 897,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 896,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 921,
												"src": "6149:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 895,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6149:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6148:14:9"
									},
									"scope": 1005,
									"src": "6005:386:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 937,
										"nodeType": "Block",
										"src": "6667:101:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 932,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 924,
															"src": "6705:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 933,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 926,
															"src": "6713:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 934,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6719:41:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 931,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															938,
															973
														],
														"referencedDeclaration": 973,
														"src": "6684:20:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 935,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6684:77:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 930,
												"id": 936,
												"nodeType": "Return",
												"src": "6677:84:9"
											}
										]
									},
									"documentation": {
										"id": 922,
										"nodeType": "StructuredDocumentation",
										"src": "6397:168:9",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 938,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6579:20:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 927,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 924,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6608:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 938,
												"src": "6600:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 923,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6600:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 926,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 938,
												"src": "6616:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 925,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6599:35:9"
									},
									"returnParameters": {
										"id": 930,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 929,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 938,
												"src": "6653:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 928,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6653:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6652:14:9"
									},
									"scope": 1005,
									"src": "6570:198:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 972,
										"nodeType": "Block",
										"src": "7109:232:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 952,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 941,
																	"src": "7138:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 951,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 728,
																"src": "7127:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 953,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7127:18:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 954,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7147:40:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 950,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7119:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 955,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7119:69:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 956,
												"nodeType": "ExpressionStatement",
												"src": "7119:69:9"
											},
											{
												"assignments": [
													958,
													960
												],
												"declarations": [
													{
														"constant": false,
														"id": 958,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7205:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 972,
														"src": "7200:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 957,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7200:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 960,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7227:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 972,
														"src": "7214:23:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 959,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7214:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 965,
												"initialValue": {
													"arguments": [
														{
															"id": 963,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 943,
															"src": "7261:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 961,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 941,
															"src": "7241:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 962,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7241:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 964,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7241:25:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7199:67:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 967,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 958,
															"src": "7300:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 968,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 960,
															"src": "7309:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 969,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 945,
															"src": "7321:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 966,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1004,
														"src": "7283:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 970,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7283:51:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 949,
												"id": 971,
												"nodeType": "Return",
												"src": "7276:58:9"
											}
										]
									},
									"documentation": {
										"id": 939,
										"nodeType": "StructuredDocumentation",
										"src": "6774:175:9",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 973,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6963:20:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 946,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 941,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7001:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "6993:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 940,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6993:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 943,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7030:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "7017:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 942,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7017:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 945,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7058:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "7044:26:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 944,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7044:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6983:93:9"
									},
									"returnParameters": {
										"id": 949,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 948,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "7095:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 947,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7095:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7094:14:9"
									},
									"scope": 1005,
									"src": "6954:387:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1003,
										"nodeType": "Block",
										"src": "7721:532:9",
										"statements": [
											{
												"condition": {
													"id": 985,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 976,
													"src": "7735:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1001,
													"nodeType": "Block",
													"src": "7792:455:9",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 992,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 989,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 978,
																		"src": "7876:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 990,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7876:17:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 991,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7896:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7876:21:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 999,
																"nodeType": "Block",
																"src": "8184:53:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 996,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 980,
																					"src": "8209:12:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 995,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "8202:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 997,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8202:20:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 998,
																		"nodeType": "ExpressionStatement",
																		"src": "8202:20:9"
																	}
																]
															},
															"id": 1000,
															"nodeType": "IfStatement",
															"src": "7872:365:9",
															"trueBody": {
																"id": 994,
																"nodeType": "Block",
																"src": "7899:279:9",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "8019:145:9",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "8041:40:9",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "8070:10:9"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "8064:5:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8064:17:9"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "8045:15:9",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8113:2:9",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "8117:10:9"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8109:3:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8109:19:9"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "8130:15:9"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "8102:6:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8102:44:9"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "8102:44:9"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 978,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8070:10:9",
																				"valueSize": 1
																			},
																			{
																				"declaration": 978,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8117:10:9",
																				"valueSize": 1
																			}
																		],
																		"id": 993,
																		"nodeType": "InlineAssembly",
																		"src": "8010:154:9"
																	}
																]
															}
														}
													]
												},
												"id": 1002,
												"nodeType": "IfStatement",
												"src": "7731:516:9",
												"trueBody": {
													"id": 988,
													"nodeType": "Block",
													"src": "7744:42:9",
													"statements": [
														{
															"expression": {
																"id": 986,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 978,
																"src": "7765:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 984,
															"id": 987,
															"nodeType": "Return",
															"src": "7758:17:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 974,
										"nodeType": "StructuredDocumentation",
										"src": "7347:209:9",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 1004,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7570:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 981,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 976,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7601:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1004,
												"src": "7596:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 975,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7596:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 978,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7631:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1004,
												"src": "7618:23:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 977,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7618:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 980,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7665:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1004,
												"src": "7651:26:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 979,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7651:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7586:97:9"
									},
									"returnParameters": {
										"id": 984,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 983,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1004,
												"src": "7707:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 982,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7707:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7706:14:9"
									},
									"scope": 1005,
									"src": "7561:692:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1006,
							"src": "194:8061:9",
							"usedErrors": []
						}
					],
					"src": "101:8155:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1027
						]
					},
					"id": 1028,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1007,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:10"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1008,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:10",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1027,
							"linearizedBaseContracts": [
								1027
							],
							"name": "Context",
							"nameLocation": "626:7:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1016,
										"nodeType": "Block",
										"src": "702:34:10",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1013,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1014,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1012,
												"id": 1015,
												"nodeType": "Return",
												"src": "712:17:10"
											}
										]
									},
									"id": 1017,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1009,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:10"
									},
									"returnParameters": {
										"id": 1012,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1011,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "693:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1010,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:10"
									},
									"scope": 1027,
									"src": "640:96:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1025,
										"nodeType": "Block",
										"src": "809:32:10",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1022,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1023,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1021,
												"id": 1024,
												"nodeType": "Return",
												"src": "819:15:10"
											}
										]
									},
									"id": 1026,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1018,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:10"
									},
									"returnParameters": {
										"id": 1021,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1020,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "793:14:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1019,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:10"
									},
									"scope": 1027,
									"src": "742:99:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1028,
							"src": "608:235:10",
							"usedErrors": []
						}
					],
					"src": "86:758:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1051
						],
						"IERC165": [
							1063
						]
					},
					"id": 1052,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1029,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "99:23:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1030,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1052,
							"sourceUnit": 1064,
							"src": "124:23:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1032,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1063,
										"src": "754:7:11"
									},
									"id": 1033,
									"nodeType": "InheritanceSpecifier",
									"src": "754:7:11"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1031,
								"nodeType": "StructuredDocumentation",
								"src": "149:576:11",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 1051,
							"linearizedBaseContracts": [
								1051,
								1063
							],
							"name": "ERC165",
							"nameLocation": "744:6:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1062
									],
									"body": {
										"id": 1049,
										"nodeType": "Block",
										"src": "920:64:11",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1047,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1042,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1036,
														"src": "937:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1044,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1063,
																	"src": "957:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1063_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1063_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1043,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "952:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1045,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "952:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1063",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1046,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "952:25:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "937:40:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1041,
												"id": 1048,
												"nodeType": "Return",
												"src": "930:47:11"
											}
										]
									},
									"documentation": {
										"id": 1034,
										"nodeType": "StructuredDocumentation",
										"src": "768:56:11",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1050,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "838:17:11",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1038,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "896:8:11"
									},
									"parameters": {
										"id": 1037,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1036,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "863:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "856:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1035,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "856:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "855:20:11"
									},
									"returnParameters": {
										"id": 1041,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1040,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "914:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1039,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "914:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "913:6:11"
									},
									"scope": 1051,
									"src": "829:155:11",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1052,
							"src": "726:260:11",
							"usedErrors": []
						}
					],
					"src": "99:888:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1063
						]
					},
					"id": 1064,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1053,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1054,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:12",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1063,
							"linearizedBaseContracts": [
								1063
							],
							"name": "IERC165",
							"nameLocation": "415:7:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1055,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:12",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1062,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1058,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1057,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 1062,
												"src": "801:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1056,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:12"
									},
									"returnParameters": {
										"id": 1061,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1060,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1062,
												"src": "844:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1059,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:12"
									},
									"scope": 1063,
									"src": "774:76:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1064,
							"src": "405:447:12",
							"usedErrors": []
						}
					],
					"src": "100:753:12"
				},
				"id": 12
			},
			"Ownable.sol": {
				"ast": {
					"absolutePath": "Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1027
						],
						"Ownable": [
							1131
						]
					},
					"id": 1132,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1065,
							"literals": [
								"solidity",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "32:22:13"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "@openzeppelin/contracts/utils/Context.sol",
							"id": 1066,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1132,
							"sourceUnit": 1028,
							"src": "55:51:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1068,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1027,
										"src": "543:7:13"
									},
									"id": 1069,
									"nodeType": "InheritanceSpecifier",
									"src": "543:7:13"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1067,
								"nodeType": "StructuredDocumentation",
								"src": "107:406:13",
								"text": " @dev This contract module is inspired from \n https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\n OpenZepplin Ownable contract. The code is forked from Ownable except \n 2 functions i.e. renounce and transfer ownership. In our usecase, we do not require users \n to transfer or renounce ownership as it is always aligned with the original user."
							},
							"fullyImplemented": true,
							"id": 1131,
							"linearizedBaseContracts": [
								1131,
								1027
							],
							"name": "Ownable",
							"nameLocation": "532:7:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1071,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "573:6:13",
									"nodeType": "VariableDeclaration",
									"scope": 1131,
									"src": "557:22:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1070,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "557:7:13",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 1077,
									"name": "OwnershipTransferred",
									"nameLocation": "592:20:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1076,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1073,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "638:13:13",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "622:29:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1072,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "622:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1075,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "677:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "661:24:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1074,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "661:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "612:79:13"
									},
									"src": "586:106:13"
								},
								{
									"body": {
										"id": 1086,
										"nodeType": "Block",
										"src": "808:49:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1082,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1017,
																"src": "837:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1083,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "837:12:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1081,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1130,
														"src": "818:18:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1084,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "818:32:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1085,
												"nodeType": "ExpressionStatement",
												"src": "818:32:13"
											}
										]
									},
									"documentation": {
										"id": 1078,
										"nodeType": "StructuredDocumentation",
										"src": "698:91:13",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 1087,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1079,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "805:2:13"
									},
									"returnParameters": {
										"id": 1080,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "808:0:13"
									},
									"scope": 1131,
									"src": "794:63:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1095,
										"nodeType": "Block",
										"src": "988:30:13",
										"statements": [
											{
												"expression": {
													"id": 1093,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1071,
													"src": "1005:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1092,
												"id": 1094,
												"nodeType": "Return",
												"src": "998:13:13"
											}
										]
									},
									"documentation": {
										"id": 1088,
										"nodeType": "StructuredDocumentation",
										"src": "863:65:13",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 1096,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "942:5:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1089,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "947:2:13"
									},
									"returnParameters": {
										"id": 1092,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1091,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1096,
												"src": "979:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1090,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "979:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "978:9:13"
									},
									"scope": 1131,
									"src": "933:85:13",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1109,
										"nodeType": "Block",
										"src": "1127:96:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1104,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1100,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1096,
																	"src": "1145:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1101,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1145:7:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1102,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1017,
																	"src": "1156:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1103,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1156:12:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1145:23:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 1105,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1170:34:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 1099,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1137:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1137:68:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1107,
												"nodeType": "ExpressionStatement",
												"src": "1137:68:13"
											},
											{
												"id": 1108,
												"nodeType": "PlaceholderStatement",
												"src": "1215:1:13"
											}
										]
									},
									"documentation": {
										"id": 1097,
										"nodeType": "StructuredDocumentation",
										"src": "1024:77:13",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 1110,
									"name": "onlyOwner",
									"nameLocation": "1115:9:13",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1098,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1124:2:13"
									},
									"src": "1106:117:13",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1129,
										"nodeType": "Block",
										"src": "1440:124:13",
										"statements": [
											{
												"assignments": [
													1117
												],
												"declarations": [
													{
														"constant": false,
														"id": 1117,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "1458:8:13",
														"nodeType": "VariableDeclaration",
														"scope": 1129,
														"src": "1450:16:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1116,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1450:7:13",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1119,
												"initialValue": {
													"id": 1118,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1071,
													"src": "1469:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1450:25:13"
											},
											{
												"expression": {
													"id": 1122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1120,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1071,
														"src": "1485:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1121,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1113,
														"src": "1494:8:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1485:17:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1123,
												"nodeType": "ExpressionStatement",
												"src": "1485:17:13"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1125,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1117,
															"src": "1538:8:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1126,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1113,
															"src": "1548:8:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1124,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1077,
														"src": "1517:20:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1517:40:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1128,
												"nodeType": "EmitStatement",
												"src": "1512:45:13"
											}
										]
									},
									"documentation": {
										"id": 1111,
										"nodeType": "StructuredDocumentation",
										"src": "1229:143:13",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 1130,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "1386:18:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1113,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1413:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 1130,
												"src": "1405:16:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1405:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1404:18:13"
									},
									"returnParameters": {
										"id": 1115,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1440:0:13"
									},
									"scope": 1131,
									"src": "1377:187:13",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1132,
							"src": "514:1052:13",
							"usedErrors": []
						}
					],
					"src": "32:1534:13"
				},
				"id": 13
			},
			"Practice NFT.sol": {
				"ast": {
					"absolutePath": "Practice NFT.sol",
					"exportedSymbols": {
						"Address": [
							1005
						],
						"Context": [
							1027
						],
						"ERC1155Holder": [
							213
						],
						"ERC1155Receiver": [
							247
						],
						"ERC165": [
							1051
						],
						"ERC721Holder": [
							710
						],
						"IERC1155": [
							121
						],
						"IERC1155Receiver": [
							162
						],
						"IERC165": [
							1063
						],
						"IERC20": [
							325
						],
						"IERC721": [
							665
						],
						"IERC721Receiver": [
							683
						],
						"Ownable": [
							1131
						],
						"SafeERC20": [
							549
						],
						"TwoFactor": [
							1289
						]
					},
					"id": 1290,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1133,
							"literals": [
								"solidity",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "32:22:14"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1134,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1290,
							"sourceUnit": 326,
							"src": "56:56:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 1135,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1290,
							"sourceUnit": 550,
							"src": "113:65:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"id": 1136,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1290,
							"sourceUnit": 666,
							"src": "179:58:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol",
							"file": "@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol",
							"id": 1137,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1290,
							"sourceUnit": 711,
							"src": "238:69:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
							"file": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
							"id": 1138,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1290,
							"sourceUnit": 122,
							"src": "308:60:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol",
							"file": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol",
							"id": 1139,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1290,
							"sourceUnit": 214,
							"src": "369:71:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Ownable.sol",
							"file": "./Ownable.sol",
							"id": 1140,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1290,
							"sourceUnit": 1132,
							"src": "441:23:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1141,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1131,
										"src": "489:7:14"
									},
									"id": 1142,
									"nodeType": "InheritanceSpecifier",
									"src": "489:7:14"
								},
								{
									"baseName": {
										"id": 1143,
										"name": "ERC721Holder",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 710,
										"src": "498:12:14"
									},
									"id": 1144,
									"nodeType": "InheritanceSpecifier",
									"src": "498:12:14"
								},
								{
									"baseName": {
										"id": 1145,
										"name": "ERC1155Holder",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 213,
										"src": "512:13:14"
									},
									"id": 1146,
									"nodeType": "InheritanceSpecifier",
									"src": "512:13:14"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1289,
							"linearizedBaseContracts": [
								1289,
								213,
								247,
								162,
								1051,
								1063,
								710,
								683,
								1131,
								1027
							],
							"name": "TwoFactor",
							"nameLocation": "476:9:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1150,
									"libraryName": {
										"id": 1147,
										"name": "SafeERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 549,
										"src": "543:9:14"
									},
									"nodeType": "UsingForDirective",
									"src": "537:27:14",
									"typeName": {
										"id": 1149,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1148,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 325,
											"src": "557:6:14"
										},
										"referencedDeclaration": 325,
										"src": "557:6:14",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$325",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"id": 1152,
									"mutability": "mutable",
									"name": "isInitialized",
									"nameLocation": "588:13:14",
									"nodeType": "VariableDeclaration",
									"scope": 1289,
									"src": "575:26:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1151,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "575:4:14",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1154,
									"mutability": "mutable",
									"name": "backupWallet",
									"nameLocation": "623:12:14",
									"nodeType": "VariableDeclaration",
									"scope": 1289,
									"src": "607:28:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1153,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "607:7:14",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1207,
										"nodeType": "Block",
										"src": "707:437:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1167,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1162,
																"name": "_sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1156,
																"src": "733:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1165,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "751:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1164,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "743:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1163,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "743:7:14",
																		"typeDescriptions": {}
																	}
																},
																"id": 1166,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "743:10:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "733:20:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53656e64657220616464726573732063616e206e6f74206265207a65726f",
															"id": 1168,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "755:32:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2bdef3017b3ab8e90fcdd0203656ef49f1cf91890714ed98466b7f0b7c411dbc",
																"typeString": "literal_string \"Sender address can not be zero\""
															},
															"value": "Sender address can not be zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2bdef3017b3ab8e90fcdd0203656ef49f1cf91890714ed98466b7f0b7c411dbc",
																"typeString": "literal_string \"Sender address can not be zero\""
															}
														],
														"id": 1161,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "725:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "725:63:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1170,
												"nodeType": "ExpressionStatement",
												"src": "725:63:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1177,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1172,
																"name": "_backupWallet",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1158,
																"src": "806:13:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1175,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "830:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1174,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "822:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1173,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "822:7:14",
																		"typeDescriptions": {}
																	}
																},
																"id": 1176,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "822:10:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "806:26:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4261636b757020616464726573732063616e206e6f74206265207a65726f",
															"id": 1178,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "834:32:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_147837e924905a3bd7649319b6fc22646b0c017a57dd5a6eac862da5a06f6816",
																"typeString": "literal_string \"Backup address can not be zero\""
															},
															"value": "Backup address can not be zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_147837e924905a3bd7649319b6fc22646b0c017a57dd5a6eac862da5a06f6816",
																"typeString": "literal_string \"Backup address can not be zero\""
															}
														],
														"id": 1171,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "798:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "798:69:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1180,
												"nodeType": "ExpressionStatement",
												"src": "798:69:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1184,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1182,
																"name": "_backupWallet",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1158,
																"src": "885:13:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1183,
																"name": "_sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1156,
																"src": "901:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "885:23:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4261636b75702077616c6c65742063616e206e6f742062652073616d652061732073656e6465722077616c6c6574",
															"id": 1185,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "910:48:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ae81ee44af9e399b79dc430c2aa49760868f55e17e70be2d4b0876841d2be5a2",
																"typeString": "literal_string \"Backup wallet can not be same as sender wallet\""
															},
															"value": "Backup wallet can not be same as sender wallet"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ae81ee44af9e399b79dc430c2aa49760868f55e17e70be2d4b0876841d2be5a2",
																"typeString": "literal_string \"Backup wallet can not be same as sender wallet\""
															}
														],
														"id": 1181,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "877:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "877:82:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1187,
												"nodeType": "ExpressionStatement",
												"src": "877:82:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1191,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1189,
																"name": "isInitialized",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1152,
																"src": "977:13:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "66616c7365",
																"id": 1190,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "994:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"src": "977:22:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f6e747261637420616c726561647920696e697469616c697a6564",
															"id": 1192,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1001:30:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_99a5106e083f54e153095639f5c53baa0d355c3b1a37f6c84924da3b1b45cf57",
																"typeString": "literal_string \"Contract already initialized\""
															},
															"value": "Contract already initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_99a5106e083f54e153095639f5c53baa0d355c3b1a37f6c84924da3b1b45cf57",
																"typeString": "literal_string \"Contract already initialized\""
															}
														],
														"id": 1188,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "969:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "969:63:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1194,
												"nodeType": "ExpressionStatement",
												"src": "969:63:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1196,
															"name": "_sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1156,
															"src": "1061:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1195,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1130,
														"src": "1042:18:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1042:27:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1198,
												"nodeType": "ExpressionStatement",
												"src": "1042:27:14"
											},
											{
												"expression": {
													"id": 1201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1199,
														"name": "backupWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1154,
														"src": "1079:12:14",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1200,
														"name": "_backupWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1158,
														"src": "1094:13:14",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1079:28:14",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1202,
												"nodeType": "ExpressionStatement",
												"src": "1079:28:14"
											},
											{
												"expression": {
													"id": 1205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1203,
														"name": "isInitialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1152,
														"src": "1117:13:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1204,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1133:4:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1117:20:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1206,
												"nodeType": "ExpressionStatement",
												"src": "1117:20:14"
											}
										]
									},
									"functionSelector": "f09a4016",
									"id": 1208,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "init",
									"nameLocation": "653:4:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1156,
												"mutability": "mutable",
												"name": "_sender",
												"nameLocation": "666:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 1208,
												"src": "658:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1155,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1158,
												"mutability": "mutable",
												"name": "_backupWallet",
												"nameLocation": "683:13:14",
												"nodeType": "VariableDeclaration",
												"scope": 1208,
												"src": "675:21:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1157,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "675:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "657:40:14"
									},
									"returnParameters": {
										"id": 1160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "707:0:14"
									},
									"scope": 1289,
									"src": "644:500:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1211,
										"nodeType": "Block",
										"src": "1181:15:14",
										"statements": []
									},
									"id": 1212,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1209,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1161:2:14"
									},
									"returnParameters": {
										"id": 1210,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1181:0:14"
									},
									"scope": 1289,
									"src": "1154:42:14",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1233,
										"nodeType": "Block",
										"src": "2017:90:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1227,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2074:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_TwoFactor_$1289",
																		"typeString": "contract TwoFactor"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_TwoFactor_$1289",
																		"typeString": "contract TwoFactor"
																	}
																],
																"id": 1226,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2066:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1225,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2066:7:14",
																	"typeDescriptions": {}
																}
															},
															"id": 1228,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2066:13:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1229,
															"name": "toAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1214,
															"src": "2081:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1230,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1218,
															"src": "2092:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1222,
																	"name": "tokenAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1216,
																	"src": "2035:12:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1221,
																"name": "IERC721",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 665,
																"src": "2027:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC721_$665_$",
																	"typeString": "type(contract IERC721)"
																}
															},
															"id": 1223,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2027:21:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$665",
																"typeString": "contract IERC721"
															}
														},
														"id": 1224,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 620,
														"src": "2027:38:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 1231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2027:73:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1232,
												"nodeType": "ExpressionStatement",
												"src": "2027:73:14"
											}
										]
									},
									"id": 1234,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferERC721FundsToAddress",
									"nameLocation": "1891:29:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1214,
												"mutability": "mutable",
												"name": "toAddress",
												"nameLocation": "1938:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 1234,
												"src": "1930:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1930:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1216,
												"mutability": "mutable",
												"name": "tokenAddress",
												"nameLocation": "1965:12:14",
												"nodeType": "VariableDeclaration",
												"scope": 1234,
												"src": "1957:20:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1215,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1957:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1218,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1995:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 1234,
												"src": "1987:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1217,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1987:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1920:88:14"
									},
									"returnParameters": {
										"id": 1220,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2017:0:14"
									},
									"scope": 1289,
									"src": "1882:225:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1249,
										"nodeType": "Block",
										"src": "4181:83:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1244,
															"name": "backupWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1154,
															"src": "4221:12:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1245,
															"name": "tokenAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1236,
															"src": "4235:12:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1246,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1238,
															"src": "4249:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1243,
														"name": "_transferERC721FundsToAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1234,
														"src": "4191:29:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4191:66:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1248,
												"nodeType": "ExpressionStatement",
												"src": "4191:66:14"
											}
										]
									},
									"functionSelector": "71b4bc99",
									"id": 1250,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1241,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1240,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1110,
												"src": "4171:9:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "4171:9:14"
										}
									],
									"name": "sendERC721FundsToBackupWallet",
									"nameLocation": "4071:29:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1236,
												"mutability": "mutable",
												"name": "tokenAddress",
												"nameLocation": "4118:12:14",
												"nodeType": "VariableDeclaration",
												"scope": 1250,
												"src": "4110:20:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1235,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4110:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1238,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4148:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 1250,
												"src": "4140:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4140:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4100:61:14"
									},
									"returnParameters": {
										"id": 1242,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4181:0:14"
									},
									"scope": 1289,
									"src": "4062:202:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1262,
										"nodeType": "Block",
										"src": "4545:69:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1258,
																	"name": "backupWallet",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1154,
																	"src": "4593:12:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1257,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4585:8:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 1256,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4585:8:14",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 1259,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4585:21:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 1255,
														"name": "_transferNativeFundsToAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1288,
														"src": "4555:29:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$returns$__$",
															"typeString": "function (address payable)"
														}
													},
													"id": 1260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4555:52:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1261,
												"nodeType": "ExpressionStatement",
												"src": "4555:52:14"
											}
										]
									},
									"functionSelector": "450b2ad7",
									"id": 1263,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1253,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1252,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1110,
												"src": "4535:9:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "4535:9:14"
										}
									],
									"name": "sendNativeFundsToBackupWallet",
									"nameLocation": "4494:29:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1251,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4523:2:14"
									},
									"returnParameters": {
										"id": 1254,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4545:0:14"
									},
									"scope": 1289,
									"src": "4485:129:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1287,
										"nodeType": "Block",
										"src": "5726:134:14",
										"statements": [
											{
												"assignments": [
													1269
												],
												"declarations": [
													{
														"constant": false,
														"id": 1269,
														"mutability": "mutable",
														"name": "balance",
														"nameLocation": "5744:7:14",
														"nodeType": "VariableDeclaration",
														"scope": 1287,
														"src": "5736:15:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1268,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5736:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1275,
												"initialValue": {
													"expression": {
														"arguments": [
															{
																"id": 1272,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "5762:4:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_TwoFactor_$1289",
																	"typeString": "contract TwoFactor"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_TwoFactor_$1289",
																	"typeString": "contract TwoFactor"
																}
															],
															"id": 1271,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5754:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1270,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5754:7:14",
																"typeDescriptions": {}
															}
														},
														"id": 1273,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5754:13:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "5754:21:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5736:39:14"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1276,
														"name": "balance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1269,
														"src": "5789:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1277,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5799:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5789:11:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1286,
												"nodeType": "IfStatement",
												"src": "5785:69:14",
												"trueBody": {
													"id": 1285,
													"nodeType": "Block",
													"src": "5802:52:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1282,
																		"name": "balance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1269,
																		"src": "5835:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1279,
																		"name": "toAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1265,
																		"src": "5816:9:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"id": 1281,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"src": "5816:18:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 1283,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5816:27:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1284,
															"nodeType": "ExpressionStatement",
															"src": "5816:27:14"
														}
													]
												}
											}
										]
									},
									"id": 1288,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferNativeFundsToAddress",
									"nameLocation": "5661:29:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1265,
												"mutability": "mutable",
												"name": "toAddress",
												"nameLocation": "5707:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 1288,
												"src": "5691:25:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1264,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5691:15:14",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5690:27:14"
									},
									"returnParameters": {
										"id": 1267,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5726:0:14"
									},
									"scope": 1289,
									"src": "5652:208:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1290,
							"src": "467:5395:14",
							"usedErrors": []
						}
					],
					"src": "32:5830:14"
				},
				"id": 14
			}
		}
	}
}