{
	"id": "35c6d79aeb7e4d6720739bdb274919f1",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"Practice NFT.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.7;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\";\nimport \"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\";\nimport \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\";\nimport \"./Ownable.sol\";\n\n\ncontract TwoFactor is Ownable, ERC721Holder, ERC1155Holder {\n    \n    using SafeERC20 for IERC20;\n\n    \n    bool private isInitialized;\n    address private backupWallet;\n  \n    function init(address _sender, address _backupWallet) external {        \n        require(_sender!= address(0), \"Sender address can not be zero\");\n        require(_backupWallet!= address(0), \"Backup address can not be zero\");\n        require(_backupWallet!= _sender, \"Backup wallet can not be same as sender wallet\");\n        require(isInitialized == false, \"Contract already initialized\");\n        _transferOwnership(_sender);\n        backupWallet = _backupWallet;\n        isInitialized = true;\n    }\n    \n    receive() external payable {        \n    }\n\n   /* function transferERC20AssetsToWallet(\n        bytes memory _oldPassword,\n        bytes32 _newEncryptedPassword,\n        address[] memory erc20tokenAddressList\n    )\n        external\n        onlyOwner\n        passwordMatchAndNewUpdated(_oldPassword, _newEncryptedPassword)\n        encryptedPasswordNotNull(_newEncryptedPassword)\n    {\n        encryptedPassword = _newEncryptedPassword;\n        _transferERC20FundsToAddress(owner(), erc20tokenAddressList);\n    }*/\n\n    function transferERC721AssetsToWallet(\n        address tokenAddress,\n        uint256 tokenId\n    ) external onlyOwner\n     {\n        _transferERC721FundsToAddress(owner(), tokenAddress, tokenId);\n    }\n\n   /* function transferERC1155AssetsToWallet(\n        bytes memory _oldPassword,\n        bytes32 _newEncryptedPassword,\n        address tokenAddress,\n        uint256 tokenId\n    )\n        external\n        onlyOwner\n        passwordMatchAndNewUpdated(_oldPassword, _newEncryptedPassword)\n        encryptedPasswordNotNull(_newEncryptedPassword)\n    {\n        encryptedPassword = _newEncryptedPassword;\n        _transferERC1155FundsToAddress(owner(), tokenAddress, tokenId);\n    }*/\n\n    function transferNativeAssetToWallet() external onlyOwner {\n        _transferNativeFundsToAddress(payable(owner()));\n    }\n\n    //put old raw password and new hashed password\n /*   function updatePassword(\n        bytes memory _oldPassword,\n        bytes32 _newEncryptedPassword\n    )\n        external\n        onlyOwner\n        passwordMatchAndNewUpdated(_oldPassword, _newEncryptedPassword)\n        encryptedPasswordNotNull(_newEncryptedPassword)\n    {\n        encryptedPassword = _newEncryptedPassword;\n    }\n\n    modifier passwordMatchAndNewUpdated(\n        bytes memory _oldPassword,\n        bytes32 _newEncryptedPassword\n    ) {\n        bytes32 _passwordSent = keccak256(abi.encodePacked(_oldPassword));\n        require(\n            _passwordSent != _newEncryptedPassword,\n            \"New password should be different\"\n        );\n        require(_passwordSent == encryptedPassword, \"Passwords don't match\");\n        _;\n    }\n\n    modifier encryptedPasswordNotNull(bytes32 _encryptedPassword)\n    {\n        require(_encryptedPassword != keccak256(abi.encodePacked('')), \"Password can not be null\");\n        _;\n\n    }\n\n\n    //WHEN WALLET KEYS GET COMPROMISED OR 2FA PASSWORD IS LOST, WE RECOMMEND TO SEND YOUR ASSETS TO RECOVERY WALLET (OR COLD WALLET)\n\n    function sendERC20FundsToBackupWallet(\n        address[] memory erc20tokenAddressList\n    ) external onlyOwner {\n        _transferERC20FundsToAddress(backupWallet, erc20tokenAddressList);\n    } */\n\n    function sendERC721FundsToBackupWallet(\n        address tokenAddress,\n        uint256 tokenId\n    ) external onlyOwner {\n        _transferERC721FundsToAddress(backupWallet, tokenAddress, tokenId);\n    }\n\n    function sendERC1155FundsToBackupWallet(\n        address tokenAddress,\n        uint256 tokenId\n    ) external onlyOwner {\n        _transferERC1155FundsToAddress(backupWallet, tokenAddress, tokenId);\n    }\n\n    function sendNativeFundsToBackupWallet() external onlyOwner {\n        _transferNativeFundsToAddress(payable(backupWallet));\n    }\n\n    function _transferERC721FundsToAddress(\n        address toAddress,\n        address tokenAddress,\n        uint256 tokenId\n    ) private {\n        IERC721(tokenAddress).safeTransferFrom(address(this), toAddress, tokenId);\n    }\n\n    function _transferERC1155FundsToAddress(\n        address toAddress,\n        address tokenAddress,\n        uint256 tokenId\n    ) private {\n        uint256 balance = IERC1155(tokenAddress).balanceOf(\n            address(this),\n            tokenId\n        );\n        if (balance > 0) {\n            IERC1155(tokenAddress).safeTransferFrom(\n                address(this),\n                toAddress,\n                tokenId,\n                balance,\n                \"\"\n            );\n        }\n    }\n\n    function _transferERC20FundsToAddress(\n        address toAddress,\n        address[] memory tokenAddressList\n    ) private {\n        require(tokenAddressList.length != 0, \"Assets list cannot be empty\");\n        for (uint256 i = 0; i < tokenAddressList.length; i++) {\n            uint256 balance = IERC20(tokenAddressList[i]).balanceOf(\n                address(this)\n            );\n            if (balance > 0) {\n                IERC20(tokenAddressList[i]).safeTransfer(toAddress, balance);\n            }\n        }\n    }\n\n    function _transferNativeFundsToAddress(address payable toAddress) private {\n        uint256 balance = address(this).balance;\n        if (balance > 0) {\n            toAddress.transfer(balance);\n        }\n    }\n}"
			},
			"Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.7;\nimport \"@openzeppelin/contracts/utils/Context.sol\";\n/** \n * @dev This contract module is inspired from \n * https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\n * OpenZepplin Ownable contract. The code is forked from Ownable except \n * 2 functions i.e. renounce and transfer ownership. In our usecase, we do not require users \n * to transfer or renounce ownership as it is always aligned with the original user.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(\n        address indexed previousOwner,\n        address indexed newOwner\n    );\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}"
			},
			"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC1155/utils/ERC1155Holder.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./ERC1155Receiver.sol\";\n\n/**\n * Simple implementation of `ERC1155Receiver` that will allow a contract to hold ERC1155 tokens.\n *\n * IMPORTANT: When inheriting this contract, you must include a way to use the received tokens, otherwise they will be\n * stuck.\n *\n * @dev _Available since v3.1._\n */\ncontract ERC1155Holder is ERC1155Receiver {\n    function onERC1155Received(\n        address,\n        address,\n        uint256,\n        uint256,\n        bytes memory\n    ) public virtual override returns (bytes4) {\n        return this.onERC1155Received.selector;\n    }\n\n    function onERC1155BatchReceived(\n        address,\n        address,\n        uint256[] memory,\n        uint256[] memory,\n        bytes memory\n    ) public virtual override returns (bytes4) {\n        return this.onERC1155BatchReceived.selector;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/IERC1155.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\n *\n * _Available since v3.1._\n */\ninterface IERC1155 is IERC165 {\n    /**\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    event TransferBatch(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256[] ids,\n        uint256[] values\n    );\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) external view returns (uint256);\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids)\n        external\n        view\n        returns (uint256[] memory);\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the caller.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address account, address operator) external view returns (bool);\n\n    /**\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata amounts,\n        bytes calldata data\n    ) external;\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/utils/ERC721Holder.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC721Receiver.sol\";\n\n/**\n * @dev Implementation of the {IERC721Receiver} interface.\n *\n * Accepts all token transfers.\n * Make sure the contract is able to use its token with {IERC721-safeTransferFrom}, {IERC721-approve} or {IERC721-setApprovalForAll}.\n */\ncontract ERC721Holder is IERC721Receiver {\n    /**\n     * @dev See {IERC721Receiver-onERC721Received}.\n     *\n     * Always returns `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address,\n        address,\n        uint256,\n        bytes memory\n    ) public virtual override returns (bytes4) {\n        return this.onERC721Received.selector;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\nimport \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    function safeTransfer(\n        IERC20 token,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(\n        IERC20 token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            uint256 newAllowance = oldAllowance - value;\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) {\n            // Return data is optional\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/utils/ERC1155Receiver.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC1155Receiver.sol\";\nimport \"../../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev _Available since v3.1._\n */\nabstract contract ERC1155Receiver is ERC165, IERC1155Receiver {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return interfaceId == type(IERC1155Receiver).interfaceId || super.supportsInterface(interfaceId);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC1155/IERC1155Receiver.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev _Available since v3.1._\n */\ninterface IERC1155Receiver is IERC165 {\n    /**\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\n     *\n     * NOTE: To accept the transfer, this must return\n     * `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n     * (i.e. 0xf23a6e61, or its own function selector).\n     *\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param id The ID of the token being transferred\n     * @param value The amount of tokens being transferred\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n     */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n\n    /**\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\n     * been updated.\n     *\n     * NOTE: To accept the transfer(s), this must return\n     * `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n     * (i.e. 0xbc197c81, or its own function selector).\n     *\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n     */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"IERC1155": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._",
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":\"IERC1155\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x8e93de94c9062ebc94fb7e2e3929b0781ac6a2b7772e2f7a59045861c93e5be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f920a631bf986c610fe573d3c70a2bb6f224f86f4a8550016470c7ee476c9ab5\",\"dweb:/ipfs/QmYzsyVMfnaREKHcHv5RPS8Xg5r1Q38E2SDsGBTnXeFWzb\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"IERC1155Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "_Available since v3.1._",
						"kind": "dev",
						"methods": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
								"details": "Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"ids": "An array containing ids of each token being transferred (order and length must match values array)",
									"operator": "The address which initiated the batch transfer (i.e. msg.sender)",
									"values": "An array containing amounts of each token being transferred (order and length must match ids array)"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
								}
							},
							"onERC1155Received(address,address,uint256,uint256,bytes)": {
								"details": "Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"id": "The ID of the token being transferred",
									"operator": "The address which initiated the transfer (i.e. msg.sender)",
									"value": "The amount of tokens being transferred"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"_Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol": {
				"ERC1155Holder": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "_Available since v3.1._",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":451:973  contract ERC1155Holder is ERC1155Receiver {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":451:973  contract ERC1155Holder is ERC1155Receiver {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xbc197c81\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xf23a6e61\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":387:608  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_3:\n      tag_6\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      tag_9\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":724:971  function onERC1155BatchReceived(... */\n    tag_4:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":499:718  function onERC1155Received(... */\n    tag_5:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":387:608  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_9:\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":489:493  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":527:561  type(IERC1155Receiver).interfaceId */\n      0x4e2312e000000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":512:561  interfaceId == type(IERC1155Receiver).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":512:523  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":512:561  interfaceId == type(IERC1155Receiver).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":512:601  interfaceId == type(IERC1155Receiver).interfaceId || super.supportsInterface(interfaceId) */\n      dup1\n      tag_24\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":565:601  super.supportsInterface(interfaceId) */\n      tag_25\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":589:600  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":565:588  super.supportsInterface */\n      tag_26\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":565:601  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_25:\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":512:601  interfaceId == type(IERC1155Receiver).interfaceId || super.supportsInterface(interfaceId) */\n    tag_24:\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":505:601  return interfaceId == type(IERC1155Receiver).interfaceId || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":387:608  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":724:971  function onERC1155BatchReceived(... */\n    tag_15:\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":903:909  bytes4 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":928:964  this.onERC1155BatchReceived.selector */\n      shl(0xe0, 0xbc197c81)\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":921:964  return this.onERC1155BatchReceived.selector */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":724:971  function onERC1155BatchReceived(... */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":499:718  function onERC1155Received(... */\n    tag_21:\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":655:661  bytes4 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":680:711  this.onERC1155Received.selector */\n      shl(0xe0, 0xf23a6e61)\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":673:711  return this.onERC1155Received.selector */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":499:718  function onERC1155Received(... */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_26:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":914:918  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":952:977  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:948  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":930:977  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24:746   */\n    tag_31:\n        /* \"#utility.yul\":120:125   */\n      0x00\n        /* \"#utility.yul\":145:226   */\n      tag_33\n        /* \"#utility.yul\":161:225   */\n      tag_34\n        /* \"#utility.yul\":218:224   */\n      dup5\n        /* \"#utility.yul\":161:225   */\n      tag_35\n      jump\t// in\n    tag_34:\n        /* \"#utility.yul\":145:226   */\n      tag_36\n      jump\t// in\n    tag_33:\n        /* \"#utility.yul\":136:226   */\n      swap1\n      pop\n        /* \"#utility.yul\":246:251   */\n      dup1\n        /* \"#utility.yul\":275:281   */\n      dup4\n        /* \"#utility.yul\":268:273   */\n      dup3\n        /* \"#utility.yul\":261:282   */\n      mstore\n        /* \"#utility.yul\":309:313   */\n      0x20\n        /* \"#utility.yul\":302:307   */\n      dup3\n        /* \"#utility.yul\":298:314   */\n      add\n        /* \"#utility.yul\":291:314   */\n      swap1\n      pop\n        /* \"#utility.yul\":335:341   */\n      dup3\n        /* \"#utility.yul\":385:388   */\n      dup6\n        /* \"#utility.yul\":377:381   */\n      0x20\n        /* \"#utility.yul\":369:375   */\n      dup7\n        /* \"#utility.yul\":365:382   */\n      mul\n        /* \"#utility.yul\":360:363   */\n      dup3\n        /* \"#utility.yul\":356:383   */\n      add\n        /* \"#utility.yul\":353:389   */\n      gt\n        /* \"#utility.yul\":350:493   */\n      iszero\n      tag_37\n      jumpi\n        /* \"#utility.yul\":404:483   */\n      tag_38\n      tag_39\n      jump\t// in\n    tag_38:\n        /* \"#utility.yul\":350:493   */\n    tag_37:\n        /* \"#utility.yul\":517:518   */\n      0x00\n        /* \"#utility.yul\":502:740   */\n    tag_40:\n        /* \"#utility.yul\":527:533   */\n      dup6\n        /* \"#utility.yul\":524:525   */\n      dup2\n        /* \"#utility.yul\":521:534   */\n      lt\n        /* \"#utility.yul\":502:740   */\n      iszero\n      tag_42\n      jumpi\n        /* \"#utility.yul\":595:598   */\n      dup2\n        /* \"#utility.yul\":624:661   */\n      tag_43\n        /* \"#utility.yul\":657:660   */\n      dup9\n        /* \"#utility.yul\":645:655   */\n      dup3\n        /* \"#utility.yul\":624:661   */\n      tag_44\n      jump\t// in\n    tag_43:\n        /* \"#utility.yul\":619:622   */\n      dup5\n        /* \"#utility.yul\":612:662   */\n      mstore\n        /* \"#utility.yul\":691:695   */\n      0x20\n        /* \"#utility.yul\":686:689   */\n      dup5\n        /* \"#utility.yul\":682:696   */\n      add\n        /* \"#utility.yul\":675:696   */\n      swap4\n      pop\n        /* \"#utility.yul\":725:729   */\n      0x20\n        /* \"#utility.yul\":720:723   */\n      dup4\n        /* \"#utility.yul\":716:730   */\n      add\n        /* \"#utility.yul\":709:730   */\n      swap3\n      pop\n        /* \"#utility.yul\":562:740   */\n      pop\n        /* \"#utility.yul\":549:550   */\n      0x01\n        /* \"#utility.yul\":546:547   */\n      dup2\n        /* \"#utility.yul\":542:551   */\n      add\n        /* \"#utility.yul\":537:551   */\n      swap1\n      pop\n        /* \"#utility.yul\":502:740   */\n      jump(tag_40)\n    tag_42:\n        /* \"#utility.yul\":506:520   */\n      pop\n        /* \"#utility.yul\":126:746   */\n      pop\n      pop\n        /* \"#utility.yul\":24:746   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":752:1162   */\n    tag_45:\n        /* \"#utility.yul\":829:834   */\n      0x00\n        /* \"#utility.yul\":854:919   */\n      tag_47\n        /* \"#utility.yul\":870:918   */\n      tag_48\n        /* \"#utility.yul\":911:917   */\n      dup5\n        /* \"#utility.yul\":870:918   */\n      tag_49\n      jump\t// in\n    tag_48:\n        /* \"#utility.yul\":854:919   */\n      tag_36\n      jump\t// in\n    tag_47:\n        /* \"#utility.yul\":845:919   */\n      swap1\n      pop\n        /* \"#utility.yul\":942:948   */\n      dup3\n        /* \"#utility.yul\":935:940   */\n      dup2\n        /* \"#utility.yul\":928:949   */\n      mstore\n        /* \"#utility.yul\":980:984   */\n      0x20\n        /* \"#utility.yul\":973:978   */\n      dup2\n        /* \"#utility.yul\":969:985   */\n      add\n        /* \"#utility.yul\":1018:1021   */\n      dup5\n        /* \"#utility.yul\":1009:1015   */\n      dup5\n        /* \"#utility.yul\":1004:1007   */\n      dup5\n        /* \"#utility.yul\":1000:1016   */\n      add\n        /* \"#utility.yul\":997:1022   */\n      gt\n        /* \"#utility.yul\":994:1106   */\n      iszero\n      tag_50\n      jumpi\n        /* \"#utility.yul\":1025:1104   */\n      tag_51\n      tag_52\n      jump\t// in\n    tag_51:\n        /* \"#utility.yul\":994:1106   */\n    tag_50:\n        /* \"#utility.yul\":1115:1156   */\n      tag_53\n        /* \"#utility.yul\":1149:1155   */\n      dup5\n        /* \"#utility.yul\":1144:1147   */\n      dup3\n        /* \"#utility.yul\":1139:1142   */\n      dup6\n        /* \"#utility.yul\":1115:1156   */\n      tag_54\n      jump\t// in\n    tag_53:\n        /* \"#utility.yul\":835:1162   */\n      pop\n        /* \"#utility.yul\":752:1162   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1168:1307   */\n    tag_55:\n        /* \"#utility.yul\":1214:1219   */\n      0x00\n        /* \"#utility.yul\":1252:1258   */\n      dup2\n        /* \"#utility.yul\":1239:1259   */\n      calldataload\n        /* \"#utility.yul\":1230:1259   */\n      swap1\n      pop\n        /* \"#utility.yul\":1268:1301   */\n      tag_57\n        /* \"#utility.yul\":1295:1300   */\n      dup2\n        /* \"#utility.yul\":1268:1301   */\n      tag_58\n      jump\t// in\n    tag_57:\n        /* \"#utility.yul\":1168:1307   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1330:1700   */\n    tag_59:\n        /* \"#utility.yul\":1401:1406   */\n      0x00\n        /* \"#utility.yul\":1450:1453   */\n      dup3\n        /* \"#utility.yul\":1443:1447   */\n      0x1f\n        /* \"#utility.yul\":1435:1441   */\n      dup4\n        /* \"#utility.yul\":1431:1448   */\n      add\n        /* \"#utility.yul\":1427:1454   */\n      slt\n        /* \"#utility.yul\":1417:1539   */\n      tag_61\n      jumpi\n        /* \"#utility.yul\":1458:1537   */\n      tag_62\n      tag_63\n      jump\t// in\n    tag_62:\n        /* \"#utility.yul\":1417:1539   */\n    tag_61:\n        /* \"#utility.yul\":1575:1581   */\n      dup2\n        /* \"#utility.yul\":1562:1582   */\n      calldataload\n        /* \"#utility.yul\":1600:1694   */\n      tag_64\n        /* \"#utility.yul\":1690:1693   */\n      dup5\n        /* \"#utility.yul\":1682:1688   */\n      dup3\n        /* \"#utility.yul\":1675:1679   */\n      0x20\n        /* \"#utility.yul\":1667:1673   */\n      dup7\n        /* \"#utility.yul\":1663:1680   */\n      add\n        /* \"#utility.yul\":1600:1694   */\n      tag_31\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":1591:1694   */\n      swap2\n      pop\n        /* \"#utility.yul\":1407:1700   */\n      pop\n        /* \"#utility.yul\":1330:1700   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1706:1843   */\n    tag_65:\n        /* \"#utility.yul\":1751:1756   */\n      0x00\n        /* \"#utility.yul\":1789:1795   */\n      dup2\n        /* \"#utility.yul\":1776:1796   */\n      calldataload\n        /* \"#utility.yul\":1767:1796   */\n      swap1\n      pop\n        /* \"#utility.yul\":1805:1837   */\n      tag_67\n        /* \"#utility.yul\":1831:1836   */\n      dup2\n        /* \"#utility.yul\":1805:1837   */\n      tag_68\n      jump\t// in\n    tag_67:\n        /* \"#utility.yul\":1706:1843   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1862:2200   */\n    tag_69:\n        /* \"#utility.yul\":1917:1922   */\n      0x00\n        /* \"#utility.yul\":1966:1969   */\n      dup3\n        /* \"#utility.yul\":1959:1963   */\n      0x1f\n        /* \"#utility.yul\":1951:1957   */\n      dup4\n        /* \"#utility.yul\":1947:1964   */\n      add\n        /* \"#utility.yul\":1943:1970   */\n      slt\n        /* \"#utility.yul\":1933:2055   */\n      tag_71\n      jumpi\n        /* \"#utility.yul\":1974:2053   */\n      tag_72\n      tag_63\n      jump\t// in\n    tag_72:\n        /* \"#utility.yul\":1933:2055   */\n    tag_71:\n        /* \"#utility.yul\":2091:2097   */\n      dup2\n        /* \"#utility.yul\":2078:2098   */\n      calldataload\n        /* \"#utility.yul\":2116:2194   */\n      tag_73\n        /* \"#utility.yul\":2190:2193   */\n      dup5\n        /* \"#utility.yul\":2182:2188   */\n      dup3\n        /* \"#utility.yul\":2175:2179   */\n      0x20\n        /* \"#utility.yul\":2167:2173   */\n      dup7\n        /* \"#utility.yul\":2163:2180   */\n      add\n        /* \"#utility.yul\":2116:2194   */\n      tag_45\n      jump\t// in\n    tag_73:\n        /* \"#utility.yul\":2107:2194   */\n      swap2\n      pop\n        /* \"#utility.yul\":1923:2200   */\n      pop\n        /* \"#utility.yul\":1862:2200   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2206:2345   */\n    tag_44:\n        /* \"#utility.yul\":2252:2257   */\n      0x00\n        /* \"#utility.yul\":2290:2296   */\n      dup2\n        /* \"#utility.yul\":2277:2297   */\n      calldataload\n        /* \"#utility.yul\":2268:2297   */\n      swap1\n      pop\n        /* \"#utility.yul\":2306:2339   */\n      tag_75\n        /* \"#utility.yul\":2333:2338   */\n      dup2\n        /* \"#utility.yul\":2306:2339   */\n      tag_76\n      jump\t// in\n    tag_75:\n        /* \"#utility.yul\":2206:2345   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2351:3860   */\n    tag_14:\n        /* \"#utility.yul\":2505:2511   */\n      0x00\n        /* \"#utility.yul\":2513:2519   */\n      dup1\n        /* \"#utility.yul\":2521:2527   */\n      0x00\n        /* \"#utility.yul\":2529:2535   */\n      dup1\n        /* \"#utility.yul\":2537:2543   */\n      0x00\n        /* \"#utility.yul\":2586:2589   */\n      0xa0\n        /* \"#utility.yul\":2574:2583   */\n      dup7\n        /* \"#utility.yul\":2565:2572   */\n      dup9\n        /* \"#utility.yul\":2561:2584   */\n      sub\n        /* \"#utility.yul\":2557:2590   */\n      slt\n        /* \"#utility.yul\":2554:2674   */\n      iszero\n      tag_78\n      jumpi\n        /* \"#utility.yul\":2593:2672   */\n      tag_79\n      tag_80\n      jump\t// in\n    tag_79:\n        /* \"#utility.yul\":2554:2674   */\n    tag_78:\n        /* \"#utility.yul\":2713:2714   */\n      0x00\n        /* \"#utility.yul\":2738:2791   */\n      tag_81\n        /* \"#utility.yul\":2783:2790   */\n      dup9\n        /* \"#utility.yul\":2774:2780   */\n      dup3\n        /* \"#utility.yul\":2763:2772   */\n      dup10\n        /* \"#utility.yul\":2759:2781   */\n      add\n        /* \"#utility.yul\":2738:2791   */\n      tag_55\n      jump\t// in\n    tag_81:\n        /* \"#utility.yul\":2728:2791   */\n      swap6\n      pop\n        /* \"#utility.yul\":2684:2801   */\n      pop\n        /* \"#utility.yul\":2840:2842   */\n      0x20\n        /* \"#utility.yul\":2866:2919   */\n      tag_82\n        /* \"#utility.yul\":2911:2918   */\n      dup9\n        /* \"#utility.yul\":2902:2908   */\n      dup3\n        /* \"#utility.yul\":2891:2900   */\n      dup10\n        /* \"#utility.yul\":2887:2909   */\n      add\n        /* \"#utility.yul\":2866:2919   */\n      tag_55\n      jump\t// in\n    tag_82:\n        /* \"#utility.yul\":2856:2919   */\n      swap5\n      pop\n        /* \"#utility.yul\":2811:2929   */\n      pop\n        /* \"#utility.yul\":2996:2998   */\n      0x40\n        /* \"#utility.yul\":2985:2994   */\n      dup7\n        /* \"#utility.yul\":2981:2999   */\n      add\n        /* \"#utility.yul\":2968:3000   */\n      calldataload\n        /* \"#utility.yul\":3027:3045   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3019:3025   */\n      dup2\n        /* \"#utility.yul\":3016:3046   */\n      gt\n        /* \"#utility.yul\":3013:3130   */\n      iszero\n      tag_83\n      jumpi\n        /* \"#utility.yul\":3049:3128   */\n      tag_84\n      tag_85\n      jump\t// in\n    tag_84:\n        /* \"#utility.yul\":3013:3130   */\n    tag_83:\n        /* \"#utility.yul\":3154:3232   */\n      tag_86\n        /* \"#utility.yul\":3224:3231   */\n      dup9\n        /* \"#utility.yul\":3215:3221   */\n      dup3\n        /* \"#utility.yul\":3204:3213   */\n      dup10\n        /* \"#utility.yul\":3200:3222   */\n      add\n        /* \"#utility.yul\":3154:3232   */\n      tag_59\n      jump\t// in\n    tag_86:\n        /* \"#utility.yul\":3144:3232   */\n      swap4\n      pop\n        /* \"#utility.yul\":2939:3242   */\n      pop\n        /* \"#utility.yul\":3309:3311   */\n      0x60\n        /* \"#utility.yul\":3298:3307   */\n      dup7\n        /* \"#utility.yul\":3294:3312   */\n      add\n        /* \"#utility.yul\":3281:3313   */\n      calldataload\n        /* \"#utility.yul\":3340:3358   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3332:3338   */\n      dup2\n        /* \"#utility.yul\":3329:3359   */\n      gt\n        /* \"#utility.yul\":3326:3443   */\n      iszero\n      tag_87\n      jumpi\n        /* \"#utility.yul\":3362:3441   */\n      tag_88\n      tag_85\n      jump\t// in\n    tag_88:\n        /* \"#utility.yul\":3326:3443   */\n    tag_87:\n        /* \"#utility.yul\":3467:3545   */\n      tag_89\n        /* \"#utility.yul\":3537:3544   */\n      dup9\n        /* \"#utility.yul\":3528:3534   */\n      dup3\n        /* \"#utility.yul\":3517:3526   */\n      dup10\n        /* \"#utility.yul\":3513:3535   */\n      add\n        /* \"#utility.yul\":3467:3545   */\n      tag_59\n      jump\t// in\n    tag_89:\n        /* \"#utility.yul\":3457:3545   */\n      swap3\n      pop\n        /* \"#utility.yul\":3252:3555   */\n      pop\n        /* \"#utility.yul\":3622:3625   */\n      0x80\n        /* \"#utility.yul\":3611:3620   */\n      dup7\n        /* \"#utility.yul\":3607:3626   */\n      add\n        /* \"#utility.yul\":3594:3627   */\n      calldataload\n        /* \"#utility.yul\":3654:3672   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3646:3652   */\n      dup2\n        /* \"#utility.yul\":3643:3673   */\n      gt\n        /* \"#utility.yul\":3640:3757   */\n      iszero\n      tag_90\n      jumpi\n        /* \"#utility.yul\":3676:3755   */\n      tag_91\n      tag_85\n      jump\t// in\n    tag_91:\n        /* \"#utility.yul\":3640:3757   */\n    tag_90:\n        /* \"#utility.yul\":3781:3843   */\n      tag_92\n        /* \"#utility.yul\":3835:3842   */\n      dup9\n        /* \"#utility.yul\":3826:3832   */\n      dup3\n        /* \"#utility.yul\":3815:3824   */\n      dup10\n        /* \"#utility.yul\":3811:3833   */\n      add\n        /* \"#utility.yul\":3781:3843   */\n      tag_69\n      jump\t// in\n    tag_92:\n        /* \"#utility.yul\":3771:3843   */\n      swap2\n      pop\n        /* \"#utility.yul\":3565:3853   */\n      pop\n        /* \"#utility.yul\":2351:3860   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3866:4955   */\n    tag_20:\n        /* \"#utility.yul\":3970:3976   */\n      0x00\n        /* \"#utility.yul\":3978:3984   */\n      dup1\n        /* \"#utility.yul\":3986:3992   */\n      0x00\n        /* \"#utility.yul\":3994:4000   */\n      dup1\n        /* \"#utility.yul\":4002:4008   */\n      0x00\n        /* \"#utility.yul\":4051:4054   */\n      0xa0\n        /* \"#utility.yul\":4039:4048   */\n      dup7\n        /* \"#utility.yul\":4030:4037   */\n      dup9\n        /* \"#utility.yul\":4026:4049   */\n      sub\n        /* \"#utility.yul\":4022:4055   */\n      slt\n        /* \"#utility.yul\":4019:4139   */\n      iszero\n      tag_94\n      jumpi\n        /* \"#utility.yul\":4058:4137   */\n      tag_95\n      tag_80\n      jump\t// in\n    tag_95:\n        /* \"#utility.yul\":4019:4139   */\n    tag_94:\n        /* \"#utility.yul\":4178:4179   */\n      0x00\n        /* \"#utility.yul\":4203:4256   */\n      tag_96\n        /* \"#utility.yul\":4248:4255   */\n      dup9\n        /* \"#utility.yul\":4239:4245   */\n      dup3\n        /* \"#utility.yul\":4228:4237   */\n      dup10\n        /* \"#utility.yul\":4224:4246   */\n      add\n        /* \"#utility.yul\":4203:4256   */\n      tag_55\n      jump\t// in\n    tag_96:\n        /* \"#utility.yul\":4193:4256   */\n      swap6\n      pop\n        /* \"#utility.yul\":4149:4266   */\n      pop\n        /* \"#utility.yul\":4305:4307   */\n      0x20\n        /* \"#utility.yul\":4331:4384   */\n      tag_97\n        /* \"#utility.yul\":4376:4383   */\n      dup9\n        /* \"#utility.yul\":4367:4373   */\n      dup3\n        /* \"#utility.yul\":4356:4365   */\n      dup10\n        /* \"#utility.yul\":4352:4374   */\n      add\n        /* \"#utility.yul\":4331:4384   */\n      tag_55\n      jump\t// in\n    tag_97:\n        /* \"#utility.yul\":4321:4384   */\n      swap5\n      pop\n        /* \"#utility.yul\":4276:4394   */\n      pop\n        /* \"#utility.yul\":4433:4435   */\n      0x40\n        /* \"#utility.yul\":4459:4512   */\n      tag_98\n        /* \"#utility.yul\":4504:4511   */\n      dup9\n        /* \"#utility.yul\":4495:4501   */\n      dup3\n        /* \"#utility.yul\":4484:4493   */\n      dup10\n        /* \"#utility.yul\":4480:4502   */\n      add\n        /* \"#utility.yul\":4459:4512   */\n      tag_44\n      jump\t// in\n    tag_98:\n        /* \"#utility.yul\":4449:4512   */\n      swap4\n      pop\n        /* \"#utility.yul\":4404:4522   */\n      pop\n        /* \"#utility.yul\":4561:4563   */\n      0x60\n        /* \"#utility.yul\":4587:4640   */\n      tag_99\n        /* \"#utility.yul\":4632:4639   */\n      dup9\n        /* \"#utility.yul\":4623:4629   */\n      dup3\n        /* \"#utility.yul\":4612:4621   */\n      dup10\n        /* \"#utility.yul\":4608:4630   */\n      add\n        /* \"#utility.yul\":4587:4640   */\n      tag_44\n      jump\t// in\n    tag_99:\n        /* \"#utility.yul\":4577:4640   */\n      swap3\n      pop\n        /* \"#utility.yul\":4532:4650   */\n      pop\n        /* \"#utility.yul\":4717:4720   */\n      0x80\n        /* \"#utility.yul\":4706:4715   */\n      dup7\n        /* \"#utility.yul\":4702:4721   */\n      add\n        /* \"#utility.yul\":4689:4722   */\n      calldataload\n        /* \"#utility.yul\":4749:4767   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4741:4747   */\n      dup2\n        /* \"#utility.yul\":4738:4768   */\n      gt\n        /* \"#utility.yul\":4735:4852   */\n      iszero\n      tag_100\n      jumpi\n        /* \"#utility.yul\":4771:4850   */\n      tag_101\n      tag_85\n      jump\t// in\n    tag_101:\n        /* \"#utility.yul\":4735:4852   */\n    tag_100:\n        /* \"#utility.yul\":4876:4938   */\n      tag_102\n        /* \"#utility.yul\":4930:4937   */\n      dup9\n        /* \"#utility.yul\":4921:4927   */\n      dup3\n        /* \"#utility.yul\":4910:4919   */\n      dup10\n        /* \"#utility.yul\":4906:4928   */\n      add\n        /* \"#utility.yul\":4876:4938   */\n      tag_69\n      jump\t// in\n    tag_102:\n        /* \"#utility.yul\":4866:4938   */\n      swap2\n      pop\n        /* \"#utility.yul\":4660:4948   */\n      pop\n        /* \"#utility.yul\":3866:4955   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4961:5288   */\n    tag_8:\n        /* \"#utility.yul\":5019:5025   */\n      0x00\n        /* \"#utility.yul\":5068:5070   */\n      0x20\n        /* \"#utility.yul\":5056:5065   */\n      dup3\n        /* \"#utility.yul\":5047:5054   */\n      dup5\n        /* \"#utility.yul\":5043:5066   */\n      sub\n        /* \"#utility.yul\":5039:5071   */\n      slt\n        /* \"#utility.yul\":5036:5155   */\n      iszero\n      tag_104\n      jumpi\n        /* \"#utility.yul\":5074:5153   */\n      tag_105\n      tag_80\n      jump\t// in\n    tag_105:\n        /* \"#utility.yul\":5036:5155   */\n    tag_104:\n        /* \"#utility.yul\":5194:5195   */\n      0x00\n        /* \"#utility.yul\":5219:5271   */\n      tag_106\n        /* \"#utility.yul\":5263:5270   */\n      dup5\n        /* \"#utility.yul\":5254:5260   */\n      dup3\n        /* \"#utility.yul\":5243:5252   */\n      dup6\n        /* \"#utility.yul\":5239:5261   */\n      add\n        /* \"#utility.yul\":5219:5271   */\n      tag_65\n      jump\t// in\n    tag_106:\n        /* \"#utility.yul\":5209:5271   */\n      swap2\n      pop\n        /* \"#utility.yul\":5165:5281   */\n      pop\n        /* \"#utility.yul\":4961:5288   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5294:5403   */\n    tag_107:\n        /* \"#utility.yul\":5375:5396   */\n      tag_109\n        /* \"#utility.yul\":5390:5395   */\n      dup2\n        /* \"#utility.yul\":5375:5396   */\n      tag_110\n      jump\t// in\n    tag_109:\n        /* \"#utility.yul\":5370:5373   */\n      dup3\n        /* \"#utility.yul\":5363:5397   */\n      mstore\n        /* \"#utility.yul\":5294:5403   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5409:5524   */\n    tag_111:\n        /* \"#utility.yul\":5494:5517   */\n      tag_113\n        /* \"#utility.yul\":5511:5516   */\n      dup2\n        /* \"#utility.yul\":5494:5517   */\n      tag_114\n      jump\t// in\n    tag_113:\n        /* \"#utility.yul\":5489:5492   */\n      dup3\n        /* \"#utility.yul\":5482:5518   */\n      mstore\n        /* \"#utility.yul\":5409:5524   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5530:5740   */\n    tag_11:\n        /* \"#utility.yul\":5617:5621   */\n      0x00\n        /* \"#utility.yul\":5655:5657   */\n      0x20\n        /* \"#utility.yul\":5644:5653   */\n      dup3\n        /* \"#utility.yul\":5640:5658   */\n      add\n        /* \"#utility.yul\":5632:5658   */\n      swap1\n      pop\n        /* \"#utility.yul\":5668:5733   */\n      tag_116\n        /* \"#utility.yul\":5730:5731   */\n      0x00\n        /* \"#utility.yul\":5719:5728   */\n      dup4\n        /* \"#utility.yul\":5715:5732   */\n      add\n        /* \"#utility.yul\":5706:5712   */\n      dup5\n        /* \"#utility.yul\":5668:5733   */\n      tag_107\n      jump\t// in\n    tag_116:\n        /* \"#utility.yul\":5530:5740   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5746:5964   */\n    tag_17:\n        /* \"#utility.yul\":5837:5841   */\n      0x00\n        /* \"#utility.yul\":5875:5877   */\n      0x20\n        /* \"#utility.yul\":5864:5873   */\n      dup3\n        /* \"#utility.yul\":5860:5878   */\n      add\n        /* \"#utility.yul\":5852:5878   */\n      swap1\n      pop\n        /* \"#utility.yul\":5888:5957   */\n      tag_118\n        /* \"#utility.yul\":5954:5955   */\n      0x00\n        /* \"#utility.yul\":5943:5952   */\n      dup4\n        /* \"#utility.yul\":5939:5956   */\n      add\n        /* \"#utility.yul\":5930:5936   */\n      dup5\n        /* \"#utility.yul\":5888:5957   */\n      tag_111\n      jump\t// in\n    tag_118:\n        /* \"#utility.yul\":5746:5964   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5970:6099   */\n    tag_36:\n        /* \"#utility.yul\":6004:6010   */\n      0x00\n        /* \"#utility.yul\":6031:6051   */\n      tag_120\n      tag_121\n      jump\t// in\n    tag_120:\n        /* \"#utility.yul\":6021:6051   */\n      swap1\n      pop\n        /* \"#utility.yul\":6060:6093   */\n      tag_122\n        /* \"#utility.yul\":6088:6092   */\n      dup3\n        /* \"#utility.yul\":6080:6086   */\n      dup3\n        /* \"#utility.yul\":6060:6093   */\n      tag_123\n      jump\t// in\n    tag_122:\n        /* \"#utility.yul\":5970:6099   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6105:6180   */\n    tag_121:\n        /* \"#utility.yul\":6138:6144   */\n      0x00\n        /* \"#utility.yul\":6171:6173   */\n      0x40\n        /* \"#utility.yul\":6165:6174   */\n      mload\n        /* \"#utility.yul\":6155:6174   */\n      swap1\n      pop\n        /* \"#utility.yul\":6105:6180   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":6186:6497   */\n    tag_35:\n        /* \"#utility.yul\":6263:6267   */\n      0x00\n        /* \"#utility.yul\":6353:6371   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6345:6351   */\n      dup3\n        /* \"#utility.yul\":6342:6372   */\n      gt\n        /* \"#utility.yul\":6339:6395   */\n      iszero\n      tag_126\n      jumpi\n        /* \"#utility.yul\":6375:6393   */\n      tag_127\n      tag_128\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":6339:6395   */\n    tag_126:\n        /* \"#utility.yul\":6425:6429   */\n      0x20\n        /* \"#utility.yul\":6417:6423   */\n      dup3\n        /* \"#utility.yul\":6413:6430   */\n      mul\n        /* \"#utility.yul\":6405:6430   */\n      swap1\n      pop\n        /* \"#utility.yul\":6485:6489   */\n      0x20\n        /* \"#utility.yul\":6479:6483   */\n      dup2\n        /* \"#utility.yul\":6475:6490   */\n      add\n        /* \"#utility.yul\":6467:6490   */\n      swap1\n      pop\n        /* \"#utility.yul\":6186:6497   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6503:6810   */\n    tag_49:\n        /* \"#utility.yul\":6564:6568   */\n      0x00\n        /* \"#utility.yul\":6654:6672   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6646:6652   */\n      dup3\n        /* \"#utility.yul\":6643:6673   */\n      gt\n        /* \"#utility.yul\":6640:6696   */\n      iszero\n      tag_130\n      jumpi\n        /* \"#utility.yul\":6676:6694   */\n      tag_131\n      tag_128\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":6640:6696   */\n    tag_130:\n        /* \"#utility.yul\":6714:6743   */\n      tag_132\n        /* \"#utility.yul\":6736:6742   */\n      dup3\n        /* \"#utility.yul\":6714:6743   */\n      tag_133\n      jump\t// in\n    tag_132:\n        /* \"#utility.yul\":6706:6743   */\n      swap1\n      pop\n        /* \"#utility.yul\":6798:6802   */\n      0x20\n        /* \"#utility.yul\":6792:6796   */\n      dup2\n        /* \"#utility.yul\":6788:6803   */\n      add\n        /* \"#utility.yul\":6780:6803   */\n      swap1\n      pop\n        /* \"#utility.yul\":6503:6810   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6816:6912   */\n    tag_134:\n        /* \"#utility.yul\":6853:6860   */\n      0x00\n        /* \"#utility.yul\":6882:6906   */\n      tag_136\n        /* \"#utility.yul\":6900:6905   */\n      dup3\n        /* \"#utility.yul\":6882:6906   */\n      tag_137\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":6871:6906   */\n      swap1\n      pop\n        /* \"#utility.yul\":6816:6912   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6918:7008   */\n    tag_110:\n        /* \"#utility.yul\":6952:6959   */\n      0x00\n        /* \"#utility.yul\":6995:7000   */\n      dup2\n        /* \"#utility.yul\":6988:7001   */\n      iszero\n        /* \"#utility.yul\":6981:7002   */\n      iszero\n        /* \"#utility.yul\":6970:7002   */\n      swap1\n      pop\n        /* \"#utility.yul\":6918:7008   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7014:7163   */\n    tag_114:\n        /* \"#utility.yul\":7050:7057   */\n      0x00\n        /* \"#utility.yul\":7090:7156   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7083:7088   */\n      dup3\n        /* \"#utility.yul\":7079:7157   */\n      and\n        /* \"#utility.yul\":7068:7157   */\n      swap1\n      pop\n        /* \"#utility.yul\":7014:7163   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7169:7295   */\n    tag_137:\n        /* \"#utility.yul\":7206:7213   */\n      0x00\n        /* \"#utility.yul\":7246:7288   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":7239:7244   */\n      dup3\n        /* \"#utility.yul\":7235:7289   */\n      and\n        /* \"#utility.yul\":7224:7289   */\n      swap1\n      pop\n        /* \"#utility.yul\":7169:7295   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7301:7378   */\n    tag_141:\n        /* \"#utility.yul\":7338:7345   */\n      0x00\n        /* \"#utility.yul\":7367:7372   */\n      dup2\n        /* \"#utility.yul\":7356:7372   */\n      swap1\n      pop\n        /* \"#utility.yul\":7301:7378   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7384:7538   */\n    tag_54:\n        /* \"#utility.yul\":7468:7474   */\n      dup3\n        /* \"#utility.yul\":7463:7466   */\n      dup2\n        /* \"#utility.yul\":7458:7461   */\n      dup4\n        /* \"#utility.yul\":7445:7475   */\n      calldatacopy\n        /* \"#utility.yul\":7530:7531   */\n      0x00\n        /* \"#utility.yul\":7521:7527   */\n      dup4\n        /* \"#utility.yul\":7516:7519   */\n      dup4\n        /* \"#utility.yul\":7512:7528   */\n      add\n        /* \"#utility.yul\":7505:7532   */\n      mstore\n        /* \"#utility.yul\":7384:7538   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7544:7825   */\n    tag_123:\n        /* \"#utility.yul\":7627:7654   */\n      tag_145\n        /* \"#utility.yul\":7649:7653   */\n      dup3\n        /* \"#utility.yul\":7627:7654   */\n      tag_133\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":7619:7625   */\n      dup2\n        /* \"#utility.yul\":7615:7655   */\n      add\n        /* \"#utility.yul\":7757:7763   */\n      dup2\n        /* \"#utility.yul\":7745:7755   */\n      dup2\n        /* \"#utility.yul\":7742:7764   */\n      lt\n        /* \"#utility.yul\":7721:7739   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7709:7719   */\n      dup3\n        /* \"#utility.yul\":7706:7740   */\n      gt\n        /* \"#utility.yul\":7703:7765   */\n      or\n        /* \"#utility.yul\":7700:7788   */\n      iszero\n      tag_146\n      jumpi\n        /* \"#utility.yul\":7768:7786   */\n      tag_147\n      tag_128\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":7700:7788   */\n    tag_146:\n        /* \"#utility.yul\":7808:7818   */\n      dup1\n        /* \"#utility.yul\":7804:7806   */\n      0x40\n        /* \"#utility.yul\":7797:7819   */\n      mstore\n        /* \"#utility.yul\":7587:7825   */\n      pop\n        /* \"#utility.yul\":7544:7825   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7831:8011   */\n    tag_128:\n        /* \"#utility.yul\":7879:7956   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7876:7877   */\n      0x00\n        /* \"#utility.yul\":7869:7957   */\n      mstore\n        /* \"#utility.yul\":7976:7980   */\n      0x41\n        /* \"#utility.yul\":7973:7974   */\n      0x04\n        /* \"#utility.yul\":7966:7981   */\n      mstore\n        /* \"#utility.yul\":8000:8004   */\n      0x24\n        /* \"#utility.yul\":7997:7998   */\n      0x00\n        /* \"#utility.yul\":7990:8005   */\n      revert\n        /* \"#utility.yul\":8017:8134   */\n    tag_63:\n        /* \"#utility.yul\":8126:8127   */\n      0x00\n        /* \"#utility.yul\":8123:8124   */\n      dup1\n        /* \"#utility.yul\":8116:8128   */\n      revert\n        /* \"#utility.yul\":8140:8257   */\n    tag_39:\n        /* \"#utility.yul\":8249:8250   */\n      0x00\n        /* \"#utility.yul\":8246:8247   */\n      dup1\n        /* \"#utility.yul\":8239:8251   */\n      revert\n        /* \"#utility.yul\":8263:8380   */\n    tag_52:\n        /* \"#utility.yul\":8372:8373   */\n      0x00\n        /* \"#utility.yul\":8369:8370   */\n      dup1\n        /* \"#utility.yul\":8362:8374   */\n      revert\n        /* \"#utility.yul\":8386:8503   */\n    tag_85:\n        /* \"#utility.yul\":8495:8496   */\n      0x00\n        /* \"#utility.yul\":8492:8493   */\n      dup1\n        /* \"#utility.yul\":8485:8497   */\n      revert\n        /* \"#utility.yul\":8509:8626   */\n    tag_80:\n        /* \"#utility.yul\":8618:8619   */\n      0x00\n        /* \"#utility.yul\":8615:8616   */\n      dup1\n        /* \"#utility.yul\":8608:8620   */\n      revert\n        /* \"#utility.yul\":8632:8734   */\n    tag_133:\n        /* \"#utility.yul\":8673:8679   */\n      0x00\n        /* \"#utility.yul\":8724:8726   */\n      0x1f\n        /* \"#utility.yul\":8720:8727   */\n      not\n        /* \"#utility.yul\":8715:8717   */\n      0x1f\n        /* \"#utility.yul\":8708:8713   */\n      dup4\n        /* \"#utility.yul\":8704:8718   */\n      add\n        /* \"#utility.yul\":8700:8728   */\n      and\n        /* \"#utility.yul\":8690:8728   */\n      swap1\n      pop\n        /* \"#utility.yul\":8632:8734   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8740:8862   */\n    tag_58:\n        /* \"#utility.yul\":8813:8837   */\n      tag_156\n        /* \"#utility.yul\":8831:8836   */\n      dup2\n        /* \"#utility.yul\":8813:8837   */\n      tag_134\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":8806:8811   */\n      dup2\n        /* \"#utility.yul\":8803:8838   */\n      eq\n        /* \"#utility.yul\":8793:8856   */\n      tag_157\n      jumpi\n        /* \"#utility.yul\":8852:8853   */\n      0x00\n        /* \"#utility.yul\":8849:8850   */\n      dup1\n        /* \"#utility.yul\":8842:8854   */\n      revert\n        /* \"#utility.yul\":8793:8856   */\n    tag_157:\n        /* \"#utility.yul\":8740:8862   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8868:8988   */\n    tag_68:\n        /* \"#utility.yul\":8940:8963   */\n      tag_159\n        /* \"#utility.yul\":8957:8962   */\n      dup2\n        /* \"#utility.yul\":8940:8963   */\n      tag_114\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":8933:8938   */\n      dup2\n        /* \"#utility.yul\":8930:8964   */\n      eq\n        /* \"#utility.yul\":8920:8982   */\n      tag_160\n      jumpi\n        /* \"#utility.yul\":8978:8979   */\n      0x00\n        /* \"#utility.yul\":8975:8976   */\n      dup1\n        /* \"#utility.yul\":8968:8980   */\n      revert\n        /* \"#utility.yul\":8920:8982   */\n    tag_160:\n        /* \"#utility.yul\":8868:8988   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8994:9116   */\n    tag_76:\n        /* \"#utility.yul\":9067:9091   */\n      tag_162\n        /* \"#utility.yul\":9085:9090   */\n      dup2\n        /* \"#utility.yul\":9067:9091   */\n      tag_141\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":9060:9065   */\n      dup2\n        /* \"#utility.yul\":9057:9092   */\n      eq\n        /* \"#utility.yul\":9047:9110   */\n      tag_163\n      jumpi\n        /* \"#utility.yul\":9106:9107   */\n      0x00\n        /* \"#utility.yul\":9103:9104   */\n      dup1\n        /* \"#utility.yul\":9096:9108   */\n      revert\n        /* \"#utility.yul\":9047:9110   */\n    tag_163:\n        /* \"#utility.yul\":8994:9116   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212205c38a71feef050dfade62137089f79984c2ea208278ab8984649ed46135259f464736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610722806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806301ffc9a714610046578063bc197c8114610076578063f23a6e61146100a6575b600080fd5b610060600480360381019061005b9190610497565b6100d6565b60405161006d91906104e2565b60405180910390f35b610090600480360381019061008b9190610331565b610150565b60405161009d91906104fd565b60405180910390f35b6100c060048036038101906100bb9190610400565b610165565b6040516100cd91906104fd565b60405180910390f35b60007f4e2312e0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061014957506101488261017a565b5b9050919050565b600063bc197c8160e01b905095945050505050565b600063f23a6e6160e01b905095945050505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60006101f76101f28461053d565b610518565b9050808382526020820190508285602086028201111561021a57610219610682565b5b60005b8581101561024a5781610230888261031c565b84526020840193506020830192505060018101905061021d565b5050509392505050565b600061026761026284610569565b610518565b90508281526020810184848401111561028357610282610687565b5b61028e84828561060e565b509392505050565b6000813590506102a5816106a7565b92915050565b600082601f8301126102c0576102bf61067d565b5b81356102d08482602086016101e4565b91505092915050565b6000813590506102e8816106be565b92915050565b600082601f8301126103035761030261067d565b5b8135610313848260208601610254565b91505092915050565b60008135905061032b816106d5565b92915050565b600080600080600060a0868803121561034d5761034c610691565b5b600061035b88828901610296565b955050602061036c88828901610296565b945050604086013567ffffffffffffffff81111561038d5761038c61068c565b5b610399888289016102ab565b935050606086013567ffffffffffffffff8111156103ba576103b961068c565b5b6103c6888289016102ab565b925050608086013567ffffffffffffffff8111156103e7576103e661068c565b5b6103f3888289016102ee565b9150509295509295909350565b600080600080600060a0868803121561041c5761041b610691565b5b600061042a88828901610296565b955050602061043b88828901610296565b945050604061044c8882890161031c565b935050606061045d8882890161031c565b925050608086013567ffffffffffffffff81111561047e5761047d61068c565b5b61048a888289016102ee565b9150509295509295909350565b6000602082840312156104ad576104ac610691565b5b60006104bb848285016102d9565b91505092915050565b6104cd816105ac565b82525050565b6104dc816105b8565b82525050565b60006020820190506104f760008301846104c4565b92915050565b600060208201905061051260008301846104d3565b92915050565b6000610522610533565b905061052e828261061d565b919050565b6000604051905090565b600067ffffffffffffffff8211156105585761055761064e565b5b602082029050602081019050919050565b600067ffffffffffffffff8211156105845761058361064e565b5b61058d82610696565b9050602081019050919050565b60006105a5826105e4565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b61062682610696565b810181811067ffffffffffffffff821117156106455761064461064e565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b6106b08161059a565b81146106bb57600080fd5b50565b6106c7816105b8565b81146106d257600080fd5b50565b6106de81610604565b81146106e957600080fd5b5056fea26469706673582212205c38a71feef050dfade62137089f79984c2ea208278ab8984649ed46135259f464736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x722 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0xBC197C81 EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0xA6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x497 JUMP JUMPDEST PUSH2 0xD6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D SWAP2 SWAP1 PUSH2 0x4E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x90 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x331 JUMP JUMPDEST PUSH2 0x150 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9D SWAP2 SWAP1 PUSH2 0x4FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBB SWAP2 SWAP1 PUSH2 0x400 JUMP JUMPDEST PUSH2 0x165 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCD SWAP2 SWAP1 PUSH2 0x4FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x4E2312E000000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x149 JUMPI POP PUSH2 0x148 DUP3 PUSH2 0x17A JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F7 PUSH2 0x1F2 DUP5 PUSH2 0x53D JUMP JUMPDEST PUSH2 0x518 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x21A JUMPI PUSH2 0x219 PUSH2 0x682 JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x24A JUMPI DUP2 PUSH2 0x230 DUP9 DUP3 PUSH2 0x31C JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x21D JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x267 PUSH2 0x262 DUP5 PUSH2 0x569 JUMP JUMPDEST PUSH2 0x518 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x283 JUMPI PUSH2 0x282 PUSH2 0x687 JUMP JUMPDEST JUMPDEST PUSH2 0x28E DUP5 DUP3 DUP6 PUSH2 0x60E JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2A5 DUP2 PUSH2 0x6A7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2C0 JUMPI PUSH2 0x2BF PUSH2 0x67D JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2D0 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1E4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2E8 DUP2 PUSH2 0x6BE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x303 JUMPI PUSH2 0x302 PUSH2 0x67D JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x313 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x254 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x32B DUP2 PUSH2 0x6D5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x34D JUMPI PUSH2 0x34C PUSH2 0x691 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x35B DUP9 DUP3 DUP10 ADD PUSH2 0x296 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x36C DUP9 DUP3 DUP10 ADD PUSH2 0x296 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x38D JUMPI PUSH2 0x38C PUSH2 0x68C JUMP JUMPDEST JUMPDEST PUSH2 0x399 DUP9 DUP3 DUP10 ADD PUSH2 0x2AB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3BA JUMPI PUSH2 0x3B9 PUSH2 0x68C JUMP JUMPDEST JUMPDEST PUSH2 0x3C6 DUP9 DUP3 DUP10 ADD PUSH2 0x2AB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3E7 JUMPI PUSH2 0x3E6 PUSH2 0x68C JUMP JUMPDEST JUMPDEST PUSH2 0x3F3 DUP9 DUP3 DUP10 ADD PUSH2 0x2EE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x41C JUMPI PUSH2 0x41B PUSH2 0x691 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x42A DUP9 DUP3 DUP10 ADD PUSH2 0x296 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x43B DUP9 DUP3 DUP10 ADD PUSH2 0x296 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x44C DUP9 DUP3 DUP10 ADD PUSH2 0x31C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x45D DUP9 DUP3 DUP10 ADD PUSH2 0x31C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x47E JUMPI PUSH2 0x47D PUSH2 0x68C JUMP JUMPDEST JUMPDEST PUSH2 0x48A DUP9 DUP3 DUP10 ADD PUSH2 0x2EE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4AD JUMPI PUSH2 0x4AC PUSH2 0x691 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4BB DUP5 DUP3 DUP6 ADD PUSH2 0x2D9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4CD DUP2 PUSH2 0x5AC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x4DC DUP2 PUSH2 0x5B8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4F7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4C4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x512 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4D3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x522 PUSH2 0x533 JUMP JUMPDEST SWAP1 POP PUSH2 0x52E DUP3 DUP3 PUSH2 0x61D JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x558 JUMPI PUSH2 0x557 PUSH2 0x64E JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x584 JUMPI PUSH2 0x583 PUSH2 0x64E JUMP JUMPDEST JUMPDEST PUSH2 0x58D DUP3 PUSH2 0x696 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5A5 DUP3 PUSH2 0x5E4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH2 0x626 DUP3 PUSH2 0x696 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x645 JUMPI PUSH2 0x644 PUSH2 0x64E JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6B0 DUP2 PUSH2 0x59A JUMP JUMPDEST DUP2 EQ PUSH2 0x6BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x6C7 DUP2 PUSH2 0x5B8 JUMP JUMPDEST DUP2 EQ PUSH2 0x6D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x6DE DUP2 PUSH2 0x604 JUMP JUMPDEST DUP2 EQ PUSH2 0x6E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5C CODESIZE 0xA7 0x1F 0xEE CREATE POP 0xDF 0xAD 0xE6 0x21 CALLDATACOPY ADDMOD SWAP16 PUSH26 0x984C2EA208278AB8984649ED46135259F464736F6C6343000807 STOP CALLER ",
							"sourceMap": "451:522:2:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@onERC1155BatchReceived_212": {
									"entryPoint": 336,
									"id": 212,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"@onERC1155Received_189": {
									"entryPoint": 357,
									"id": 189,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"@supportsInterface_1050": {
									"entryPoint": 378,
									"id": 1050,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_246": {
									"entryPoint": 214,
									"id": 246,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 484,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 596,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 662,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 683,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 729,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 750,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 796,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr": {
									"entryPoint": 817,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr": {
									"entryPoint": 1024,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 1175,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 1220,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes4_to_t_bytes4_fromStack": {
									"entryPoint": 1235,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 1250,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
									"entryPoint": 1277,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 1304,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 1331,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 1341,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 1385,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1434,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 1452,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 1464,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1508,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1540,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory": {
									"entryPoint": 1550,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"finalize_allocation": {
									"entryPoint": 1565,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1614,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 1661,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 1666,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 1671,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 1676,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1681,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 1686,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 1703,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 1726,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1749,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:9119:15",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "126:620:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "136:90:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "218:6:15"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "161:56:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "161:64:15"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "145:15:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "145:81:15"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "136:5:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "235:16:15",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "246:5:15"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "239:3:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "268:5:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "275:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "261:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "261:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "261:21:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "291:23:15",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "302:5:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "309:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "298:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "298:16:15"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "291:3:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "324:17:15",
															"value": {
																"name": "offset",
																"nodeType": "YulIdentifier",
																"src": "335:6:15"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "328:3:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "390:103:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "404:77:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "404:79:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "404:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "360:3:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "369:6:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "377:4:15",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "365:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "365:17:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "356:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "356:27:15"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "385:3:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "353:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "353:36:15"
															},
															"nodeType": "YulIf",
															"src": "350:143:15"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "562:178:15",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "577:21:15",
																		"value": {
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "595:3:15"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "581:10:15",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "619:3:15"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "645:10:15"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "657:3:15"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_uint256",
																						"nodeType": "YulIdentifier",
																						"src": "624:20:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "624:37:15"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "612:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "612:50:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "612:50:15"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "675:21:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "686:3:15"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "691:4:15",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "682:3:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "682:14:15"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "675:3:15"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "709:21:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "720:3:15"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "725:4:15",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "716:3:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "716:14:15"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "709:3:15"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "524:1:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "527:6:15"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "521:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "521:13:15"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "535:18:15",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "537:14:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "546:1:15"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "549:1:15",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "542:3:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "542:9:15"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "537:1:15"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "506:14:15",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "508:10:15",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "517:1:15",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "512:1:15",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "502:238:15"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "96:6:15",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "104:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "112:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "120:5:15",
														"type": ""
													}
												],
												"src": "24:722:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "835:327:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "845:74:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "911:6:15"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "870:40:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "870:48:15"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "854:15:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "854:65:15"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "845:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "935:5:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "942:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "928:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "928:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "928:21:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "958:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "973:5:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "980:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "969:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "969:16:15"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "962:3:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1023:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "1025:77:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1025:79:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1025:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "1004:3:15"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1009:6:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1000:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1000:16:15"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1018:3:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "997:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "997:25:15"
															},
															"nodeType": "YulIf",
															"src": "994:112:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "1139:3:15"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "1144:3:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1149:6:15"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1115:23:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1115:41:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1115:41:15"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "808:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "813:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "821:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "829:5:15",
														"type": ""
													}
												],
												"src": "752:410:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1220:87:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1230:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1252:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1239:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1239:20:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1230:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1295:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1268:26:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1268:33:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1268:33:15"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1198:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1206:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1214:5:15",
														"type": ""
													}
												],
												"src": "1168:139:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1407:293:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1456:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "1458:77:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1458:79:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1458:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1435:6:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1443:4:15",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1431:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1431:17:15"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "1450:3:15"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1427:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1427:27:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1420:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1420:35:15"
															},
															"nodeType": "YulIf",
															"src": "1417:122:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1548:34:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1575:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1562:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1562:20:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1552:6:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1591:103:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1667:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1675:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1663:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1663:17:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1682:6:15"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1690:3:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "1600:62:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1600:94:15"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1591:5:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1385:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1393:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1401:5:15",
														"type": ""
													}
												],
												"src": "1330:370:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1757:86:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1767:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1789:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1776:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1776:20:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1767:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1831:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "1805:25:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1805:32:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1805:32:15"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1735:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1743:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1751:5:15",
														"type": ""
													}
												],
												"src": "1706:137:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1923:277:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1972:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "1974:77:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1974:79:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1974:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1951:6:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1959:4:15",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1947:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1947:17:15"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "1966:3:15"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1943:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1943:27:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1936:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1936:35:15"
															},
															"nodeType": "YulIf",
															"src": "1933:122:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2064:34:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2091:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2078:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2078:20:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2068:6:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2107:87:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2167:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2175:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2163:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2163:17:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2182:6:15"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2190:3:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2116:46:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2116:78:15"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2107:5:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1901:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1909:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1917:5:15",
														"type": ""
													}
												],
												"src": "1862:338:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2258:87:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2268:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2290:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2277:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2277:20:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2268:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2333:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2306:26:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2306:33:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2306:33:15"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2236:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2244:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2252:5:15",
														"type": ""
													}
												],
												"src": "2206:139:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2544:1316:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2591:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2593:77:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2593:79:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2593:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2565:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2574:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2561:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2561:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2586:3:15",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2557:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2557:33:15"
															},
															"nodeType": "YulIf",
															"src": "2554:120:15"
														},
														{
															"nodeType": "YulBlock",
															"src": "2684:117:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2699:15:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2713:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2703:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2728:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2763:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2774:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2759:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2759:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2783:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2738:20:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2738:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2728:6:15"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2811:118:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2826:16:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2840:2:15",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2830:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2856:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2891:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2902:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2887:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2887:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2911:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2866:20:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2866:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2856:6:15"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2939:303:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2954:46:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2985:9:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2996:2:15",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2981:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2981:18:15"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "2968:12:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2968:32:15"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2958:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3047:83:15",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3049:77:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3049:79:15"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3049:79:15"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3019:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3027:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3016:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3016:30:15"
																	},
																	"nodeType": "YulIf",
																	"src": "3013:117:15"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3144:88:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3204:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3215:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3200:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3200:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3224:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "3154:45:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3154:78:15"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "3144:6:15"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3252:303:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3267:46:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3298:9:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3309:2:15",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3294:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3294:18:15"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "3281:12:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3281:32:15"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3271:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3360:83:15",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3362:77:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3362:79:15"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3362:79:15"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3332:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3340:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3329:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3329:30:15"
																	},
																	"nodeType": "YulIf",
																	"src": "3326:117:15"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3457:88:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3517:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3528:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3513:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3513:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3537:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "3467:45:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3467:78:15"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "3457:6:15"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3565:288:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3580:47:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3611:9:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3622:3:15",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3607:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3607:19:15"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "3594:12:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3594:33:15"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3584:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3674:83:15",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3676:77:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3676:79:15"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3676:79:15"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3646:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3654:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3643:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3643:30:15"
																	},
																	"nodeType": "YulIf",
																	"src": "3640:117:15"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3771:72:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3815:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3826:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3811:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3811:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3835:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "3781:29:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3781:62:15"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "3771:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2482:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2493:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2505:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2513:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2521:6:15",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "2529:6:15",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "2537:6:15",
														"type": ""
													}
												],
												"src": "2351:1509:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4009:946:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4056:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4058:77:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4058:79:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4058:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4030:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4039:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4026:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4026:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4051:3:15",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4022:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4022:33:15"
															},
															"nodeType": "YulIf",
															"src": "4019:120:15"
														},
														{
															"nodeType": "YulBlock",
															"src": "4149:117:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4164:15:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4178:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4168:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4193:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4228:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4239:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4224:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4224:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4248:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4203:20:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4203:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4193:6:15"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4276:118:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4291:16:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4305:2:15",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4295:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4321:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4356:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4367:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4352:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4352:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4376:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4331:20:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4331:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4321:6:15"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4404:118:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4419:16:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4433:2:15",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4423:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4449:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4484:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4495:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4480:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4480:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4504:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4459:20:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4459:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "4449:6:15"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4532:118:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4547:16:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4561:2:15",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4551:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4577:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4612:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4623:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4608:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4608:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4632:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4587:20:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4587:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "4577:6:15"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4660:288:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4675:47:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4706:9:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4717:3:15",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4702:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4702:19:15"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "4689:12:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4689:33:15"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4679:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "4769:83:15",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "4771:77:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4771:79:15"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4771:79:15"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4741:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4749:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4738:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4738:30:15"
																	},
																	"nodeType": "YulIf",
																	"src": "4735:117:15"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4866:72:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4910:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4921:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4906:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4906:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4930:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "4876:29:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4876:62:15"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "4866:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3947:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3958:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3970:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3978:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3986:6:15",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3994:6:15",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "4002:6:15",
														"type": ""
													}
												],
												"src": "3866:1089:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5026:262:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5072:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5074:77:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5074:79:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5074:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5047:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5056:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5043:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5043:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5068:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5039:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5039:32:15"
															},
															"nodeType": "YulIf",
															"src": "5036:119:15"
														},
														{
															"nodeType": "YulBlock",
															"src": "5165:116:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5180:15:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5194:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5184:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5209:62:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5243:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5254:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5239:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5239:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5263:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "5219:19:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5219:52:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5209:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4996:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5007:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5019:6:15",
														"type": ""
													}
												],
												"src": "4961:327:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5353:50:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5370:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5390:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "5375:14:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5375:21:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5363:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5363:34:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5363:34:15"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5341:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5348:3:15",
														"type": ""
													}
												],
												"src": "5294:109:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5472:52:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5489:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5511:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "5494:16:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5494:23:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5482:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5482:36:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5482:36:15"
														}
													]
												},
												"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5460:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5467:3:15",
														"type": ""
													}
												],
												"src": "5409:115:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5622:118:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5632:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5644:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5655:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5640:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5640:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5632:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5706:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5719:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5730:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5715:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5715:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5668:37:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5668:65:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5668:65:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5594:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5606:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5617:4:15",
														"type": ""
													}
												],
												"src": "5530:210:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5842:122:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5852:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5864:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5875:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5860:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5860:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5852:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5930:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5943:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5954:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5939:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5939:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5888:41:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5888:69:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5888:69:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5814:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5826:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5837:4:15",
														"type": ""
													}
												],
												"src": "5746:218:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6011:88:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6021:30:15",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "6031:18:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6031:20:15"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "6021:6:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "6080:6:15"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "6088:4:15"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "6060:19:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6060:33:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6060:33:15"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "5995:4:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6004:6:15",
														"type": ""
													}
												],
												"src": "5970:129:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6145:35:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6155:19:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6171:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6165:5:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6165:9:15"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "6155:6:15"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6138:6:15",
														"type": ""
													}
												],
												"src": "6105:75:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6268:229:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6373:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "6375:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6375:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6375:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6345:6:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6353:18:15",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6342:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6342:30:15"
															},
															"nodeType": "YulIf",
															"src": "6339:56:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6405:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6417:6:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6425:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "6413:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6413:17:15"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "6405:4:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6467:23:15",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "6479:4:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6485:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6475:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6475:15:15"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "6467:4:15"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6252:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "6263:4:15",
														"type": ""
													}
												],
												"src": "6186:311:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6569:241:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6674:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "6676:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6676:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6676:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6646:6:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6654:18:15",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6643:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6643:30:15"
															},
															"nodeType": "YulIf",
															"src": "6640:56:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6706:37:15",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6736:6:15"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "6714:21:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6714:29:15"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "6706:4:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6780:23:15",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "6792:4:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6798:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6788:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6788:15:15"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "6780:4:15"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6553:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "6564:4:15",
														"type": ""
													}
												],
												"src": "6503:307:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6861:51:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6871:35:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6900:5:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "6882:17:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6882:24:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "6871:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6843:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "6853:7:15",
														"type": ""
													}
												],
												"src": "6816:96:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6960:48:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6970:32:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6995:5:15"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "6988:6:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6988:13:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6981:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6981:21:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "6970:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6942:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "6952:7:15",
														"type": ""
													}
												],
												"src": "6918:90:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7058:105:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7068:89:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7083:5:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7090:66:15",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "7079:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7079:78:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "7068:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7040:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "7050:7:15",
														"type": ""
													}
												],
												"src": "7014:149:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7214:81:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7224:65:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7239:5:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7246:42:15",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "7235:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7235:54:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "7224:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7196:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "7206:7:15",
														"type": ""
													}
												],
												"src": "7169:126:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7346:32:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7356:16:15",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "7367:5:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "7356:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7328:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "7338:7:15",
														"type": ""
													}
												],
												"src": "7301:77:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7435:103:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "7458:3:15"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "7463:3:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7468:6:15"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "7445:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7445:30:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7445:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "7516:3:15"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "7521:6:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7512:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7512:16:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7530:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7505:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7505:27:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7505:27:15"
														}
													]
												},
												"name": "copy_calldata_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "7417:3:15",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "7422:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7427:6:15",
														"type": ""
													}
												],
												"src": "7384:154:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7587:238:15",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7597:58:15",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "7619:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "7649:4:15"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "7627:21:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7627:27:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7615:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7615:40:15"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "7601:10:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7766:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7768:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7768:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7768:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "7709:10:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7721:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "7706:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7706:34:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "7745:10:15"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7757:6:15"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "7742:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7742:22:15"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7703:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7703:62:15"
															},
															"nodeType": "YulIf",
															"src": "7700:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7804:2:15",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "7808:10:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7797:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7797:22:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7797:22:15"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7573:6:15",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7581:4:15",
														"type": ""
													}
												],
												"src": "7544:281:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7859:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7876:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7879:77:15",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7869:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7869:88:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7869:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7973:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7976:4:15",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7966:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7966:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7966:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7997:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8000:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7990:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7990:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7990:15:15"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "7831:180:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8106:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8123:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8126:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8116:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8116:12:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8116:12:15"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "8017:117:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8229:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8246:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8249:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8239:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8239:12:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8239:12:15"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nodeType": "YulFunctionDefinition",
												"src": "8140:117:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8352:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8369:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8372:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8362:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8362:12:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8362:12:15"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "8263:117:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8475:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8492:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8495:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8485:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8485:12:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8485:12:15"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "8386:117:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8598:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8615:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8618:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8608:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8608:12:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8608:12:15"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "8509:117:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8680:54:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8690:38:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8708:5:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8715:2:15",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8704:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8704:14:15"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8724:2:15",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "8720:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8720:7:15"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "8700:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8700:28:15"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "8690:6:15"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8663:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "8673:6:15",
														"type": ""
													}
												],
												"src": "8632:102:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8783:79:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8840:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8849:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8852:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8842:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8842:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8842:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8806:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "8831:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "8813:17:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8813:24:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "8803:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8803:35:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8796:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8796:43:15"
															},
															"nodeType": "YulIf",
															"src": "8793:63:15"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8776:5:15",
														"type": ""
													}
												],
												"src": "8740:122:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8910:78:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8966:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8975:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8978:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8968:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8968:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8968:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8933:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "8957:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nodeType": "YulIdentifier",
																					"src": "8940:16:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8940:23:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "8930:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8930:34:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8923:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8923:42:15"
															},
															"nodeType": "YulIf",
															"src": "8920:62:15"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8903:5:15",
														"type": ""
													}
												],
												"src": "8868:120:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9037:79:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9094:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9103:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9106:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9096:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9096:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9096:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9060:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "9085:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "9067:17:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9067:24:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "9057:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9057:35:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9050:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9050:43:15"
															},
															"nodeType": "YulIf",
															"src": "9047:63:15"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9030:5:15",
														"type": ""
													}
												],
												"src": "8994:122:15"
											}
										]
									},
									"contents": "{\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let src := offset\n        if gt(add(src, mul(length, 0x20)), end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n            src := add(src, 0x20)\n        }\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes4(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 15,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c806301ffc9a714610046578063bc197c8114610076578063f23a6e61146100a6575b600080fd5b610060600480360381019061005b9190610497565b6100d6565b60405161006d91906104e2565b60405180910390f35b610090600480360381019061008b9190610331565b610150565b60405161009d91906104fd565b60405180910390f35b6100c060048036038101906100bb9190610400565b610165565b6040516100cd91906104fd565b60405180910390f35b60007f4e2312e0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061014957506101488261017a565b5b9050919050565b600063bc197c8160e01b905095945050505050565b600063f23a6e6160e01b905095945050505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60006101f76101f28461053d565b610518565b9050808382526020820190508285602086028201111561021a57610219610682565b5b60005b8581101561024a5781610230888261031c565b84526020840193506020830192505060018101905061021d565b5050509392505050565b600061026761026284610569565b610518565b90508281526020810184848401111561028357610282610687565b5b61028e84828561060e565b509392505050565b6000813590506102a5816106a7565b92915050565b600082601f8301126102c0576102bf61067d565b5b81356102d08482602086016101e4565b91505092915050565b6000813590506102e8816106be565b92915050565b600082601f8301126103035761030261067d565b5b8135610313848260208601610254565b91505092915050565b60008135905061032b816106d5565b92915050565b600080600080600060a0868803121561034d5761034c610691565b5b600061035b88828901610296565b955050602061036c88828901610296565b945050604086013567ffffffffffffffff81111561038d5761038c61068c565b5b610399888289016102ab565b935050606086013567ffffffffffffffff8111156103ba576103b961068c565b5b6103c6888289016102ab565b925050608086013567ffffffffffffffff8111156103e7576103e661068c565b5b6103f3888289016102ee565b9150509295509295909350565b600080600080600060a0868803121561041c5761041b610691565b5b600061042a88828901610296565b955050602061043b88828901610296565b945050604061044c8882890161031c565b935050606061045d8882890161031c565b925050608086013567ffffffffffffffff81111561047e5761047d61068c565b5b61048a888289016102ee565b9150509295509295909350565b6000602082840312156104ad576104ac610691565b5b60006104bb848285016102d9565b91505092915050565b6104cd816105ac565b82525050565b6104dc816105b8565b82525050565b60006020820190506104f760008301846104c4565b92915050565b600060208201905061051260008301846104d3565b92915050565b6000610522610533565b905061052e828261061d565b919050565b6000604051905090565b600067ffffffffffffffff8211156105585761055761064e565b5b602082029050602081019050919050565b600067ffffffffffffffff8211156105845761058361064e565b5b61058d82610696565b9050602081019050919050565b60006105a5826105e4565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b61062682610696565b810181811067ffffffffffffffff821117156106455761064461064e565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b6106b08161059a565b81146106bb57600080fd5b50565b6106c7816105b8565b81146106d257600080fd5b50565b6106de81610604565b81146106e957600080fd5b5056fea26469706673582212205c38a71feef050dfade62137089f79984c2ea208278ab8984649ed46135259f464736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0xBC197C81 EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0xA6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x497 JUMP JUMPDEST PUSH2 0xD6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D SWAP2 SWAP1 PUSH2 0x4E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x90 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x331 JUMP JUMPDEST PUSH2 0x150 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9D SWAP2 SWAP1 PUSH2 0x4FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBB SWAP2 SWAP1 PUSH2 0x400 JUMP JUMPDEST PUSH2 0x165 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCD SWAP2 SWAP1 PUSH2 0x4FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x4E2312E000000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x149 JUMPI POP PUSH2 0x148 DUP3 PUSH2 0x17A JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F7 PUSH2 0x1F2 DUP5 PUSH2 0x53D JUMP JUMPDEST PUSH2 0x518 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x21A JUMPI PUSH2 0x219 PUSH2 0x682 JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x24A JUMPI DUP2 PUSH2 0x230 DUP9 DUP3 PUSH2 0x31C JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x21D JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x267 PUSH2 0x262 DUP5 PUSH2 0x569 JUMP JUMPDEST PUSH2 0x518 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x283 JUMPI PUSH2 0x282 PUSH2 0x687 JUMP JUMPDEST JUMPDEST PUSH2 0x28E DUP5 DUP3 DUP6 PUSH2 0x60E JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2A5 DUP2 PUSH2 0x6A7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2C0 JUMPI PUSH2 0x2BF PUSH2 0x67D JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2D0 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1E4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2E8 DUP2 PUSH2 0x6BE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x303 JUMPI PUSH2 0x302 PUSH2 0x67D JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x313 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x254 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x32B DUP2 PUSH2 0x6D5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x34D JUMPI PUSH2 0x34C PUSH2 0x691 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x35B DUP9 DUP3 DUP10 ADD PUSH2 0x296 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x36C DUP9 DUP3 DUP10 ADD PUSH2 0x296 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x38D JUMPI PUSH2 0x38C PUSH2 0x68C JUMP JUMPDEST JUMPDEST PUSH2 0x399 DUP9 DUP3 DUP10 ADD PUSH2 0x2AB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3BA JUMPI PUSH2 0x3B9 PUSH2 0x68C JUMP JUMPDEST JUMPDEST PUSH2 0x3C6 DUP9 DUP3 DUP10 ADD PUSH2 0x2AB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3E7 JUMPI PUSH2 0x3E6 PUSH2 0x68C JUMP JUMPDEST JUMPDEST PUSH2 0x3F3 DUP9 DUP3 DUP10 ADD PUSH2 0x2EE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x41C JUMPI PUSH2 0x41B PUSH2 0x691 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x42A DUP9 DUP3 DUP10 ADD PUSH2 0x296 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x43B DUP9 DUP3 DUP10 ADD PUSH2 0x296 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x44C DUP9 DUP3 DUP10 ADD PUSH2 0x31C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x45D DUP9 DUP3 DUP10 ADD PUSH2 0x31C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x47E JUMPI PUSH2 0x47D PUSH2 0x68C JUMP JUMPDEST JUMPDEST PUSH2 0x48A DUP9 DUP3 DUP10 ADD PUSH2 0x2EE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4AD JUMPI PUSH2 0x4AC PUSH2 0x691 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4BB DUP5 DUP3 DUP6 ADD PUSH2 0x2D9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4CD DUP2 PUSH2 0x5AC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x4DC DUP2 PUSH2 0x5B8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4F7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4C4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x512 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4D3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x522 PUSH2 0x533 JUMP JUMPDEST SWAP1 POP PUSH2 0x52E DUP3 DUP3 PUSH2 0x61D JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x558 JUMPI PUSH2 0x557 PUSH2 0x64E JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x584 JUMPI PUSH2 0x583 PUSH2 0x64E JUMP JUMPDEST JUMPDEST PUSH2 0x58D DUP3 PUSH2 0x696 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5A5 DUP3 PUSH2 0x5E4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH2 0x626 DUP3 PUSH2 0x696 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x645 JUMPI PUSH2 0x644 PUSH2 0x64E JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6B0 DUP2 PUSH2 0x59A JUMP JUMPDEST DUP2 EQ PUSH2 0x6BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x6C7 DUP2 PUSH2 0x5B8 JUMP JUMPDEST DUP2 EQ PUSH2 0x6D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x6DE DUP2 PUSH2 0x604 JUMP JUMPDEST DUP2 EQ PUSH2 0x6E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5C CODESIZE 0xA7 0x1F 0xEE CREATE POP 0xDF 0xAD 0xE6 0x21 CALLDATACOPY ADDMOD SWAP16 PUSH26 0x984C2EA208278AB8984649ED46135259F464736F6C6343000807 STOP CALLER ",
							"sourceMap": "451:522:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;387:221:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;724:247:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;499:219;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;387:221:3;489:4;527:34;512:49;;;:11;:49;;;;:89;;;;565:36;589:11;565:23;:36::i;:::-;512:89;505:96;;387:221;;;:::o;724:247:2:-;903:6;928:36;;;921:43;;724:247;;;;;;;:::o;499:219::-;655:6;680:31;;;673:38;;499:219;;;;;;;:::o;829:155:11:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;24:722:15:-;120:5;145:81;161:64;218:6;161:64;:::i;:::-;145:81;:::i;:::-;136:90;;246:5;275:6;268:5;261:21;309:4;302:5;298:16;291:23;;335:6;385:3;377:4;369:6;365:17;360:3;356:27;353:36;350:143;;;404:79;;:::i;:::-;350:143;517:1;502:238;527:6;524:1;521:13;502:238;;;595:3;624:37;657:3;645:10;624:37;:::i;:::-;619:3;612:50;691:4;686:3;682:14;675:21;;725:4;720:3;716:14;709:21;;562:178;549:1;546;542:9;537:14;;502:238;;;506:14;126:620;;24:722;;;;;:::o;752:410::-;829:5;854:65;870:48;911:6;870:48;:::i;:::-;854:65;:::i;:::-;845:74;;942:6;935:5;928:21;980:4;973:5;969:16;1018:3;1009:6;1004:3;1000:16;997:25;994:112;;;1025:79;;:::i;:::-;994:112;1115:41;1149:6;1144:3;1139;1115:41;:::i;:::-;835:327;752:410;;;;;:::o;1168:139::-;1214:5;1252:6;1239:20;1230:29;;1268:33;1295:5;1268:33;:::i;:::-;1168:139;;;;:::o;1330:370::-;1401:5;1450:3;1443:4;1435:6;1431:17;1427:27;1417:122;;1458:79;;:::i;:::-;1417:122;1575:6;1562:20;1600:94;1690:3;1682:6;1675:4;1667:6;1663:17;1600:94;:::i;:::-;1591:103;;1407:293;1330:370;;;;:::o;1706:137::-;1751:5;1789:6;1776:20;1767:29;;1805:32;1831:5;1805:32;:::i;:::-;1706:137;;;;:::o;1862:338::-;1917:5;1966:3;1959:4;1951:6;1947:17;1943:27;1933:122;;1974:79;;:::i;:::-;1933:122;2091:6;2078:20;2116:78;2190:3;2182:6;2175:4;2167:6;2163:17;2116:78;:::i;:::-;2107:87;;1923:277;1862:338;;;;:::o;2206:139::-;2252:5;2290:6;2277:20;2268:29;;2306:33;2333:5;2306:33;:::i;:::-;2206:139;;;;:::o;2351:1509::-;2505:6;2513;2521;2529;2537;2586:3;2574:9;2565:7;2561:23;2557:33;2554:120;;;2593:79;;:::i;:::-;2554:120;2713:1;2738:53;2783:7;2774:6;2763:9;2759:22;2738:53;:::i;:::-;2728:63;;2684:117;2840:2;2866:53;2911:7;2902:6;2891:9;2887:22;2866:53;:::i;:::-;2856:63;;2811:118;2996:2;2985:9;2981:18;2968:32;3027:18;3019:6;3016:30;3013:117;;;3049:79;;:::i;:::-;3013:117;3154:78;3224:7;3215:6;3204:9;3200:22;3154:78;:::i;:::-;3144:88;;2939:303;3309:2;3298:9;3294:18;3281:32;3340:18;3332:6;3329:30;3326:117;;;3362:79;;:::i;:::-;3326:117;3467:78;3537:7;3528:6;3517:9;3513:22;3467:78;:::i;:::-;3457:88;;3252:303;3622:3;3611:9;3607:19;3594:33;3654:18;3646:6;3643:30;3640:117;;;3676:79;;:::i;:::-;3640:117;3781:62;3835:7;3826:6;3815:9;3811:22;3781:62;:::i;:::-;3771:72;;3565:288;2351:1509;;;;;;;;:::o;3866:1089::-;3970:6;3978;3986;3994;4002;4051:3;4039:9;4030:7;4026:23;4022:33;4019:120;;;4058:79;;:::i;:::-;4019:120;4178:1;4203:53;4248:7;4239:6;4228:9;4224:22;4203:53;:::i;:::-;4193:63;;4149:117;4305:2;4331:53;4376:7;4367:6;4356:9;4352:22;4331:53;:::i;:::-;4321:63;;4276:118;4433:2;4459:53;4504:7;4495:6;4484:9;4480:22;4459:53;:::i;:::-;4449:63;;4404:118;4561:2;4587:53;4632:7;4623:6;4612:9;4608:22;4587:53;:::i;:::-;4577:63;;4532:118;4717:3;4706:9;4702:19;4689:33;4749:18;4741:6;4738:30;4735:117;;;4771:79;;:::i;:::-;4735:117;4876:62;4930:7;4921:6;4910:9;4906:22;4876:62;:::i;:::-;4866:72;;4660:288;3866:1089;;;;;;;;:::o;4961:327::-;5019:6;5068:2;5056:9;5047:7;5043:23;5039:32;5036:119;;;5074:79;;:::i;:::-;5036:119;5194:1;5219:52;5263:7;5254:6;5243:9;5239:22;5219:52;:::i;:::-;5209:62;;5165:116;4961:327;;;;:::o;5294:109::-;5375:21;5390:5;5375:21;:::i;:::-;5370:3;5363:34;5294:109;;:::o;5409:115::-;5494:23;5511:5;5494:23;:::i;:::-;5489:3;5482:36;5409:115;;:::o;5530:210::-;5617:4;5655:2;5644:9;5640:18;5632:26;;5668:65;5730:1;5719:9;5715:17;5706:6;5668:65;:::i;:::-;5530:210;;;;:::o;5746:218::-;5837:4;5875:2;5864:9;5860:18;5852:26;;5888:69;5954:1;5943:9;5939:17;5930:6;5888:69;:::i;:::-;5746:218;;;;:::o;5970:129::-;6004:6;6031:20;;:::i;:::-;6021:30;;6060:33;6088:4;6080:6;6060:33;:::i;:::-;5970:129;;;:::o;6105:75::-;6138:6;6171:2;6165:9;6155:19;;6105:75;:::o;6186:311::-;6263:4;6353:18;6345:6;6342:30;6339:56;;;6375:18;;:::i;:::-;6339:56;6425:4;6417:6;6413:17;6405:25;;6485:4;6479;6475:15;6467:23;;6186:311;;;:::o;6503:307::-;6564:4;6654:18;6646:6;6643:30;6640:56;;;6676:18;;:::i;:::-;6640:56;6714:29;6736:6;6714:29;:::i;:::-;6706:37;;6798:4;6792;6788:15;6780:23;;6503:307;;;:::o;6816:96::-;6853:7;6882:24;6900:5;6882:24;:::i;:::-;6871:35;;6816:96;;;:::o;6918:90::-;6952:7;6995:5;6988:13;6981:21;6970:32;;6918:90;;;:::o;7014:149::-;7050:7;7090:66;7083:5;7079:78;7068:89;;7014:149;;;:::o;7169:126::-;7206:7;7246:42;7239:5;7235:54;7224:65;;7169:126;;;:::o;7301:77::-;7338:7;7367:5;7356:16;;7301:77;;;:::o;7384:154::-;7468:6;7463:3;7458;7445:30;7530:1;7521:6;7516:3;7512:16;7505:27;7384:154;;;:::o;7544:281::-;7627:27;7649:4;7627:27;:::i;:::-;7619:6;7615:40;7757:6;7745:10;7742:22;7721:18;7709:10;7706:34;7703:62;7700:88;;;7768:18;;:::i;:::-;7700:88;7808:10;7804:2;7797:22;7587:238;7544:281;;:::o;7831:180::-;7879:77;7876:1;7869:88;7976:4;7973:1;7966:15;8000:4;7997:1;7990:15;8017:117;8126:1;8123;8116:12;8140:117;8249:1;8246;8239:12;8263:117;8372:1;8369;8362:12;8386:117;8495:1;8492;8485:12;8509:117;8618:1;8615;8608:12;8632:102;8673:6;8724:2;8720:7;8715:2;8708:5;8704:14;8700:28;8690:38;;8632:102;;;:::o;8740:122::-;8813:24;8831:5;8813:24;:::i;:::-;8806:5;8803:35;8793:63;;8852:1;8849;8842:12;8793:63;8740:122;:::o;8868:120::-;8940:23;8957:5;8940:23;:::i;:::-;8933:5;8930:34;8920:62;;8978:1;8975;8968:12;8920:62;8868:120;:::o;8994:122::-;9067:24;9085:5;9067:24;:::i;:::-;9060:5;9057:35;9047:63;;9106:1;9103;9096:12;9047:63;8994:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "365200",
								"executionCost": "405",
								"totalCost": "365605"
							},
							"external": {
								"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "infinite",
								"onERC1155Received(address,address,uint256,uint256,bytes)": "infinite",
								"supportsInterface(bytes4)": "705"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 451,
									"end": 973,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 451,
									"end": 973,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 451,
									"end": 973,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 451,
									"end": 973,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 451,
									"end": 973,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 451,
									"end": 973,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 451,
									"end": 973,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 451,
									"end": 973,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 451,
									"end": 973,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 451,
									"end": 973,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 451,
									"end": 973,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 451,
									"end": 973,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 451,
									"end": 973,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 451,
									"end": 973,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 451,
									"end": 973,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 451,
									"end": 973,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 451,
									"end": 973,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 451,
									"end": 973,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 451,
									"end": 973,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 451,
									"end": 973,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 451,
									"end": 973,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205c38a71feef050dfade62137089f79984c2ea208278ab8984649ed46135259f464736f6c63430008070033",
									".code": [
										{
											"begin": 451,
											"end": 973,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 451,
											"end": 973,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 451,
											"end": 973,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 451,
											"end": 973,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 451,
											"end": 973,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 451,
											"end": 973,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 451,
											"end": 973,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 451,
											"end": 973,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 451,
											"end": 973,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 451,
											"end": 973,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 451,
											"end": 973,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 451,
											"end": 973,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 451,
											"end": 973,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 451,
											"end": 973,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 451,
											"end": 973,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 451,
											"end": 973,
											"name": "PUSH",
											"source": 2,
											"value": "1FFC9A7"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 451,
											"end": 973,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 451,
											"end": 973,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 451,
											"end": 973,
											"name": "PUSH",
											"source": 2,
											"value": "BC197C81"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 451,
											"end": 973,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 451,
											"end": 973,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 451,
											"end": 973,
											"name": "PUSH",
											"source": 2,
											"value": "F23A6E61"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 451,
											"end": 973,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 451,
											"end": 973,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 451,
											"end": 973,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 451,
											"end": 973,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 387,
											"end": 608,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 724,
											"end": 971,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 387,
											"end": 608,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 489,
											"end": 493,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 527,
											"end": 561,
											"name": "PUSH",
											"source": 3,
											"value": "4E2312E000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 512,
											"end": 561,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 512,
											"end": 561,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 512,
											"end": 561,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 512,
											"end": 523,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 512,
											"end": 561,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 512,
											"end": 561,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 512,
											"end": 561,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 512,
											"end": 561,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 512,
											"end": 601,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 512,
											"end": 601,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 512,
											"end": 601,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 512,
											"end": 601,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 565,
											"end": 601,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 589,
											"end": 600,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 565,
											"end": 588,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 565,
											"end": 601,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 565,
											"end": 601,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 565,
											"end": 601,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 512,
											"end": 601,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 512,
											"end": 601,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 505,
											"end": 601,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 505,
											"end": 601,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 903,
											"end": 909,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 928,
											"end": 964,
											"name": "PUSH",
											"source": 2,
											"value": "BC197C81"
										},
										{
											"begin": 928,
											"end": 964,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 928,
											"end": 964,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 921,
											"end": 964,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 921,
											"end": 964,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 655,
											"end": 661,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 711,
											"name": "PUSH",
											"source": 2,
											"value": "F23A6E61"
										},
										{
											"begin": 680,
											"end": 711,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 680,
											"end": 711,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 673,
											"end": 711,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 673,
											"end": 711,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "tag",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 914,
											"end": 918,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 952,
											"end": 977,
											"name": "PUSH",
											"source": 11,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 937,
											"end": 948,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 937,
											"end": 977,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 937,
											"end": 977,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 930,
											"end": 977,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 930,
											"end": 977,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 829,
											"end": 984,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 829,
											"end": 984,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 24,
											"end": 746,
											"name": "tag",
											"source": 15,
											"value": "31"
										},
										{
											"begin": 24,
											"end": 746,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 120,
											"end": 125,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 145,
											"end": 226,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "33"
										},
										{
											"begin": 161,
											"end": 225,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "34"
										},
										{
											"begin": 218,
											"end": 224,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 161,
											"end": 225,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "35"
										},
										{
											"begin": 161,
											"end": 225,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 161,
											"end": 225,
											"name": "tag",
											"source": 15,
											"value": "34"
										},
										{
											"begin": 161,
											"end": 225,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 145,
											"end": 226,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "36"
										},
										{
											"begin": 145,
											"end": 226,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 145,
											"end": 226,
											"name": "tag",
											"source": 15,
											"value": "33"
										},
										{
											"begin": 145,
											"end": 226,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 136,
											"end": 226,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 136,
											"end": 226,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 246,
											"end": 251,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 275,
											"end": 281,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 268,
											"end": 273,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 261,
											"end": 282,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 309,
											"end": 313,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 302,
											"end": 307,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 298,
											"end": 314,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 291,
											"end": 314,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 291,
											"end": 314,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 335,
											"end": 341,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 385,
											"end": 388,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 377,
											"end": 381,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 369,
											"end": 375,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 365,
											"end": 382,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 360,
											"end": 363,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 356,
											"end": 383,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 353,
											"end": 389,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 350,
											"end": 493,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 350,
											"end": 493,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "37"
										},
										{
											"begin": 350,
											"end": 493,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 404,
											"end": 483,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "38"
										},
										{
											"begin": 404,
											"end": 483,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "39"
										},
										{
											"begin": 404,
											"end": 483,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 404,
											"end": 483,
											"name": "tag",
											"source": 15,
											"value": "38"
										},
										{
											"begin": 404,
											"end": 483,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 350,
											"end": 493,
											"name": "tag",
											"source": 15,
											"value": "37"
										},
										{
											"begin": 350,
											"end": 493,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 517,
											"end": 518,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 502,
											"end": 740,
											"name": "tag",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 502,
											"end": 740,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 527,
											"end": 533,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 524,
											"end": 525,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 521,
											"end": 534,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 502,
											"end": 740,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 502,
											"end": 740,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "42"
										},
										{
											"begin": 502,
											"end": 740,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 595,
											"end": 598,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 624,
											"end": 661,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "43"
										},
										{
											"begin": 657,
											"end": 660,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 645,
											"end": 655,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 624,
											"end": 661,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 624,
											"end": 661,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 624,
											"end": 661,
											"name": "tag",
											"source": 15,
											"value": "43"
										},
										{
											"begin": 624,
											"end": 661,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 619,
											"end": 622,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 612,
											"end": 662,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 691,
											"end": 695,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 686,
											"end": 689,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 682,
											"end": 696,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 675,
											"end": 696,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 675,
											"end": 696,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 725,
											"end": 729,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 720,
											"end": 723,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 716,
											"end": 730,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 709,
											"end": 730,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 709,
											"end": 730,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 562,
											"end": 740,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 549,
											"end": 550,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 546,
											"end": 547,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 542,
											"end": 551,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 537,
											"end": 551,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 537,
											"end": 551,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 502,
											"end": 740,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 502,
											"end": 740,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 502,
											"end": 740,
											"name": "tag",
											"source": 15,
											"value": "42"
										},
										{
											"begin": 502,
											"end": 740,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 506,
											"end": 520,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 126,
											"end": 746,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 126,
											"end": 746,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 24,
											"end": 746,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 24,
											"end": 746,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 24,
											"end": 746,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 24,
											"end": 746,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 24,
											"end": 746,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 24,
											"end": 746,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 752,
											"end": 1162,
											"name": "tag",
											"source": 15,
											"value": "45"
										},
										{
											"begin": 752,
											"end": 1162,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 829,
											"end": 834,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 854,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "47"
										},
										{
											"begin": 870,
											"end": 918,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "48"
										},
										{
											"begin": 911,
											"end": 917,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 870,
											"end": 918,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "49"
										},
										{
											"begin": 870,
											"end": 918,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 870,
											"end": 918,
											"name": "tag",
											"source": 15,
											"value": "48"
										},
										{
											"begin": 870,
											"end": 918,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 854,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "36"
										},
										{
											"begin": 854,
											"end": 919,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 854,
											"end": 919,
											"name": "tag",
											"source": 15,
											"value": "47"
										},
										{
											"begin": 854,
											"end": 919,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 845,
											"end": 919,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 845,
											"end": 919,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 942,
											"end": 948,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 935,
											"end": 940,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 928,
											"end": 949,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 980,
											"end": 984,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 973,
											"end": 978,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 969,
											"end": 985,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1018,
											"end": 1021,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1009,
											"end": 1015,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1004,
											"end": 1007,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1000,
											"end": 1016,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 997,
											"end": 1022,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 994,
											"end": 1106,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 994,
											"end": 1106,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "50"
										},
										{
											"begin": 994,
											"end": 1106,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1025,
											"end": 1104,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "51"
										},
										{
											"begin": 1025,
											"end": 1104,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "52"
										},
										{
											"begin": 1025,
											"end": 1104,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 1025,
											"end": 1104,
											"name": "tag",
											"source": 15,
											"value": "51"
										},
										{
											"begin": 1025,
											"end": 1104,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 994,
											"end": 1106,
											"name": "tag",
											"source": 15,
											"value": "50"
										},
										{
											"begin": 994,
											"end": 1106,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1115,
											"end": 1156,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "53"
										},
										{
											"begin": 1149,
											"end": 1155,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1144,
											"end": 1147,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1139,
											"end": 1142,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 1115,
											"end": 1156,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "54"
										},
										{
											"begin": 1115,
											"end": 1156,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 1115,
											"end": 1156,
											"name": "tag",
											"source": 15,
											"value": "53"
										},
										{
											"begin": 1115,
											"end": 1156,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 835,
											"end": 1162,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 752,
											"end": 1162,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 752,
											"end": 1162,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 752,
											"end": 1162,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 752,
											"end": 1162,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 752,
											"end": 1162,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 752,
											"end": 1162,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 1168,
											"end": 1307,
											"name": "tag",
											"source": 15,
											"value": "55"
										},
										{
											"begin": 1168,
											"end": 1307,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1214,
											"end": 1219,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1252,
											"end": 1258,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1239,
											"end": 1259,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 1230,
											"end": 1259,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1230,
											"end": 1259,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1268,
											"end": 1301,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "57"
										},
										{
											"begin": 1295,
											"end": 1300,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1268,
											"end": 1301,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "58"
										},
										{
											"begin": 1268,
											"end": 1301,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 1268,
											"end": 1301,
											"name": "tag",
											"source": 15,
											"value": "57"
										},
										{
											"begin": 1268,
											"end": 1301,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1168,
											"end": 1307,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1168,
											"end": 1307,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1168,
											"end": 1307,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1168,
											"end": 1307,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1168,
											"end": 1307,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 1330,
											"end": 1700,
											"name": "tag",
											"source": 15,
											"value": "59"
										},
										{
											"begin": 1330,
											"end": 1700,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1401,
											"end": 1406,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1450,
											"end": 1453,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1443,
											"end": 1447,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 1435,
											"end": 1441,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1431,
											"end": 1448,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1427,
											"end": 1454,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 1417,
											"end": 1539,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "61"
										},
										{
											"begin": 1417,
											"end": 1539,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1458,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "62"
										},
										{
											"begin": 1458,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "63"
										},
										{
											"begin": 1458,
											"end": 1537,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 1458,
											"end": 1537,
											"name": "tag",
											"source": 15,
											"value": "62"
										},
										{
											"begin": 1458,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1417,
											"end": 1539,
											"name": "tag",
											"source": 15,
											"value": "61"
										},
										{
											"begin": 1417,
											"end": 1539,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1575,
											"end": 1581,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1562,
											"end": 1582,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 1600,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 1690,
											"end": 1693,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1682,
											"end": 1688,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1675,
											"end": 1679,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1667,
											"end": 1673,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 1663,
											"end": 1680,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1600,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "31"
										},
										{
											"begin": 1600,
											"end": 1694,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 1600,
											"end": 1694,
											"name": "tag",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 1600,
											"end": 1694,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1591,
											"end": 1694,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1591,
											"end": 1694,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1407,
											"end": 1700,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1330,
											"end": 1700,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1330,
											"end": 1700,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1330,
											"end": 1700,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1330,
											"end": 1700,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1330,
											"end": 1700,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 1706,
											"end": 1843,
											"name": "tag",
											"source": 15,
											"value": "65"
										},
										{
											"begin": 1706,
											"end": 1843,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1751,
											"end": 1756,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1789,
											"end": 1795,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1776,
											"end": 1796,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 1767,
											"end": 1796,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1767,
											"end": 1796,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1805,
											"end": 1837,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "67"
										},
										{
											"begin": 1831,
											"end": 1836,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1805,
											"end": 1837,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "68"
										},
										{
											"begin": 1805,
											"end": 1837,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 1805,
											"end": 1837,
											"name": "tag",
											"source": 15,
											"value": "67"
										},
										{
											"begin": 1805,
											"end": 1837,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1706,
											"end": 1843,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1706,
											"end": 1843,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1706,
											"end": 1843,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1706,
											"end": 1843,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1706,
											"end": 1843,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 1862,
											"end": 2200,
											"name": "tag",
											"source": 15,
											"value": "69"
										},
										{
											"begin": 1862,
											"end": 2200,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1917,
											"end": 1922,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1966,
											"end": 1969,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1959,
											"end": 1963,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 1951,
											"end": 1957,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1947,
											"end": 1964,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1943,
											"end": 1970,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 1933,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "71"
										},
										{
											"begin": 1933,
											"end": 2055,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1974,
											"end": 2053,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "72"
										},
										{
											"begin": 1974,
											"end": 2053,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "63"
										},
										{
											"begin": 1974,
											"end": 2053,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 1974,
											"end": 2053,
											"name": "tag",
											"source": 15,
											"value": "72"
										},
										{
											"begin": 1974,
											"end": 2053,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1933,
											"end": 2055,
											"name": "tag",
											"source": 15,
											"value": "71"
										},
										{
											"begin": 1933,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2091,
											"end": 2097,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 2116,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "73"
										},
										{
											"begin": 2190,
											"end": 2193,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 2182,
											"end": 2188,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2175,
											"end": 2179,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2167,
											"end": 2173,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 2163,
											"end": 2180,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2116,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "45"
										},
										{
											"begin": 2116,
											"end": 2194,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 2116,
											"end": 2194,
											"name": "tag",
											"source": 15,
											"value": "73"
										},
										{
											"begin": 2116,
											"end": 2194,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2107,
											"end": 2194,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2107,
											"end": 2194,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1923,
											"end": 2200,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1862,
											"end": 2200,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1862,
											"end": 2200,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1862,
											"end": 2200,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1862,
											"end": 2200,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1862,
											"end": 2200,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 2206,
											"end": 2345,
											"name": "tag",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 2206,
											"end": 2345,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2252,
											"end": 2257,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2290,
											"end": 2296,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2277,
											"end": 2297,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 2268,
											"end": 2297,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2268,
											"end": 2297,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2306,
											"end": 2339,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "75"
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2306,
											"end": 2339,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "76"
										},
										{
											"begin": 2306,
											"end": 2339,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 2306,
											"end": 2339,
											"name": "tag",
											"source": 15,
											"value": "75"
										},
										{
											"begin": 2306,
											"end": 2339,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2206,
											"end": 2345,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2206,
											"end": 2345,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2206,
											"end": 2345,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2206,
											"end": 2345,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2206,
											"end": 2345,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 2351,
											"end": 3860,
											"name": "tag",
											"source": 15,
											"value": "14"
										},
										{
											"begin": 2351,
											"end": 3860,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2505,
											"end": 2511,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2513,
											"end": 2519,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2521,
											"end": 2527,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2529,
											"end": 2535,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2537,
											"end": 2543,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2586,
											"end": 2589,
											"name": "PUSH",
											"source": 15,
											"value": "A0"
										},
										{
											"begin": 2574,
											"end": 2583,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 2565,
											"end": 2572,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 2561,
											"end": 2584,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 2557,
											"end": 2590,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 2554,
											"end": 2674,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2554,
											"end": 2674,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "78"
										},
										{
											"begin": 2554,
											"end": 2674,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2593,
											"end": 2672,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "79"
										},
										{
											"begin": 2593,
											"end": 2672,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 2593,
											"end": 2672,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 2593,
											"end": 2672,
											"name": "tag",
											"source": 15,
											"value": "79"
										},
										{
											"begin": 2593,
											"end": 2672,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2554,
											"end": 2674,
											"name": "tag",
											"source": 15,
											"value": "78"
										},
										{
											"begin": 2554,
											"end": 2674,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2713,
											"end": 2714,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2738,
											"end": 2791,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "81"
										},
										{
											"begin": 2783,
											"end": 2790,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 2774,
											"end": 2780,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2763,
											"end": 2772,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 2759,
											"end": 2781,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2738,
											"end": 2791,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "55"
										},
										{
											"begin": 2738,
											"end": 2791,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 2738,
											"end": 2791,
											"name": "tag",
											"source": 15,
											"value": "81"
										},
										{
											"begin": 2738,
											"end": 2791,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2728,
											"end": 2791,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 2728,
											"end": 2791,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2684,
											"end": 2801,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2840,
											"end": 2842,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2866,
											"end": 2919,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "82"
										},
										{
											"begin": 2911,
											"end": 2918,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 2902,
											"end": 2908,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2891,
											"end": 2900,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 2887,
											"end": 2909,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2866,
											"end": 2919,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "55"
										},
										{
											"begin": 2866,
											"end": 2919,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 2866,
											"end": 2919,
											"name": "tag",
											"source": 15,
											"value": "82"
										},
										{
											"begin": 2866,
											"end": 2919,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2856,
											"end": 2919,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 2856,
											"end": 2919,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2811,
											"end": 2929,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2996,
											"end": 2998,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2985,
											"end": 2994,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 2981,
											"end": 2999,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2968,
											"end": 3000,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 3027,
											"end": 3045,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3019,
											"end": 3025,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3016,
											"end": 3046,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 3013,
											"end": 3130,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3013,
											"end": 3130,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "83"
										},
										{
											"begin": 3013,
											"end": 3130,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3049,
											"end": 3128,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "84"
										},
										{
											"begin": 3049,
											"end": 3128,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "85"
										},
										{
											"begin": 3049,
											"end": 3128,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 3049,
											"end": 3128,
											"name": "tag",
											"source": 15,
											"value": "84"
										},
										{
											"begin": 3049,
											"end": 3128,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3013,
											"end": 3130,
											"name": "tag",
											"source": 15,
											"value": "83"
										},
										{
											"begin": 3013,
											"end": 3130,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3154,
											"end": 3232,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "86"
										},
										{
											"begin": 3224,
											"end": 3231,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 3215,
											"end": 3221,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3204,
											"end": 3213,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 3200,
											"end": 3222,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3154,
											"end": 3232,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "59"
										},
										{
											"begin": 3154,
											"end": 3232,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 3154,
											"end": 3232,
											"name": "tag",
											"source": 15,
											"value": "86"
										},
										{
											"begin": 3154,
											"end": 3232,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3144,
											"end": 3232,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 3144,
											"end": 3232,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2939,
											"end": 3242,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3309,
											"end": 3311,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 3298,
											"end": 3307,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 3294,
											"end": 3312,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3281,
											"end": 3313,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 3340,
											"end": 3358,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3332,
											"end": 3338,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3329,
											"end": 3359,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 3326,
											"end": 3443,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3326,
											"end": 3443,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "87"
										},
										{
											"begin": 3326,
											"end": 3443,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3362,
											"end": 3441,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "88"
										},
										{
											"begin": 3362,
											"end": 3441,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "85"
										},
										{
											"begin": 3362,
											"end": 3441,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 3362,
											"end": 3441,
											"name": "tag",
											"source": 15,
											"value": "88"
										},
										{
											"begin": 3362,
											"end": 3441,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3326,
											"end": 3443,
											"name": "tag",
											"source": 15,
											"value": "87"
										},
										{
											"begin": 3326,
											"end": 3443,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3467,
											"end": 3545,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "89"
										},
										{
											"begin": 3537,
											"end": 3544,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 3528,
											"end": 3534,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3517,
											"end": 3526,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 3513,
											"end": 3535,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3467,
											"end": 3545,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "59"
										},
										{
											"begin": 3467,
											"end": 3545,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 3467,
											"end": 3545,
											"name": "tag",
											"source": 15,
											"value": "89"
										},
										{
											"begin": 3467,
											"end": 3545,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3457,
											"end": 3545,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 3457,
											"end": 3545,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3252,
											"end": 3555,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3622,
											"end": 3625,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 3611,
											"end": 3620,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 3607,
											"end": 3626,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3594,
											"end": 3627,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 3654,
											"end": 3672,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3646,
											"end": 3652,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3643,
											"end": 3673,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 3640,
											"end": 3757,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3640,
											"end": 3757,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "90"
										},
										{
											"begin": 3640,
											"end": 3757,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3676,
											"end": 3755,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "91"
										},
										{
											"begin": 3676,
											"end": 3755,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "85"
										},
										{
											"begin": 3676,
											"end": 3755,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 3676,
											"end": 3755,
											"name": "tag",
											"source": 15,
											"value": "91"
										},
										{
											"begin": 3676,
											"end": 3755,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3640,
											"end": 3757,
											"name": "tag",
											"source": 15,
											"value": "90"
										},
										{
											"begin": 3640,
											"end": 3757,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3781,
											"end": 3843,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "92"
										},
										{
											"begin": 3835,
											"end": 3842,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 3826,
											"end": 3832,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3815,
											"end": 3824,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 3811,
											"end": 3833,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3781,
											"end": 3843,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "69"
										},
										{
											"begin": 3781,
											"end": 3843,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 3781,
											"end": 3843,
											"name": "tag",
											"source": 15,
											"value": "92"
										},
										{
											"begin": 3781,
											"end": 3843,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3771,
											"end": 3843,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3771,
											"end": 3843,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3565,
											"end": 3853,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2351,
											"end": 3860,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2351,
											"end": 3860,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 2351,
											"end": 3860,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2351,
											"end": 3860,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2351,
											"end": 3860,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 2351,
											"end": 3860,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2351,
											"end": 3860,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 2351,
											"end": 3860,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2351,
											"end": 3860,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 3866,
											"end": 4955,
											"name": "tag",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3866,
											"end": 4955,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3970,
											"end": 3976,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3978,
											"end": 3984,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3986,
											"end": 3992,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3994,
											"end": 4000,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4002,
											"end": 4008,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4051,
											"end": 4054,
											"name": "PUSH",
											"source": 15,
											"value": "A0"
										},
										{
											"begin": 4039,
											"end": 4048,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 4030,
											"end": 4037,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 4026,
											"end": 4049,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 4022,
											"end": 4055,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 4019,
											"end": 4139,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 4019,
											"end": 4139,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "94"
										},
										{
											"begin": 4019,
											"end": 4139,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4058,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "95"
										},
										{
											"begin": 4058,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 4058,
											"end": 4137,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 4058,
											"end": 4137,
											"name": "tag",
											"source": 15,
											"value": "95"
										},
										{
											"begin": 4058,
											"end": 4137,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4019,
											"end": 4139,
											"name": "tag",
											"source": 15,
											"value": "94"
										},
										{
											"begin": 4019,
											"end": 4139,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4178,
											"end": 4179,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4203,
											"end": 4256,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "96"
										},
										{
											"begin": 4248,
											"end": 4255,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 4239,
											"end": 4245,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4228,
											"end": 4237,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 4224,
											"end": 4246,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4203,
											"end": 4256,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "55"
										},
										{
											"begin": 4203,
											"end": 4256,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 4203,
											"end": 4256,
											"name": "tag",
											"source": 15,
											"value": "96"
										},
										{
											"begin": 4203,
											"end": 4256,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4193,
											"end": 4256,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 4193,
											"end": 4256,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4149,
											"end": 4266,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4305,
											"end": 4307,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4331,
											"end": 4384,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "97"
										},
										{
											"begin": 4376,
											"end": 4383,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 4367,
											"end": 4373,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4356,
											"end": 4365,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 4352,
											"end": 4374,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4331,
											"end": 4384,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "55"
										},
										{
											"begin": 4331,
											"end": 4384,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 4331,
											"end": 4384,
											"name": "tag",
											"source": 15,
											"value": "97"
										},
										{
											"begin": 4331,
											"end": 4384,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4321,
											"end": 4384,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 4321,
											"end": 4384,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4276,
											"end": 4394,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4433,
											"end": 4435,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 4459,
											"end": 4512,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "98"
										},
										{
											"begin": 4504,
											"end": 4511,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 4495,
											"end": 4501,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4484,
											"end": 4493,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 4480,
											"end": 4502,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4459,
											"end": 4512,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 4459,
											"end": 4512,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 4459,
											"end": 4512,
											"name": "tag",
											"source": 15,
											"value": "98"
										},
										{
											"begin": 4459,
											"end": 4512,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4449,
											"end": 4512,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 4449,
											"end": 4512,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4404,
											"end": 4522,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4561,
											"end": 4563,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 4587,
											"end": 4640,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "99"
										},
										{
											"begin": 4632,
											"end": 4639,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 4623,
											"end": 4629,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4612,
											"end": 4621,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 4608,
											"end": 4630,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4587,
											"end": 4640,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 4587,
											"end": 4640,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 4587,
											"end": 4640,
											"name": "tag",
											"source": 15,
											"value": "99"
										},
										{
											"begin": 4587,
											"end": 4640,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4577,
											"end": 4640,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4577,
											"end": 4640,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4532,
											"end": 4650,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4717,
											"end": 4720,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 4706,
											"end": 4715,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 4702,
											"end": 4721,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4689,
											"end": 4722,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 4749,
											"end": 4767,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4741,
											"end": 4747,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4738,
											"end": 4768,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 4735,
											"end": 4852,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 4735,
											"end": 4852,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "100"
										},
										{
											"begin": 4735,
											"end": 4852,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4771,
											"end": 4850,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "101"
										},
										{
											"begin": 4771,
											"end": 4850,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "85"
										},
										{
											"begin": 4771,
											"end": 4850,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 4771,
											"end": 4850,
											"name": "tag",
											"source": 15,
											"value": "101"
										},
										{
											"begin": 4771,
											"end": 4850,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4735,
											"end": 4852,
											"name": "tag",
											"source": 15,
											"value": "100"
										},
										{
											"begin": 4735,
											"end": 4852,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4876,
											"end": 4938,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "102"
										},
										{
											"begin": 4930,
											"end": 4937,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 4921,
											"end": 4927,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4910,
											"end": 4919,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 4906,
											"end": 4928,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4876,
											"end": 4938,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "69"
										},
										{
											"begin": 4876,
											"end": 4938,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 4876,
											"end": 4938,
											"name": "tag",
											"source": 15,
											"value": "102"
										},
										{
											"begin": 4876,
											"end": 4938,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4866,
											"end": 4938,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4866,
											"end": 4938,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4660,
											"end": 4948,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3866,
											"end": 4955,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 3866,
											"end": 4955,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 3866,
											"end": 4955,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3866,
											"end": 4955,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 3866,
											"end": 4955,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 3866,
											"end": 4955,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3866,
											"end": 4955,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 3866,
											"end": 4955,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3866,
											"end": 4955,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 4961,
											"end": 5288,
											"name": "tag",
											"source": 15,
											"value": "8"
										},
										{
											"begin": 4961,
											"end": 5288,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5019,
											"end": 5025,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5068,
											"end": 5070,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5056,
											"end": 5065,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5047,
											"end": 5054,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 5043,
											"end": 5066,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 5039,
											"end": 5071,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 5036,
											"end": 5155,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 5036,
											"end": 5155,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "104"
										},
										{
											"begin": 5036,
											"end": 5155,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 5074,
											"end": 5153,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "105"
										},
										{
											"begin": 5074,
											"end": 5153,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 5074,
											"end": 5153,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 5074,
											"end": 5153,
											"name": "tag",
											"source": 15,
											"value": "105"
										},
										{
											"begin": 5074,
											"end": 5153,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5036,
											"end": 5155,
											"name": "tag",
											"source": 15,
											"value": "104"
										},
										{
											"begin": 5036,
											"end": 5155,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5194,
											"end": 5195,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5219,
											"end": 5271,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "106"
										},
										{
											"begin": 5263,
											"end": 5270,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 5254,
											"end": 5260,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5243,
											"end": 5252,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 5239,
											"end": 5261,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5219,
											"end": 5271,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "65"
										},
										{
											"begin": 5219,
											"end": 5271,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 5219,
											"end": 5271,
											"name": "tag",
											"source": 15,
											"value": "106"
										},
										{
											"begin": 5219,
											"end": 5271,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5209,
											"end": 5271,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5209,
											"end": 5271,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5165,
											"end": 5281,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4961,
											"end": 5288,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4961,
											"end": 5288,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4961,
											"end": 5288,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4961,
											"end": 5288,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4961,
											"end": 5288,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 5294,
											"end": 5403,
											"name": "tag",
											"source": 15,
											"value": "107"
										},
										{
											"begin": 5294,
											"end": 5403,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5375,
											"end": 5396,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "109"
										},
										{
											"begin": 5390,
											"end": 5395,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5375,
											"end": 5396,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "110"
										},
										{
											"begin": 5375,
											"end": 5396,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 5375,
											"end": 5396,
											"name": "tag",
											"source": 15,
											"value": "109"
										},
										{
											"begin": 5375,
											"end": 5396,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5370,
											"end": 5373,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5363,
											"end": 5397,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5294,
											"end": 5403,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5294,
											"end": 5403,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5294,
											"end": 5403,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 5409,
											"end": 5524,
											"name": "tag",
											"source": 15,
											"value": "111"
										},
										{
											"begin": 5409,
											"end": 5524,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5494,
											"end": 5517,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "113"
										},
										{
											"begin": 5511,
											"end": 5516,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5494,
											"end": 5517,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "114"
										},
										{
											"begin": 5494,
											"end": 5517,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 5494,
											"end": 5517,
											"name": "tag",
											"source": 15,
											"value": "113"
										},
										{
											"begin": 5494,
											"end": 5517,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5489,
											"end": 5492,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5482,
											"end": 5518,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5409,
											"end": 5524,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5409,
											"end": 5524,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5409,
											"end": 5524,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 5530,
											"end": 5740,
											"name": "tag",
											"source": 15,
											"value": "11"
										},
										{
											"begin": 5530,
											"end": 5740,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5617,
											"end": 5621,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5655,
											"end": 5657,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5644,
											"end": 5653,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5640,
											"end": 5658,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5632,
											"end": 5658,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5632,
											"end": 5658,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5668,
											"end": 5733,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "116"
										},
										{
											"begin": 5730,
											"end": 5731,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5719,
											"end": 5728,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 5715,
											"end": 5732,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5706,
											"end": 5712,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 5668,
											"end": 5733,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "107"
										},
										{
											"begin": 5668,
											"end": 5733,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 5668,
											"end": 5733,
											"name": "tag",
											"source": 15,
											"value": "116"
										},
										{
											"begin": 5668,
											"end": 5733,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5530,
											"end": 5740,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 5530,
											"end": 5740,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5530,
											"end": 5740,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5530,
											"end": 5740,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5530,
											"end": 5740,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 5746,
											"end": 5964,
											"name": "tag",
											"source": 15,
											"value": "17"
										},
										{
											"begin": 5746,
											"end": 5964,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5837,
											"end": 5841,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5875,
											"end": 5877,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5864,
											"end": 5873,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5860,
											"end": 5878,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5852,
											"end": 5878,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5852,
											"end": 5878,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5888,
											"end": 5957,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "118"
										},
										{
											"begin": 5954,
											"end": 5955,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5943,
											"end": 5952,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 5939,
											"end": 5956,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5930,
											"end": 5936,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 5888,
											"end": 5957,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "111"
										},
										{
											"begin": 5888,
											"end": 5957,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 5888,
											"end": 5957,
											"name": "tag",
											"source": 15,
											"value": "118"
										},
										{
											"begin": 5888,
											"end": 5957,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5746,
											"end": 5964,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 5746,
											"end": 5964,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5746,
											"end": 5964,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5746,
											"end": 5964,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5746,
											"end": 5964,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 5970,
											"end": 6099,
											"name": "tag",
											"source": 15,
											"value": "36"
										},
										{
											"begin": 5970,
											"end": 6099,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6004,
											"end": 6010,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6031,
											"end": 6051,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "120"
										},
										{
											"begin": 6031,
											"end": 6051,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "121"
										},
										{
											"begin": 6031,
											"end": 6051,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 6031,
											"end": 6051,
											"name": "tag",
											"source": 15,
											"value": "120"
										},
										{
											"begin": 6031,
											"end": 6051,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6021,
											"end": 6051,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6021,
											"end": 6051,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6060,
											"end": 6093,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "122"
										},
										{
											"begin": 6088,
											"end": 6092,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6080,
											"end": 6086,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6060,
											"end": 6093,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "123"
										},
										{
											"begin": 6060,
											"end": 6093,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 6060,
											"end": 6093,
											"name": "tag",
											"source": 15,
											"value": "122"
										},
										{
											"begin": 6060,
											"end": 6093,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5970,
											"end": 6099,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5970,
											"end": 6099,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5970,
											"end": 6099,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5970,
											"end": 6099,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 6105,
											"end": 6180,
											"name": "tag",
											"source": 15,
											"value": "121"
										},
										{
											"begin": 6105,
											"end": 6180,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6138,
											"end": 6144,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6171,
											"end": 6173,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 6165,
											"end": 6174,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 6155,
											"end": 6174,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6155,
											"end": 6174,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6105,
											"end": 6180,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6105,
											"end": 6180,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 6186,
											"end": 6497,
											"name": "tag",
											"source": 15,
											"value": "35"
										},
										{
											"begin": 6186,
											"end": 6497,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6263,
											"end": 6267,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6353,
											"end": 6371,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6345,
											"end": 6351,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6342,
											"end": 6372,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 6339,
											"end": 6395,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 6339,
											"end": 6395,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "126"
										},
										{
											"begin": 6339,
											"end": 6395,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 6375,
											"end": 6393,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "127"
										},
										{
											"begin": 6375,
											"end": 6393,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "128"
										},
										{
											"begin": 6375,
											"end": 6393,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 6375,
											"end": 6393,
											"name": "tag",
											"source": 15,
											"value": "127"
										},
										{
											"begin": 6375,
											"end": 6393,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6339,
											"end": 6395,
											"name": "tag",
											"source": 15,
											"value": "126"
										},
										{
											"begin": 6339,
											"end": 6395,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6425,
											"end": 6429,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 6417,
											"end": 6423,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6413,
											"end": 6430,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 6405,
											"end": 6430,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6405,
											"end": 6430,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6485,
											"end": 6489,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 6479,
											"end": 6483,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6467,
											"end": 6490,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6467,
											"end": 6490,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6186,
											"end": 6497,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6186,
											"end": 6497,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6186,
											"end": 6497,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6186,
											"end": 6497,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 6503,
											"end": 6810,
											"name": "tag",
											"source": 15,
											"value": "49"
										},
										{
											"begin": 6503,
											"end": 6810,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6564,
											"end": 6568,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6654,
											"end": 6672,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6646,
											"end": 6652,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6643,
											"end": 6673,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 6640,
											"end": 6696,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 6640,
											"end": 6696,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "130"
										},
										{
											"begin": 6640,
											"end": 6696,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 6676,
											"end": 6694,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "131"
										},
										{
											"begin": 6676,
											"end": 6694,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "128"
										},
										{
											"begin": 6676,
											"end": 6694,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 6676,
											"end": 6694,
											"name": "tag",
											"source": 15,
											"value": "131"
										},
										{
											"begin": 6676,
											"end": 6694,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6640,
											"end": 6696,
											"name": "tag",
											"source": 15,
											"value": "130"
										},
										{
											"begin": 6640,
											"end": 6696,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6714,
											"end": 6743,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "132"
										},
										{
											"begin": 6736,
											"end": 6742,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6714,
											"end": 6743,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "133"
										},
										{
											"begin": 6714,
											"end": 6743,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 6714,
											"end": 6743,
											"name": "tag",
											"source": 15,
											"value": "132"
										},
										{
											"begin": 6714,
											"end": 6743,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6706,
											"end": 6743,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6706,
											"end": 6743,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6798,
											"end": 6802,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 6792,
											"end": 6796,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6788,
											"end": 6803,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6780,
											"end": 6803,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6780,
											"end": 6803,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6503,
											"end": 6810,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6503,
											"end": 6810,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6503,
											"end": 6810,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6503,
											"end": 6810,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 6816,
											"end": 6912,
											"name": "tag",
											"source": 15,
											"value": "134"
										},
										{
											"begin": 6816,
											"end": 6912,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6853,
											"end": 6860,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6882,
											"end": 6906,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "136"
										},
										{
											"begin": 6900,
											"end": 6905,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6882,
											"end": 6906,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "137"
										},
										{
											"begin": 6882,
											"end": 6906,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 6882,
											"end": 6906,
											"name": "tag",
											"source": 15,
											"value": "136"
										},
										{
											"begin": 6882,
											"end": 6906,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6871,
											"end": 6906,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6871,
											"end": 6906,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6816,
											"end": 6912,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6816,
											"end": 6912,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6816,
											"end": 6912,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6816,
											"end": 6912,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 6918,
											"end": 7008,
											"name": "tag",
											"source": 15,
											"value": "110"
										},
										{
											"begin": 6918,
											"end": 7008,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6952,
											"end": 6959,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6995,
											"end": 7000,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6988,
											"end": 7001,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 6981,
											"end": 7002,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 6970,
											"end": 7002,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6970,
											"end": 7002,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6918,
											"end": 7008,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6918,
											"end": 7008,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6918,
											"end": 7008,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6918,
											"end": 7008,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 7014,
											"end": 7163,
											"name": "tag",
											"source": 15,
											"value": "114"
										},
										{
											"begin": 7014,
											"end": 7163,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7050,
											"end": 7057,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7090,
											"end": 7156,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7083,
											"end": 7088,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7079,
											"end": 7157,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 7068,
											"end": 7157,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7068,
											"end": 7157,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7014,
											"end": 7163,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 7014,
											"end": 7163,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7014,
											"end": 7163,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7014,
											"end": 7163,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 7169,
											"end": 7295,
											"name": "tag",
											"source": 15,
											"value": "137"
										},
										{
											"begin": 7169,
											"end": 7295,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7206,
											"end": 7213,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7246,
											"end": 7288,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7239,
											"end": 7244,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7235,
											"end": 7289,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 7224,
											"end": 7289,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7224,
											"end": 7289,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7169,
											"end": 7295,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 7169,
											"end": 7295,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7169,
											"end": 7295,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7169,
											"end": 7295,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 7301,
											"end": 7378,
											"name": "tag",
											"source": 15,
											"value": "141"
										},
										{
											"begin": 7301,
											"end": 7378,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7338,
											"end": 7345,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7367,
											"end": 7372,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7356,
											"end": 7372,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7356,
											"end": 7372,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7301,
											"end": 7378,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 7301,
											"end": 7378,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7301,
											"end": 7378,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7301,
											"end": 7378,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 7384,
											"end": 7538,
											"name": "tag",
											"source": 15,
											"value": "54"
										},
										{
											"begin": 7384,
											"end": 7538,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7468,
											"end": 7474,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7463,
											"end": 7466,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7458,
											"end": 7461,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 7445,
											"end": 7475,
											"name": "CALLDATACOPY",
											"source": 15
										},
										{
											"begin": 7530,
											"end": 7531,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7521,
											"end": 7527,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 7516,
											"end": 7519,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 7512,
											"end": 7528,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7505,
											"end": 7532,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7384,
											"end": 7538,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7384,
											"end": 7538,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7384,
											"end": 7538,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7384,
											"end": 7538,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 7544,
											"end": 7825,
											"name": "tag",
											"source": 15,
											"value": "123"
										},
										{
											"begin": 7544,
											"end": 7825,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7627,
											"end": 7654,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "145"
										},
										{
											"begin": 7649,
											"end": 7653,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7627,
											"end": 7654,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "133"
										},
										{
											"begin": 7627,
											"end": 7654,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 7627,
											"end": 7654,
											"name": "tag",
											"source": 15,
											"value": "145"
										},
										{
											"begin": 7627,
											"end": 7654,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7619,
											"end": 7625,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7615,
											"end": 7655,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7757,
											"end": 7763,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7745,
											"end": 7755,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7742,
											"end": 7764,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 7721,
											"end": 7739,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7709,
											"end": 7719,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7706,
											"end": 7740,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 7703,
											"end": 7765,
											"name": "OR",
											"source": 15
										},
										{
											"begin": 7700,
											"end": 7788,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 7700,
											"end": 7788,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "146"
										},
										{
											"begin": 7700,
											"end": 7788,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 7768,
											"end": 7786,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "147"
										},
										{
											"begin": 7768,
											"end": 7786,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "128"
										},
										{
											"begin": 7768,
											"end": 7786,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 7768,
											"end": 7786,
											"name": "tag",
											"source": 15,
											"value": "147"
										},
										{
											"begin": 7768,
											"end": 7786,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7700,
											"end": 7788,
											"name": "tag",
											"source": 15,
											"value": "146"
										},
										{
											"begin": 7700,
											"end": 7788,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7808,
											"end": 7818,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 7804,
											"end": 7806,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 7797,
											"end": 7819,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7587,
											"end": 7825,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7544,
											"end": 7825,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7544,
											"end": 7825,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7544,
											"end": 7825,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 7831,
											"end": 8011,
											"name": "tag",
											"source": 15,
											"value": "128"
										},
										{
											"begin": 7831,
											"end": 8011,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7879,
											"end": 7956,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7876,
											"end": 7877,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7869,
											"end": 7957,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7976,
											"end": 7980,
											"name": "PUSH",
											"source": 15,
											"value": "41"
										},
										{
											"begin": 7973,
											"end": 7974,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 7966,
											"end": 7981,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8000,
											"end": 8004,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 7997,
											"end": 7998,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7990,
											"end": 8005,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 8017,
											"end": 8134,
											"name": "tag",
											"source": 15,
											"value": "63"
										},
										{
											"begin": 8017,
											"end": 8134,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8126,
											"end": 8127,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8123,
											"end": 8124,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 8116,
											"end": 8128,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 8140,
											"end": 8257,
											"name": "tag",
											"source": 15,
											"value": "39"
										},
										{
											"begin": 8140,
											"end": 8257,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8249,
											"end": 8250,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8246,
											"end": 8247,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 8239,
											"end": 8251,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 8263,
											"end": 8380,
											"name": "tag",
											"source": 15,
											"value": "52"
										},
										{
											"begin": 8263,
											"end": 8380,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8372,
											"end": 8373,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8369,
											"end": 8370,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 8362,
											"end": 8374,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 8386,
											"end": 8503,
											"name": "tag",
											"source": 15,
											"value": "85"
										},
										{
											"begin": 8386,
											"end": 8503,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8495,
											"end": 8496,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8492,
											"end": 8493,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 8485,
											"end": 8497,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 8509,
											"end": 8626,
											"name": "tag",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 8509,
											"end": 8626,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8618,
											"end": 8619,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8615,
											"end": 8616,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 8608,
											"end": 8620,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 8632,
											"end": 8734,
											"name": "tag",
											"source": 15,
											"value": "133"
										},
										{
											"begin": 8632,
											"end": 8734,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8673,
											"end": 8679,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8724,
											"end": 8726,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 8720,
											"end": 8727,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 8715,
											"end": 8717,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 8708,
											"end": 8713,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 8704,
											"end": 8718,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8700,
											"end": 8728,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 8690,
											"end": 8728,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8690,
											"end": 8728,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8632,
											"end": 8734,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 8632,
											"end": 8734,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8632,
											"end": 8734,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8632,
											"end": 8734,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 8740,
											"end": 8862,
											"name": "tag",
											"source": 15,
											"value": "58"
										},
										{
											"begin": 8740,
											"end": 8862,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8813,
											"end": 8837,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "156"
										},
										{
											"begin": 8831,
											"end": 8836,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8813,
											"end": 8837,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "134"
										},
										{
											"begin": 8813,
											"end": 8837,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 8813,
											"end": 8837,
											"name": "tag",
											"source": 15,
											"value": "156"
										},
										{
											"begin": 8813,
											"end": 8837,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8806,
											"end": 8811,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8803,
											"end": 8838,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 8793,
											"end": 8856,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "157"
										},
										{
											"begin": 8793,
											"end": 8856,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 8852,
											"end": 8853,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8849,
											"end": 8850,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 8842,
											"end": 8854,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 8793,
											"end": 8856,
											"name": "tag",
											"source": 15,
											"value": "157"
										},
										{
											"begin": 8793,
											"end": 8856,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8740,
											"end": 8862,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8740,
											"end": 8862,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 8868,
											"end": 8988,
											"name": "tag",
											"source": 15,
											"value": "68"
										},
										{
											"begin": 8868,
											"end": 8988,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8940,
											"end": 8963,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "159"
										},
										{
											"begin": 8957,
											"end": 8962,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8940,
											"end": 8963,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "114"
										},
										{
											"begin": 8940,
											"end": 8963,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 8940,
											"end": 8963,
											"name": "tag",
											"source": 15,
											"value": "159"
										},
										{
											"begin": 8940,
											"end": 8963,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8933,
											"end": 8938,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8930,
											"end": 8964,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 8920,
											"end": 8982,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "160"
										},
										{
											"begin": 8920,
											"end": 8982,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 8978,
											"end": 8979,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8975,
											"end": 8976,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 8968,
											"end": 8980,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 8920,
											"end": 8982,
											"name": "tag",
											"source": 15,
											"value": "160"
										},
										{
											"begin": 8920,
											"end": 8982,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8868,
											"end": 8988,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8868,
											"end": 8988,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 8994,
											"end": 9116,
											"name": "tag",
											"source": 15,
											"value": "76"
										},
										{
											"begin": 8994,
											"end": 9116,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9067,
											"end": 9091,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "162"
										},
										{
											"begin": 9085,
											"end": 9090,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9067,
											"end": 9091,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "141"
										},
										{
											"begin": 9067,
											"end": 9091,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 9067,
											"end": 9091,
											"name": "tag",
											"source": 15,
											"value": "162"
										},
										{
											"begin": 9067,
											"end": 9091,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9060,
											"end": 9065,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9057,
											"end": 9092,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 9047,
											"end": 9110,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "163"
										},
										{
											"begin": 9047,
											"end": 9110,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 9106,
											"end": 9107,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9103,
											"end": 9104,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 9096,
											"end": 9108,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 9047,
											"end": 9110,
											"name": "tag",
											"source": 15,
											"value": "163"
										},
										{
											"begin": 9047,
											"end": 9110,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8994,
											"end": 9116,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8994,
											"end": 9116,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"_Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Simple implementation of `ERC1155Receiver` that will allow a contract to hold ERC1155 tokens. IMPORTANT: When inheriting this contract, you must include a way to use the received tokens, otherwise they will be stuck.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":\"ERC1155Holder\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":{\"keccak256\":\"0x2e024ca51ce5abe16c0d34e6992a1104f356e2244eb4ccbec970435e8b3405e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a74009db3c6fc8db851ba69ddb6795b5c1ef1120c5a00fd1a8dc3a717dd9d519\",\"dweb:/ipfs/QmZMk8Yh2X3gPS51ckUVLEXjZUhMSEeGApnA53WtjvLb9h\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":{\"keccak256\":\"0x3dd5e1a66a56f30302108a1da97d677a42b1daa60e503696b2bcbbf3e4c95bcb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0808de0ae4918c664643c885ca7fa6503e8ef2bd75609dfc85152c0128a3422d\",\"dweb:/ipfs/QmNrhFC1XgBKuuxfahFeiwi1MCdu3FLNpHj2uStgmf4iJj\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Simple implementation of `ERC1155Receiver` that will allow a contract to hold ERC1155 tokens. IMPORTANT: When inheriting this contract, you must include a way to use the received tokens, otherwise they will be stuck.",
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol": {
				"ERC1155Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "_Available since v3.1._",
						"kind": "dev",
						"methods": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
								"details": "Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"ids": "An array containing ids of each token being transferred (order and length must match values array)",
									"operator": "The address which initiated the batch transfer (i.e. msg.sender)",
									"values": "An array containing amounts of each token being transferred (order and length must match ids array)"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
								}
							},
							"onERC1155Received(address,address,uint256,uint256,bytes)": {
								"details": "Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"id": "The ID of the token being transferred",
									"operator": "The address which initiated the transfer (i.e. msg.sender)",
									"value": "The amount of tokens being transferred"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"_Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":\"ERC1155Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":{\"keccak256\":\"0x3dd5e1a66a56f30302108a1da97d677a42b1daa60e503696b2bcbbf3e4c95bcb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0808de0ae4918c664643c885ca7fa6503e8ef2bd75609dfc85152c0128a3422d\",\"dweb:/ipfs/QmNrhFC1XgBKuuxfahFeiwi1MCdu3FLNpHj2uStgmf4iJj\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":645:3915  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":645:3915  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220bd072a55fab9b3e6160b74aafb8c77693f6dde1859f0f3fe68f1815438216b8064736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bd072a55fab9b3e6160b74aafb8c77693f6dde1859f0f3fe68f1815438216b8064736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBD SMOD 0x2A SSTORE STATICCALL 0xB9 0xB3 0xE6 AND SIGNEXTEND PUSH21 0xAAFB8C77693F6DDE1859F0F3FE68F1815438216B80 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "645:3270:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bd072a55fab9b3e6160b74aafb8c77693f6dde1859f0f3fe68f1815438216b8064736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBD SMOD 0x2A SSTORE STATICCALL 0xB9 0xB3 0xE6 AND SIGNEXTEND PUSH21 0xAAFB8C77693F6DDE1859F0F3FE68F1815438216B80 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "645:3270:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bd072a55fab9b3e6160b74aafb8c77693f6dde1859f0f3fe68f1815438216b8064736f6c63430008070033",
									".code": [
										{
											"begin": 645,
											"end": 3915,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4632c341a06ba5c079b51ca5a915efab4e6ab57735b37839b3e8365ff806a43e\",\"dweb:/ipfs/QmTHT3xHYed2wajEoA5qu7ii2BxLpPhQZHwAhtLK5Z7ANK\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x0d4de01fe5360c38b4ad2b0822a12722958428f5138a7ff47c1720eb6fa52bba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77724cecdfba8814632ab58737c2b0f2d4ad2d532bc614aee559b5593c1152f0\",\"dweb:/ipfs/QmUcE6gXyv7CQh4sUdcDABYKGTovTe1zLMZSEq95nkc3ph\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol": {
				"ERC721Holder": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC721Receiver} interface. Accepts all token transfers. Make sure the contract is able to use its token with {IERC721-safeTransferFrom}, {IERC721-approve} or {IERC721-setApprovalForAll}.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":399:790  contract ERC721Holder is IERC721Receiver {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":399:790  contract ERC721Holder is IERC721Receiver {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x150b7a02\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":588:788  function onERC721Received(... */\n    tag_3:\n      tag_4\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_5\n      swap2\n      swap1\n      tag_6\n      jump\t// in\n    tag_5:\n      tag_7\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_7:\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":726:732  bytes4 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":751:781  this.onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":744:781  return this.onERC721Received.selector */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":588:788  function onERC721Received(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:417   */\n    tag_12:\n        /* \"#utility.yul\":84:89   */\n      0x00\n        /* \"#utility.yul\":109:174   */\n      tag_14\n        /* \"#utility.yul\":125:173   */\n      tag_15\n        /* \"#utility.yul\":166:172   */\n      dup5\n        /* \"#utility.yul\":125:173   */\n      tag_16\n      jump\t// in\n    tag_15:\n        /* \"#utility.yul\":109:174   */\n      tag_17\n      jump\t// in\n    tag_14:\n        /* \"#utility.yul\":100:174   */\n      swap1\n      pop\n        /* \"#utility.yul\":197:203   */\n      dup3\n        /* \"#utility.yul\":190:195   */\n      dup2\n        /* \"#utility.yul\":183:204   */\n      mstore\n        /* \"#utility.yul\":235:239   */\n      0x20\n        /* \"#utility.yul\":228:233   */\n      dup2\n        /* \"#utility.yul\":224:240   */\n      add\n        /* \"#utility.yul\":273:276   */\n      dup5\n        /* \"#utility.yul\":264:270   */\n      dup5\n        /* \"#utility.yul\":259:262   */\n      dup5\n        /* \"#utility.yul\":255:271   */\n      add\n        /* \"#utility.yul\":252:277   */\n      gt\n        /* \"#utility.yul\":249:361   */\n      iszero\n      tag_18\n      jumpi\n        /* \"#utility.yul\":280:359   */\n      tag_19\n      tag_20\n      jump\t// in\n    tag_19:\n        /* \"#utility.yul\":249:361   */\n    tag_18:\n        /* \"#utility.yul\":370:411   */\n      tag_21\n        /* \"#utility.yul\":404:410   */\n      dup5\n        /* \"#utility.yul\":399:402   */\n      dup3\n        /* \"#utility.yul\":394:397   */\n      dup6\n        /* \"#utility.yul\":370:411   */\n      tag_22\n      jump\t// in\n    tag_21:\n        /* \"#utility.yul\":90:417   */\n      pop\n        /* \"#utility.yul\":7:417   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":423:562   */\n    tag_23:\n        /* \"#utility.yul\":469:474   */\n      0x00\n        /* \"#utility.yul\":507:513   */\n      dup2\n        /* \"#utility.yul\":494:514   */\n      calldataload\n        /* \"#utility.yul\":485:514   */\n      swap1\n      pop\n        /* \"#utility.yul\":523:556   */\n      tag_25\n        /* \"#utility.yul\":550:555   */\n      dup2\n        /* \"#utility.yul\":523:556   */\n      tag_26\n      jump\t// in\n    tag_25:\n        /* \"#utility.yul\":423:562   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":581:919   */\n    tag_27:\n        /* \"#utility.yul\":636:641   */\n      0x00\n        /* \"#utility.yul\":685:688   */\n      dup3\n        /* \"#utility.yul\":678:682   */\n      0x1f\n        /* \"#utility.yul\":670:676   */\n      dup4\n        /* \"#utility.yul\":666:683   */\n      add\n        /* \"#utility.yul\":662:689   */\n      slt\n        /* \"#utility.yul\":652:774   */\n      tag_29\n      jumpi\n        /* \"#utility.yul\":693:772   */\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n        /* \"#utility.yul\":652:774   */\n    tag_29:\n        /* \"#utility.yul\":810:816   */\n      dup2\n        /* \"#utility.yul\":797:817   */\n      calldataload\n        /* \"#utility.yul\":835:913   */\n      tag_32\n        /* \"#utility.yul\":909:912   */\n      dup5\n        /* \"#utility.yul\":901:907   */\n      dup3\n        /* \"#utility.yul\":894:898   */\n      0x20\n        /* \"#utility.yul\":886:892   */\n      dup7\n        /* \"#utility.yul\":882:899   */\n      add\n        /* \"#utility.yul\":835:913   */\n      tag_12\n      jump\t// in\n    tag_32:\n        /* \"#utility.yul\":826:913   */\n      swap2\n      pop\n        /* \"#utility.yul\":642:919   */\n      pop\n        /* \"#utility.yul\":581:919   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":925:1064   */\n    tag_33:\n        /* \"#utility.yul\":971:976   */\n      0x00\n        /* \"#utility.yul\":1009:1015   */\n      dup2\n        /* \"#utility.yul\":996:1016   */\n      calldataload\n        /* \"#utility.yul\":987:1016   */\n      swap1\n      pop\n        /* \"#utility.yul\":1025:1058   */\n      tag_35\n        /* \"#utility.yul\":1052:1057   */\n      dup2\n        /* \"#utility.yul\":1025:1058   */\n      tag_36\n      jump\t// in\n    tag_35:\n        /* \"#utility.yul\":925:1064   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1070:2013   */\n    tag_6:\n        /* \"#utility.yul\":1165:1171   */\n      0x00\n        /* \"#utility.yul\":1173:1179   */\n      dup1\n        /* \"#utility.yul\":1181:1187   */\n      0x00\n        /* \"#utility.yul\":1189:1195   */\n      dup1\n        /* \"#utility.yul\":1238:1241   */\n      0x80\n        /* \"#utility.yul\":1226:1235   */\n      dup6\n        /* \"#utility.yul\":1217:1224   */\n      dup8\n        /* \"#utility.yul\":1213:1236   */\n      sub\n        /* \"#utility.yul\":1209:1242   */\n      slt\n        /* \"#utility.yul\":1206:1326   */\n      iszero\n      tag_38\n      jumpi\n        /* \"#utility.yul\":1245:1324   */\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n        /* \"#utility.yul\":1206:1326   */\n    tag_38:\n        /* \"#utility.yul\":1365:1366   */\n      0x00\n        /* \"#utility.yul\":1390:1443   */\n      tag_41\n        /* \"#utility.yul\":1435:1442   */\n      dup8\n        /* \"#utility.yul\":1426:1432   */\n      dup3\n        /* \"#utility.yul\":1415:1424   */\n      dup9\n        /* \"#utility.yul\":1411:1433   */\n      add\n        /* \"#utility.yul\":1390:1443   */\n      tag_23\n      jump\t// in\n    tag_41:\n        /* \"#utility.yul\":1380:1443   */\n      swap5\n      pop\n        /* \"#utility.yul\":1336:1453   */\n      pop\n        /* \"#utility.yul\":1492:1494   */\n      0x20\n        /* \"#utility.yul\":1518:1571   */\n      tag_42\n        /* \"#utility.yul\":1563:1570   */\n      dup8\n        /* \"#utility.yul\":1554:1560   */\n      dup3\n        /* \"#utility.yul\":1543:1552   */\n      dup9\n        /* \"#utility.yul\":1539:1561   */\n      add\n        /* \"#utility.yul\":1518:1571   */\n      tag_23\n      jump\t// in\n    tag_42:\n        /* \"#utility.yul\":1508:1571   */\n      swap4\n      pop\n        /* \"#utility.yul\":1463:1581   */\n      pop\n        /* \"#utility.yul\":1620:1622   */\n      0x40\n        /* \"#utility.yul\":1646:1699   */\n      tag_43\n        /* \"#utility.yul\":1691:1698   */\n      dup8\n        /* \"#utility.yul\":1682:1688   */\n      dup3\n        /* \"#utility.yul\":1671:1680   */\n      dup9\n        /* \"#utility.yul\":1667:1689   */\n      add\n        /* \"#utility.yul\":1646:1699   */\n      tag_33\n      jump\t// in\n    tag_43:\n        /* \"#utility.yul\":1636:1699   */\n      swap3\n      pop\n        /* \"#utility.yul\":1591:1709   */\n      pop\n        /* \"#utility.yul\":1776:1778   */\n      0x60\n        /* \"#utility.yul\":1765:1774   */\n      dup6\n        /* \"#utility.yul\":1761:1779   */\n      add\n        /* \"#utility.yul\":1748:1780   */\n      calldataload\n        /* \"#utility.yul\":1807:1825   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1799:1805   */\n      dup2\n        /* \"#utility.yul\":1796:1826   */\n      gt\n        /* \"#utility.yul\":1793:1910   */\n      iszero\n      tag_44\n      jumpi\n        /* \"#utility.yul\":1829:1908   */\n      tag_45\n      tag_46\n      jump\t// in\n    tag_45:\n        /* \"#utility.yul\":1793:1910   */\n    tag_44:\n        /* \"#utility.yul\":1934:1996   */\n      tag_47\n        /* \"#utility.yul\":1988:1995   */\n      dup8\n        /* \"#utility.yul\":1979:1985   */\n      dup3\n        /* \"#utility.yul\":1968:1977   */\n      dup9\n        /* \"#utility.yul\":1964:1986   */\n      add\n        /* \"#utility.yul\":1934:1996   */\n      tag_27\n      jump\t// in\n    tag_47:\n        /* \"#utility.yul\":1924:1996   */\n      swap2\n      pop\n        /* \"#utility.yul\":1719:2006   */\n      pop\n        /* \"#utility.yul\":1070:2013   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2019:2134   */\n    tag_48:\n        /* \"#utility.yul\":2104:2127   */\n      tag_50\n        /* \"#utility.yul\":2121:2126   */\n      dup2\n        /* \"#utility.yul\":2104:2127   */\n      tag_51\n      jump\t// in\n    tag_50:\n        /* \"#utility.yul\":2099:2102   */\n      dup3\n        /* \"#utility.yul\":2092:2128   */\n      mstore\n        /* \"#utility.yul\":2019:2134   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2140:2358   */\n    tag_9:\n        /* \"#utility.yul\":2231:2235   */\n      0x00\n        /* \"#utility.yul\":2269:2271   */\n      0x20\n        /* \"#utility.yul\":2258:2267   */\n      dup3\n        /* \"#utility.yul\":2254:2272   */\n      add\n        /* \"#utility.yul\":2246:2272   */\n      swap1\n      pop\n        /* \"#utility.yul\":2282:2351   */\n      tag_53\n        /* \"#utility.yul\":2348:2349   */\n      0x00\n        /* \"#utility.yul\":2337:2346   */\n      dup4\n        /* \"#utility.yul\":2333:2350   */\n      add\n        /* \"#utility.yul\":2324:2330   */\n      dup5\n        /* \"#utility.yul\":2282:2351   */\n      tag_48\n      jump\t// in\n    tag_53:\n        /* \"#utility.yul\":2140:2358   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2364:2493   */\n    tag_17:\n        /* \"#utility.yul\":2398:2404   */\n      0x00\n        /* \"#utility.yul\":2425:2445   */\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n        /* \"#utility.yul\":2415:2445   */\n      swap1\n      pop\n        /* \"#utility.yul\":2454:2487   */\n      tag_57\n        /* \"#utility.yul\":2482:2486   */\n      dup3\n        /* \"#utility.yul\":2474:2480   */\n      dup3\n        /* \"#utility.yul\":2454:2487   */\n      tag_58\n      jump\t// in\n    tag_57:\n        /* \"#utility.yul\":2364:2493   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2499:2574   */\n    tag_56:\n        /* \"#utility.yul\":2532:2538   */\n      0x00\n        /* \"#utility.yul\":2565:2567   */\n      0x40\n        /* \"#utility.yul\":2559:2568   */\n      mload\n        /* \"#utility.yul\":2549:2568   */\n      swap1\n      pop\n        /* \"#utility.yul\":2499:2574   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":2580:2887   */\n    tag_16:\n        /* \"#utility.yul\":2641:2645   */\n      0x00\n        /* \"#utility.yul\":2731:2749   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2723:2729   */\n      dup3\n        /* \"#utility.yul\":2720:2750   */\n      gt\n        /* \"#utility.yul\":2717:2773   */\n      iszero\n      tag_61\n      jumpi\n        /* \"#utility.yul\":2753:2771   */\n      tag_62\n      tag_63\n      jump\t// in\n    tag_62:\n        /* \"#utility.yul\":2717:2773   */\n    tag_61:\n        /* \"#utility.yul\":2791:2820   */\n      tag_64\n        /* \"#utility.yul\":2813:2819   */\n      dup3\n        /* \"#utility.yul\":2791:2820   */\n      tag_65\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":2783:2820   */\n      swap1\n      pop\n        /* \"#utility.yul\":2875:2879   */\n      0x20\n        /* \"#utility.yul\":2869:2873   */\n      dup2\n        /* \"#utility.yul\":2865:2880   */\n      add\n        /* \"#utility.yul\":2857:2880   */\n      swap1\n      pop\n        /* \"#utility.yul\":2580:2887   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2893:2989   */\n    tag_66:\n        /* \"#utility.yul\":2930:2937   */\n      0x00\n        /* \"#utility.yul\":2959:2983   */\n      tag_68\n        /* \"#utility.yul\":2977:2982   */\n      dup3\n        /* \"#utility.yul\":2959:2983   */\n      tag_69\n      jump\t// in\n    tag_68:\n        /* \"#utility.yul\":2948:2983   */\n      swap1\n      pop\n        /* \"#utility.yul\":2893:2989   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2995:3144   */\n    tag_51:\n        /* \"#utility.yul\":3031:3038   */\n      0x00\n        /* \"#utility.yul\":3071:3137   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3064:3069   */\n      dup3\n        /* \"#utility.yul\":3060:3138   */\n      and\n        /* \"#utility.yul\":3049:3138   */\n      swap1\n      pop\n        /* \"#utility.yul\":2995:3144   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3150:3276   */\n    tag_69:\n        /* \"#utility.yul\":3187:3194   */\n      0x00\n        /* \"#utility.yul\":3227:3269   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3220:3225   */\n      dup3\n        /* \"#utility.yul\":3216:3270   */\n      and\n        /* \"#utility.yul\":3205:3270   */\n      swap1\n      pop\n        /* \"#utility.yul\":3150:3276   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3282:3359   */\n    tag_72:\n        /* \"#utility.yul\":3319:3326   */\n      0x00\n        /* \"#utility.yul\":3348:3353   */\n      dup2\n        /* \"#utility.yul\":3337:3353   */\n      swap1\n      pop\n        /* \"#utility.yul\":3282:3359   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3365:3519   */\n    tag_22:\n        /* \"#utility.yul\":3449:3455   */\n      dup3\n        /* \"#utility.yul\":3444:3447   */\n      dup2\n        /* \"#utility.yul\":3439:3442   */\n      dup4\n        /* \"#utility.yul\":3426:3456   */\n      calldatacopy\n        /* \"#utility.yul\":3511:3512   */\n      0x00\n        /* \"#utility.yul\":3502:3508   */\n      dup4\n        /* \"#utility.yul\":3497:3500   */\n      dup4\n        /* \"#utility.yul\":3493:3509   */\n      add\n        /* \"#utility.yul\":3486:3513   */\n      mstore\n        /* \"#utility.yul\":3365:3519   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3525:3806   */\n    tag_58:\n        /* \"#utility.yul\":3608:3635   */\n      tag_76\n        /* \"#utility.yul\":3630:3634   */\n      dup3\n        /* \"#utility.yul\":3608:3635   */\n      tag_65\n      jump\t// in\n    tag_76:\n        /* \"#utility.yul\":3600:3606   */\n      dup2\n        /* \"#utility.yul\":3596:3636   */\n      add\n        /* \"#utility.yul\":3738:3744   */\n      dup2\n        /* \"#utility.yul\":3726:3736   */\n      dup2\n        /* \"#utility.yul\":3723:3745   */\n      lt\n        /* \"#utility.yul\":3702:3720   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3690:3700   */\n      dup3\n        /* \"#utility.yul\":3687:3721   */\n      gt\n        /* \"#utility.yul\":3684:3746   */\n      or\n        /* \"#utility.yul\":3681:3769   */\n      iszero\n      tag_77\n      jumpi\n        /* \"#utility.yul\":3749:3767   */\n      tag_78\n      tag_63\n      jump\t// in\n    tag_78:\n        /* \"#utility.yul\":3681:3769   */\n    tag_77:\n        /* \"#utility.yul\":3789:3799   */\n      dup1\n        /* \"#utility.yul\":3785:3787   */\n      0x40\n        /* \"#utility.yul\":3778:3800   */\n      mstore\n        /* \"#utility.yul\":3568:3806   */\n      pop\n        /* \"#utility.yul\":3525:3806   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3812:3992   */\n    tag_63:\n        /* \"#utility.yul\":3860:3937   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3857:3858   */\n      0x00\n        /* \"#utility.yul\":3850:3938   */\n      mstore\n        /* \"#utility.yul\":3957:3961   */\n      0x41\n        /* \"#utility.yul\":3954:3955   */\n      0x04\n        /* \"#utility.yul\":3947:3962   */\n      mstore\n        /* \"#utility.yul\":3981:3985   */\n      0x24\n        /* \"#utility.yul\":3978:3979   */\n      0x00\n        /* \"#utility.yul\":3971:3986   */\n      revert\n        /* \"#utility.yul\":3998:4115   */\n    tag_31:\n        /* \"#utility.yul\":4107:4108   */\n      0x00\n        /* \"#utility.yul\":4104:4105   */\n      dup1\n        /* \"#utility.yul\":4097:4109   */\n      revert\n        /* \"#utility.yul\":4121:4238   */\n    tag_20:\n        /* \"#utility.yul\":4230:4231   */\n      0x00\n        /* \"#utility.yul\":4227:4228   */\n      dup1\n        /* \"#utility.yul\":4220:4232   */\n      revert\n        /* \"#utility.yul\":4244:4361   */\n    tag_46:\n        /* \"#utility.yul\":4353:4354   */\n      0x00\n        /* \"#utility.yul\":4350:4351   */\n      dup1\n        /* \"#utility.yul\":4343:4355   */\n      revert\n        /* \"#utility.yul\":4367:4484   */\n    tag_40:\n        /* \"#utility.yul\":4476:4477   */\n      0x00\n        /* \"#utility.yul\":4473:4474   */\n      dup1\n        /* \"#utility.yul\":4466:4478   */\n      revert\n        /* \"#utility.yul\":4490:4592   */\n    tag_65:\n        /* \"#utility.yul\":4531:4537   */\n      0x00\n        /* \"#utility.yul\":4582:4584   */\n      0x1f\n        /* \"#utility.yul\":4578:4585   */\n      not\n        /* \"#utility.yul\":4573:4575   */\n      0x1f\n        /* \"#utility.yul\":4566:4571   */\n      dup4\n        /* \"#utility.yul\":4562:4576   */\n      add\n        /* \"#utility.yul\":4558:4586   */\n      and\n        /* \"#utility.yul\":4548:4586   */\n      swap1\n      pop\n        /* \"#utility.yul\":4490:4592   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4598:4720   */\n    tag_26:\n        /* \"#utility.yul\":4671:4695   */\n      tag_86\n        /* \"#utility.yul\":4689:4694   */\n      dup2\n        /* \"#utility.yul\":4671:4695   */\n      tag_66\n      jump\t// in\n    tag_86:\n        /* \"#utility.yul\":4664:4669   */\n      dup2\n        /* \"#utility.yul\":4661:4696   */\n      eq\n        /* \"#utility.yul\":4651:4714   */\n      tag_87\n      jumpi\n        /* \"#utility.yul\":4710:4711   */\n      0x00\n        /* \"#utility.yul\":4707:4708   */\n      dup1\n        /* \"#utility.yul\":4700:4712   */\n      revert\n        /* \"#utility.yul\":4651:4714   */\n    tag_87:\n        /* \"#utility.yul\":4598:4720   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4726:4848   */\n    tag_36:\n        /* \"#utility.yul\":4799:4823   */\n      tag_89\n        /* \"#utility.yul\":4817:4822   */\n      dup2\n        /* \"#utility.yul\":4799:4823   */\n      tag_72\n      jump\t// in\n    tag_89:\n        /* \"#utility.yul\":4792:4797   */\n      dup2\n        /* \"#utility.yul\":4789:4824   */\n      eq\n        /* \"#utility.yul\":4779:4842   */\n      tag_90\n      jumpi\n        /* \"#utility.yul\":4838:4839   */\n      0x00\n        /* \"#utility.yul\":4835:4836   */\n      dup1\n        /* \"#utility.yul\":4828:4840   */\n      revert\n        /* \"#utility.yul\":4779:4842   */\n    tag_90:\n        /* \"#utility.yul\":4726:4848   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220115588fbcdf5dab7da7bd34dccded22eacbc217b00e408cac02adfbab4e87b9164736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610371806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063150b7a0214610030575b600080fd5b61004a6004803603810190610045919061010e565b610060565b60405161005791906101a0565b60405180910390f35b600063150b7a0260e01b9050949350505050565b6000610087610082846101e0565b6101bb565b9050828152602081018484840111156100a3576100a26102ed565b5b6100ae848285610279565b509392505050565b6000813590506100c58161030d565b92915050565b600082601f8301126100e0576100df6102e8565b5b81356100f0848260208601610074565b91505092915050565b60008135905061010881610324565b92915050565b60008060008060808587031215610128576101276102f7565b5b6000610136878288016100b6565b9450506020610147878288016100b6565b9350506040610158878288016100f9565b925050606085013567ffffffffffffffff811115610179576101786102f2565b5b610185878288016100cb565b91505092959194509250565b61019a81610223565b82525050565b60006020820190506101b56000830184610191565b92915050565b60006101c56101d6565b90506101d18282610288565b919050565b6000604051905090565b600067ffffffffffffffff8211156101fb576101fa6102b9565b5b610204826102fc565b9050602081019050919050565b600061021c8261024f565b9050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b610291826102fc565b810181811067ffffffffffffffff821117156102b0576102af6102b9565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b61031681610211565b811461032157600080fd5b50565b61032d8161026f565b811461033857600080fd5b5056fea2646970667358221220115588fbcdf5dab7da7bd34dccded22eacbc217b00e408cac02adfbab4e87b9164736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x371 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x10E JUMP JUMPDEST PUSH2 0x60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57 SWAP2 SWAP1 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH4 0x150B7A02 PUSH1 0xE0 SHL SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x87 PUSH2 0x82 DUP5 PUSH2 0x1E0 JUMP JUMPDEST PUSH2 0x1BB JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0xA3 JUMPI PUSH2 0xA2 PUSH2 0x2ED JUMP JUMPDEST JUMPDEST PUSH2 0xAE DUP5 DUP3 DUP6 PUSH2 0x279 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC5 DUP2 PUSH2 0x30D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xE0 JUMPI PUSH2 0xDF PUSH2 0x2E8 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xF0 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x74 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x108 DUP2 PUSH2 0x324 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x128 JUMPI PUSH2 0x127 PUSH2 0x2F7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x136 DUP8 DUP3 DUP9 ADD PUSH2 0xB6 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x147 DUP8 DUP3 DUP9 ADD PUSH2 0xB6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x158 DUP8 DUP3 DUP9 ADD PUSH2 0xF9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x179 JUMPI PUSH2 0x178 PUSH2 0x2F2 JUMP JUMPDEST JUMPDEST PUSH2 0x185 DUP8 DUP3 DUP9 ADD PUSH2 0xCB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x19A DUP2 PUSH2 0x223 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x191 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C5 PUSH2 0x1D6 JUMP JUMPDEST SWAP1 POP PUSH2 0x1D1 DUP3 DUP3 PUSH2 0x288 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1FB JUMPI PUSH2 0x1FA PUSH2 0x2B9 JUMP JUMPDEST JUMPDEST PUSH2 0x204 DUP3 PUSH2 0x2FC JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21C DUP3 PUSH2 0x24F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH2 0x291 DUP3 PUSH2 0x2FC JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2B0 JUMPI PUSH2 0x2AF PUSH2 0x2B9 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x316 DUP2 PUSH2 0x211 JUMP JUMPDEST DUP2 EQ PUSH2 0x321 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x32D DUP2 PUSH2 0x26F JUMP JUMPDEST DUP2 EQ PUSH2 0x338 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GT SSTORE DUP9 0xFB 0xCD CREATE2 0xDA 0xB7 0xDA PUSH28 0xD34DCCDED22EACBC217B00E408CAC02ADFBAB4E87B9164736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "399:391:8:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@onERC721Received_709": {
									"entryPoint": 96,
									"id": 709,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 116,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 182,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 203,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 249,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 270,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_encode_t_bytes4_to_t_bytes4_fromStack": {
									"entryPoint": 401,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
									"entryPoint": 416,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 443,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 470,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 480,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 529,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 547,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 591,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 623,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory": {
									"entryPoint": 633,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"finalize_allocation": {
									"entryPoint": 648,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 697,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 744,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 749,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 754,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 759,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 764,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 781,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 804,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4851:15",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "90:327:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "100:74:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "166:6:15"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "125:40:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "125:48:15"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "109:15:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "109:65:15"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "100:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "190:5:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "197:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "183:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "183:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "183:21:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "213:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "228:5:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "235:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "224:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "224:16:15"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "217:3:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "278:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "280:77:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "280:79:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "280:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "259:3:15"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "264:6:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "255:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "255:16:15"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "273:3:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "252:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "252:25:15"
															},
															"nodeType": "YulIf",
															"src": "249:112:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "394:3:15"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "399:3:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "404:6:15"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "370:23:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "370:41:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "370:41:15"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "63:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "68:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "76:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "84:5:15",
														"type": ""
													}
												],
												"src": "7:410:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "475:87:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "485:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "507:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "494:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "494:20:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "485:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "523:26:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "523:33:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "523:33:15"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "453:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "461:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "469:5:15",
														"type": ""
													}
												],
												"src": "423:139:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "642:277:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "691:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "693:77:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "693:79:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "693:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "670:6:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "678:4:15",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "666:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "666:17:15"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "685:3:15"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "662:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "662:27:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "655:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "655:35:15"
															},
															"nodeType": "YulIf",
															"src": "652:122:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "783:34:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "810:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "797:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "797:20:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "787:6:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "826:87:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "886:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "894:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "882:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "882:17:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "901:6:15"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "909:3:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "835:46:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "835:78:15"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "826:5:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "620:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "628:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "636:5:15",
														"type": ""
													}
												],
												"src": "581:338:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "977:87:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "987:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1009:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "996:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "996:20:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "987:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1052:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1025:26:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1025:33:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1025:33:15"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "955:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "963:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "971:5:15",
														"type": ""
													}
												],
												"src": "925:139:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1196:817:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1243:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1245:77:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1245:79:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1245:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1217:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1226:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1213:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1213:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1238:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1209:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1209:33:15"
															},
															"nodeType": "YulIf",
															"src": "1206:120:15"
														},
														{
															"nodeType": "YulBlock",
															"src": "1336:117:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1351:15:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1365:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1355:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1380:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1415:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1426:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1411:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1411:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1435:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1390:20:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1390:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1380:6:15"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1463:118:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1478:16:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1492:2:15",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1482:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1508:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1543:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1554:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1539:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1539:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1563:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1518:20:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1518:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1508:6:15"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1591:118:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1606:16:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1620:2:15",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1610:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1636:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1671:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1682:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1667:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1667:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1691:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1646:20:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1646:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "1636:6:15"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1719:287:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1734:46:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1765:9:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1776:2:15",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1761:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1761:18:15"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "1748:12:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1748:32:15"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1738:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1827:83:15",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "1829:77:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1829:79:15"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1829:79:15"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1799:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1807:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1796:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1796:30:15"
																	},
																	"nodeType": "YulIf",
																	"src": "1793:117:15"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1924:72:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1968:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1979:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1964:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1964:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1988:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "1934:29:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1934:62:15"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "1924:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1142:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1153:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1165:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1173:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1181:6:15",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "1189:6:15",
														"type": ""
													}
												],
												"src": "1070:943:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2082:52:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2099:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2121:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "2104:16:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2104:23:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2092:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2092:36:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2092:36:15"
														}
													]
												},
												"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2070:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2077:3:15",
														"type": ""
													}
												],
												"src": "2019:115:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2236:122:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2246:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2258:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2269:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2254:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2254:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2246:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2324:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2337:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2348:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2333:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2333:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2282:41:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2282:69:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2282:69:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2208:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2220:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2231:4:15",
														"type": ""
													}
												],
												"src": "2140:218:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2405:88:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2415:30:15",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "2425:18:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2425:20:15"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "2415:6:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2474:6:15"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "2482:4:15"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "2454:19:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2454:33:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2454:33:15"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2389:4:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2398:6:15",
														"type": ""
													}
												],
												"src": "2364:129:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2539:35:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2549:19:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2565:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2559:5:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2559:9:15"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "2549:6:15"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2532:6:15",
														"type": ""
													}
												],
												"src": "2499:75:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2646:241:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2751:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2753:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2753:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2753:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2723:6:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2731:18:15",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2720:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2720:30:15"
															},
															"nodeType": "YulIf",
															"src": "2717:56:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2783:37:15",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2813:6:15"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "2791:21:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2791:29:15"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "2783:4:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2857:23:15",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "2869:4:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2875:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2865:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2865:15:15"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "2857:4:15"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2630:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2641:4:15",
														"type": ""
													}
												],
												"src": "2580:307:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2938:51:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2948:35:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2977:5:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2959:17:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2959:24:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2948:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2920:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2930:7:15",
														"type": ""
													}
												],
												"src": "2893:96:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3039:105:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3049:89:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3064:5:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3071:66:15",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3060:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3060:78:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3049:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3021:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3031:7:15",
														"type": ""
													}
												],
												"src": "2995:149:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3195:81:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3205:65:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3220:5:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3227:42:15",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3216:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3216:54:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3205:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3177:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3187:7:15",
														"type": ""
													}
												],
												"src": "3150:126:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3327:32:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3337:16:15",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3348:5:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3337:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3309:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3319:7:15",
														"type": ""
													}
												],
												"src": "3282:77:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3416:103:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "3439:3:15"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "3444:3:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3449:6:15"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "3426:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3426:30:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3426:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "3497:3:15"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3502:6:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3493:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3493:16:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3511:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3486:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3486:27:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3486:27:15"
														}
													]
												},
												"name": "copy_calldata_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "3398:3:15",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "3403:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3408:6:15",
														"type": ""
													}
												],
												"src": "3365:154:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3568:238:15",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3578:58:15",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3600:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "3630:4:15"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "3608:21:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3608:27:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3596:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3596:40:15"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "3582:10:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3747:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3749:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3749:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3749:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "3690:10:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3702:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3687:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3687:34:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "3726:10:15"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3738:6:15"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "3723:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3723:22:15"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "3684:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3684:62:15"
															},
															"nodeType": "YulIf",
															"src": "3681:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3785:2:15",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "3789:10:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3778:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3778:22:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3778:22:15"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3554:6:15",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "3562:4:15",
														"type": ""
													}
												],
												"src": "3525:281:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3840:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3857:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3860:77:15",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3850:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3850:88:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3850:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3954:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3957:4:15",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3947:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3947:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3947:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3978:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3981:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3971:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3971:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3971:15:15"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "3812:180:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4087:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4104:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4107:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4097:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4097:12:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4097:12:15"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "3998:117:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4210:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4227:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4230:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4220:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4220:12:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4220:12:15"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "4121:117:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4333:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4350:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4353:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4343:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4343:12:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4343:12:15"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "4244:117:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4456:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4473:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4476:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4466:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4466:12:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4466:12:15"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "4367:117:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4538:54:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4548:38:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4566:5:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4573:2:15",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4562:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4562:14:15"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4582:2:15",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "4578:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4578:7:15"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4558:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4558:28:15"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "4548:6:15"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4521:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "4531:6:15",
														"type": ""
													}
												],
												"src": "4490:102:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4641:79:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4698:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4707:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4710:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4700:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4700:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4700:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4664:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4689:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "4671:17:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4671:24:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4661:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4661:35:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4654:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4654:43:15"
															},
															"nodeType": "YulIf",
															"src": "4651:63:15"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4634:5:15",
														"type": ""
													}
												],
												"src": "4598:122:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4769:79:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4826:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4835:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4838:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4828:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4828:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4828:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4792:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4817:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "4799:17:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4799:24:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4789:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4789:35:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4782:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4782:43:15"
															},
															"nodeType": "YulIf",
															"src": "4779:63:15"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4762:5:15",
														"type": ""
													}
												],
												"src": "4726:122:15"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes4(value))\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 15,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c8063150b7a0214610030575b600080fd5b61004a6004803603810190610045919061010e565b610060565b60405161005791906101a0565b60405180910390f35b600063150b7a0260e01b9050949350505050565b6000610087610082846101e0565b6101bb565b9050828152602081018484840111156100a3576100a26102ed565b5b6100ae848285610279565b509392505050565b6000813590506100c58161030d565b92915050565b600082601f8301126100e0576100df6102e8565b5b81356100f0848260208601610074565b91505092915050565b60008135905061010881610324565b92915050565b60008060008060808587031215610128576101276102f7565b5b6000610136878288016100b6565b9450506020610147878288016100b6565b9350506040610158878288016100f9565b925050606085013567ffffffffffffffff811115610179576101786102f2565b5b610185878288016100cb565b91505092959194509250565b61019a81610223565b82525050565b60006020820190506101b56000830184610191565b92915050565b60006101c56101d6565b90506101d18282610288565b919050565b6000604051905090565b600067ffffffffffffffff8211156101fb576101fa6102b9565b5b610204826102fc565b9050602081019050919050565b600061021c8261024f565b9050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b610291826102fc565b810181811067ffffffffffffffff821117156102b0576102af6102b9565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b61031681610211565b811461032157600080fd5b50565b61032d8161026f565b811461033857600080fd5b5056fea2646970667358221220115588fbcdf5dab7da7bd34dccded22eacbc217b00e408cac02adfbab4e87b9164736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x10E JUMP JUMPDEST PUSH2 0x60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57 SWAP2 SWAP1 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH4 0x150B7A02 PUSH1 0xE0 SHL SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x87 PUSH2 0x82 DUP5 PUSH2 0x1E0 JUMP JUMPDEST PUSH2 0x1BB JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0xA3 JUMPI PUSH2 0xA2 PUSH2 0x2ED JUMP JUMPDEST JUMPDEST PUSH2 0xAE DUP5 DUP3 DUP6 PUSH2 0x279 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC5 DUP2 PUSH2 0x30D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xE0 JUMPI PUSH2 0xDF PUSH2 0x2E8 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xF0 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x74 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x108 DUP2 PUSH2 0x324 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x128 JUMPI PUSH2 0x127 PUSH2 0x2F7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x136 DUP8 DUP3 DUP9 ADD PUSH2 0xB6 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x147 DUP8 DUP3 DUP9 ADD PUSH2 0xB6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x158 DUP8 DUP3 DUP9 ADD PUSH2 0xF9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x179 JUMPI PUSH2 0x178 PUSH2 0x2F2 JUMP JUMPDEST JUMPDEST PUSH2 0x185 DUP8 DUP3 DUP9 ADD PUSH2 0xCB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x19A DUP2 PUSH2 0x223 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x191 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C5 PUSH2 0x1D6 JUMP JUMPDEST SWAP1 POP PUSH2 0x1D1 DUP3 DUP3 PUSH2 0x288 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1FB JUMPI PUSH2 0x1FA PUSH2 0x2B9 JUMP JUMPDEST JUMPDEST PUSH2 0x204 DUP3 PUSH2 0x2FC JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21C DUP3 PUSH2 0x24F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH2 0x291 DUP3 PUSH2 0x2FC JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2B0 JUMPI PUSH2 0x2AF PUSH2 0x2B9 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x316 DUP2 PUSH2 0x211 JUMP JUMPDEST DUP2 EQ PUSH2 0x321 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x32D DUP2 PUSH2 0x26F JUMP JUMPDEST DUP2 EQ PUSH2 0x338 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GT SSTORE DUP9 0xFB 0xCD CREATE2 0xDA 0xB7 0xDA PUSH28 0xD34DCCDED22EACBC217B00E408CAC02ADFBAB4E87B9164736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "399:391:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;588:200;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;726:6;751:30;;;744:37;;588:200;;;;;;:::o;7:410:15:-;84:5;109:65;125:48;166:6;125:48;:::i;:::-;109:65;:::i;:::-;100:74;;197:6;190:5;183:21;235:4;228:5;224:16;273:3;264:6;259:3;255:16;252:25;249:112;;;280:79;;:::i;:::-;249:112;370:41;404:6;399:3;394;370:41;:::i;:::-;90:327;7:410;;;;;:::o;423:139::-;469:5;507:6;494:20;485:29;;523:33;550:5;523:33;:::i;:::-;423:139;;;;:::o;581:338::-;636:5;685:3;678:4;670:6;666:17;662:27;652:122;;693:79;;:::i;:::-;652:122;810:6;797:20;835:78;909:3;901:6;894:4;886:6;882:17;835:78;:::i;:::-;826:87;;642:277;581:338;;;;:::o;925:139::-;971:5;1009:6;996:20;987:29;;1025:33;1052:5;1025:33;:::i;:::-;925:139;;;;:::o;1070:943::-;1165:6;1173;1181;1189;1238:3;1226:9;1217:7;1213:23;1209:33;1206:120;;;1245:79;;:::i;:::-;1206:120;1365:1;1390:53;1435:7;1426:6;1415:9;1411:22;1390:53;:::i;:::-;1380:63;;1336:117;1492:2;1518:53;1563:7;1554:6;1543:9;1539:22;1518:53;:::i;:::-;1508:63;;1463:118;1620:2;1646:53;1691:7;1682:6;1671:9;1667:22;1646:53;:::i;:::-;1636:63;;1591:118;1776:2;1765:9;1761:18;1748:32;1807:18;1799:6;1796:30;1793:117;;;1829:79;;:::i;:::-;1793:117;1934:62;1988:7;1979:6;1968:9;1964:22;1934:62;:::i;:::-;1924:72;;1719:287;1070:943;;;;;;;:::o;2019:115::-;2104:23;2121:5;2104:23;:::i;:::-;2099:3;2092:36;2019:115;;:::o;2140:218::-;2231:4;2269:2;2258:9;2254:18;2246:26;;2282:69;2348:1;2337:9;2333:17;2324:6;2282:69;:::i;:::-;2140:218;;;;:::o;2364:129::-;2398:6;2425:20;;:::i;:::-;2415:30;;2454:33;2482:4;2474:6;2454:33;:::i;:::-;2364:129;;;:::o;2499:75::-;2532:6;2565:2;2559:9;2549:19;;2499:75;:::o;2580:307::-;2641:4;2731:18;2723:6;2720:30;2717:56;;;2753:18;;:::i;:::-;2717:56;2791:29;2813:6;2791:29;:::i;:::-;2783:37;;2875:4;2869;2865:15;2857:23;;2580:307;;;:::o;2893:96::-;2930:7;2959:24;2977:5;2959:24;:::i;:::-;2948:35;;2893:96;;;:::o;2995:149::-;3031:7;3071:66;3064:5;3060:78;3049:89;;2995:149;;;:::o;3150:126::-;3187:7;3227:42;3220:5;3216:54;3205:65;;3150:126;;;:::o;3282:77::-;3319:7;3348:5;3337:16;;3282:77;;;:::o;3365:154::-;3449:6;3444:3;3439;3426:30;3511:1;3502:6;3497:3;3493:16;3486:27;3365:154;;;:::o;3525:281::-;3608:27;3630:4;3608:27;:::i;:::-;3600:6;3596:40;3738:6;3726:10;3723:22;3702:18;3690:10;3687:34;3684:62;3681:88;;;3749:18;;:::i;:::-;3681:88;3789:10;3785:2;3778:22;3568:238;3525:281;;:::o;3812:180::-;3860:77;3857:1;3850:88;3957:4;3954:1;3947:15;3981:4;3978:1;3971:15;3998:117;4107:1;4104;4097:12;4121:117;4230:1;4227;4220:12;4244:117;4353:1;4350;4343:12;4367:117;4476:1;4473;4466:12;4490:102;4531:6;4582:2;4578:7;4573:2;4566:5;4562:14;4558:28;4548:38;;4490:102;;;:::o;4598:122::-;4671:24;4689:5;4671:24;:::i;:::-;4664:5;4661:35;4651:63;;4710:1;4707;4700:12;4651:63;4598:122;:::o;4726:::-;4799:24;4817:5;4799:24;:::i;:::-;4792:5;4789:35;4779:63;;4838:1;4835;4828:12;4779:63;4726:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "176200",
								"executionCost": "220",
								"totalCost": "176420"
							},
							"external": {
								"onERC721Received(address,address,uint256,bytes)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 399,
									"end": 790,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 399,
									"end": 790,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 399,
									"end": 790,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 399,
									"end": 790,
									"name": "CALLVALUE",
									"source": 8
								},
								{
									"begin": 399,
									"end": 790,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 399,
									"end": 790,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 399,
									"end": 790,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 399,
									"end": 790,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 399,
									"end": 790,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 399,
									"end": 790,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 399,
									"end": 790,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 399,
									"end": 790,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 399,
									"end": 790,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 399,
									"end": 790,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 399,
									"end": 790,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 399,
									"end": 790,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 399,
									"end": 790,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 399,
									"end": 790,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 399,
									"end": 790,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 399,
									"end": 790,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 399,
									"end": 790,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220115588fbcdf5dab7da7bd34dccded22eacbc217b00e408cac02adfbab4e87b9164736f6c63430008070033",
									".code": [
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 399,
											"end": 790,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 399,
											"end": 790,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 399,
											"end": 790,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 399,
											"end": 790,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 399,
											"end": 790,
											"name": "tag",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 399,
											"end": 790,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 399,
											"end": 790,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 399,
											"end": 790,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH",
											"source": 8,
											"value": "150B7A02"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 399,
											"end": 790,
											"name": "tag",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 399,
											"end": 790,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "tag",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "tag",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "tag",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "tag",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "tag",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 726,
											"end": 732,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 781,
											"name": "PUSH",
											"source": 8,
											"value": "150B7A02"
										},
										{
											"begin": 751,
											"end": 781,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 751,
											"end": 781,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 744,
											"end": 781,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 744,
											"end": 781,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 417,
											"name": "tag",
											"source": 15,
											"value": "12"
										},
										{
											"begin": 7,
											"end": 417,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 84,
											"end": 89,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 109,
											"end": 174,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "14"
										},
										{
											"begin": 125,
											"end": 173,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "15"
										},
										{
											"begin": 166,
											"end": 172,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 125,
											"end": 173,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "16"
										},
										{
											"begin": 125,
											"end": 173,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 125,
											"end": 173,
											"name": "tag",
											"source": 15,
											"value": "15"
										},
										{
											"begin": 125,
											"end": 173,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 109,
											"end": 174,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "17"
										},
										{
											"begin": 109,
											"end": 174,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 109,
											"end": 174,
											"name": "tag",
											"source": 15,
											"value": "14"
										},
										{
											"begin": 109,
											"end": 174,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 100,
											"end": 174,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 100,
											"end": 174,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 197,
											"end": 203,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 190,
											"end": 195,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 183,
											"end": 204,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 235,
											"end": 239,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 228,
											"end": 233,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 224,
											"end": 240,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 273,
											"end": 276,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 264,
											"end": 270,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 259,
											"end": 262,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 255,
											"end": 271,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 252,
											"end": 277,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 249,
											"end": 361,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 249,
											"end": 361,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "18"
										},
										{
											"begin": 249,
											"end": 361,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 280,
											"end": 359,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "19"
										},
										{
											"begin": 280,
											"end": 359,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 280,
											"end": 359,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 280,
											"end": 359,
											"name": "tag",
											"source": 15,
											"value": "19"
										},
										{
											"begin": 280,
											"end": 359,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 249,
											"end": 361,
											"name": "tag",
											"source": 15,
											"value": "18"
										},
										{
											"begin": 249,
											"end": 361,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 370,
											"end": 411,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "21"
										},
										{
											"begin": 404,
											"end": 410,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 399,
											"end": 402,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 394,
											"end": 397,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 370,
											"end": 411,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "22"
										},
										{
											"begin": 370,
											"end": 411,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 370,
											"end": 411,
											"name": "tag",
											"source": 15,
											"value": "21"
										},
										{
											"begin": 370,
											"end": 411,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 90,
											"end": 417,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7,
											"end": 417,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 7,
											"end": 417,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 7,
											"end": 417,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7,
											"end": 417,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7,
											"end": 417,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7,
											"end": 417,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 423,
											"end": 562,
											"name": "tag",
											"source": 15,
											"value": "23"
										},
										{
											"begin": 423,
											"end": 562,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 469,
											"end": 474,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 507,
											"end": 513,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 494,
											"end": 514,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 485,
											"end": 514,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 485,
											"end": 514,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 523,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "25"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 523,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "26"
										},
										{
											"begin": 523,
											"end": 556,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 523,
											"end": 556,
											"name": "tag",
											"source": 15,
											"value": "25"
										},
										{
											"begin": 523,
											"end": 556,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 423,
											"end": 562,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 423,
											"end": 562,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 423,
											"end": 562,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 423,
											"end": 562,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 423,
											"end": 562,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 581,
											"end": 919,
											"name": "tag",
											"source": 15,
											"value": "27"
										},
										{
											"begin": 581,
											"end": 919,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 636,
											"end": 641,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 685,
											"end": 688,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 678,
											"end": 682,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 670,
											"end": 676,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 666,
											"end": 683,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 662,
											"end": 689,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 652,
											"end": 774,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "29"
										},
										{
											"begin": 652,
											"end": 774,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 693,
											"end": 772,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "30"
										},
										{
											"begin": 693,
											"end": 772,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "31"
										},
										{
											"begin": 693,
											"end": 772,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 693,
											"end": 772,
											"name": "tag",
											"source": 15,
											"value": "30"
										},
										{
											"begin": 693,
											"end": 772,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 652,
											"end": 774,
											"name": "tag",
											"source": 15,
											"value": "29"
										},
										{
											"begin": 652,
											"end": 774,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 810,
											"end": 816,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 797,
											"end": 817,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 835,
											"end": 913,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "32"
										},
										{
											"begin": 909,
											"end": 912,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 901,
											"end": 907,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 894,
											"end": 898,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 886,
											"end": 892,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 882,
											"end": 899,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 835,
											"end": 913,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "12"
										},
										{
											"begin": 835,
											"end": 913,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 835,
											"end": 913,
											"name": "tag",
											"source": 15,
											"value": "32"
										},
										{
											"begin": 835,
											"end": 913,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 826,
											"end": 913,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 826,
											"end": 913,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 642,
											"end": 919,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 581,
											"end": 919,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 581,
											"end": 919,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 581,
											"end": 919,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 581,
											"end": 919,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 581,
											"end": 919,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 925,
											"end": 1064,
											"name": "tag",
											"source": 15,
											"value": "33"
										},
										{
											"begin": 925,
											"end": 1064,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 971,
											"end": 976,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1009,
											"end": 1015,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 996,
											"end": 1016,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 987,
											"end": 1016,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 987,
											"end": 1016,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1025,
											"end": 1058,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "35"
										},
										{
											"begin": 1052,
											"end": 1057,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1025,
											"end": 1058,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "36"
										},
										{
											"begin": 1025,
											"end": 1058,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 1025,
											"end": 1058,
											"name": "tag",
											"source": 15,
											"value": "35"
										},
										{
											"begin": 1025,
											"end": 1058,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 925,
											"end": 1064,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 925,
											"end": 1064,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 925,
											"end": 1064,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 925,
											"end": 1064,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 925,
											"end": 1064,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 1070,
											"end": 2013,
											"name": "tag",
											"source": 15,
											"value": "6"
										},
										{
											"begin": 1070,
											"end": 2013,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1165,
											"end": 1171,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1173,
											"end": 1179,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1181,
											"end": 1187,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1189,
											"end": 1195,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1238,
											"end": 1241,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 1226,
											"end": 1235,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 1217,
											"end": 1224,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 1213,
											"end": 1236,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 1209,
											"end": 1242,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 1206,
											"end": 1326,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1206,
											"end": 1326,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "38"
										},
										{
											"begin": 1206,
											"end": 1326,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1245,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "39"
										},
										{
											"begin": 1245,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1245,
											"end": 1324,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 1245,
											"end": 1324,
											"name": "tag",
											"source": 15,
											"value": "39"
										},
										{
											"begin": 1245,
											"end": 1324,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1206,
											"end": 1326,
											"name": "tag",
											"source": 15,
											"value": "38"
										},
										{
											"begin": 1206,
											"end": 1326,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1365,
											"end": 1366,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1390,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "41"
										},
										{
											"begin": 1435,
											"end": 1442,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 1426,
											"end": 1432,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1415,
											"end": 1424,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 1411,
											"end": 1433,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1390,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "23"
										},
										{
											"begin": 1390,
											"end": 1443,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 1390,
											"end": 1443,
											"name": "tag",
											"source": 15,
											"value": "41"
										},
										{
											"begin": 1390,
											"end": 1443,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1380,
											"end": 1443,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 1380,
											"end": 1443,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1336,
											"end": 1453,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1492,
											"end": 1494,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1518,
											"end": 1571,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "42"
										},
										{
											"begin": 1563,
											"end": 1570,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 1554,
											"end": 1560,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1543,
											"end": 1552,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 1539,
											"end": 1561,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1518,
											"end": 1571,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "23"
										},
										{
											"begin": 1518,
											"end": 1571,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 1518,
											"end": 1571,
											"name": "tag",
											"source": 15,
											"value": "42"
										},
										{
											"begin": 1518,
											"end": 1571,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1508,
											"end": 1571,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 1508,
											"end": 1571,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1463,
											"end": 1581,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1620,
											"end": 1622,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1646,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "43"
										},
										{
											"begin": 1691,
											"end": 1698,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 1682,
											"end": 1688,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1671,
											"end": 1680,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 1667,
											"end": 1689,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1646,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "33"
										},
										{
											"begin": 1646,
											"end": 1699,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 1646,
											"end": 1699,
											"name": "tag",
											"source": 15,
											"value": "43"
										},
										{
											"begin": 1646,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1636,
											"end": 1699,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1636,
											"end": 1699,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1591,
											"end": 1709,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1776,
											"end": 1778,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 1765,
											"end": 1774,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 1761,
											"end": 1779,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1748,
											"end": 1780,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 1807,
											"end": 1825,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1799,
											"end": 1805,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1796,
											"end": 1826,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 1793,
											"end": 1910,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1793,
											"end": 1910,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 1793,
											"end": 1910,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1829,
											"end": 1908,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "45"
										},
										{
											"begin": 1829,
											"end": 1908,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "46"
										},
										{
											"begin": 1829,
											"end": 1908,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 1829,
											"end": 1908,
											"name": "tag",
											"source": 15,
											"value": "45"
										},
										{
											"begin": 1829,
											"end": 1908,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1793,
											"end": 1910,
											"name": "tag",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 1793,
											"end": 1910,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1934,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "47"
										},
										{
											"begin": 1988,
											"end": 1995,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 1979,
											"end": 1985,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1968,
											"end": 1977,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 1964,
											"end": 1986,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1934,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "27"
										},
										{
											"begin": 1934,
											"end": 1996,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 1934,
											"end": 1996,
											"name": "tag",
											"source": 15,
											"value": "47"
										},
										{
											"begin": 1934,
											"end": 1996,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1924,
											"end": 1996,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1924,
											"end": 1996,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1719,
											"end": 2006,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1070,
											"end": 2013,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1070,
											"end": 2013,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 1070,
											"end": 2013,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1070,
											"end": 2013,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 1070,
											"end": 2013,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1070,
											"end": 2013,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1070,
											"end": 2013,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1070,
											"end": 2013,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 2019,
											"end": 2134,
											"name": "tag",
											"source": 15,
											"value": "48"
										},
										{
											"begin": 2019,
											"end": 2134,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2104,
											"end": 2127,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "50"
										},
										{
											"begin": 2121,
											"end": 2126,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2104,
											"end": 2127,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "51"
										},
										{
											"begin": 2104,
											"end": 2127,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 2104,
											"end": 2127,
											"name": "tag",
											"source": 15,
											"value": "50"
										},
										{
											"begin": 2104,
											"end": 2127,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2099,
											"end": 2102,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2092,
											"end": 2128,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2019,
											"end": 2134,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2019,
											"end": 2134,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2019,
											"end": 2134,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 2140,
											"end": 2358,
											"name": "tag",
											"source": 15,
											"value": "9"
										},
										{
											"begin": 2140,
											"end": 2358,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2231,
											"end": 2235,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2269,
											"end": 2271,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2258,
											"end": 2267,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2254,
											"end": 2272,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2246,
											"end": 2272,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2246,
											"end": 2272,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2282,
											"end": 2351,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "53"
										},
										{
											"begin": 2348,
											"end": 2349,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2337,
											"end": 2346,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 2333,
											"end": 2350,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2324,
											"end": 2330,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 2282,
											"end": 2351,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "48"
										},
										{
											"begin": 2282,
											"end": 2351,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 2282,
											"end": 2351,
											"name": "tag",
											"source": 15,
											"value": "53"
										},
										{
											"begin": 2282,
											"end": 2351,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2140,
											"end": 2358,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2140,
											"end": 2358,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2140,
											"end": 2358,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2140,
											"end": 2358,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2140,
											"end": 2358,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 2364,
											"end": 2493,
											"name": "tag",
											"source": 15,
											"value": "17"
										},
										{
											"begin": 2364,
											"end": 2493,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2398,
											"end": 2404,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2425,
											"end": 2445,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "55"
										},
										{
											"begin": 2425,
											"end": 2445,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "56"
										},
										{
											"begin": 2425,
											"end": 2445,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 2425,
											"end": 2445,
											"name": "tag",
											"source": 15,
											"value": "55"
										},
										{
											"begin": 2425,
											"end": 2445,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2415,
											"end": 2445,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2415,
											"end": 2445,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2454,
											"end": 2487,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "57"
										},
										{
											"begin": 2482,
											"end": 2486,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2474,
											"end": 2480,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2454,
											"end": 2487,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "58"
										},
										{
											"begin": 2454,
											"end": 2487,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 2454,
											"end": 2487,
											"name": "tag",
											"source": 15,
											"value": "57"
										},
										{
											"begin": 2454,
											"end": 2487,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2364,
											"end": 2493,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2364,
											"end": 2493,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2364,
											"end": 2493,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2364,
											"end": 2493,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 2499,
											"end": 2574,
											"name": "tag",
											"source": 15,
											"value": "56"
										},
										{
											"begin": 2499,
											"end": 2574,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2532,
											"end": 2538,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2565,
											"end": 2567,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2559,
											"end": 2568,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 2549,
											"end": 2568,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2549,
											"end": 2568,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2499,
											"end": 2574,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2499,
											"end": 2574,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 2580,
											"end": 2887,
											"name": "tag",
											"source": 15,
											"value": "16"
										},
										{
											"begin": 2580,
											"end": 2887,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2641,
											"end": 2645,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2731,
											"end": 2749,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2723,
											"end": 2729,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2720,
											"end": 2750,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 2717,
											"end": 2773,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2717,
											"end": 2773,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "61"
										},
										{
											"begin": 2717,
											"end": 2773,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2753,
											"end": 2771,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "62"
										},
										{
											"begin": 2753,
											"end": 2771,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "63"
										},
										{
											"begin": 2753,
											"end": 2771,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 2753,
											"end": 2771,
											"name": "tag",
											"source": 15,
											"value": "62"
										},
										{
											"begin": 2753,
											"end": 2771,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2717,
											"end": 2773,
											"name": "tag",
											"source": 15,
											"value": "61"
										},
										{
											"begin": 2717,
											"end": 2773,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2791,
											"end": 2820,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 2813,
											"end": 2819,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2791,
											"end": 2820,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "65"
										},
										{
											"begin": 2791,
											"end": 2820,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 2791,
											"end": 2820,
											"name": "tag",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 2791,
											"end": 2820,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2783,
											"end": 2820,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2783,
											"end": 2820,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2875,
											"end": 2879,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2869,
											"end": 2873,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2865,
											"end": 2880,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2857,
											"end": 2880,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2857,
											"end": 2880,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2580,
											"end": 2887,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2580,
											"end": 2887,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2580,
											"end": 2887,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2580,
											"end": 2887,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 2893,
											"end": 2989,
											"name": "tag",
											"source": 15,
											"value": "66"
										},
										{
											"begin": 2893,
											"end": 2989,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2930,
											"end": 2937,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2959,
											"end": 2983,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "68"
										},
										{
											"begin": 2977,
											"end": 2982,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2959,
											"end": 2983,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "69"
										},
										{
											"begin": 2959,
											"end": 2983,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 2959,
											"end": 2983,
											"name": "tag",
											"source": 15,
											"value": "68"
										},
										{
											"begin": 2959,
											"end": 2983,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2948,
											"end": 2983,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2948,
											"end": 2983,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2893,
											"end": 2989,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2893,
											"end": 2989,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2893,
											"end": 2989,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2893,
											"end": 2989,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 2995,
											"end": 3144,
											"name": "tag",
											"source": 15,
											"value": "51"
										},
										{
											"begin": 2995,
											"end": 3144,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3031,
											"end": 3038,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3071,
											"end": 3137,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3064,
											"end": 3069,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3060,
											"end": 3138,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 3049,
											"end": 3138,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3049,
											"end": 3138,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2995,
											"end": 3144,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2995,
											"end": 3144,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2995,
											"end": 3144,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2995,
											"end": 3144,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 3150,
											"end": 3276,
											"name": "tag",
											"source": 15,
											"value": "69"
										},
										{
											"begin": 3150,
											"end": 3276,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3187,
											"end": 3194,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3227,
											"end": 3269,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3220,
											"end": 3225,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3216,
											"end": 3270,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 3205,
											"end": 3270,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3205,
											"end": 3270,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3150,
											"end": 3276,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3150,
											"end": 3276,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3150,
											"end": 3276,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3150,
											"end": 3276,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 3282,
											"end": 3359,
											"name": "tag",
											"source": 15,
											"value": "72"
										},
										{
											"begin": 3282,
											"end": 3359,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3319,
											"end": 3326,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3348,
											"end": 3353,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3337,
											"end": 3353,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3337,
											"end": 3353,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3282,
											"end": 3359,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3282,
											"end": 3359,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3282,
											"end": 3359,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3282,
											"end": 3359,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 3365,
											"end": 3519,
											"name": "tag",
											"source": 15,
											"value": "22"
										},
										{
											"begin": 3365,
											"end": 3519,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3449,
											"end": 3455,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3444,
											"end": 3447,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3439,
											"end": 3442,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3426,
											"end": 3456,
											"name": "CALLDATACOPY",
											"source": 15
										},
										{
											"begin": 3511,
											"end": 3512,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3502,
											"end": 3508,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3497,
											"end": 3500,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3493,
											"end": 3509,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3486,
											"end": 3513,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3365,
											"end": 3519,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3365,
											"end": 3519,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3365,
											"end": 3519,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3365,
											"end": 3519,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 3525,
											"end": 3806,
											"name": "tag",
											"source": 15,
											"value": "58"
										},
										{
											"begin": 3525,
											"end": 3806,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3608,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "76"
										},
										{
											"begin": 3630,
											"end": 3634,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3608,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "65"
										},
										{
											"begin": 3608,
											"end": 3635,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 3608,
											"end": 3635,
											"name": "tag",
											"source": 15,
											"value": "76"
										},
										{
											"begin": 3608,
											"end": 3635,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3600,
											"end": 3606,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3596,
											"end": 3636,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3738,
											"end": 3744,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3726,
											"end": 3736,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3723,
											"end": 3745,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 3702,
											"end": 3720,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3690,
											"end": 3700,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3687,
											"end": 3721,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 3684,
											"end": 3746,
											"name": "OR",
											"source": 15
										},
										{
											"begin": 3681,
											"end": 3769,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3681,
											"end": 3769,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "77"
										},
										{
											"begin": 3681,
											"end": 3769,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3749,
											"end": 3767,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "78"
										},
										{
											"begin": 3749,
											"end": 3767,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "63"
										},
										{
											"begin": 3749,
											"end": 3767,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 3749,
											"end": 3767,
											"name": "tag",
											"source": 15,
											"value": "78"
										},
										{
											"begin": 3749,
											"end": 3767,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3681,
											"end": 3769,
											"name": "tag",
											"source": 15,
											"value": "77"
										},
										{
											"begin": 3681,
											"end": 3769,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3789,
											"end": 3799,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3785,
											"end": 3787,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 3778,
											"end": 3800,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3568,
											"end": 3806,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3525,
											"end": 3806,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3525,
											"end": 3806,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3525,
											"end": 3806,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 3812,
											"end": 3992,
											"name": "tag",
											"source": 15,
											"value": "63"
										},
										{
											"begin": 3812,
											"end": 3992,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3860,
											"end": 3937,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3857,
											"end": 3858,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3850,
											"end": 3938,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3957,
											"end": 3961,
											"name": "PUSH",
											"source": 15,
											"value": "41"
										},
										{
											"begin": 3954,
											"end": 3955,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 3947,
											"end": 3962,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3981,
											"end": 3985,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 3978,
											"end": 3979,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3971,
											"end": 3986,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 3998,
											"end": 4115,
											"name": "tag",
											"source": 15,
											"value": "31"
										},
										{
											"begin": 3998,
											"end": 4115,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4107,
											"end": 4108,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4104,
											"end": 4105,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4097,
											"end": 4109,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 4121,
											"end": 4238,
											"name": "tag",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4121,
											"end": 4238,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4230,
											"end": 4231,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4227,
											"end": 4228,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4220,
											"end": 4232,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 4244,
											"end": 4361,
											"name": "tag",
											"source": 15,
											"value": "46"
										},
										{
											"begin": 4244,
											"end": 4361,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4353,
											"end": 4354,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4350,
											"end": 4351,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4343,
											"end": 4355,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 4367,
											"end": 4484,
											"name": "tag",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 4367,
											"end": 4484,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4476,
											"end": 4477,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4473,
											"end": 4474,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4466,
											"end": 4478,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 4490,
											"end": 4592,
											"name": "tag",
											"source": 15,
											"value": "65"
										},
										{
											"begin": 4490,
											"end": 4592,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4531,
											"end": 4537,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4582,
											"end": 4584,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 4578,
											"end": 4585,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 4573,
											"end": 4575,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 4566,
											"end": 4571,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4562,
											"end": 4576,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4558,
											"end": 4586,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 4548,
											"end": 4586,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4548,
											"end": 4586,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4490,
											"end": 4592,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4490,
											"end": 4592,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4490,
											"end": 4592,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4490,
											"end": 4592,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 4598,
											"end": 4720,
											"name": "tag",
											"source": 15,
											"value": "26"
										},
										{
											"begin": 4598,
											"end": 4720,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4671,
											"end": 4695,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "86"
										},
										{
											"begin": 4689,
											"end": 4694,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4671,
											"end": 4695,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "66"
										},
										{
											"begin": 4671,
											"end": 4695,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 4671,
											"end": 4695,
											"name": "tag",
											"source": 15,
											"value": "86"
										},
										{
											"begin": 4671,
											"end": 4695,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4664,
											"end": 4669,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4661,
											"end": 4696,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 4651,
											"end": 4714,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "87"
										},
										{
											"begin": 4651,
											"end": 4714,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4710,
											"end": 4711,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4707,
											"end": 4708,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4700,
											"end": 4712,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 4651,
											"end": 4714,
											"name": "tag",
											"source": 15,
											"value": "87"
										},
										{
											"begin": 4651,
											"end": 4714,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4598,
											"end": 4720,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4598,
											"end": 4720,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 4726,
											"end": 4848,
											"name": "tag",
											"source": 15,
											"value": "36"
										},
										{
											"begin": 4726,
											"end": 4848,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4799,
											"end": 4823,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "89"
										},
										{
											"begin": 4817,
											"end": 4822,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4799,
											"end": 4823,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "72"
										},
										{
											"begin": 4799,
											"end": 4823,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 4799,
											"end": 4823,
											"name": "tag",
											"source": 15,
											"value": "89"
										},
										{
											"begin": 4799,
											"end": 4823,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4792,
											"end": 4797,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4789,
											"end": 4824,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 4779,
											"end": 4842,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "90"
										},
										{
											"begin": 4779,
											"end": 4842,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4838,
											"end": 4839,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4835,
											"end": 4836,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4828,
											"end": 4840,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 4779,
											"end": 4842,
											"name": "tag",
											"source": 15,
											"value": "90"
										},
										{
											"begin": 4779,
											"end": 4842,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4726,
											"end": 4848,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4726,
											"end": 4848,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC721Receiver} interface. Accepts all token transfers. Make sure the contract is able to use its token with {IERC721-safeTransferFrom}, {IERC721-approve} or {IERC721-setApprovalForAll}.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":\"ERC721Holder\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":{\"keccak256\":\"0x0108bf6a6ebd5f96678bed33a35947537263f96766131ee91461fb6485805028\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ae2d274bf3d56a6d49a9bbd0a4871c54997a82551eb3eb1c0c39dc98698ff8bf\",\"dweb:/ipfs/QmTT7ty5DPGAmRnx94Xu3TUDYGSPDVLN2bppJAjjedrg1e\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":194:8255  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":194:8255  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212205826ef7cf11bbe4053e1f56e9130157b606743914f94cd51f1aadbd16e849d4f64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205826ef7cf11bbe4053e1f56e9130157b606743914f94cd51f1aadbd16e849d4f64736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PC 0x26 0xEF PUSH29 0xF11BBE4053E1F56E9130157B606743914F94CD51F1AADBD16E849D4F64 PUSH20 0x6F6C634300080700330000000000000000000000 ",
							"sourceMap": "194:8061:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205826ef7cf11bbe4053e1f56e9130157b606743914f94cd51f1aadbd16e849d4f64736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PC 0x26 0xEF PUSH29 0xF11BBE4053E1F56E9130157B606743914F94CD51F1AADBD16E849D4F64 PUSH20 0x6F6C634300080700330000000000000000000000 ",
							"sourceMap": "194:8061:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205826ef7cf11bbe4053e1f56e9130157b606743914f94cd51f1aadbd16e849d4f64736f6c63430008070033",
									".code": [
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This contract module is inspired from  https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol OpenZepplin Ownable contract. The code is forked from Ownable except  2 functions i.e. renounce and transfer ownership. In our usecase, we do not require users  to transfer or renounce ownership as it is always aligned with the original user.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This contract module is inspired from  https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol OpenZepplin Ownable contract. The code is forked from Ownable except  2 functions i.e. renounce and transfer ownership. In our usecase, we do not require users  to transfer or renounce ownership as it is always aligned with the original user.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"Ownable.sol\":{\"keccak256\":\"0x27859030a47f274f647c726d7154207782f41c299a471ad984fb937a96726e9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://03dc74c9002f66b328d3cf2146f8684fe1a4574b771948933a39ecda1467ab89\",\"dweb:/ipfs/QmPJq3SLdXqcbaejBs6UxANXkaYryGwjBSixR2CcWzVgQw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1071,
								"contract": "Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Practice NFT.sol": {
				"TwoFactor": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_backupWallet",
									"type": "address"
								}
							],
							"name": "init",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "sendERC1155FundsToBackupWallet",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "sendERC721FundsToBackupWallet",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "sendNativeFundsToBackupWallet",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferERC721AssetsToWallet",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "transferNativeAssetToWallet",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Practice NFT.sol\":467:5841  contract TwoFactor is Ownable, ERC721Holder, ERC1155Holder {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"Ownable.sol\":818:850  _transferOwnership(_msgSender()) */\n  tag_4\n    /* \"Ownable.sol\":837:849  _msgSender() */\n  tag_5\n    /* \"Ownable.sol\":837:847  _msgSender */\n  shl(0x20, tag_6)\n    /* \"Ownable.sol\":837:849  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_5:\n    /* \"Ownable.sol\":818:836  _transferOwnership */\n  shl(0x20, tag_7)\n    /* \"Ownable.sol\":818:850  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_4:\n    /* \"Practice NFT.sol\":467:5841  contract TwoFactor is Ownable, ERC721Holder, ERC1155Holder {... */\n  jump(tag_8)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_6:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"Ownable.sol\":1377:1564  function _transferOwnership(address newOwner) internal virtual {... */\ntag_7:\n    /* \"Ownable.sol\":1450:1466  address oldOwner */\n  0x00\n    /* \"Ownable.sol\":1469:1475  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"Ownable.sol\":1450:1475  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"Ownable.sol\":1494:1502  newOwner */\n  dup2\n    /* \"Ownable.sol\":1485:1491  _owner */\n  0x00\n  dup1\n    /* \"Ownable.sol\":1485:1502  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Ownable.sol\":1548:1556  newOwner */\n  dup2\n    /* \"Ownable.sol\":1517:1557  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"Ownable.sol\":1538:1546  oldOwner */\n  dup2\n    /* \"Ownable.sol\":1517:1557  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"Ownable.sol\":1440:1564  {... */\n  pop\n    /* \"Ownable.sol\":1377:1564  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"Practice NFT.sol\":467:5841  contract TwoFactor is Ownable, ERC721Holder, ERC1155Holder {... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Practice NFT.sol\":467:5841  contract TwoFactor is Ownable, ERC721Holder, ERC1155Holder {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x71b4bc99\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x71b4bc99\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x8c7f807b\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xbc197c81\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xf09a4016\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xf23a6e61\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_14:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x027f81ed\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x150b7a02\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x450b2ad7\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x6354a2f7\n      eq\n      tag_7\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":387:608  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      pop\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Practice NFT.sol\":1672:1873  function transferERC721AssetsToWallet(... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      pop\n      tag_25\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      tag_28\n      jump\t// in\n    tag_25:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":588:788  function onERC721Received(... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      pop\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Practice NFT.sol\":4242:4371  function sendNativeFundsToBackupWallet() external onlyOwner {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_36\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      pop\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      stop\n        /* \"Practice NFT.sol\":4032:4236  function sendERC1155FundsToBackupWallet(... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_39\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      pop\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_41:\n      tag_42\n      jump\t// in\n    tag_40:\n      stop\n        /* \"Practice NFT.sol\":3824:4026  function sendERC721FundsToBackupWallet(... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_43\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_43:\n      pop\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_45:\n      tag_46\n      jump\t// in\n    tag_44:\n      stop\n        /* \"Practice NFT.sol\":2360:2482  function transferNativeAssetToWallet() external onlyOwner {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      pop\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      stop\n        /* \"Ownable.sol\":933:1018  function owner() public view virtual returns (address) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_50\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_50:\n      pop\n      tag_51\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":724:971  function onERC1155BatchReceived(... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_55\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_55:\n      pop\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_57\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_57:\n      tag_59\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      tag_60\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Practice NFT.sol\":644:1144  function init(address _sender, address _backupWallet) external {        ... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_61\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_61:\n      pop\n      tag_62\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_63\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      tag_65\n      jump\t// in\n    tag_62:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":499:718  function onERC1155Received(... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_66\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_66:\n      pop\n      tag_67\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_68\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n      tag_70\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      tag_71\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":387:608  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_21:\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":489:493  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":527:561  type(IERC1155Receiver).interfaceId */\n      0x4e2312e000000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":512:561  interfaceId == type(IERC1155Receiver).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":512:523  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":512:561  interfaceId == type(IERC1155Receiver).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":512:601  interfaceId == type(IERC1155Receiver).interfaceId || super.supportsInterface(interfaceId) */\n      dup1\n      tag_73\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":565:601  super.supportsInterface(interfaceId) */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":589:600  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":565:588  super.supportsInterface */\n      tag_75\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":565:601  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_74:\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":512:601  interfaceId == type(IERC1155Receiver).interfaceId || super.supportsInterface(interfaceId) */\n    tag_73:\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":505:601  return interfaceId == type(IERC1155Receiver).interfaceId || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":387:608  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Practice NFT.sol\":1672:1873  function transferERC721AssetsToWallet(... */\n    tag_28:\n        /* \"Ownable.sol\":1156:1168  _msgSender() */\n      tag_77\n        /* \"Ownable.sol\":1156:1166  _msgSender */\n      tag_78\n        /* \"Ownable.sol\":1156:1168  _msgSender() */\n      jump\t// in\n    tag_77:\n        /* \"Ownable.sol\":1145:1168  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Ownable.sol\":1145:1152  owner() */\n      tag_79\n        /* \"Ownable.sol\":1145:1150  owner */\n      tag_52\n        /* \"Ownable.sol\":1145:1152  owner() */\n      jump\t// in\n    tag_79:\n        /* \"Ownable.sol\":1145:1168  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Ownable.sol\":1137:1205  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_80\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_81\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_80:\n        /* \"Practice NFT.sol\":1805:1866  _transferERC721FundsToAddress(owner(), tokenAddress, tokenId) */\n      tag_84\n        /* \"Practice NFT.sol\":1835:1842  owner() */\n      tag_85\n        /* \"Practice NFT.sol\":1835:1840  owner */\n      tag_52\n        /* \"Practice NFT.sol\":1835:1842  owner() */\n      jump\t// in\n    tag_85:\n        /* \"Practice NFT.sol\":1844:1856  tokenAddress */\n      dup4\n        /* \"Practice NFT.sol\":1858:1865  tokenId */\n      dup4\n        /* \"Practice NFT.sol\":1805:1834  _transferERC721FundsToAddress */\n      tag_86\n        /* \"Practice NFT.sol\":1805:1866  _transferERC721FundsToAddress(owner(), tokenAddress, tokenId) */\n      jump\t// in\n    tag_84:\n        /* \"Practice NFT.sol\":1672:1873  function transferERC721AssetsToWallet(... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":588:788  function onERC721Received(... */\n    tag_33:\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":726:732  bytes4 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":751:781  this.onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":744:781  return this.onERC721Received.selector */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":588:788  function onERC721Received(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Practice NFT.sol\":4242:4371  function sendNativeFundsToBackupWallet() external onlyOwner {... */\n    tag_38:\n        /* \"Ownable.sol\":1156:1168  _msgSender() */\n      tag_89\n        /* \"Ownable.sol\":1156:1166  _msgSender */\n      tag_78\n        /* \"Ownable.sol\":1156:1168  _msgSender() */\n      jump\t// in\n    tag_89:\n        /* \"Ownable.sol\":1145:1168  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Ownable.sol\":1145:1152  owner() */\n      tag_90\n        /* \"Ownable.sol\":1145:1150  owner */\n      tag_52\n        /* \"Ownable.sol\":1145:1152  owner() */\n      jump\t// in\n    tag_90:\n        /* \"Ownable.sol\":1145:1168  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Ownable.sol\":1137:1205  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_91\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_92\n      swap1\n      tag_82\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_91:\n        /* \"Practice NFT.sol\":4312:4364  _transferNativeFundsToAddress(payable(backupWallet)) */\n      tag_94\n        /* \"Practice NFT.sol\":4350:4362  backupWallet */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Practice NFT.sol\":4312:4341  _transferNativeFundsToAddress */\n      tag_95\n        /* \"Practice NFT.sol\":4312:4364  _transferNativeFundsToAddress(payable(backupWallet)) */\n      jump\t// in\n    tag_94:\n        /* \"Practice NFT.sol\":4242:4371  function sendNativeFundsToBackupWallet() external onlyOwner {... */\n      jump\t// out\n        /* \"Practice NFT.sol\":4032:4236  function sendERC1155FundsToBackupWallet(... */\n    tag_42:\n        /* \"Ownable.sol\":1156:1168  _msgSender() */\n      tag_97\n        /* \"Ownable.sol\":1156:1166  _msgSender */\n      tag_78\n        /* \"Ownable.sol\":1156:1168  _msgSender() */\n      jump\t// in\n    tag_97:\n        /* \"Ownable.sol\":1145:1168  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Ownable.sol\":1145:1152  owner() */\n      tag_98\n        /* \"Ownable.sol\":1145:1150  owner */\n      tag_52\n        /* \"Ownable.sol\":1145:1152  owner() */\n      jump\t// in\n    tag_98:\n        /* \"Ownable.sol\":1145:1168  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Ownable.sol\":1137:1205  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_99\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_100\n      swap1\n      tag_82\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_99:\n        /* \"Practice NFT.sol\":4162:4229  _transferERC1155FundsToAddress(backupWallet, tokenAddress, tokenId) */\n      tag_102\n        /* \"Practice NFT.sol\":4193:4205  backupWallet */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Practice NFT.sol\":4207:4219  tokenAddress */\n      dup4\n        /* \"Practice NFT.sol\":4221:4228  tokenId */\n      dup4\n        /* \"Practice NFT.sol\":4162:4192  _transferERC1155FundsToAddress */\n      tag_103\n        /* \"Practice NFT.sol\":4162:4229  _transferERC1155FundsToAddress(backupWallet, tokenAddress, tokenId) */\n      jump\t// in\n    tag_102:\n        /* \"Practice NFT.sol\":4032:4236  function sendERC1155FundsToBackupWallet(... */\n      pop\n      pop\n      jump\t// out\n        /* \"Practice NFT.sol\":3824:4026  function sendERC721FundsToBackupWallet(... */\n    tag_46:\n        /* \"Ownable.sol\":1156:1168  _msgSender() */\n      tag_105\n        /* \"Ownable.sol\":1156:1166  _msgSender */\n      tag_78\n        /* \"Ownable.sol\":1156:1168  _msgSender() */\n      jump\t// in\n    tag_105:\n        /* \"Ownable.sol\":1145:1168  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Ownable.sol\":1145:1152  owner() */\n      tag_106\n        /* \"Ownable.sol\":1145:1150  owner */\n      tag_52\n        /* \"Ownable.sol\":1145:1152  owner() */\n      jump\t// in\n    tag_106:\n        /* \"Ownable.sol\":1145:1168  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Ownable.sol\":1137:1205  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_107\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_108\n      swap1\n      tag_82\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_107:\n        /* \"Practice NFT.sol\":3953:4019  _transferERC721FundsToAddress(backupWallet, tokenAddress, tokenId) */\n      tag_110\n        /* \"Practice NFT.sol\":3983:3995  backupWallet */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Practice NFT.sol\":3997:4009  tokenAddress */\n      dup4\n        /* \"Practice NFT.sol\":4011:4018  tokenId */\n      dup4\n        /* \"Practice NFT.sol\":3953:3982  _transferERC721FundsToAddress */\n      tag_86\n        /* \"Practice NFT.sol\":3953:4019  _transferERC721FundsToAddress(backupWallet, tokenAddress, tokenId) */\n      jump\t// in\n    tag_110:\n        /* \"Practice NFT.sol\":3824:4026  function sendERC721FundsToBackupWallet(... */\n      pop\n      pop\n      jump\t// out\n        /* \"Practice NFT.sol\":2360:2482  function transferNativeAssetToWallet() external onlyOwner {... */\n    tag_49:\n        /* \"Ownable.sol\":1156:1168  _msgSender() */\n      tag_112\n        /* \"Ownable.sol\":1156:1166  _msgSender */\n      tag_78\n        /* \"Ownable.sol\":1156:1168  _msgSender() */\n      jump\t// in\n    tag_112:\n        /* \"Ownable.sol\":1145:1168  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Ownable.sol\":1145:1152  owner() */\n      tag_113\n        /* \"Ownable.sol\":1145:1150  owner */\n      tag_52\n        /* \"Ownable.sol\":1145:1152  owner() */\n      jump\t// in\n    tag_113:\n        /* \"Ownable.sol\":1145:1168  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Ownable.sol\":1137:1205  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_114\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_115\n      swap1\n      tag_82\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_114:\n        /* \"Practice NFT.sol\":2428:2475  _transferNativeFundsToAddress(payable(owner())) */\n      tag_117\n        /* \"Practice NFT.sol\":2466:2473  owner() */\n      tag_118\n        /* \"Practice NFT.sol\":2466:2471  owner */\n      tag_52\n        /* \"Practice NFT.sol\":2466:2473  owner() */\n      jump\t// in\n    tag_118:\n        /* \"Practice NFT.sol\":2428:2457  _transferNativeFundsToAddress */\n      tag_95\n        /* \"Practice NFT.sol\":2428:2475  _transferNativeFundsToAddress(payable(owner())) */\n      jump\t// in\n    tag_117:\n        /* \"Practice NFT.sol\":2360:2482  function transferNativeAssetToWallet() external onlyOwner {... */\n      jump\t// out\n        /* \"Ownable.sol\":933:1018  function owner() public view virtual returns (address) {... */\n    tag_52:\n        /* \"Ownable.sol\":979:986  address */\n      0x00\n        /* \"Ownable.sol\":1005:1011  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Ownable.sol\":998:1011  return _owner */\n      swap1\n      pop\n        /* \"Ownable.sol\":933:1018  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":724:971  function onERC1155BatchReceived(... */\n    tag_59:\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":903:909  bytes4 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":928:964  this.onERC1155BatchReceived.selector */\n      shl(0xe0, 0xbc197c81)\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":921:964  return this.onERC1155BatchReceived.selector */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":724:971  function onERC1155BatchReceived(... */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Practice NFT.sol\":644:1144  function init(address _sender, address _backupWallet) external {        ... */\n    tag_65:\n        /* \"Practice NFT.sol\":751:752  0 */\n      0x00\n        /* \"Practice NFT.sol\":733:753  _sender!= address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Practice NFT.sol\":733:740  _sender */\n      dup3\n        /* \"Practice NFT.sol\":733:753  _sender!= address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"Practice NFT.sol\":725:788  require(_sender!= address(0), \"Sender address can not be zero\") */\n      tag_122\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_123\n      swap1\n      tag_124\n      jump\t// in\n    tag_123:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_122:\n        /* \"Practice NFT.sol\":830:831  0 */\n      0x00\n        /* \"Practice NFT.sol\":806:832  _backupWallet!= address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Practice NFT.sol\":806:819  _backupWallet */\n      dup2\n        /* \"Practice NFT.sol\":806:832  _backupWallet!= address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"Practice NFT.sol\":798:867  require(_backupWallet!= address(0), \"Backup address can not be zero\") */\n      tag_125\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_126\n      swap1\n      tag_127\n      jump\t// in\n    tag_126:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_125:\n        /* \"Practice NFT.sol\":901:908  _sender */\n      dup2\n        /* \"Practice NFT.sol\":885:908  _backupWallet!= _sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Practice NFT.sol\":885:898  _backupWallet */\n      dup2\n        /* \"Practice NFT.sol\":885:908  _backupWallet!= _sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"Practice NFT.sol\":877:959  require(_backupWallet!= _sender, \"Backup wallet can not be same as sender wallet\") */\n      tag_128\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_129\n      swap1\n      tag_130\n      jump\t// in\n    tag_129:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_128:\n        /* \"Practice NFT.sol\":994:999  false */\n      0x00\n        /* \"Practice NFT.sol\":977:999  isInitialized == false */\n      iszero\n      iszero\n        /* \"Practice NFT.sol\":977:990  isInitialized */\n      0x00\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Practice NFT.sol\":977:999  isInitialized == false */\n      iszero\n      iszero\n      eq\n        /* \"Practice NFT.sol\":969:1032  require(isInitialized == false, \"Contract already initialized\") */\n      tag_131\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_132\n      swap1\n      tag_133\n      jump\t// in\n    tag_132:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_131:\n        /* \"Practice NFT.sol\":1042:1069  _transferOwnership(_sender) */\n      tag_134\n        /* \"Practice NFT.sol\":1061:1068  _sender */\n      dup3\n        /* \"Practice NFT.sol\":1042:1060  _transferOwnership */\n      tag_135\n        /* \"Practice NFT.sol\":1042:1069  _transferOwnership(_sender) */\n      jump\t// in\n    tag_134:\n        /* \"Practice NFT.sol\":1094:1107  _backupWallet */\n      dup1\n        /* \"Practice NFT.sol\":1079:1091  backupWallet */\n      0x01\n      0x00\n        /* \"Practice NFT.sol\":1079:1107  backupWallet = _backupWallet */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Practice NFT.sol\":1133:1137  true */\n      0x01\n        /* \"Practice NFT.sol\":1117:1130  isInitialized */\n      0x00\n      0x14\n        /* \"Practice NFT.sol\":1117:1137  isInitialized = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Practice NFT.sol\":644:1144  function init(address _sender, address _backupWallet) external {        ... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":499:718  function onERC1155Received(... */\n    tag_70:\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":655:661  bytes4 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":680:711  this.onERC1155Received.selector */\n      shl(0xe0, 0xf23a6e61)\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":673:711  return this.onERC1155Received.selector */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":499:718  function onERC1155Received(... */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_75:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":914:918  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":952:977  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:948  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":930:977  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_78:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"Practice NFT.sol\":4377:4602  function _transferERC721FundsToAddress(... */\n    tag_86:\n        /* \"Practice NFT.sol\":4530:4542  tokenAddress */\n      dup2\n        /* \"Practice NFT.sol\":4522:4560  IERC721(tokenAddress).safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x42842e0e\n        /* \"Practice NFT.sol\":4569:4573  this */\n      address\n        /* \"Practice NFT.sol\":4576:4585  toAddress */\n      dup6\n        /* \"Practice NFT.sol\":4587:4594  tokenId */\n      dup5\n        /* \"Practice NFT.sol\":4522:4595  IERC721(tokenAddress).safeTransferFrom(address(this), toAddress, tokenId) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_140\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_141\n      jump\t// in\n    tag_140:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_142\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_142:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_144\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_144:\n      pop\n      pop\n      pop\n      pop\n        /* \"Practice NFT.sol\":4377:4602  function _transferERC721FundsToAddress(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Practice NFT.sol\":5631:5839  function _transferNativeFundsToAddress(address payable toAddress) private {... */\n    tag_95:\n        /* \"Practice NFT.sol\":5715:5730  uint256 balance */\n      0x00\n        /* \"Practice NFT.sol\":5733:5754  address(this).balance */\n      selfbalance\n        /* \"Practice NFT.sol\":5715:5754  uint256 balance = address(this).balance */\n      swap1\n      pop\n        /* \"Practice NFT.sol\":5778:5779  0 */\n      0x00\n        /* \"Practice NFT.sol\":5768:5775  balance */\n      dup2\n        /* \"Practice NFT.sol\":5768:5779  balance > 0 */\n      gt\n        /* \"Practice NFT.sol\":5764:5833  if (balance > 0) {... */\n      iszero\n      tag_146\n      jumpi\n        /* \"Practice NFT.sol\":5795:5804  toAddress */\n      dup2\n        /* \"Practice NFT.sol\":5795:5813  toAddress.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Practice NFT.sol\":5795:5822  toAddress.transfer(balance) */\n      0x08fc\n        /* \"Practice NFT.sol\":5814:5821  balance */\n      dup3\n        /* \"Practice NFT.sol\":5795:5822  toAddress.transfer(balance) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_148\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_148:\n      pop\n        /* \"Practice NFT.sol\":5764:5833  if (balance > 0) {... */\n    tag_146:\n        /* \"Practice NFT.sol\":5705:5839  {... */\n      pop\n        /* \"Practice NFT.sol\":5631:5839  function _transferNativeFundsToAddress(address payable toAddress) private {... */\n      pop\n      jump\t// out\n        /* \"Practice NFT.sol\":4608:5101  function _transferERC1155FundsToAddress(... */\n    tag_103:\n        /* \"Practice NFT.sol\":4754:4769  uint256 balance */\n      0x00\n        /* \"Practice NFT.sol\":4781:4793  tokenAddress */\n      dup3\n        /* \"Practice NFT.sol\":4772:4804  IERC1155(tokenAddress).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfdd58e\n        /* \"Practice NFT.sol\":4826:4830  this */\n      address\n        /* \"Practice NFT.sol\":4845:4852  tokenId */\n      dup5\n        /* \"Practice NFT.sol\":4772:4862  IERC1155(tokenAddress).balanceOf(... */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_150\n      swap3\n      swap2\n      swap1\n      tag_151\n      jump\t// in\n    tag_150:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_152\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_152:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_154\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_154:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_155\n      swap2\n      swap1\n      tag_156\n      jump\t// in\n    tag_155:\n        /* \"Practice NFT.sol\":4754:4862  uint256 balance = IERC1155(tokenAddress).balanceOf(... */\n      swap1\n      pop\n        /* \"Practice NFT.sol\":4886:4887  0 */\n      0x00\n        /* \"Practice NFT.sol\":4876:4883  balance */\n      dup2\n        /* \"Practice NFT.sol\":4876:4887  balance > 0 */\n      gt\n        /* \"Practice NFT.sol\":4872:5095  if (balance > 0) {... */\n      iszero\n      tag_157\n      jumpi\n        /* \"Practice NFT.sol\":4912:4924  tokenAddress */\n      dup3\n        /* \"Practice NFT.sol\":4903:4942  IERC1155(tokenAddress).safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf242432a\n        /* \"Practice NFT.sol\":4968:4972  this */\n      address\n        /* \"Practice NFT.sol\":4991:5000  toAddress */\n      dup7\n        /* \"Practice NFT.sol\":5018:5025  tokenId */\n      dup6\n        /* \"Practice NFT.sol\":5043:5050  balance */\n      dup6\n        /* \"Practice NFT.sol\":4903:5084  IERC1155(tokenAddress).safeTransferFrom(... */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_158\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_159\n      jump\t// in\n    tag_158:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_160\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_160:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_162\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_162:\n      pop\n      pop\n      pop\n      pop\n        /* \"Practice NFT.sol\":4872:5095  if (balance > 0) {... */\n    tag_157:\n        /* \"Practice NFT.sol\":4744:5101  {... */\n      pop\n        /* \"Practice NFT.sol\":4608:5101  function _transferERC1155FundsToAddress(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Ownable.sol\":1377:1564  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_135:\n        /* \"Ownable.sol\":1450:1466  address oldOwner */\n      0x00\n        /* \"Ownable.sol\":1469:1475  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Ownable.sol\":1450:1475  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"Ownable.sol\":1494:1502  newOwner */\n      dup2\n        /* \"Ownable.sol\":1485:1491  _owner */\n      0x00\n      dup1\n        /* \"Ownable.sol\":1485:1502  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Ownable.sol\":1548:1556  newOwner */\n      dup2\n        /* \"Ownable.sol\":1517:1557  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Ownable.sol\":1538:1546  oldOwner */\n      dup2\n        /* \"Ownable.sol\":1517:1557  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Ownable.sol\":1440:1564  {... */\n      pop\n        /* \"Ownable.sol\":1377:1564  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24:746   */\n    tag_165:\n        /* \"#utility.yul\":120:125   */\n      0x00\n        /* \"#utility.yul\":145:226   */\n      tag_167\n        /* \"#utility.yul\":161:225   */\n      tag_168\n        /* \"#utility.yul\":218:224   */\n      dup5\n        /* \"#utility.yul\":161:225   */\n      tag_169\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":145:226   */\n      tag_170\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":136:226   */\n      swap1\n      pop\n        /* \"#utility.yul\":246:251   */\n      dup1\n        /* \"#utility.yul\":275:281   */\n      dup4\n        /* \"#utility.yul\":268:273   */\n      dup3\n        /* \"#utility.yul\":261:282   */\n      mstore\n        /* \"#utility.yul\":309:313   */\n      0x20\n        /* \"#utility.yul\":302:307   */\n      dup3\n        /* \"#utility.yul\":298:314   */\n      add\n        /* \"#utility.yul\":291:314   */\n      swap1\n      pop\n        /* \"#utility.yul\":335:341   */\n      dup3\n        /* \"#utility.yul\":385:388   */\n      dup6\n        /* \"#utility.yul\":377:381   */\n      0x20\n        /* \"#utility.yul\":369:375   */\n      dup7\n        /* \"#utility.yul\":365:382   */\n      mul\n        /* \"#utility.yul\":360:363   */\n      dup3\n        /* \"#utility.yul\":356:383   */\n      add\n        /* \"#utility.yul\":353:389   */\n      gt\n        /* \"#utility.yul\":350:493   */\n      iszero\n      tag_171\n      jumpi\n        /* \"#utility.yul\":404:483   */\n      tag_172\n      tag_173\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":350:493   */\n    tag_171:\n        /* \"#utility.yul\":517:518   */\n      0x00\n        /* \"#utility.yul\":502:740   */\n    tag_174:\n        /* \"#utility.yul\":527:533   */\n      dup6\n        /* \"#utility.yul\":524:525   */\n      dup2\n        /* \"#utility.yul\":521:534   */\n      lt\n        /* \"#utility.yul\":502:740   */\n      iszero\n      tag_176\n      jumpi\n        /* \"#utility.yul\":595:598   */\n      dup2\n        /* \"#utility.yul\":624:661   */\n      tag_177\n        /* \"#utility.yul\":657:660   */\n      dup9\n        /* \"#utility.yul\":645:655   */\n      dup3\n        /* \"#utility.yul\":624:661   */\n      tag_178\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":619:622   */\n      dup5\n        /* \"#utility.yul\":612:662   */\n      mstore\n        /* \"#utility.yul\":691:695   */\n      0x20\n        /* \"#utility.yul\":686:689   */\n      dup5\n        /* \"#utility.yul\":682:696   */\n      add\n        /* \"#utility.yul\":675:696   */\n      swap4\n      pop\n        /* \"#utility.yul\":725:729   */\n      0x20\n        /* \"#utility.yul\":720:723   */\n      dup4\n        /* \"#utility.yul\":716:730   */\n      add\n        /* \"#utility.yul\":709:730   */\n      swap3\n      pop\n        /* \"#utility.yul\":562:740   */\n      pop\n        /* \"#utility.yul\":549:550   */\n      0x01\n        /* \"#utility.yul\":546:547   */\n      dup2\n        /* \"#utility.yul\":542:551   */\n      add\n        /* \"#utility.yul\":537:551   */\n      swap1\n      pop\n        /* \"#utility.yul\":502:740   */\n      jump(tag_174)\n    tag_176:\n        /* \"#utility.yul\":506:520   */\n      pop\n        /* \"#utility.yul\":126:746   */\n      pop\n      pop\n        /* \"#utility.yul\":24:746   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":752:1162   */\n    tag_179:\n        /* \"#utility.yul\":829:834   */\n      0x00\n        /* \"#utility.yul\":854:919   */\n      tag_181\n        /* \"#utility.yul\":870:918   */\n      tag_182\n        /* \"#utility.yul\":911:917   */\n      dup5\n        /* \"#utility.yul\":870:918   */\n      tag_183\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":854:919   */\n      tag_170\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":845:919   */\n      swap1\n      pop\n        /* \"#utility.yul\":942:948   */\n      dup3\n        /* \"#utility.yul\":935:940   */\n      dup2\n        /* \"#utility.yul\":928:949   */\n      mstore\n        /* \"#utility.yul\":980:984   */\n      0x20\n        /* \"#utility.yul\":973:978   */\n      dup2\n        /* \"#utility.yul\":969:985   */\n      add\n        /* \"#utility.yul\":1018:1021   */\n      dup5\n        /* \"#utility.yul\":1009:1015   */\n      dup5\n        /* \"#utility.yul\":1004:1007   */\n      dup5\n        /* \"#utility.yul\":1000:1016   */\n      add\n        /* \"#utility.yul\":997:1022   */\n      gt\n        /* \"#utility.yul\":994:1106   */\n      iszero\n      tag_184\n      jumpi\n        /* \"#utility.yul\":1025:1104   */\n      tag_185\n      tag_186\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":994:1106   */\n    tag_184:\n        /* \"#utility.yul\":1115:1156   */\n      tag_187\n        /* \"#utility.yul\":1149:1155   */\n      dup5\n        /* \"#utility.yul\":1144:1147   */\n      dup3\n        /* \"#utility.yul\":1139:1142   */\n      dup6\n        /* \"#utility.yul\":1115:1156   */\n      tag_188\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":835:1162   */\n      pop\n        /* \"#utility.yul\":752:1162   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1168:1307   */\n    tag_189:\n        /* \"#utility.yul\":1214:1219   */\n      0x00\n        /* \"#utility.yul\":1252:1258   */\n      dup2\n        /* \"#utility.yul\":1239:1259   */\n      calldataload\n        /* \"#utility.yul\":1230:1259   */\n      swap1\n      pop\n        /* \"#utility.yul\":1268:1301   */\n      tag_191\n        /* \"#utility.yul\":1295:1300   */\n      dup2\n        /* \"#utility.yul\":1268:1301   */\n      tag_192\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":1168:1307   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1330:1700   */\n    tag_193:\n        /* \"#utility.yul\":1401:1406   */\n      0x00\n        /* \"#utility.yul\":1450:1453   */\n      dup3\n        /* \"#utility.yul\":1443:1447   */\n      0x1f\n        /* \"#utility.yul\":1435:1441   */\n      dup4\n        /* \"#utility.yul\":1431:1448   */\n      add\n        /* \"#utility.yul\":1427:1454   */\n      slt\n        /* \"#utility.yul\":1417:1539   */\n      tag_195\n      jumpi\n        /* \"#utility.yul\":1458:1537   */\n      tag_196\n      tag_197\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":1417:1539   */\n    tag_195:\n        /* \"#utility.yul\":1575:1581   */\n      dup2\n        /* \"#utility.yul\":1562:1582   */\n      calldataload\n        /* \"#utility.yul\":1600:1694   */\n      tag_198\n        /* \"#utility.yul\":1690:1693   */\n      dup5\n        /* \"#utility.yul\":1682:1688   */\n      dup3\n        /* \"#utility.yul\":1675:1679   */\n      0x20\n        /* \"#utility.yul\":1667:1673   */\n      dup7\n        /* \"#utility.yul\":1663:1680   */\n      add\n        /* \"#utility.yul\":1600:1694   */\n      tag_165\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":1591:1694   */\n      swap2\n      pop\n        /* \"#utility.yul\":1407:1700   */\n      pop\n        /* \"#utility.yul\":1330:1700   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1706:1843   */\n    tag_199:\n        /* \"#utility.yul\":1751:1756   */\n      0x00\n        /* \"#utility.yul\":1789:1795   */\n      dup2\n        /* \"#utility.yul\":1776:1796   */\n      calldataload\n        /* \"#utility.yul\":1767:1796   */\n      swap1\n      pop\n        /* \"#utility.yul\":1805:1837   */\n      tag_201\n        /* \"#utility.yul\":1831:1836   */\n      dup2\n        /* \"#utility.yul\":1805:1837   */\n      tag_202\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":1706:1843   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1862:2200   */\n    tag_203:\n        /* \"#utility.yul\":1917:1922   */\n      0x00\n        /* \"#utility.yul\":1966:1969   */\n      dup3\n        /* \"#utility.yul\":1959:1963   */\n      0x1f\n        /* \"#utility.yul\":1951:1957   */\n      dup4\n        /* \"#utility.yul\":1947:1964   */\n      add\n        /* \"#utility.yul\":1943:1970   */\n      slt\n        /* \"#utility.yul\":1933:2055   */\n      tag_205\n      jumpi\n        /* \"#utility.yul\":1974:2053   */\n      tag_206\n      tag_197\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":1933:2055   */\n    tag_205:\n        /* \"#utility.yul\":2091:2097   */\n      dup2\n        /* \"#utility.yul\":2078:2098   */\n      calldataload\n        /* \"#utility.yul\":2116:2194   */\n      tag_207\n        /* \"#utility.yul\":2190:2193   */\n      dup5\n        /* \"#utility.yul\":2182:2188   */\n      dup3\n        /* \"#utility.yul\":2175:2179   */\n      0x20\n        /* \"#utility.yul\":2167:2173   */\n      dup7\n        /* \"#utility.yul\":2163:2180   */\n      add\n        /* \"#utility.yul\":2116:2194   */\n      tag_179\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":2107:2194   */\n      swap2\n      pop\n        /* \"#utility.yul\":1923:2200   */\n      pop\n        /* \"#utility.yul\":1862:2200   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2206:2345   */\n    tag_178:\n        /* \"#utility.yul\":2252:2257   */\n      0x00\n        /* \"#utility.yul\":2290:2296   */\n      dup2\n        /* \"#utility.yul\":2277:2297   */\n      calldataload\n        /* \"#utility.yul\":2268:2297   */\n      swap1\n      pop\n        /* \"#utility.yul\":2306:2339   */\n      tag_209\n        /* \"#utility.yul\":2333:2338   */\n      dup2\n        /* \"#utility.yul\":2306:2339   */\n      tag_210\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":2206:2345   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2351:2494   */\n    tag_211:\n        /* \"#utility.yul\":2408:2413   */\n      0x00\n        /* \"#utility.yul\":2439:2445   */\n      dup2\n        /* \"#utility.yul\":2433:2446   */\n      mload\n        /* \"#utility.yul\":2424:2446   */\n      swap1\n      pop\n        /* \"#utility.yul\":2455:2488   */\n      tag_213\n        /* \"#utility.yul\":2482:2487   */\n      dup2\n        /* \"#utility.yul\":2455:2488   */\n      tag_210\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":2351:2494   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2500:2974   */\n    tag_64:\n        /* \"#utility.yul\":2568:2574   */\n      0x00\n        /* \"#utility.yul\":2576:2582   */\n      dup1\n        /* \"#utility.yul\":2625:2627   */\n      0x40\n        /* \"#utility.yul\":2613:2622   */\n      dup4\n        /* \"#utility.yul\":2604:2611   */\n      dup6\n        /* \"#utility.yul\":2600:2623   */\n      sub\n        /* \"#utility.yul\":2596:2628   */\n      slt\n        /* \"#utility.yul\":2593:2712   */\n      iszero\n      tag_215\n      jumpi\n        /* \"#utility.yul\":2631:2710   */\n      tag_216\n      tag_217\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":2593:2712   */\n    tag_215:\n        /* \"#utility.yul\":2751:2752   */\n      0x00\n        /* \"#utility.yul\":2776:2829   */\n      tag_218\n        /* \"#utility.yul\":2821:2828   */\n      dup6\n        /* \"#utility.yul\":2812:2818   */\n      dup3\n        /* \"#utility.yul\":2801:2810   */\n      dup7\n        /* \"#utility.yul\":2797:2819   */\n      add\n        /* \"#utility.yul\":2776:2829   */\n      tag_189\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":2766:2829   */\n      swap3\n      pop\n        /* \"#utility.yul\":2722:2839   */\n      pop\n        /* \"#utility.yul\":2878:2880   */\n      0x20\n        /* \"#utility.yul\":2904:2957   */\n      tag_219\n        /* \"#utility.yul\":2949:2956   */\n      dup6\n        /* \"#utility.yul\":2940:2946   */\n      dup3\n        /* \"#utility.yul\":2929:2938   */\n      dup7\n        /* \"#utility.yul\":2925:2947   */\n      add\n        /* \"#utility.yul\":2904:2957   */\n      tag_189\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":2894:2957   */\n      swap2\n      pop\n        /* \"#utility.yul\":2849:2967   */\n      pop\n        /* \"#utility.yul\":2500:2974   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2980:4489   */\n    tag_58:\n        /* \"#utility.yul\":3134:3140   */\n      0x00\n        /* \"#utility.yul\":3142:3148   */\n      dup1\n        /* \"#utility.yul\":3150:3156   */\n      0x00\n        /* \"#utility.yul\":3158:3164   */\n      dup1\n        /* \"#utility.yul\":3166:3172   */\n      0x00\n        /* \"#utility.yul\":3215:3218   */\n      0xa0\n        /* \"#utility.yul\":3203:3212   */\n      dup7\n        /* \"#utility.yul\":3194:3201   */\n      dup9\n        /* \"#utility.yul\":3190:3213   */\n      sub\n        /* \"#utility.yul\":3186:3219   */\n      slt\n        /* \"#utility.yul\":3183:3303   */\n      iszero\n      tag_221\n      jumpi\n        /* \"#utility.yul\":3222:3301   */\n      tag_222\n      tag_217\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":3183:3303   */\n    tag_221:\n        /* \"#utility.yul\":3342:3343   */\n      0x00\n        /* \"#utility.yul\":3367:3420   */\n      tag_223\n        /* \"#utility.yul\":3412:3419   */\n      dup9\n        /* \"#utility.yul\":3403:3409   */\n      dup3\n        /* \"#utility.yul\":3392:3401   */\n      dup10\n        /* \"#utility.yul\":3388:3410   */\n      add\n        /* \"#utility.yul\":3367:3420   */\n      tag_189\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":3357:3420   */\n      swap6\n      pop\n        /* \"#utility.yul\":3313:3430   */\n      pop\n        /* \"#utility.yul\":3469:3471   */\n      0x20\n        /* \"#utility.yul\":3495:3548   */\n      tag_224\n        /* \"#utility.yul\":3540:3547   */\n      dup9\n        /* \"#utility.yul\":3531:3537   */\n      dup3\n        /* \"#utility.yul\":3520:3529   */\n      dup10\n        /* \"#utility.yul\":3516:3538   */\n      add\n        /* \"#utility.yul\":3495:3548   */\n      tag_189\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":3485:3548   */\n      swap5\n      pop\n        /* \"#utility.yul\":3440:3558   */\n      pop\n        /* \"#utility.yul\":3625:3627   */\n      0x40\n        /* \"#utility.yul\":3614:3623   */\n      dup7\n        /* \"#utility.yul\":3610:3628   */\n      add\n        /* \"#utility.yul\":3597:3629   */\n      calldataload\n        /* \"#utility.yul\":3656:3674   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3648:3654   */\n      dup2\n        /* \"#utility.yul\":3645:3675   */\n      gt\n        /* \"#utility.yul\":3642:3759   */\n      iszero\n      tag_225\n      jumpi\n        /* \"#utility.yul\":3678:3757   */\n      tag_226\n      tag_227\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":3642:3759   */\n    tag_225:\n        /* \"#utility.yul\":3783:3861   */\n      tag_228\n        /* \"#utility.yul\":3853:3860   */\n      dup9\n        /* \"#utility.yul\":3844:3850   */\n      dup3\n        /* \"#utility.yul\":3833:3842   */\n      dup10\n        /* \"#utility.yul\":3829:3851   */\n      add\n        /* \"#utility.yul\":3783:3861   */\n      tag_193\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":3773:3861   */\n      swap4\n      pop\n        /* \"#utility.yul\":3568:3871   */\n      pop\n        /* \"#utility.yul\":3938:3940   */\n      0x60\n        /* \"#utility.yul\":3927:3936   */\n      dup7\n        /* \"#utility.yul\":3923:3941   */\n      add\n        /* \"#utility.yul\":3910:3942   */\n      calldataload\n        /* \"#utility.yul\":3969:3987   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3961:3967   */\n      dup2\n        /* \"#utility.yul\":3958:3988   */\n      gt\n        /* \"#utility.yul\":3955:4072   */\n      iszero\n      tag_229\n      jumpi\n        /* \"#utility.yul\":3991:4070   */\n      tag_230\n      tag_227\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":3955:4072   */\n    tag_229:\n        /* \"#utility.yul\":4096:4174   */\n      tag_231\n        /* \"#utility.yul\":4166:4173   */\n      dup9\n        /* \"#utility.yul\":4157:4163   */\n      dup3\n        /* \"#utility.yul\":4146:4155   */\n      dup10\n        /* \"#utility.yul\":4142:4164   */\n      add\n        /* \"#utility.yul\":4096:4174   */\n      tag_193\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":4086:4174   */\n      swap3\n      pop\n        /* \"#utility.yul\":3881:4184   */\n      pop\n        /* \"#utility.yul\":4251:4254   */\n      0x80\n        /* \"#utility.yul\":4240:4249   */\n      dup7\n        /* \"#utility.yul\":4236:4255   */\n      add\n        /* \"#utility.yul\":4223:4256   */\n      calldataload\n        /* \"#utility.yul\":4283:4301   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4275:4281   */\n      dup2\n        /* \"#utility.yul\":4272:4302   */\n      gt\n        /* \"#utility.yul\":4269:4386   */\n      iszero\n      tag_232\n      jumpi\n        /* \"#utility.yul\":4305:4384   */\n      tag_233\n      tag_227\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":4269:4386   */\n    tag_232:\n        /* \"#utility.yul\":4410:4472   */\n      tag_234\n        /* \"#utility.yul\":4464:4471   */\n      dup9\n        /* \"#utility.yul\":4455:4461   */\n      dup3\n        /* \"#utility.yul\":4444:4453   */\n      dup10\n        /* \"#utility.yul\":4440:4462   */\n      add\n        /* \"#utility.yul\":4410:4472   */\n      tag_203\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":4400:4472   */\n      swap2\n      pop\n        /* \"#utility.yul\":4194:4482   */\n      pop\n        /* \"#utility.yul\":2980:4489   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4495:5438   */\n    tag_32:\n        /* \"#utility.yul\":4590:4596   */\n      0x00\n        /* \"#utility.yul\":4598:4604   */\n      dup1\n        /* \"#utility.yul\":4606:4612   */\n      0x00\n        /* \"#utility.yul\":4614:4620   */\n      dup1\n        /* \"#utility.yul\":4663:4666   */\n      0x80\n        /* \"#utility.yul\":4651:4660   */\n      dup6\n        /* \"#utility.yul\":4642:4649   */\n      dup8\n        /* \"#utility.yul\":4638:4661   */\n      sub\n        /* \"#utility.yul\":4634:4667   */\n      slt\n        /* \"#utility.yul\":4631:4751   */\n      iszero\n      tag_236\n      jumpi\n        /* \"#utility.yul\":4670:4749   */\n      tag_237\n      tag_217\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":4631:4751   */\n    tag_236:\n        /* \"#utility.yul\":4790:4791   */\n      0x00\n        /* \"#utility.yul\":4815:4868   */\n      tag_238\n        /* \"#utility.yul\":4860:4867   */\n      dup8\n        /* \"#utility.yul\":4851:4857   */\n      dup3\n        /* \"#utility.yul\":4840:4849   */\n      dup9\n        /* \"#utility.yul\":4836:4858   */\n      add\n        /* \"#utility.yul\":4815:4868   */\n      tag_189\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":4805:4868   */\n      swap5\n      pop\n        /* \"#utility.yul\":4761:4878   */\n      pop\n        /* \"#utility.yul\":4917:4919   */\n      0x20\n        /* \"#utility.yul\":4943:4996   */\n      tag_239\n        /* \"#utility.yul\":4988:4995   */\n      dup8\n        /* \"#utility.yul\":4979:4985   */\n      dup3\n        /* \"#utility.yul\":4968:4977   */\n      dup9\n        /* \"#utility.yul\":4964:4986   */\n      add\n        /* \"#utility.yul\":4943:4996   */\n      tag_189\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":4933:4996   */\n      swap4\n      pop\n        /* \"#utility.yul\":4888:5006   */\n      pop\n        /* \"#utility.yul\":5045:5047   */\n      0x40\n        /* \"#utility.yul\":5071:5124   */\n      tag_240\n        /* \"#utility.yul\":5116:5123   */\n      dup8\n        /* \"#utility.yul\":5107:5113   */\n      dup3\n        /* \"#utility.yul\":5096:5105   */\n      dup9\n        /* \"#utility.yul\":5092:5114   */\n      add\n        /* \"#utility.yul\":5071:5124   */\n      tag_178\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":5061:5124   */\n      swap3\n      pop\n        /* \"#utility.yul\":5016:5134   */\n      pop\n        /* \"#utility.yul\":5201:5203   */\n      0x60\n        /* \"#utility.yul\":5190:5199   */\n      dup6\n        /* \"#utility.yul\":5186:5204   */\n      add\n        /* \"#utility.yul\":5173:5205   */\n      calldataload\n        /* \"#utility.yul\":5232:5250   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5224:5230   */\n      dup2\n        /* \"#utility.yul\":5221:5251   */\n      gt\n        /* \"#utility.yul\":5218:5335   */\n      iszero\n      tag_241\n      jumpi\n        /* \"#utility.yul\":5254:5333   */\n      tag_242\n      tag_227\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":5218:5335   */\n    tag_241:\n        /* \"#utility.yul\":5359:5421   */\n      tag_243\n        /* \"#utility.yul\":5413:5420   */\n      dup8\n        /* \"#utility.yul\":5404:5410   */\n      dup3\n        /* \"#utility.yul\":5393:5402   */\n      dup9\n        /* \"#utility.yul\":5389:5411   */\n      add\n        /* \"#utility.yul\":5359:5421   */\n      tag_203\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":5349:5421   */\n      swap2\n      pop\n        /* \"#utility.yul\":5144:5431   */\n      pop\n        /* \"#utility.yul\":4495:5438   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5444:6533   */\n    tag_69:\n        /* \"#utility.yul\":5548:5554   */\n      0x00\n        /* \"#utility.yul\":5556:5562   */\n      dup1\n        /* \"#utility.yul\":5564:5570   */\n      0x00\n        /* \"#utility.yul\":5572:5578   */\n      dup1\n        /* \"#utility.yul\":5580:5586   */\n      0x00\n        /* \"#utility.yul\":5629:5632   */\n      0xa0\n        /* \"#utility.yul\":5617:5626   */\n      dup7\n        /* \"#utility.yul\":5608:5615   */\n      dup9\n        /* \"#utility.yul\":5604:5627   */\n      sub\n        /* \"#utility.yul\":5600:5633   */\n      slt\n        /* \"#utility.yul\":5597:5717   */\n      iszero\n      tag_245\n      jumpi\n        /* \"#utility.yul\":5636:5715   */\n      tag_246\n      tag_217\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":5597:5717   */\n    tag_245:\n        /* \"#utility.yul\":5756:5757   */\n      0x00\n        /* \"#utility.yul\":5781:5834   */\n      tag_247\n        /* \"#utility.yul\":5826:5833   */\n      dup9\n        /* \"#utility.yul\":5817:5823   */\n      dup3\n        /* \"#utility.yul\":5806:5815   */\n      dup10\n        /* \"#utility.yul\":5802:5824   */\n      add\n        /* \"#utility.yul\":5781:5834   */\n      tag_189\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":5771:5834   */\n      swap6\n      pop\n        /* \"#utility.yul\":5727:5844   */\n      pop\n        /* \"#utility.yul\":5883:5885   */\n      0x20\n        /* \"#utility.yul\":5909:5962   */\n      tag_248\n        /* \"#utility.yul\":5954:5961   */\n      dup9\n        /* \"#utility.yul\":5945:5951   */\n      dup3\n        /* \"#utility.yul\":5934:5943   */\n      dup10\n        /* \"#utility.yul\":5930:5952   */\n      add\n        /* \"#utility.yul\":5909:5962   */\n      tag_189\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":5899:5962   */\n      swap5\n      pop\n        /* \"#utility.yul\":5854:5972   */\n      pop\n        /* \"#utility.yul\":6011:6013   */\n      0x40\n        /* \"#utility.yul\":6037:6090   */\n      tag_249\n        /* \"#utility.yul\":6082:6089   */\n      dup9\n        /* \"#utility.yul\":6073:6079   */\n      dup3\n        /* \"#utility.yul\":6062:6071   */\n      dup10\n        /* \"#utility.yul\":6058:6080   */\n      add\n        /* \"#utility.yul\":6037:6090   */\n      tag_178\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":6027:6090   */\n      swap4\n      pop\n        /* \"#utility.yul\":5982:6100   */\n      pop\n        /* \"#utility.yul\":6139:6141   */\n      0x60\n        /* \"#utility.yul\":6165:6218   */\n      tag_250\n        /* \"#utility.yul\":6210:6217   */\n      dup9\n        /* \"#utility.yul\":6201:6207   */\n      dup3\n        /* \"#utility.yul\":6190:6199   */\n      dup10\n        /* \"#utility.yul\":6186:6208   */\n      add\n        /* \"#utility.yul\":6165:6218   */\n      tag_178\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":6155:6218   */\n      swap3\n      pop\n        /* \"#utility.yul\":6110:6228   */\n      pop\n        /* \"#utility.yul\":6295:6298   */\n      0x80\n        /* \"#utility.yul\":6284:6293   */\n      dup7\n        /* \"#utility.yul\":6280:6299   */\n      add\n        /* \"#utility.yul\":6267:6300   */\n      calldataload\n        /* \"#utility.yul\":6327:6345   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6319:6325   */\n      dup2\n        /* \"#utility.yul\":6316:6346   */\n      gt\n        /* \"#utility.yul\":6313:6430   */\n      iszero\n      tag_251\n      jumpi\n        /* \"#utility.yul\":6349:6428   */\n      tag_252\n      tag_227\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":6313:6430   */\n    tag_251:\n        /* \"#utility.yul\":6454:6516   */\n      tag_253\n        /* \"#utility.yul\":6508:6515   */\n      dup9\n        /* \"#utility.yul\":6499:6505   */\n      dup3\n        /* \"#utility.yul\":6488:6497   */\n      dup10\n        /* \"#utility.yul\":6484:6506   */\n      add\n        /* \"#utility.yul\":6454:6516   */\n      tag_203\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":6444:6516   */\n      swap2\n      pop\n        /* \"#utility.yul\":6238:6526   */\n      pop\n        /* \"#utility.yul\":5444:6533   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6539:7013   */\n    tag_27:\n        /* \"#utility.yul\":6607:6613   */\n      0x00\n        /* \"#utility.yul\":6615:6621   */\n      dup1\n        /* \"#utility.yul\":6664:6666   */\n      0x40\n        /* \"#utility.yul\":6652:6661   */\n      dup4\n        /* \"#utility.yul\":6643:6650   */\n      dup6\n        /* \"#utility.yul\":6639:6662   */\n      sub\n        /* \"#utility.yul\":6635:6667   */\n      slt\n        /* \"#utility.yul\":6632:6751   */\n      iszero\n      tag_255\n      jumpi\n        /* \"#utility.yul\":6670:6749   */\n      tag_256\n      tag_217\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":6632:6751   */\n    tag_255:\n        /* \"#utility.yul\":6790:6791   */\n      0x00\n        /* \"#utility.yul\":6815:6868   */\n      tag_257\n        /* \"#utility.yul\":6860:6867   */\n      dup6\n        /* \"#utility.yul\":6851:6857   */\n      dup3\n        /* \"#utility.yul\":6840:6849   */\n      dup7\n        /* \"#utility.yul\":6836:6858   */\n      add\n        /* \"#utility.yul\":6815:6868   */\n      tag_189\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":6805:6868   */\n      swap3\n      pop\n        /* \"#utility.yul\":6761:6878   */\n      pop\n        /* \"#utility.yul\":6917:6919   */\n      0x20\n        /* \"#utility.yul\":6943:6996   */\n      tag_258\n        /* \"#utility.yul\":6988:6995   */\n      dup6\n        /* \"#utility.yul\":6979:6985   */\n      dup3\n        /* \"#utility.yul\":6968:6977   */\n      dup7\n        /* \"#utility.yul\":6964:6986   */\n      add\n        /* \"#utility.yul\":6943:6996   */\n      tag_178\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":6933:6996   */\n      swap2\n      pop\n        /* \"#utility.yul\":6888:7006   */\n      pop\n        /* \"#utility.yul\":6539:7013   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7019:7346   */\n    tag_20:\n        /* \"#utility.yul\":7077:7083   */\n      0x00\n        /* \"#utility.yul\":7126:7128   */\n      0x20\n        /* \"#utility.yul\":7114:7123   */\n      dup3\n        /* \"#utility.yul\":7105:7112   */\n      dup5\n        /* \"#utility.yul\":7101:7124   */\n      sub\n        /* \"#utility.yul\":7097:7129   */\n      slt\n        /* \"#utility.yul\":7094:7213   */\n      iszero\n      tag_260\n      jumpi\n        /* \"#utility.yul\":7132:7211   */\n      tag_261\n      tag_217\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":7094:7213   */\n    tag_260:\n        /* \"#utility.yul\":7252:7253   */\n      0x00\n        /* \"#utility.yul\":7277:7329   */\n      tag_262\n        /* \"#utility.yul\":7321:7328   */\n      dup5\n        /* \"#utility.yul\":7312:7318   */\n      dup3\n        /* \"#utility.yul\":7301:7310   */\n      dup6\n        /* \"#utility.yul\":7297:7319   */\n      add\n        /* \"#utility.yul\":7277:7329   */\n      tag_199\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":7267:7329   */\n      swap2\n      pop\n        /* \"#utility.yul\":7223:7339   */\n      pop\n        /* \"#utility.yul\":7019:7346   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7352:7703   */\n    tag_156:\n        /* \"#utility.yul\":7422:7428   */\n      0x00\n        /* \"#utility.yul\":7471:7473   */\n      0x20\n        /* \"#utility.yul\":7459:7468   */\n      dup3\n        /* \"#utility.yul\":7450:7457   */\n      dup5\n        /* \"#utility.yul\":7446:7469   */\n      sub\n        /* \"#utility.yul\":7442:7474   */\n      slt\n        /* \"#utility.yul\":7439:7558   */\n      iszero\n      tag_264\n      jumpi\n        /* \"#utility.yul\":7477:7556   */\n      tag_265\n      tag_217\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":7439:7558   */\n    tag_264:\n        /* \"#utility.yul\":7597:7598   */\n      0x00\n        /* \"#utility.yul\":7622:7686   */\n      tag_266\n        /* \"#utility.yul\":7678:7685   */\n      dup5\n        /* \"#utility.yul\":7669:7675   */\n      dup3\n        /* \"#utility.yul\":7658:7667   */\n      dup6\n        /* \"#utility.yul\":7654:7676   */\n      add\n        /* \"#utility.yul\":7622:7686   */\n      tag_211\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":7612:7686   */\n      swap2\n      pop\n        /* \"#utility.yul\":7568:7696   */\n      pop\n        /* \"#utility.yul\":7352:7703   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7709:7827   */\n    tag_267:\n        /* \"#utility.yul\":7796:7820   */\n      tag_269\n        /* \"#utility.yul\":7814:7819   */\n      dup2\n        /* \"#utility.yul\":7796:7820   */\n      tag_270\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":7791:7794   */\n      dup3\n        /* \"#utility.yul\":7784:7821   */\n      mstore\n        /* \"#utility.yul\":7709:7827   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7833:7942   */\n    tag_271:\n        /* \"#utility.yul\":7914:7935   */\n      tag_273\n        /* \"#utility.yul\":7929:7934   */\n      dup2\n        /* \"#utility.yul\":7914:7935   */\n      tag_274\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":7909:7912   */\n      dup3\n        /* \"#utility.yul\":7902:7936   */\n      mstore\n        /* \"#utility.yul\":7833:7942   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7948:8063   */\n    tag_275:\n        /* \"#utility.yul\":8033:8056   */\n      tag_277\n        /* \"#utility.yul\":8050:8055   */\n      dup2\n        /* \"#utility.yul\":8033:8056   */\n      tag_278\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":8028:8031   */\n      dup3\n        /* \"#utility.yul\":8021:8057   */\n      mstore\n        /* \"#utility.yul\":7948:8063   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8069:8435   */\n    tag_279:\n        /* \"#utility.yul\":8211:8214   */\n      0x00\n        /* \"#utility.yul\":8232:8299   */\n      tag_281\n        /* \"#utility.yul\":8296:8298   */\n      0x1e\n        /* \"#utility.yul\":8291:8294   */\n      dup4\n        /* \"#utility.yul\":8232:8299   */\n      tag_282\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":8225:8299   */\n      swap2\n      pop\n        /* \"#utility.yul\":8308:8401   */\n      tag_283\n        /* \"#utility.yul\":8397:8400   */\n      dup3\n        /* \"#utility.yul\":8308:8401   */\n      tag_284\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":8426:8428   */\n      0x20\n        /* \"#utility.yul\":8421:8424   */\n      dup3\n        /* \"#utility.yul\":8417:8429   */\n      add\n        /* \"#utility.yul\":8410:8429   */\n      swap1\n      pop\n        /* \"#utility.yul\":8069:8435   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8441:8807   */\n    tag_285:\n        /* \"#utility.yul\":8583:8586   */\n      0x00\n        /* \"#utility.yul\":8604:8671   */\n      tag_287\n        /* \"#utility.yul\":8668:8670   */\n      0x1e\n        /* \"#utility.yul\":8663:8666   */\n      dup4\n        /* \"#utility.yul\":8604:8671   */\n      tag_282\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":8597:8671   */\n      swap2\n      pop\n        /* \"#utility.yul\":8680:8773   */\n      tag_288\n        /* \"#utility.yul\":8769:8772   */\n      dup3\n        /* \"#utility.yul\":8680:8773   */\n      tag_289\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":8798:8800   */\n      0x20\n        /* \"#utility.yul\":8793:8796   */\n      dup3\n        /* \"#utility.yul\":8789:8801   */\n      add\n        /* \"#utility.yul\":8782:8801   */\n      swap1\n      pop\n        /* \"#utility.yul\":8441:8807   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8813:9179   */\n    tag_290:\n        /* \"#utility.yul\":8955:8958   */\n      0x00\n        /* \"#utility.yul\":8976:9043   */\n      tag_292\n        /* \"#utility.yul\":9040:9042   */\n      0x20\n        /* \"#utility.yul\":9035:9038   */\n      dup4\n        /* \"#utility.yul\":8976:9043   */\n      tag_282\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":8969:9043   */\n      swap2\n      pop\n        /* \"#utility.yul\":9052:9145   */\n      tag_293\n        /* \"#utility.yul\":9141:9144   */\n      dup3\n        /* \"#utility.yul\":9052:9145   */\n      tag_294\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":9170:9172   */\n      0x20\n        /* \"#utility.yul\":9165:9168   */\n      dup3\n        /* \"#utility.yul\":9161:9173   */\n      add\n        /* \"#utility.yul\":9154:9173   */\n      swap1\n      pop\n        /* \"#utility.yul\":8813:9179   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9185:9551   */\n    tag_295:\n        /* \"#utility.yul\":9327:9330   */\n      0x00\n        /* \"#utility.yul\":9348:9415   */\n      tag_297\n        /* \"#utility.yul\":9412:9414   */\n      0x1c\n        /* \"#utility.yul\":9407:9410   */\n      dup4\n        /* \"#utility.yul\":9348:9415   */\n      tag_282\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":9341:9415   */\n      swap2\n      pop\n        /* \"#utility.yul\":9424:9517   */\n      tag_298\n        /* \"#utility.yul\":9513:9516   */\n      dup3\n        /* \"#utility.yul\":9424:9517   */\n      tag_299\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":9542:9544   */\n      0x20\n        /* \"#utility.yul\":9537:9540   */\n      dup3\n        /* \"#utility.yul\":9533:9545   */\n      add\n        /* \"#utility.yul\":9526:9545   */\n      swap1\n      pop\n        /* \"#utility.yul\":9185:9551   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9557:9923   */\n    tag_300:\n        /* \"#utility.yul\":9699:9702   */\n      0x00\n        /* \"#utility.yul\":9720:9787   */\n      tag_302\n        /* \"#utility.yul\":9784:9786   */\n      0x2e\n        /* \"#utility.yul\":9779:9782   */\n      dup4\n        /* \"#utility.yul\":9720:9787   */\n      tag_282\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":9713:9787   */\n      swap2\n      pop\n        /* \"#utility.yul\":9796:9889   */\n      tag_303\n        /* \"#utility.yul\":9885:9888   */\n      dup3\n        /* \"#utility.yul\":9796:9889   */\n      tag_304\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":9914:9916   */\n      0x40\n        /* \"#utility.yul\":9909:9912   */\n      dup3\n        /* \"#utility.yul\":9905:9917   */\n      add\n        /* \"#utility.yul\":9898:9917   */\n      swap1\n      pop\n        /* \"#utility.yul\":9557:9923   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9929:10291   */\n    tag_305:\n        /* \"#utility.yul\":10070:10073   */\n      0x00\n        /* \"#utility.yul\":10091:10156   */\n      tag_307\n        /* \"#utility.yul\":10154:10155   */\n      0x00\n        /* \"#utility.yul\":10149:10152   */\n      dup4\n        /* \"#utility.yul\":10091:10156   */\n      tag_308\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":10084:10156   */\n      swap2\n      pop\n        /* \"#utility.yul\":10165:10258   */\n      tag_309\n        /* \"#utility.yul\":10254:10257   */\n      dup3\n        /* \"#utility.yul\":10165:10258   */\n      tag_310\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":10283:10284   */\n      0x00\n        /* \"#utility.yul\":10278:10281   */\n      dup3\n        /* \"#utility.yul\":10274:10285   */\n      add\n        /* \"#utility.yul\":10267:10285   */\n      swap1\n      pop\n        /* \"#utility.yul\":9929:10291   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10297:10415   */\n    tag_311:\n        /* \"#utility.yul\":10384:10408   */\n      tag_313\n        /* \"#utility.yul\":10402:10407   */\n      dup2\n        /* \"#utility.yul\":10384:10408   */\n      tag_314\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":10379:10382   */\n      dup3\n        /* \"#utility.yul\":10372:10409   */\n      mstore\n        /* \"#utility.yul\":10297:10415   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10421:10643   */\n    tag_54:\n        /* \"#utility.yul\":10514:10518   */\n      0x00\n        /* \"#utility.yul\":10552:10554   */\n      0x20\n        /* \"#utility.yul\":10541:10550   */\n      dup3\n        /* \"#utility.yul\":10537:10555   */\n      add\n        /* \"#utility.yul\":10529:10555   */\n      swap1\n      pop\n        /* \"#utility.yul\":10565:10636   */\n      tag_316\n        /* \"#utility.yul\":10633:10634   */\n      0x00\n        /* \"#utility.yul\":10622:10631   */\n      dup4\n        /* \"#utility.yul\":10618:10635   */\n      add\n        /* \"#utility.yul\":10609:10615   */\n      dup5\n        /* \"#utility.yul\":10565:10636   */\n      tag_267\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":10421:10643   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10649:11091   */\n    tag_141:\n        /* \"#utility.yul\":10798:10802   */\n      0x00\n        /* \"#utility.yul\":10836:10838   */\n      0x60\n        /* \"#utility.yul\":10825:10834   */\n      dup3\n        /* \"#utility.yul\":10821:10839   */\n      add\n        /* \"#utility.yul\":10813:10839   */\n      swap1\n      pop\n        /* \"#utility.yul\":10849:10920   */\n      tag_318\n        /* \"#utility.yul\":10917:10918   */\n      0x00\n        /* \"#utility.yul\":10906:10915   */\n      dup4\n        /* \"#utility.yul\":10902:10919   */\n      add\n        /* \"#utility.yul\":10893:10899   */\n      dup7\n        /* \"#utility.yul\":10849:10920   */\n      tag_267\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":10930:11002   */\n      tag_319\n        /* \"#utility.yul\":10998:11000   */\n      0x20\n        /* \"#utility.yul\":10987:10996   */\n      dup4\n        /* \"#utility.yul\":10983:11001   */\n      add\n        /* \"#utility.yul\":10974:10980   */\n      dup6\n        /* \"#utility.yul\":10930:11002   */\n      tag_267\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":11012:11084   */\n      tag_320\n        /* \"#utility.yul\":11080:11082   */\n      0x40\n        /* \"#utility.yul\":11069:11078   */\n      dup4\n        /* \"#utility.yul\":11065:11083   */\n      add\n        /* \"#utility.yul\":11056:11062   */\n      dup5\n        /* \"#utility.yul\":11012:11084   */\n      tag_311\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":10649:11091   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11097:11956   */\n    tag_159:\n        /* \"#utility.yul\":11374:11378   */\n      0x00\n        /* \"#utility.yul\":11412:11415   */\n      0xa0\n        /* \"#utility.yul\":11401:11410   */\n      dup3\n        /* \"#utility.yul\":11397:11416   */\n      add\n        /* \"#utility.yul\":11389:11416   */\n      swap1\n      pop\n        /* \"#utility.yul\":11426:11497   */\n      tag_322\n        /* \"#utility.yul\":11494:11495   */\n      0x00\n        /* \"#utility.yul\":11483:11492   */\n      dup4\n        /* \"#utility.yul\":11479:11496   */\n      add\n        /* \"#utility.yul\":11470:11476   */\n      dup8\n        /* \"#utility.yul\":11426:11497   */\n      tag_267\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":11507:11579   */\n      tag_323\n        /* \"#utility.yul\":11575:11577   */\n      0x20\n        /* \"#utility.yul\":11564:11573   */\n      dup4\n        /* \"#utility.yul\":11560:11578   */\n      add\n        /* \"#utility.yul\":11551:11557   */\n      dup7\n        /* \"#utility.yul\":11507:11579   */\n      tag_267\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":11589:11661   */\n      tag_324\n        /* \"#utility.yul\":11657:11659   */\n      0x40\n        /* \"#utility.yul\":11646:11655   */\n      dup4\n        /* \"#utility.yul\":11642:11660   */\n      add\n        /* \"#utility.yul\":11633:11639   */\n      dup6\n        /* \"#utility.yul\":11589:11661   */\n      tag_311\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":11671:11743   */\n      tag_325\n        /* \"#utility.yul\":11739:11741   */\n      0x60\n        /* \"#utility.yul\":11728:11737   */\n      dup4\n        /* \"#utility.yul\":11724:11742   */\n      add\n        /* \"#utility.yul\":11715:11721   */\n      dup5\n        /* \"#utility.yul\":11671:11743   */\n      tag_311\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":11791:11800   */\n      dup2\n        /* \"#utility.yul\":11785:11789   */\n      dup2\n        /* \"#utility.yul\":11781:11801   */\n      sub\n        /* \"#utility.yul\":11775:11778   */\n      0x80\n        /* \"#utility.yul\":11764:11773   */\n      dup4\n        /* \"#utility.yul\":11760:11779   */\n      add\n        /* \"#utility.yul\":11753:11802   */\n      mstore\n        /* \"#utility.yul\":11819:11949   */\n      tag_326\n        /* \"#utility.yul\":11944:11948   */\n      dup2\n        /* \"#utility.yul\":11819:11949   */\n      tag_305\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":11811:11949   */\n      swap1\n      pop\n        /* \"#utility.yul\":11097:11956   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11962:12294   */\n    tag_151:\n        /* \"#utility.yul\":12083:12087   */\n      0x00\n        /* \"#utility.yul\":12121:12123   */\n      0x40\n        /* \"#utility.yul\":12110:12119   */\n      dup3\n        /* \"#utility.yul\":12106:12124   */\n      add\n        /* \"#utility.yul\":12098:12124   */\n      swap1\n      pop\n        /* \"#utility.yul\":12134:12205   */\n      tag_328\n        /* \"#utility.yul\":12202:12203   */\n      0x00\n        /* \"#utility.yul\":12191:12200   */\n      dup4\n        /* \"#utility.yul\":12187:12204   */\n      add\n        /* \"#utility.yul\":12178:12184   */\n      dup6\n        /* \"#utility.yul\":12134:12205   */\n      tag_267\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":12215:12287   */\n      tag_329\n        /* \"#utility.yul\":12283:12285   */\n      0x20\n        /* \"#utility.yul\":12272:12281   */\n      dup4\n        /* \"#utility.yul\":12268:12286   */\n      add\n        /* \"#utility.yul\":12259:12265   */\n      dup5\n        /* \"#utility.yul\":12215:12287   */\n      tag_311\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":11962:12294   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12300:12510   */\n    tag_23:\n        /* \"#utility.yul\":12387:12391   */\n      0x00\n        /* \"#utility.yul\":12425:12427   */\n      0x20\n        /* \"#utility.yul\":12414:12423   */\n      dup3\n        /* \"#utility.yul\":12410:12428   */\n      add\n        /* \"#utility.yul\":12402:12428   */\n      swap1\n      pop\n        /* \"#utility.yul\":12438:12503   */\n      tag_331\n        /* \"#utility.yul\":12500:12501   */\n      0x00\n        /* \"#utility.yul\":12489:12498   */\n      dup4\n        /* \"#utility.yul\":12485:12502   */\n      add\n        /* \"#utility.yul\":12476:12482   */\n      dup5\n        /* \"#utility.yul\":12438:12503   */\n      tag_271\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":12300:12510   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12516:12734   */\n    tag_35:\n        /* \"#utility.yul\":12607:12611   */\n      0x00\n        /* \"#utility.yul\":12645:12647   */\n      0x20\n        /* \"#utility.yul\":12634:12643   */\n      dup3\n        /* \"#utility.yul\":12630:12648   */\n      add\n        /* \"#utility.yul\":12622:12648   */\n      swap1\n      pop\n        /* \"#utility.yul\":12658:12727   */\n      tag_333\n        /* \"#utility.yul\":12724:12725   */\n      0x00\n        /* \"#utility.yul\":12713:12722   */\n      dup4\n        /* \"#utility.yul\":12709:12726   */\n      add\n        /* \"#utility.yul\":12700:12706   */\n      dup5\n        /* \"#utility.yul\":12658:12727   */\n      tag_275\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":12516:12734   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12740:13159   */\n    tag_127:\n        /* \"#utility.yul\":12906:12910   */\n      0x00\n        /* \"#utility.yul\":12944:12946   */\n      0x20\n        /* \"#utility.yul\":12933:12942   */\n      dup3\n        /* \"#utility.yul\":12929:12947   */\n      add\n        /* \"#utility.yul\":12921:12947   */\n      swap1\n      pop\n        /* \"#utility.yul\":12993:13002   */\n      dup2\n        /* \"#utility.yul\":12987:12991   */\n      dup2\n        /* \"#utility.yul\":12983:13003   */\n      sub\n        /* \"#utility.yul\":12979:12980   */\n      0x00\n        /* \"#utility.yul\":12968:12977   */\n      dup4\n        /* \"#utility.yul\":12964:12981   */\n      add\n        /* \"#utility.yul\":12957:13004   */\n      mstore\n        /* \"#utility.yul\":13021:13152   */\n      tag_335\n        /* \"#utility.yul\":13147:13151   */\n      dup2\n        /* \"#utility.yul\":13021:13152   */\n      tag_279\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":13013:13152   */\n      swap1\n      pop\n        /* \"#utility.yul\":12740:13159   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13165:13584   */\n    tag_124:\n        /* \"#utility.yul\":13331:13335   */\n      0x00\n        /* \"#utility.yul\":13369:13371   */\n      0x20\n        /* \"#utility.yul\":13358:13367   */\n      dup3\n        /* \"#utility.yul\":13354:13372   */\n      add\n        /* \"#utility.yul\":13346:13372   */\n      swap1\n      pop\n        /* \"#utility.yul\":13418:13427   */\n      dup2\n        /* \"#utility.yul\":13412:13416   */\n      dup2\n        /* \"#utility.yul\":13408:13428   */\n      sub\n        /* \"#utility.yul\":13404:13405   */\n      0x00\n        /* \"#utility.yul\":13393:13402   */\n      dup4\n        /* \"#utility.yul\":13389:13406   */\n      add\n        /* \"#utility.yul\":13382:13429   */\n      mstore\n        /* \"#utility.yul\":13446:13577   */\n      tag_337\n        /* \"#utility.yul\":13572:13576   */\n      dup2\n        /* \"#utility.yul\":13446:13577   */\n      tag_285\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":13438:13577   */\n      swap1\n      pop\n        /* \"#utility.yul\":13165:13584   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13590:14009   */\n    tag_82:\n        /* \"#utility.yul\":13756:13760   */\n      0x00\n        /* \"#utility.yul\":13794:13796   */\n      0x20\n        /* \"#utility.yul\":13783:13792   */\n      dup3\n        /* \"#utility.yul\":13779:13797   */\n      add\n        /* \"#utility.yul\":13771:13797   */\n      swap1\n      pop\n        /* \"#utility.yul\":13843:13852   */\n      dup2\n        /* \"#utility.yul\":13837:13841   */\n      dup2\n        /* \"#utility.yul\":13833:13853   */\n      sub\n        /* \"#utility.yul\":13829:13830   */\n      0x00\n        /* \"#utility.yul\":13818:13827   */\n      dup4\n        /* \"#utility.yul\":13814:13831   */\n      add\n        /* \"#utility.yul\":13807:13854   */\n      mstore\n        /* \"#utility.yul\":13871:14002   */\n      tag_339\n        /* \"#utility.yul\":13997:14001   */\n      dup2\n        /* \"#utility.yul\":13871:14002   */\n      tag_290\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":13863:14002   */\n      swap1\n      pop\n        /* \"#utility.yul\":13590:14009   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14015:14434   */\n    tag_133:\n        /* \"#utility.yul\":14181:14185   */\n      0x00\n        /* \"#utility.yul\":14219:14221   */\n      0x20\n        /* \"#utility.yul\":14208:14217   */\n      dup3\n        /* \"#utility.yul\":14204:14222   */\n      add\n        /* \"#utility.yul\":14196:14222   */\n      swap1\n      pop\n        /* \"#utility.yul\":14268:14277   */\n      dup2\n        /* \"#utility.yul\":14262:14266   */\n      dup2\n        /* \"#utility.yul\":14258:14278   */\n      sub\n        /* \"#utility.yul\":14254:14255   */\n      0x00\n        /* \"#utility.yul\":14243:14252   */\n      dup4\n        /* \"#utility.yul\":14239:14256   */\n      add\n        /* \"#utility.yul\":14232:14279   */\n      mstore\n        /* \"#utility.yul\":14296:14427   */\n      tag_341\n        /* \"#utility.yul\":14422:14426   */\n      dup2\n        /* \"#utility.yul\":14296:14427   */\n      tag_295\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":14288:14427   */\n      swap1\n      pop\n        /* \"#utility.yul\":14015:14434   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14440:14859   */\n    tag_130:\n        /* \"#utility.yul\":14606:14610   */\n      0x00\n        /* \"#utility.yul\":14644:14646   */\n      0x20\n        /* \"#utility.yul\":14633:14642   */\n      dup3\n        /* \"#utility.yul\":14629:14647   */\n      add\n        /* \"#utility.yul\":14621:14647   */\n      swap1\n      pop\n        /* \"#utility.yul\":14693:14702   */\n      dup2\n        /* \"#utility.yul\":14687:14691   */\n      dup2\n        /* \"#utility.yul\":14683:14703   */\n      sub\n        /* \"#utility.yul\":14679:14680   */\n      0x00\n        /* \"#utility.yul\":14668:14677   */\n      dup4\n        /* \"#utility.yul\":14664:14681   */\n      add\n        /* \"#utility.yul\":14657:14704   */\n      mstore\n        /* \"#utility.yul\":14721:14852   */\n      tag_343\n        /* \"#utility.yul\":14847:14851   */\n      dup2\n        /* \"#utility.yul\":14721:14852   */\n      tag_300\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":14713:14852   */\n      swap1\n      pop\n        /* \"#utility.yul\":14440:14859   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14865:14994   */\n    tag_170:\n        /* \"#utility.yul\":14899:14905   */\n      0x00\n        /* \"#utility.yul\":14926:14946   */\n      tag_345\n      tag_346\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":14916:14946   */\n      swap1\n      pop\n        /* \"#utility.yul\":14955:14988   */\n      tag_347\n        /* \"#utility.yul\":14983:14987   */\n      dup3\n        /* \"#utility.yul\":14975:14981   */\n      dup3\n        /* \"#utility.yul\":14955:14988   */\n      tag_348\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":14865:14994   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15000:15075   */\n    tag_346:\n        /* \"#utility.yul\":15033:15039   */\n      0x00\n        /* \"#utility.yul\":15066:15068   */\n      0x40\n        /* \"#utility.yul\":15060:15069   */\n      mload\n        /* \"#utility.yul\":15050:15069   */\n      swap1\n      pop\n        /* \"#utility.yul\":15000:15075   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":15081:15392   */\n    tag_169:\n        /* \"#utility.yul\":15158:15162   */\n      0x00\n        /* \"#utility.yul\":15248:15266   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":15240:15246   */\n      dup3\n        /* \"#utility.yul\":15237:15267   */\n      gt\n        /* \"#utility.yul\":15234:15290   */\n      iszero\n      tag_351\n      jumpi\n        /* \"#utility.yul\":15270:15288   */\n      tag_352\n      tag_353\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":15234:15290   */\n    tag_351:\n        /* \"#utility.yul\":15320:15324   */\n      0x20\n        /* \"#utility.yul\":15312:15318   */\n      dup3\n        /* \"#utility.yul\":15308:15325   */\n      mul\n        /* \"#utility.yul\":15300:15325   */\n      swap1\n      pop\n        /* \"#utility.yul\":15380:15384   */\n      0x20\n        /* \"#utility.yul\":15374:15378   */\n      dup2\n        /* \"#utility.yul\":15370:15385   */\n      add\n        /* \"#utility.yul\":15362:15385   */\n      swap1\n      pop\n        /* \"#utility.yul\":15081:15392   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15398:15705   */\n    tag_183:\n        /* \"#utility.yul\":15459:15463   */\n      0x00\n        /* \"#utility.yul\":15549:15567   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":15541:15547   */\n      dup3\n        /* \"#utility.yul\":15538:15568   */\n      gt\n        /* \"#utility.yul\":15535:15591   */\n      iszero\n      tag_355\n      jumpi\n        /* \"#utility.yul\":15571:15589   */\n      tag_356\n      tag_353\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":15535:15591   */\n    tag_355:\n        /* \"#utility.yul\":15609:15638   */\n      tag_357\n        /* \"#utility.yul\":15631:15637   */\n      dup3\n        /* \"#utility.yul\":15609:15638   */\n      tag_358\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":15601:15638   */\n      swap1\n      pop\n        /* \"#utility.yul\":15693:15697   */\n      0x20\n        /* \"#utility.yul\":15687:15691   */\n      dup2\n        /* \"#utility.yul\":15683:15698   */\n      add\n        /* \"#utility.yul\":15675:15698   */\n      swap1\n      pop\n        /* \"#utility.yul\":15398:15705   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15711:15879   */\n    tag_308:\n        /* \"#utility.yul\":15794:15805   */\n      0x00\n        /* \"#utility.yul\":15828:15834   */\n      dup3\n        /* \"#utility.yul\":15823:15826   */\n      dup3\n        /* \"#utility.yul\":15816:15835   */\n      mstore\n        /* \"#utility.yul\":15868:15872   */\n      0x20\n        /* \"#utility.yul\":15863:15866   */\n      dup3\n        /* \"#utility.yul\":15859:15873   */\n      add\n        /* \"#utility.yul\":15844:15873   */\n      swap1\n      pop\n        /* \"#utility.yul\":15711:15879   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15885:16054   */\n    tag_282:\n        /* \"#utility.yul\":15969:15980   */\n      0x00\n        /* \"#utility.yul\":16003:16009   */\n      dup3\n        /* \"#utility.yul\":15998:16001   */\n      dup3\n        /* \"#utility.yul\":15991:16010   */\n      mstore\n        /* \"#utility.yul\":16043:16047   */\n      0x20\n        /* \"#utility.yul\":16038:16041   */\n      dup3\n        /* \"#utility.yul\":16034:16048   */\n      add\n        /* \"#utility.yul\":16019:16048   */\n      swap1\n      pop\n        /* \"#utility.yul\":15885:16054   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16060:16156   */\n    tag_270:\n        /* \"#utility.yul\":16097:16104   */\n      0x00\n        /* \"#utility.yul\":16126:16150   */\n      tag_362\n        /* \"#utility.yul\":16144:16149   */\n      dup3\n        /* \"#utility.yul\":16126:16150   */\n      tag_363\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":16115:16150   */\n      swap1\n      pop\n        /* \"#utility.yul\":16060:16156   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16162:16252   */\n    tag_274:\n        /* \"#utility.yul\":16196:16203   */\n      0x00\n        /* \"#utility.yul\":16239:16244   */\n      dup2\n        /* \"#utility.yul\":16232:16245   */\n      iszero\n        /* \"#utility.yul\":16225:16246   */\n      iszero\n        /* \"#utility.yul\":16214:16246   */\n      swap1\n      pop\n        /* \"#utility.yul\":16162:16252   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16258:16407   */\n    tag_278:\n        /* \"#utility.yul\":16294:16301   */\n      0x00\n        /* \"#utility.yul\":16334:16400   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16327:16332   */\n      dup3\n        /* \"#utility.yul\":16323:16401   */\n      and\n        /* \"#utility.yul\":16312:16401   */\n      swap1\n      pop\n        /* \"#utility.yul\":16258:16407   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16413:16539   */\n    tag_363:\n        /* \"#utility.yul\":16450:16457   */\n      0x00\n        /* \"#utility.yul\":16490:16532   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":16483:16488   */\n      dup3\n        /* \"#utility.yul\":16479:16533   */\n      and\n        /* \"#utility.yul\":16468:16533   */\n      swap1\n      pop\n        /* \"#utility.yul\":16413:16539   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16545:16622   */\n    tag_314:\n        /* \"#utility.yul\":16582:16589   */\n      0x00\n        /* \"#utility.yul\":16611:16616   */\n      dup2\n        /* \"#utility.yul\":16600:16616   */\n      swap1\n      pop\n        /* \"#utility.yul\":16545:16622   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16628:16782   */\n    tag_188:\n        /* \"#utility.yul\":16712:16718   */\n      dup3\n        /* \"#utility.yul\":16707:16710   */\n      dup2\n        /* \"#utility.yul\":16702:16705   */\n      dup4\n        /* \"#utility.yul\":16689:16719   */\n      calldatacopy\n        /* \"#utility.yul\":16774:16775   */\n      0x00\n        /* \"#utility.yul\":16765:16771   */\n      dup4\n        /* \"#utility.yul\":16760:16763   */\n      dup4\n        /* \"#utility.yul\":16756:16772   */\n      add\n        /* \"#utility.yul\":16749:16776   */\n      mstore\n        /* \"#utility.yul\":16628:16782   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16788:17069   */\n    tag_348:\n        /* \"#utility.yul\":16871:16898   */\n      tag_370\n        /* \"#utility.yul\":16893:16897   */\n      dup3\n        /* \"#utility.yul\":16871:16898   */\n      tag_358\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":16863:16869   */\n      dup2\n        /* \"#utility.yul\":16859:16899   */\n      add\n        /* \"#utility.yul\":17001:17007   */\n      dup2\n        /* \"#utility.yul\":16989:16999   */\n      dup2\n        /* \"#utility.yul\":16986:17008   */\n      lt\n        /* \"#utility.yul\":16965:16983   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":16953:16963   */\n      dup3\n        /* \"#utility.yul\":16950:16984   */\n      gt\n        /* \"#utility.yul\":16947:17009   */\n      or\n        /* \"#utility.yul\":16944:17032   */\n      iszero\n      tag_371\n      jumpi\n        /* \"#utility.yul\":17012:17030   */\n      tag_372\n      tag_353\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":16944:17032   */\n    tag_371:\n        /* \"#utility.yul\":17052:17062   */\n      dup1\n        /* \"#utility.yul\":17048:17050   */\n      0x40\n        /* \"#utility.yul\":17041:17063   */\n      mstore\n        /* \"#utility.yul\":16831:17069   */\n      pop\n        /* \"#utility.yul\":16788:17069   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17075:17255   */\n    tag_353:\n        /* \"#utility.yul\":17123:17200   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17120:17121   */\n      0x00\n        /* \"#utility.yul\":17113:17201   */\n      mstore\n        /* \"#utility.yul\":17220:17224   */\n      0x41\n        /* \"#utility.yul\":17217:17218   */\n      0x04\n        /* \"#utility.yul\":17210:17225   */\n      mstore\n        /* \"#utility.yul\":17244:17248   */\n      0x24\n        /* \"#utility.yul\":17241:17242   */\n      0x00\n        /* \"#utility.yul\":17234:17249   */\n      revert\n        /* \"#utility.yul\":17261:17378   */\n    tag_197:\n        /* \"#utility.yul\":17370:17371   */\n      0x00\n        /* \"#utility.yul\":17367:17368   */\n      dup1\n        /* \"#utility.yul\":17360:17372   */\n      revert\n        /* \"#utility.yul\":17384:17501   */\n    tag_173:\n        /* \"#utility.yul\":17493:17494   */\n      0x00\n        /* \"#utility.yul\":17490:17491   */\n      dup1\n        /* \"#utility.yul\":17483:17495   */\n      revert\n        /* \"#utility.yul\":17507:17624   */\n    tag_186:\n        /* \"#utility.yul\":17616:17617   */\n      0x00\n        /* \"#utility.yul\":17613:17614   */\n      dup1\n        /* \"#utility.yul\":17606:17618   */\n      revert\n        /* \"#utility.yul\":17630:17747   */\n    tag_227:\n        /* \"#utility.yul\":17739:17740   */\n      0x00\n        /* \"#utility.yul\":17736:17737   */\n      dup1\n        /* \"#utility.yul\":17729:17741   */\n      revert\n        /* \"#utility.yul\":17753:17870   */\n    tag_217:\n        /* \"#utility.yul\":17862:17863   */\n      0x00\n        /* \"#utility.yul\":17859:17860   */\n      dup1\n        /* \"#utility.yul\":17852:17864   */\n      revert\n        /* \"#utility.yul\":17876:17978   */\n    tag_358:\n        /* \"#utility.yul\":17917:17923   */\n      0x00\n        /* \"#utility.yul\":17968:17970   */\n      0x1f\n        /* \"#utility.yul\":17964:17971   */\n      not\n        /* \"#utility.yul\":17959:17961   */\n      0x1f\n        /* \"#utility.yul\":17952:17957   */\n      dup4\n        /* \"#utility.yul\":17948:17962   */\n      add\n        /* \"#utility.yul\":17944:17972   */\n      and\n        /* \"#utility.yul\":17934:17972   */\n      swap1\n      pop\n        /* \"#utility.yul\":17876:17978   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17984:18164   */\n    tag_284:\n        /* \"#utility.yul\":18124:18156   */\n      0x4261636b757020616464726573732063616e206e6f74206265207a65726f0000\n        /* \"#utility.yul\":18120:18121   */\n      0x00\n        /* \"#utility.yul\":18112:18118   */\n      dup3\n        /* \"#utility.yul\":18108:18122   */\n      add\n        /* \"#utility.yul\":18101:18157   */\n      mstore\n        /* \"#utility.yul\":17984:18164   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18170:18350   */\n    tag_289:\n        /* \"#utility.yul\":18310:18342   */\n      0x53656e64657220616464726573732063616e206e6f74206265207a65726f0000\n        /* \"#utility.yul\":18306:18307   */\n      0x00\n        /* \"#utility.yul\":18298:18304   */\n      dup3\n        /* \"#utility.yul\":18294:18308   */\n      add\n        /* \"#utility.yul\":18287:18343   */\n      mstore\n        /* \"#utility.yul\":18170:18350   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18356:18538   */\n    tag_294:\n        /* \"#utility.yul\":18496:18530   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":18492:18493   */\n      0x00\n        /* \"#utility.yul\":18484:18490   */\n      dup3\n        /* \"#utility.yul\":18480:18494   */\n      add\n        /* \"#utility.yul\":18473:18531   */\n      mstore\n        /* \"#utility.yul\":18356:18538   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18544:18722   */\n    tag_299:\n        /* \"#utility.yul\":18684:18714   */\n      0x436f6e747261637420616c726561647920696e697469616c697a656400000000\n        /* \"#utility.yul\":18680:18681   */\n      0x00\n        /* \"#utility.yul\":18672:18678   */\n      dup3\n        /* \"#utility.yul\":18668:18682   */\n      add\n        /* \"#utility.yul\":18661:18715   */\n      mstore\n        /* \"#utility.yul\":18544:18722   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18728:18961   */\n    tag_304:\n        /* \"#utility.yul\":18868:18902   */\n      0x4261636b75702077616c6c65742063616e206e6f742062652073616d65206173\n        /* \"#utility.yul\":18864:18865   */\n      0x00\n        /* \"#utility.yul\":18856:18862   */\n      dup3\n        /* \"#utility.yul\":18852:18866   */\n      add\n        /* \"#utility.yul\":18845:18903   */\n      mstore\n        /* \"#utility.yul\":18937:18953   */\n      0x2073656e6465722077616c6c6574000000000000000000000000000000000000\n        /* \"#utility.yul\":18932:18934   */\n      0x20\n        /* \"#utility.yul\":18924:18930   */\n      dup3\n        /* \"#utility.yul\":18920:18935   */\n      add\n        /* \"#utility.yul\":18913:18954   */\n      mstore\n        /* \"#utility.yul\":18728:18961   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18967:19081   */\n    tag_310:\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19087:19209   */\n    tag_192:\n        /* \"#utility.yul\":19160:19184   */\n      tag_387\n        /* \"#utility.yul\":19178:19183   */\n      dup2\n        /* \"#utility.yul\":19160:19184   */\n      tag_270\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":19153:19158   */\n      dup2\n        /* \"#utility.yul\":19150:19185   */\n      eq\n        /* \"#utility.yul\":19140:19203   */\n      tag_388\n      jumpi\n        /* \"#utility.yul\":19199:19200   */\n      0x00\n        /* \"#utility.yul\":19196:19197   */\n      dup1\n        /* \"#utility.yul\":19189:19201   */\n      revert\n        /* \"#utility.yul\":19140:19203   */\n    tag_388:\n        /* \"#utility.yul\":19087:19209   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19215:19335   */\n    tag_202:\n        /* \"#utility.yul\":19287:19310   */\n      tag_390\n        /* \"#utility.yul\":19304:19309   */\n      dup2\n        /* \"#utility.yul\":19287:19310   */\n      tag_278\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":19280:19285   */\n      dup2\n        /* \"#utility.yul\":19277:19311   */\n      eq\n        /* \"#utility.yul\":19267:19329   */\n      tag_391\n      jumpi\n        /* \"#utility.yul\":19325:19326   */\n      0x00\n        /* \"#utility.yul\":19322:19323   */\n      dup1\n        /* \"#utility.yul\":19315:19327   */\n      revert\n        /* \"#utility.yul\":19267:19329   */\n    tag_391:\n        /* \"#utility.yul\":19215:19335   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19341:19463   */\n    tag_210:\n        /* \"#utility.yul\":19414:19438   */\n      tag_393\n        /* \"#utility.yul\":19432:19437   */\n      dup2\n        /* \"#utility.yul\":19414:19438   */\n      tag_314\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":19407:19412   */\n      dup2\n        /* \"#utility.yul\":19404:19439   */\n      eq\n        /* \"#utility.yul\":19394:19457   */\n      tag_394\n      jumpi\n        /* \"#utility.yul\":19453:19454   */\n      0x00\n        /* \"#utility.yul\":19450:19451   */\n      dup1\n        /* \"#utility.yul\":19443:19455   */\n      revert\n        /* \"#utility.yul\":19394:19457   */\n    tag_394:\n        /* \"#utility.yul\":19341:19463   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212205706ad18650f717c94ad14e5d04441dc5c94a17c424e12f614f6920032507d7e64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1087": {
									"entryPoint": null,
									"id": 1087,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_1017": {
									"entryPoint": 50,
									"id": 1017,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_1130": {
									"entryPoint": 58,
									"id": 1130,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6115c08061010d6000396000f3fe6080604052600436106100a05760003560e01c806371b4bc991161006457806371b4bc991461018f5780638c7f807b146101b85780638da5cb5b146101cf578063bc197c81146101fa578063f09a401614610237578063f23a6e6114610260576100a7565b806301ffc9a7146100ac578063027f81ed146100e9578063150b7a0214610112578063450b2ad71461014f5780636354a2f714610166576100a7565b366100a757005b600080fd5b3480156100b857600080fd5b506100d360048036038101906100ce9190610f8d565b61029d565b6040516100e091906111c8565b60405180910390f35b3480156100f557600080fd5b50610110600480360381019061010b9190610f4d565b610317565b005b34801561011e57600080fd5b5061013960048036038101906101349190610e33565b6103a9565b60405161014691906111e3565b60405180910390f35b34801561015b57600080fd5b506101646103bd565b005b34801561017257600080fd5b5061018d60048036038101906101889190610f4d565b610466565b005b34801561019b57600080fd5b506101b660048036038101906101b19190610f4d565b610513565b005b3480156101c457600080fd5b506101cd6105c0565b005b3480156101db57600080fd5b506101e461064e565b6040516101f191906110f5565b60405180910390f35b34801561020657600080fd5b50610221600480360381019061021c9190610d64565b610677565b60405161022e91906111e3565b60405180910390f35b34801561024357600080fd5b5061025e60048036038101906102599190610d24565b61068c565b005b34801561026c57600080fd5b5061028760048036038101906102829190610eb6565b61089a565b60405161029491906111e3565b60405180910390f35b60007f4e2312e0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610310575061030f826108af565b5b9050919050565b61031f610919565b73ffffffffffffffffffffffffffffffffffffffff1661033d61064e565b73ffffffffffffffffffffffffffffffffffffffff1614610393576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038a9061123e565b60405180910390fd5b6103a561039e61064e565b8383610921565b5050565b600063150b7a0260e01b9050949350505050565b6103c5610919565b73ffffffffffffffffffffffffffffffffffffffff166103e361064e565b73ffffffffffffffffffffffffffffffffffffffff1614610439576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104309061123e565b60405180910390fd5b610464600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610995565b565b61046e610919565b73ffffffffffffffffffffffffffffffffffffffff1661048c61064e565b73ffffffffffffffffffffffffffffffffffffffff16146104e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d99061123e565b60405180910390fd5b61050f600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1683836109ef565b5050565b61051b610919565b73ffffffffffffffffffffffffffffffffffffffff1661053961064e565b73ffffffffffffffffffffffffffffffffffffffff161461058f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105869061123e565b60405180910390fd5b6105bc600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168383610921565b5050565b6105c8610919565b73ffffffffffffffffffffffffffffffffffffffff166105e661064e565b73ffffffffffffffffffffffffffffffffffffffff161461063c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106339061123e565b60405180910390fd5b61064c61064761064e565b610995565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600063bc197c8160e01b905095945050505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156106fc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106f39061121e565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561076c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610763906111fe565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156107db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107d29061127e565b60405180910390fd5b60001515600060149054906101000a900460ff16151514610831576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108289061125e565b60405180910390fd5b61083a82610afe565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600060146101000a81548160ff0219169083151502179055505050565b600063f23a6e6160e01b905095945050505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600033905090565b8173ffffffffffffffffffffffffffffffffffffffff166342842e0e3085846040518463ffffffff1660e01b815260040161095e93929190611110565b600060405180830381600087803b15801561097857600080fd5b505af115801561098c573d6000803e3d6000fd5b50505050505050565b600047905060008111156109eb578173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156109e9573d6000803e3d6000fd5b505b5050565b60008273ffffffffffffffffffffffffffffffffffffffff1662fdd58e30846040518363ffffffff1660e01b8152600401610a2b92919061119f565b60206040518083038186803b158015610a4357600080fd5b505afa158015610a57573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a7b9190610fba565b90506000811115610af8578273ffffffffffffffffffffffffffffffffffffffff1663f242432a308685856040518563ffffffff1660e01b8152600401610ac59493929190611147565b600060405180830381600087803b158015610adf57600080fd5b505af1158015610af3573d6000803e3d6000fd5b505050505b50505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000610bd5610bd0846112c3565b61129e565b90508083825260208201905082856020860282011115610bf857610bf761142a565b5b60005b85811015610c285781610c0e8882610cfa565b845260208401935060208301925050600181019050610bfb565b5050509392505050565b6000610c45610c40846112ef565b61129e565b905082815260208101848484011115610c6157610c6061142f565b5b610c6c8482856113b6565b509392505050565b600081359050610c8381611545565b92915050565b600082601f830112610c9e57610c9d611425565b5b8135610cae848260208601610bc2565b91505092915050565b600081359050610cc68161155c565b92915050565b600082601f830112610ce157610ce0611425565b5b8135610cf1848260208601610c32565b91505092915050565b600081359050610d0981611573565b92915050565b600081519050610d1e81611573565b92915050565b60008060408385031215610d3b57610d3a611439565b5b6000610d4985828601610c74565b9250506020610d5a85828601610c74565b9150509250929050565b600080600080600060a08688031215610d8057610d7f611439565b5b6000610d8e88828901610c74565b9550506020610d9f88828901610c74565b945050604086013567ffffffffffffffff811115610dc057610dbf611434565b5b610dcc88828901610c89565b935050606086013567ffffffffffffffff811115610ded57610dec611434565b5b610df988828901610c89565b925050608086013567ffffffffffffffff811115610e1a57610e19611434565b5b610e2688828901610ccc565b9150509295509295909350565b60008060008060808587031215610e4d57610e4c611439565b5b6000610e5b87828801610c74565b9450506020610e6c87828801610c74565b9350506040610e7d87828801610cfa565b925050606085013567ffffffffffffffff811115610e9e57610e9d611434565b5b610eaa87828801610ccc565b91505092959194509250565b600080600080600060a08688031215610ed257610ed1611439565b5b6000610ee088828901610c74565b9550506020610ef188828901610c74565b9450506040610f0288828901610cfa565b9350506060610f1388828901610cfa565b925050608086013567ffffffffffffffff811115610f3457610f33611434565b5b610f4088828901610ccc565b9150509295509295909350565b60008060408385031215610f6457610f63611439565b5b6000610f7285828601610c74565b9250506020610f8385828601610cfa565b9150509250929050565b600060208284031215610fa357610fa2611439565b5b6000610fb184828501610cb7565b91505092915050565b600060208284031215610fd057610fcf611439565b5b6000610fde84828501610d0f565b91505092915050565b610ff081611342565b82525050565b610fff81611354565b82525050565b61100e81611360565b82525050565b6000611021601e83611331565b915061102c8261144f565b602082019050919050565b6000611044601e83611331565b915061104f82611478565b602082019050919050565b6000611067602083611331565b9150611072826114a1565b602082019050919050565b600061108a601c83611331565b9150611095826114ca565b602082019050919050565b60006110ad602e83611331565b91506110b8826114f3565b604082019050919050565b60006110d0600083611320565b91506110db82611542565b600082019050919050565b6110ef816113ac565b82525050565b600060208201905061110a6000830184610fe7565b92915050565b60006060820190506111256000830186610fe7565b6111326020830185610fe7565b61113f60408301846110e6565b949350505050565b600060a08201905061115c6000830187610fe7565b6111696020830186610fe7565b61117660408301856110e6565b61118360608301846110e6565b8181036080830152611194816110c3565b905095945050505050565b60006040820190506111b46000830185610fe7565b6111c160208301846110e6565b9392505050565b60006020820190506111dd6000830184610ff6565b92915050565b60006020820190506111f86000830184611005565b92915050565b6000602082019050818103600083015261121781611014565b9050919050565b6000602082019050818103600083015261123781611037565b9050919050565b600060208201905081810360008301526112578161105a565b9050919050565b600060208201905081810360008301526112778161107d565b9050919050565b60006020820190508181036000830152611297816110a0565b9050919050565b60006112a86112b9565b90506112b482826113c5565b919050565b6000604051905090565b600067ffffffffffffffff8211156112de576112dd6113f6565b5b602082029050602081019050919050565b600067ffffffffffffffff82111561130a576113096113f6565b5b6113138261143e565b9050602081019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600061134d8261138c565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b6113ce8261143e565b810181811067ffffffffffffffff821117156113ed576113ec6113f6565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4261636b757020616464726573732063616e206e6f74206265207a65726f0000600082015250565b7f53656e64657220616464726573732063616e206e6f74206265207a65726f0000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f436f6e747261637420616c726561647920696e697469616c697a656400000000600082015250565b7f4261636b75702077616c6c65742063616e206e6f742062652073616d6520617360008201527f2073656e6465722077616c6c6574000000000000000000000000000000000000602082015250565b50565b61154e81611342565b811461155957600080fd5b50565b61156581611360565b811461157057600080fd5b50565b61157c816113ac565b811461158757600080fd5b5056fea26469706673582212205706ad18650f717c94ad14e5d04441dc5c94a17c424e12f614f6920032507d7e64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D PUSH2 0x22 PUSH2 0x32 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x3A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0xFE JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x15C0 DUP1 PUSH2 0x10D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA0 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x71B4BC99 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x71B4BC99 EQ PUSH2 0x18F JUMPI DUP1 PUSH4 0x8C7F807B EQ PUSH2 0x1B8 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1CF JUMPI DUP1 PUSH4 0xBC197C81 EQ PUSH2 0x1FA JUMPI DUP1 PUSH4 0xF09A4016 EQ PUSH2 0x237 JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0x260 JUMPI PUSH2 0xA7 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xAC JUMPI DUP1 PUSH4 0x27F81ED EQ PUSH2 0xE9 JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x112 JUMPI DUP1 PUSH4 0x450B2AD7 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x6354A2F7 EQ PUSH2 0x166 JUMPI PUSH2 0xA7 JUMP JUMPDEST CALLDATASIZE PUSH2 0xA7 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCE SWAP2 SWAP1 PUSH2 0xF8D JUMP JUMPDEST PUSH2 0x29D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE0 SWAP2 SWAP1 PUSH2 0x11C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x110 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10B SWAP2 SWAP1 PUSH2 0xF4D JUMP JUMPDEST PUSH2 0x317 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x139 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x134 SWAP2 SWAP1 PUSH2 0xE33 JUMP JUMPDEST PUSH2 0x3A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP2 SWAP1 PUSH2 0x11E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x164 PUSH2 0x3BD JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x172 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x188 SWAP2 SWAP1 PUSH2 0xF4D JUMP JUMPDEST PUSH2 0x466 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B1 SWAP2 SWAP1 PUSH2 0xF4D JUMP JUMPDEST PUSH2 0x513 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CD PUSH2 0x5C0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E4 PUSH2 0x64E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F1 SWAP2 SWAP1 PUSH2 0x10F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x206 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x221 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21C SWAP2 SWAP1 PUSH2 0xD64 JUMP JUMPDEST PUSH2 0x677 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22E SWAP2 SWAP1 PUSH2 0x11E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x243 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x259 SWAP2 SWAP1 PUSH2 0xD24 JUMP JUMPDEST PUSH2 0x68C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x287 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x282 SWAP2 SWAP1 PUSH2 0xEB6 JUMP JUMPDEST PUSH2 0x89A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x294 SWAP2 SWAP1 PUSH2 0x11E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x4E2312E000000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x310 JUMPI POP PUSH2 0x30F DUP3 PUSH2 0x8AF JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x31F PUSH2 0x919 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x33D PUSH2 0x64E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x393 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x38A SWAP1 PUSH2 0x123E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3A5 PUSH2 0x39E PUSH2 0x64E JUMP JUMPDEST DUP4 DUP4 PUSH2 0x921 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0x150B7A02 PUSH1 0xE0 SHL SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x3C5 PUSH2 0x919 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3E3 PUSH2 0x64E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x439 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x430 SWAP1 PUSH2 0x123E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x464 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x995 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x46E PUSH2 0x919 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x48C PUSH2 0x64E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x4E2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D9 SWAP1 PUSH2 0x123E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x50F PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 DUP4 PUSH2 0x9EF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x51B PUSH2 0x919 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x539 PUSH2 0x64E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x58F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x586 SWAP1 PUSH2 0x123E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5BC PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 DUP4 PUSH2 0x921 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x5C8 PUSH2 0x919 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x5E6 PUSH2 0x64E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x63C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x633 SWAP1 PUSH2 0x123E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x64C PUSH2 0x647 PUSH2 0x64E JUMP JUMPDEST PUSH2 0x995 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x6FC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F3 SWAP1 PUSH2 0x121E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x76C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x763 SWAP1 PUSH2 0x11FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x7DB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7D2 SWAP1 PUSH2 0x127E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x831 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x828 SWAP1 PUSH2 0x125E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x83A DUP3 PUSH2 0xAFE JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x42842E0E ADDRESS DUP6 DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x95E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1110 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x978 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x98C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x9EB JUMPI DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x9E9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH3 0xFDD58E ADDRESS DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA2B SWAP3 SWAP2 SWAP1 PUSH2 0x119F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA43 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA57 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA7B SWAP2 SWAP1 PUSH2 0xFBA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0xAF8 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF242432A ADDRESS DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAC5 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1147 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xADF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xAF3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBD5 PUSH2 0xBD0 DUP5 PUSH2 0x12C3 JUMP JUMPDEST PUSH2 0x129E JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0xBF8 JUMPI PUSH2 0xBF7 PUSH2 0x142A JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0xC28 JUMPI DUP2 PUSH2 0xC0E DUP9 DUP3 PUSH2 0xCFA JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0xBFB JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC45 PUSH2 0xC40 DUP5 PUSH2 0x12EF JUMP JUMPDEST PUSH2 0x129E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0xC61 JUMPI PUSH2 0xC60 PUSH2 0x142F JUMP JUMPDEST JUMPDEST PUSH2 0xC6C DUP5 DUP3 DUP6 PUSH2 0x13B6 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC83 DUP2 PUSH2 0x1545 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xC9E JUMPI PUSH2 0xC9D PUSH2 0x1425 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xCAE DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xBC2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xCC6 DUP2 PUSH2 0x155C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xCE1 JUMPI PUSH2 0xCE0 PUSH2 0x1425 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xCF1 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xC32 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD09 DUP2 PUSH2 0x1573 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xD1E DUP2 PUSH2 0x1573 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD3B JUMPI PUSH2 0xD3A PUSH2 0x1439 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD49 DUP6 DUP3 DUP7 ADD PUSH2 0xC74 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD5A DUP6 DUP3 DUP7 ADD PUSH2 0xC74 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xD80 JUMPI PUSH2 0xD7F PUSH2 0x1439 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD8E DUP9 DUP3 DUP10 ADD PUSH2 0xC74 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0xD9F DUP9 DUP3 DUP10 ADD PUSH2 0xC74 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xDC0 JUMPI PUSH2 0xDBF PUSH2 0x1434 JUMP JUMPDEST JUMPDEST PUSH2 0xDCC DUP9 DUP3 DUP10 ADD PUSH2 0xC89 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xDED JUMPI PUSH2 0xDEC PUSH2 0x1434 JUMP JUMPDEST JUMPDEST PUSH2 0xDF9 DUP9 DUP3 DUP10 ADD PUSH2 0xC89 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE1A JUMPI PUSH2 0xE19 PUSH2 0x1434 JUMP JUMPDEST JUMPDEST PUSH2 0xE26 DUP9 DUP3 DUP10 ADD PUSH2 0xCCC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xE4D JUMPI PUSH2 0xE4C PUSH2 0x1439 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE5B DUP8 DUP3 DUP9 ADD PUSH2 0xC74 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0xE6C DUP8 DUP3 DUP9 ADD PUSH2 0xC74 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0xE7D DUP8 DUP3 DUP9 ADD PUSH2 0xCFA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE9E JUMPI PUSH2 0xE9D PUSH2 0x1434 JUMP JUMPDEST JUMPDEST PUSH2 0xEAA DUP8 DUP3 DUP9 ADD PUSH2 0xCCC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xED2 JUMPI PUSH2 0xED1 PUSH2 0x1439 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xEE0 DUP9 DUP3 DUP10 ADD PUSH2 0xC74 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0xEF1 DUP9 DUP3 DUP10 ADD PUSH2 0xC74 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0xF02 DUP9 DUP3 DUP10 ADD PUSH2 0xCFA JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0xF13 DUP9 DUP3 DUP10 ADD PUSH2 0xCFA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xF34 JUMPI PUSH2 0xF33 PUSH2 0x1434 JUMP JUMPDEST JUMPDEST PUSH2 0xF40 DUP9 DUP3 DUP10 ADD PUSH2 0xCCC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF64 JUMPI PUSH2 0xF63 PUSH2 0x1439 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF72 DUP6 DUP3 DUP7 ADD PUSH2 0xC74 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xF83 DUP6 DUP3 DUP7 ADD PUSH2 0xCFA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFA3 JUMPI PUSH2 0xFA2 PUSH2 0x1439 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xFB1 DUP5 DUP3 DUP6 ADD PUSH2 0xCB7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFD0 JUMPI PUSH2 0xFCF PUSH2 0x1439 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xFDE DUP5 DUP3 DUP6 ADD PUSH2 0xD0F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xFF0 DUP2 PUSH2 0x1342 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xFFF DUP2 PUSH2 0x1354 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x100E DUP2 PUSH2 0x1360 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1021 PUSH1 0x1E DUP4 PUSH2 0x1331 JUMP JUMPDEST SWAP2 POP PUSH2 0x102C DUP3 PUSH2 0x144F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1044 PUSH1 0x1E DUP4 PUSH2 0x1331 JUMP JUMPDEST SWAP2 POP PUSH2 0x104F DUP3 PUSH2 0x1478 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1067 PUSH1 0x20 DUP4 PUSH2 0x1331 JUMP JUMPDEST SWAP2 POP PUSH2 0x1072 DUP3 PUSH2 0x14A1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x108A PUSH1 0x1C DUP4 PUSH2 0x1331 JUMP JUMPDEST SWAP2 POP PUSH2 0x1095 DUP3 PUSH2 0x14CA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10AD PUSH1 0x2E DUP4 PUSH2 0x1331 JUMP JUMPDEST SWAP2 POP PUSH2 0x10B8 DUP3 PUSH2 0x14F3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10D0 PUSH1 0x0 DUP4 PUSH2 0x1320 JUMP JUMPDEST SWAP2 POP PUSH2 0x10DB DUP3 PUSH2 0x1542 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10EF DUP2 PUSH2 0x13AC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x110A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xFE7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1125 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xFE7 JUMP JUMPDEST PUSH2 0x1132 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xFE7 JUMP JUMPDEST PUSH2 0x113F PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x10E6 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x115C PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0xFE7 JUMP JUMPDEST PUSH2 0x1169 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0xFE7 JUMP JUMPDEST PUSH2 0x1176 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x10E6 JUMP JUMPDEST PUSH2 0x1183 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x10E6 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x1194 DUP2 PUSH2 0x10C3 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x11B4 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xFE7 JUMP JUMPDEST PUSH2 0x11C1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x10E6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11DD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xFF6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11F8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1005 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1217 DUP2 PUSH2 0x1014 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1237 DUP2 PUSH2 0x1037 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1257 DUP2 PUSH2 0x105A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1277 DUP2 PUSH2 0x107D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1297 DUP2 PUSH2 0x10A0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12A8 PUSH2 0x12B9 JUMP JUMPDEST SWAP1 POP PUSH2 0x12B4 DUP3 DUP3 PUSH2 0x13C5 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x12DE JUMPI PUSH2 0x12DD PUSH2 0x13F6 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x130A JUMPI PUSH2 0x1309 PUSH2 0x13F6 JUMP JUMPDEST JUMPDEST PUSH2 0x1313 DUP3 PUSH2 0x143E JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x134D DUP3 PUSH2 0x138C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH2 0x13CE DUP3 PUSH2 0x143E JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x13ED JUMPI PUSH2 0x13EC PUSH2 0x13F6 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4261636B757020616464726573732063616E206E6F74206265207A65726F0000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x53656E64657220616464726573732063616E206E6F74206265207A65726F0000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x436F6E747261637420616C726561647920696E697469616C697A656400000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4261636B75702077616C6C65742063616E206E6F742062652073616D65206173 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x2073656E6465722077616C6C6574000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x154E DUP2 PUSH2 0x1342 JUMP JUMPDEST DUP2 EQ PUSH2 0x1559 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1565 DUP2 PUSH2 0x1360 JUMP JUMPDEST DUP2 EQ PUSH2 0x1570 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x157C DUP2 PUSH2 0x13AC JUMP JUMPDEST DUP2 EQ PUSH2 0x1587 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPI MOD 0xAD XOR PUSH6 0xF717C94AD14 0xE5 0xD0 DIFFICULTY COINBASE 0xDC 0x5C SWAP5 LOG1 PUSH29 0x424E12F614F6920032507D7E64736F6C63430008070033000000000000 ",
							"sourceMap": "467:5374:14:-:0;;;;;;;;;;;;;818:32:13;837:12;:10;;;:12;;:::i;:::-;818:18;;;:32;;:::i;:::-;467:5374:14;;640:96:10;693:7;719:10;712:17;;640:96;:::o;1377:187:13:-;1450:16;1469:6;;;;;;;;;;;1450:25;;1494:8;1485:6;;:17;;;;;;;;;;;;;;;;;;1548:8;1517:40;;1538:8;1517:40;;;;;;;;;;;;1440:124;1377:187;:::o;467:5374:14:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_1212": {
									"entryPoint": null,
									"id": 1212,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_1017": {
									"entryPoint": 2329,
									"id": 1017,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferERC1155FundsToAddress_1352": {
									"entryPoint": 2543,
									"id": 1352,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferERC721FundsToAddress_1310": {
									"entryPoint": 2337,
									"id": 1310,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferNativeFundsToAddress_1436": {
									"entryPoint": 2453,
									"id": 1436,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_1130": {
									"entryPoint": 2814,
									"id": 1130,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@init_1208": {
									"entryPoint": 1676,
									"id": 1208,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@onERC1155BatchReceived_212": {
									"entryPoint": 1655,
									"id": 212,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"@onERC1155Received_189": {
									"entryPoint": 2202,
									"id": 189,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"@onERC721Received_709": {
									"entryPoint": 937,
									"id": 709,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@owner_1096": {
									"entryPoint": 1614,
									"id": 1096,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@sendERC1155FundsToBackupWallet_1275": {
									"entryPoint": 1126,
									"id": 1275,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@sendERC721FundsToBackupWallet_1259": {
									"entryPoint": 1299,
									"id": 1259,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@sendNativeFundsToBackupWallet_1288": {
									"entryPoint": 957,
									"id": 1288,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@supportsInterface_1050": {
									"entryPoint": 2223,
									"id": 1050,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_246": {
									"entryPoint": 669,
									"id": 246,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferERC721AssetsToWallet_1229": {
									"entryPoint": 791,
									"id": 1229,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@transferNativeAssetToWallet_1243": {
									"entryPoint": 1472,
									"id": 1243,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 3010,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 3122,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 3188,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 3209,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 3255,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 3276,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3322,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 3343,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3364,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr": {
									"entryPoint": 3428,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 3635,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr": {
									"entryPoint": 3766,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3917,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 3981,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 4026,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4071,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 4086,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes4_to_t_bytes4_fromStack": {
									"entryPoint": 4101,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_147837e924905a3bd7649319b6fc22646b0c017a57dd5a6eac862da5a06f6816_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4116,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_2bdef3017b3ab8e90fcdd0203656ef49f1cf91890714ed98466b7f0b7c411dbc_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4151,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4186,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_99a5106e083f54e153095639f5c53baa0d355c3b1a37f6c84924da3b1b45cf57_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4221,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ae81ee44af9e399b79dc430c2aa49760868f55e17e70be2d4b0876841d2be5a2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4256,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 4291,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4326,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 4341,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4368,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 4423,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4511,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 4552,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
									"entryPoint": 4579,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_147837e924905a3bd7649319b6fc22646b0c017a57dd5a6eac862da5a06f6816__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4606,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2bdef3017b3ab8e90fcdd0203656ef49f1cf91890714ed98466b7f0b7c411dbc__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4638,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4670,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_99a5106e083f54e153095639f5c53baa0d355c3b1a37f6c84924da3b1b45cf57__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4702,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ae81ee44af9e399b79dc430c2aa49760868f55e17e70be2d4b0876841d2be5a2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4734,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 4766,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 4793,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 4803,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 4847,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 4896,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4913,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4930,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4948,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 4960,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5004,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5036,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory": {
									"entryPoint": 5046,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"finalize_allocation": {
									"entryPoint": 5061,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 5110,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 5157,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 5162,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 5167,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 5172,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5177,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 5182,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_147837e924905a3bd7649319b6fc22646b0c017a57dd5a6eac862da5a06f6816": {
									"entryPoint": 5199,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_2bdef3017b3ab8e90fcdd0203656ef49f1cf91890714ed98466b7f0b7c411dbc": {
									"entryPoint": 5240,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 5281,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_99a5106e083f54e153095639f5c53baa0d355c3b1a37f6c84924da3b1b45cf57": {
									"entryPoint": 5322,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ae81ee44af9e399b79dc430c2aa49760868f55e17e70be2d4b0876841d2be5a2": {
									"entryPoint": 5363,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470": {
									"entryPoint": 5442,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 5445,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 5468,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5491,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:19466:15",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "126:620:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "136:90:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "218:6:15"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "161:56:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "161:64:15"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "145:15:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "145:81:15"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "136:5:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "235:16:15",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "246:5:15"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "239:3:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "268:5:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "275:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "261:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "261:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "261:21:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "291:23:15",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "302:5:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "309:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "298:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "298:16:15"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "291:3:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "324:17:15",
															"value": {
																"name": "offset",
																"nodeType": "YulIdentifier",
																"src": "335:6:15"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "328:3:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "390:103:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "404:77:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "404:79:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "404:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "360:3:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "369:6:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "377:4:15",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "365:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "365:17:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "356:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "356:27:15"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "385:3:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "353:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "353:36:15"
															},
															"nodeType": "YulIf",
															"src": "350:143:15"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "562:178:15",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "577:21:15",
																		"value": {
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "595:3:15"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "581:10:15",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "619:3:15"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "645:10:15"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "657:3:15"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_uint256",
																						"nodeType": "YulIdentifier",
																						"src": "624:20:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "624:37:15"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "612:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "612:50:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "612:50:15"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "675:21:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "686:3:15"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "691:4:15",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "682:3:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "682:14:15"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "675:3:15"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "709:21:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "720:3:15"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "725:4:15",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "716:3:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "716:14:15"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "709:3:15"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "524:1:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "527:6:15"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "521:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "521:13:15"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "535:18:15",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "537:14:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "546:1:15"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "549:1:15",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "542:3:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "542:9:15"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "537:1:15"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "506:14:15",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "508:10:15",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "517:1:15",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "512:1:15",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "502:238:15"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "96:6:15",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "104:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "112:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "120:5:15",
														"type": ""
													}
												],
												"src": "24:722:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "835:327:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "845:74:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "911:6:15"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "870:40:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "870:48:15"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "854:15:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "854:65:15"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "845:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "935:5:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "942:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "928:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "928:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "928:21:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "958:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "973:5:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "980:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "969:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "969:16:15"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "962:3:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1023:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "1025:77:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1025:79:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1025:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "1004:3:15"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1009:6:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1000:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1000:16:15"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1018:3:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "997:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "997:25:15"
															},
															"nodeType": "YulIf",
															"src": "994:112:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "1139:3:15"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "1144:3:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1149:6:15"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1115:23:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1115:41:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1115:41:15"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "808:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "813:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "821:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "829:5:15",
														"type": ""
													}
												],
												"src": "752:410:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1220:87:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1230:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1252:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1239:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1239:20:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1230:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1295:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1268:26:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1268:33:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1268:33:15"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1198:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1206:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1214:5:15",
														"type": ""
													}
												],
												"src": "1168:139:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1407:293:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1456:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "1458:77:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1458:79:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1458:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1435:6:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1443:4:15",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1431:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1431:17:15"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "1450:3:15"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1427:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1427:27:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1420:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1420:35:15"
															},
															"nodeType": "YulIf",
															"src": "1417:122:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1548:34:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1575:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1562:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1562:20:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1552:6:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1591:103:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1667:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1675:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1663:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1663:17:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1682:6:15"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1690:3:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "1600:62:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1600:94:15"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1591:5:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1385:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1393:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1401:5:15",
														"type": ""
													}
												],
												"src": "1330:370:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1757:86:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1767:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1789:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1776:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1776:20:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1767:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1831:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "1805:25:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1805:32:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1805:32:15"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1735:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1743:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1751:5:15",
														"type": ""
													}
												],
												"src": "1706:137:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1923:277:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1972:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "1974:77:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1974:79:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1974:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1951:6:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1959:4:15",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1947:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1947:17:15"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "1966:3:15"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1943:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1943:27:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1936:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1936:35:15"
															},
															"nodeType": "YulIf",
															"src": "1933:122:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2064:34:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2091:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2078:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2078:20:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2068:6:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2107:87:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2167:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2175:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2163:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2163:17:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2182:6:15"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2190:3:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2116:46:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2116:78:15"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2107:5:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1901:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1909:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1917:5:15",
														"type": ""
													}
												],
												"src": "1862:338:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2258:87:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2268:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2290:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2277:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2277:20:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2268:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2333:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2306:26:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2306:33:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2306:33:15"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2236:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2244:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2252:5:15",
														"type": ""
													}
												],
												"src": "2206:139:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2414:80:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2424:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2439:6:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2433:5:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2433:13:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2424:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2482:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2455:26:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2455:33:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2455:33:15"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2392:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2400:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2408:5:15",
														"type": ""
													}
												],
												"src": "2351:143:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2583:391:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2629:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2631:77:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2631:79:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2631:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2604:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2613:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2600:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2600:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2625:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2596:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2596:32:15"
															},
															"nodeType": "YulIf",
															"src": "2593:119:15"
														},
														{
															"nodeType": "YulBlock",
															"src": "2722:117:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2737:15:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2751:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2741:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2766:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2801:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2812:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2797:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2797:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2821:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2776:20:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2776:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2766:6:15"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2849:118:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2864:16:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2878:2:15",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2868:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2894:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2929:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2940:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2925:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2925:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2949:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2904:20:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2904:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2894:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2545:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2556:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2568:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2576:6:15",
														"type": ""
													}
												],
												"src": "2500:474:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3173:1316:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3220:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3222:77:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3222:79:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3222:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3194:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3203:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3190:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3190:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3215:3:15",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3186:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3186:33:15"
															},
															"nodeType": "YulIf",
															"src": "3183:120:15"
														},
														{
															"nodeType": "YulBlock",
															"src": "3313:117:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3328:15:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3342:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3332:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3357:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3392:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3403:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3388:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3388:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3412:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3367:20:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3367:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3357:6:15"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3440:118:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3455:16:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3469:2:15",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3459:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3485:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3520:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3531:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3516:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3516:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3540:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3495:20:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3495:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3485:6:15"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3568:303:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3583:46:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3614:9:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3625:2:15",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3610:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3610:18:15"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "3597:12:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3597:32:15"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3587:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3676:83:15",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3678:77:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3678:79:15"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3678:79:15"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3648:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3656:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3645:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3645:30:15"
																	},
																	"nodeType": "YulIf",
																	"src": "3642:117:15"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3773:88:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3833:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3844:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3829:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3829:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3853:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "3783:45:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3783:78:15"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "3773:6:15"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3881:303:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3896:46:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3927:9:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3938:2:15",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3923:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3923:18:15"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "3910:12:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3910:32:15"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3900:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3989:83:15",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3991:77:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3991:79:15"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3991:79:15"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3961:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3969:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3958:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3958:30:15"
																	},
																	"nodeType": "YulIf",
																	"src": "3955:117:15"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4086:88:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4146:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4157:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4142:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4142:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4166:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "4096:45:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4096:78:15"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "4086:6:15"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4194:288:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4209:47:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4240:9:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4251:3:15",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4236:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4236:19:15"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "4223:12:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4223:33:15"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4213:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "4303:83:15",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "4305:77:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4305:79:15"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4305:79:15"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4275:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4283:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4272:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4272:30:15"
																	},
																	"nodeType": "YulIf",
																	"src": "4269:117:15"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4400:72:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4444:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4455:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4440:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4440:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4464:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "4410:29:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4410:62:15"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "4400:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3111:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3122:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3134:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3142:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3150:6:15",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3158:6:15",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "3166:6:15",
														"type": ""
													}
												],
												"src": "2980:1509:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4621:817:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4668:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4670:77:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4670:79:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4670:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4642:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4651:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4638:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4638:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4663:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4634:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4634:33:15"
															},
															"nodeType": "YulIf",
															"src": "4631:120:15"
														},
														{
															"nodeType": "YulBlock",
															"src": "4761:117:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4776:15:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4790:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4780:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4805:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4840:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4851:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4836:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4836:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4860:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4815:20:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4815:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4805:6:15"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4888:118:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4903:16:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4917:2:15",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4907:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4933:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4968:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4979:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4964:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4964:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4988:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4943:20:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4943:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4933:6:15"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5016:118:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5031:16:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5045:2:15",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5035:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5061:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5096:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5107:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5092:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5092:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5116:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5071:20:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5071:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "5061:6:15"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5144:287:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5159:46:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5190:9:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5201:2:15",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5186:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5186:18:15"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "5173:12:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5173:32:15"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5163:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "5252:83:15",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "5254:77:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5254:79:15"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "5254:79:15"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5224:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5232:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5221:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5221:30:15"
																	},
																	"nodeType": "YulIf",
																	"src": "5218:117:15"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5349:72:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5393:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5404:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5389:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5389:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5413:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "5359:29:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5359:62:15"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "5349:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4567:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4578:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4590:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4598:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4606:6:15",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "4614:6:15",
														"type": ""
													}
												],
												"src": "4495:943:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5587:946:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5634:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5636:77:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5636:79:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5636:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5608:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5617:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5604:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5604:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5629:3:15",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5600:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5600:33:15"
															},
															"nodeType": "YulIf",
															"src": "5597:120:15"
														},
														{
															"nodeType": "YulBlock",
															"src": "5727:117:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5742:15:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5756:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5746:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5771:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5806:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5817:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5802:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5802:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5826:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5781:20:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5781:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5771:6:15"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5854:118:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5869:16:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5883:2:15",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5873:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5899:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5934:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5945:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5930:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5930:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5954:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5909:20:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5909:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "5899:6:15"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5982:118:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5997:16:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6011:2:15",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6001:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6027:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6062:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6073:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6058:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6058:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6082:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "6037:20:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6037:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "6027:6:15"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6110:118:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6125:16:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6139:2:15",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6129:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6155:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6190:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6201:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6186:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6186:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6210:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "6165:20:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6165:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "6155:6:15"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6238:288:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6253:47:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6284:9:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6295:3:15",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6280:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6280:19:15"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "6267:12:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6267:33:15"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6257:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "6347:83:15",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "6349:77:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6349:79:15"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "6349:79:15"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "6319:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6327:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "6316:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6316:30:15"
																	},
																	"nodeType": "YulIf",
																	"src": "6313:117:15"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6444:72:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6488:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6499:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6484:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6484:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6508:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "6454:29:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6454:62:15"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "6444:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5525:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5536:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5548:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5556:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5564:6:15",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "5572:6:15",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "5580:6:15",
														"type": ""
													}
												],
												"src": "5444:1089:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6622:391:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6668:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6670:77:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6670:79:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6670:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6643:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6652:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6639:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6639:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6664:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6635:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6635:32:15"
															},
															"nodeType": "YulIf",
															"src": "6632:119:15"
														},
														{
															"nodeType": "YulBlock",
															"src": "6761:117:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6776:15:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6790:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6780:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6805:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6840:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6851:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6836:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6836:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6860:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6815:20:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6815:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6805:6:15"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6888:118:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6903:16:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6917:2:15",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6907:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6933:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6968:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6979:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6964:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6964:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6988:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "6943:20:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6943:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "6933:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6584:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6595:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6607:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6615:6:15",
														"type": ""
													}
												],
												"src": "6539:474:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7084:262:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7130:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "7132:77:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7132:79:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7132:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7105:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7114:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7101:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7101:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7126:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7097:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7097:32:15"
															},
															"nodeType": "YulIf",
															"src": "7094:119:15"
														},
														{
															"nodeType": "YulBlock",
															"src": "7223:116:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7238:15:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7252:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7242:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7267:62:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7301:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7312:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7297:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7297:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7321:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "7277:19:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7277:52:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "7267:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7054:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7065:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7077:6:15",
														"type": ""
													}
												],
												"src": "7019:327:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7429:274:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7475:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "7477:77:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7477:79:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7477:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7450:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7459:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7446:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7446:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7471:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7442:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7442:32:15"
															},
															"nodeType": "YulIf",
															"src": "7439:119:15"
														},
														{
															"nodeType": "YulBlock",
															"src": "7568:128:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7583:15:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7597:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7587:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7612:74:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7658:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7669:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7654:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7654:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7678:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "7622:31:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7622:64:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "7612:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7399:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7410:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7422:6:15",
														"type": ""
													}
												],
												"src": "7352:351:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7774:53:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7791:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7814:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "7796:17:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7796:24:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7784:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7784:37:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7784:37:15"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7762:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7769:3:15",
														"type": ""
													}
												],
												"src": "7709:118:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7892:50:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7909:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7929:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "7914:14:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7914:21:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7902:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7902:34:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7902:34:15"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7880:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7887:3:15",
														"type": ""
													}
												],
												"src": "7833:109:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8011:52:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8028:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8050:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "8033:16:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8033:23:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8021:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8021:36:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8021:36:15"
														}
													]
												},
												"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7999:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8006:3:15",
														"type": ""
													}
												],
												"src": "7948:115:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8215:220:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8225:74:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8291:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8296:2:15",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8232:58:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8232:67:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8225:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8397:3:15"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_147837e924905a3bd7649319b6fc22646b0c017a57dd5a6eac862da5a06f6816",
																	"nodeType": "YulIdentifier",
																	"src": "8308:88:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8308:93:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8308:93:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8410:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8421:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8426:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8417:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8417:12:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8410:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_147837e924905a3bd7649319b6fc22646b0c017a57dd5a6eac862da5a06f6816_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8203:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8211:3:15",
														"type": ""
													}
												],
												"src": "8069:366:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8587:220:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8597:74:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8663:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8668:2:15",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8604:58:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8604:67:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8597:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8769:3:15"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_2bdef3017b3ab8e90fcdd0203656ef49f1cf91890714ed98466b7f0b7c411dbc",
																	"nodeType": "YulIdentifier",
																	"src": "8680:88:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8680:93:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8680:93:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8782:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8793:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8798:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8789:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8789:12:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8782:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_2bdef3017b3ab8e90fcdd0203656ef49f1cf91890714ed98466b7f0b7c411dbc_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8575:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8583:3:15",
														"type": ""
													}
												],
												"src": "8441:366:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8959:220:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8969:74:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9035:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9040:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8976:58:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8976:67:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8969:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9141:3:15"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "9052:88:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9052:93:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9052:93:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9154:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9165:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9170:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9161:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9161:12:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9154:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8947:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8955:3:15",
														"type": ""
													}
												],
												"src": "8813:366:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9331:220:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9341:74:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9407:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9412:2:15",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9348:58:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9348:67:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9341:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9513:3:15"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_99a5106e083f54e153095639f5c53baa0d355c3b1a37f6c84924da3b1b45cf57",
																	"nodeType": "YulIdentifier",
																	"src": "9424:88:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9424:93:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9424:93:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9526:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9537:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9542:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9533:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9533:12:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9526:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_99a5106e083f54e153095639f5c53baa0d355c3b1a37f6c84924da3b1b45cf57_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9319:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9327:3:15",
														"type": ""
													}
												],
												"src": "9185:366:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9703:220:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9713:74:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9779:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9784:2:15",
																		"type": "",
																		"value": "46"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9720:58:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9720:67:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9713:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9885:3:15"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ae81ee44af9e399b79dc430c2aa49760868f55e17e70be2d4b0876841d2be5a2",
																	"nodeType": "YulIdentifier",
																	"src": "9796:88:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9796:93:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9796:93:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9898:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9909:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9914:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9905:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9905:12:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9898:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ae81ee44af9e399b79dc430c2aa49760868f55e17e70be2d4b0876841d2be5a2_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9691:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9699:3:15",
														"type": ""
													}
												],
												"src": "9557:366:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10074:217:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10084:72:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10149:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10154:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10091:57:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10091:65:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10084:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10254:3:15"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"nodeType": "YulIdentifier",
																	"src": "10165:88:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10165:93:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10165:93:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10267:18:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10278:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10283:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10274:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10274:11:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10267:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10062:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10070:3:15",
														"type": ""
													}
												],
												"src": "9929:362:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10362:53:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10379:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10402:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "10384:17:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10384:24:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10372:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10372:37:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10372:37:15"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10350:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10357:3:15",
														"type": ""
													}
												],
												"src": "10297:118:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10519:124:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10529:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10541:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10552:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10537:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10537:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10529:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10609:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10622:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10633:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10618:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10618:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10565:43:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10565:71:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10565:71:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10491:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10503:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10514:4:15",
														"type": ""
													}
												],
												"src": "10421:222:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10803:288:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10813:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10825:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10836:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10821:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10821:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10813:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10893:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10906:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10917:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10902:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10902:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10849:43:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10849:71:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10849:71:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "10974:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10987:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10998:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10983:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10983:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10930:43:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10930:72:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10930:72:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "11056:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11069:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11080:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11065:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11065:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11012:43:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11012:72:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11012:72:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10759:9:15",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "10771:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10779:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10787:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10798:4:15",
														"type": ""
													}
												],
												"src": "10649:442:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11379:577:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11389:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11401:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11412:3:15",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11397:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11397:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11389:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11470:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11483:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11494:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11479:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11479:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11426:43:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11426:71:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11426:71:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "11551:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11564:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11575:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11560:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11560:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11507:43:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11507:72:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11507:72:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "11633:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11646:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11657:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11642:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11642:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11589:43:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11589:72:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11589:72:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "11715:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11728:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11739:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11724:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11724:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11671:43:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11671:72:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11671:72:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11764:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11775:3:15",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11760:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11760:19:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11785:4:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11791:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11781:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11781:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11753:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11753:49:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11753:49:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11811:138:15",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11944:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11819:123:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11819:130:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11811:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11327:9:15",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "11339:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "11347:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11355:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11363:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11374:4:15",
														"type": ""
													}
												],
												"src": "11097:859:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12088:206:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12098:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12110:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12121:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12106:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12106:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12098:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12178:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12191:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12202:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12187:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12187:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12134:43:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12134:71:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12134:71:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "12259:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12272:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12283:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12268:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12268:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12215:43:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12215:72:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12215:72:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12052:9:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "12064:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12072:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12083:4:15",
														"type": ""
													}
												],
												"src": "11962:332:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12392:118:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12402:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12414:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12425:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12410:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12410:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12402:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12476:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12489:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12500:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12485:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12485:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12438:37:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12438:65:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12438:65:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12364:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12376:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12387:4:15",
														"type": ""
													}
												],
												"src": "12300:210:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12612:122:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12622:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12634:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12645:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12630:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12630:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12622:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12700:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12713:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12724:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12709:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12709:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12658:41:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12658:69:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12658:69:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12584:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12596:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12607:4:15",
														"type": ""
													}
												],
												"src": "12516:218:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12911:248:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12921:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12933:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12944:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12929:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12929:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12921:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12968:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12979:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12964:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12964:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12987:4:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12993:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12983:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12983:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12957:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12957:47:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12957:47:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13013:139:15",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13147:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_147837e924905a3bd7649319b6fc22646b0c017a57dd5a6eac862da5a06f6816_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13021:124:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "13021:131:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13013:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_147837e924905a3bd7649319b6fc22646b0c017a57dd5a6eac862da5a06f6816__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12891:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12906:4:15",
														"type": ""
													}
												],
												"src": "12740:419:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13336:248:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13346:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13358:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13369:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13354:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "13354:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13346:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13393:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13404:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13389:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13389:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13412:4:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13418:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13408:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13408:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13382:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "13382:47:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13382:47:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13438:139:15",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13572:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_2bdef3017b3ab8e90fcdd0203656ef49f1cf91890714ed98466b7f0b7c411dbc_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13446:124:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "13446:131:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13438:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2bdef3017b3ab8e90fcdd0203656ef49f1cf91890714ed98466b7f0b7c411dbc__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13316:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13331:4:15",
														"type": ""
													}
												],
												"src": "13165:419:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13761:248:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13771:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13783:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13794:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13779:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "13779:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13771:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13818:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13829:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13814:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13814:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13837:4:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13843:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13833:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13833:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13807:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "13807:47:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13807:47:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13863:139:15",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13997:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13871:124:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "13871:131:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13863:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13741:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13756:4:15",
														"type": ""
													}
												],
												"src": "13590:419:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14186:248:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14196:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14208:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14219:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14204:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "14204:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14196:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14243:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14254:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14239:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14239:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14262:4:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14268:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14258:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14258:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14232:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "14232:47:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14232:47:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14288:139:15",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14422:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_99a5106e083f54e153095639f5c53baa0d355c3b1a37f6c84924da3b1b45cf57_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14296:124:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "14296:131:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14288:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_99a5106e083f54e153095639f5c53baa0d355c3b1a37f6c84924da3b1b45cf57__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14166:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14181:4:15",
														"type": ""
													}
												],
												"src": "14015:419:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14611:248:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14621:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14633:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14644:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14629:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "14629:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14621:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14668:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14679:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14664:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14664:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14687:4:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14693:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14683:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14683:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14657:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "14657:47:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14657:47:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14713:139:15",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14847:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ae81ee44af9e399b79dc430c2aa49760868f55e17e70be2d4b0876841d2be5a2_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14721:124:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "14721:131:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14713:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ae81ee44af9e399b79dc430c2aa49760868f55e17e70be2d4b0876841d2be5a2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14591:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14606:4:15",
														"type": ""
													}
												],
												"src": "14440:419:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14906:88:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14916:30:15",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "14926:18:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "14926:20:15"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "14916:6:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "14975:6:15"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "14983:4:15"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "14955:19:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "14955:33:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14955:33:15"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "14890:4:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14899:6:15",
														"type": ""
													}
												],
												"src": "14865:129:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15040:35:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15050:19:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15066:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "15060:5:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "15060:9:15"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "15050:6:15"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "15033:6:15",
														"type": ""
													}
												],
												"src": "15000:75:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15163:229:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15268:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "15270:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15270:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15270:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "15240:6:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15248:18:15",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "15237:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "15237:30:15"
															},
															"nodeType": "YulIf",
															"src": "15234:56:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15300:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "15312:6:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15320:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "15308:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "15308:17:15"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "15300:4:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "15362:23:15",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "15374:4:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15380:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15370:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "15370:15:15"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "15362:4:15"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "15147:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "15158:4:15",
														"type": ""
													}
												],
												"src": "15081:311:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15464:241:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15569:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "15571:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15571:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15571:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "15541:6:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15549:18:15",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "15538:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "15538:30:15"
															},
															"nodeType": "YulIf",
															"src": "15535:56:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15601:37:15",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "15631:6:15"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "15609:21:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "15609:29:15"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "15601:4:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "15675:23:15",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "15687:4:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15693:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15683:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "15683:15:15"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "15675:4:15"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "15448:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "15459:4:15",
														"type": ""
													}
												],
												"src": "15398:307:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15806:73:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15823:3:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "15828:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15816:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "15816:19:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15816:19:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15844:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15863:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15868:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15859:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "15859:14:15"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "15844:11:15"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15778:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "15783:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "15794:11:15",
														"type": ""
													}
												],
												"src": "15711:168:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15981:73:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15998:3:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "16003:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15991:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "15991:19:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15991:19:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16019:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16038:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16043:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16034:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "16034:14:15"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "16019:11:15"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15953:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "15958:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "15969:11:15",
														"type": ""
													}
												],
												"src": "15885:169:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16105:51:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16115:35:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "16144:5:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "16126:17:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "16126:24:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "16115:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16087:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "16097:7:15",
														"type": ""
													}
												],
												"src": "16060:96:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16204:48:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16214:32:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "16239:5:15"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "16232:6:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16232:13:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "16225:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "16225:21:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "16214:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16186:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "16196:7:15",
														"type": ""
													}
												],
												"src": "16162:90:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16302:105:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16312:89:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "16327:5:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16334:66:15",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "16323:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "16323:78:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "16312:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16284:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "16294:7:15",
														"type": ""
													}
												],
												"src": "16258:149:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16458:81:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16468:65:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "16483:5:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16490:42:15",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "16479:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "16479:54:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "16468:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16440:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "16450:7:15",
														"type": ""
													}
												],
												"src": "16413:126:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16590:32:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16600:16:15",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "16611:5:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "16600:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16572:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "16582:7:15",
														"type": ""
													}
												],
												"src": "16545:77:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16679:103:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "16702:3:15"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "16707:3:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "16712:6:15"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "16689:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "16689:30:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16689:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "16760:3:15"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "16765:6:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16756:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16756:16:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16774:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16749:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "16749:27:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16749:27:15"
														}
													]
												},
												"name": "copy_calldata_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "16661:3:15",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "16666:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "16671:6:15",
														"type": ""
													}
												],
												"src": "16628:154:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16831:238:15",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16841:58:15",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "16863:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "16893:4:15"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "16871:21:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16871:27:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16859:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "16859:40:15"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "16845:10:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17010:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "17012:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17012:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17012:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "16953:10:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16965:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "16950:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16950:34:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "16989:10:15"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17001:6:15"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "16986:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16986:22:15"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "16947:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "16947:62:15"
															},
															"nodeType": "YulIf",
															"src": "16944:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17048:2:15",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "17052:10:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17041:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "17041:22:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17041:22:15"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "16817:6:15",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "16825:4:15",
														"type": ""
													}
												],
												"src": "16788:281:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17103:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17120:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17123:77:15",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17113:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "17113:88:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17113:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17217:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17220:4:15",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17210:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "17210:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17210:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17241:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17244:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "17234:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "17234:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17234:15:15"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "17075:180:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17350:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17367:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17370:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "17360:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "17360:12:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17360:12:15"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "17261:117:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17473:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17490:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17493:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "17483:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "17483:12:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17483:12:15"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nodeType": "YulFunctionDefinition",
												"src": "17384:117:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17596:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17613:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17616:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "17606:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "17606:12:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17606:12:15"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "17507:117:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17719:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17736:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17739:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "17729:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "17729:12:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17729:12:15"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "17630:117:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17842:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17859:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17862:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "17852:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "17852:12:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17852:12:15"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "17753:117:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17924:54:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17934:38:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "17952:5:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17959:2:15",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17948:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17948:14:15"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17968:2:15",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "17964:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17964:7:15"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "17944:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "17944:28:15"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "17934:6:15"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17907:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "17917:6:15",
														"type": ""
													}
												],
												"src": "17876:102:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18090:74:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "18112:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18120:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18108:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18108:14:15"
																	},
																	{
																		"hexValue": "4261636b757020616464726573732063616e206e6f74206265207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18124:32:15",
																		"type": "",
																		"value": "Backup address can not be zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18101:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "18101:56:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18101:56:15"
														}
													]
												},
												"name": "store_literal_in_memory_147837e924905a3bd7649319b6fc22646b0c017a57dd5a6eac862da5a06f6816",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "18082:6:15",
														"type": ""
													}
												],
												"src": "17984:180:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18276:74:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "18298:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18306:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18294:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18294:14:15"
																	},
																	{
																		"hexValue": "53656e64657220616464726573732063616e206e6f74206265207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18310:32:15",
																		"type": "",
																		"value": "Sender address can not be zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18287:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "18287:56:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18287:56:15"
														}
													]
												},
												"name": "store_literal_in_memory_2bdef3017b3ab8e90fcdd0203656ef49f1cf91890714ed98466b7f0b7c411dbc",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "18268:6:15",
														"type": ""
													}
												],
												"src": "18170:180:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18462:76:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "18484:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18492:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18480:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18480:14:15"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18496:34:15",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18473:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "18473:58:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18473:58:15"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "18454:6:15",
														"type": ""
													}
												],
												"src": "18356:182:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18650:72:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "18672:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18680:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18668:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18668:14:15"
																	},
																	{
																		"hexValue": "436f6e747261637420616c726561647920696e697469616c697a6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18684:30:15",
																		"type": "",
																		"value": "Contract already initialized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18661:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "18661:54:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18661:54:15"
														}
													]
												},
												"name": "store_literal_in_memory_99a5106e083f54e153095639f5c53baa0d355c3b1a37f6c84924da3b1b45cf57",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "18642:6:15",
														"type": ""
													}
												],
												"src": "18544:178:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18834:127:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "18856:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18864:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18852:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18852:14:15"
																	},
																	{
																		"hexValue": "4261636b75702077616c6c65742063616e206e6f742062652073616d65206173",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18868:34:15",
																		"type": "",
																		"value": "Backup wallet can not be same as"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18845:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "18845:58:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18845:58:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "18924:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18932:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18920:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18920:15:15"
																	},
																	{
																		"hexValue": "2073656e6465722077616c6c6574",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18937:16:15",
																		"type": "",
																		"value": " sender wallet"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18913:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "18913:41:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18913:41:15"
														}
													]
												},
												"name": "store_literal_in_memory_ae81ee44af9e399b79dc430c2aa49760868f55e17e70be2d4b0876841d2be5a2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "18826:6:15",
														"type": ""
													}
												],
												"src": "18728:233:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19073:8:15",
													"statements": []
												},
												"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "19065:6:15",
														"type": ""
													}
												],
												"src": "18967:114:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19130:79:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19187:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19196:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19199:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "19189:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19189:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19189:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "19153:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "19178:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "19160:17:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19160:24:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "19150:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19150:35:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "19143:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "19143:43:15"
															},
															"nodeType": "YulIf",
															"src": "19140:63:15"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "19123:5:15",
														"type": ""
													}
												],
												"src": "19087:122:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19257:78:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19313:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19322:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19325:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "19315:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19315:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19315:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "19280:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "19304:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nodeType": "YulIdentifier",
																					"src": "19287:16:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19287:23:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "19277:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19277:34:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "19270:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "19270:42:15"
															},
															"nodeType": "YulIf",
															"src": "19267:62:15"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "19250:5:15",
														"type": ""
													}
												],
												"src": "19215:120:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19384:79:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19441:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19450:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19453:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "19443:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19443:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19443:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "19407:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "19432:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "19414:17:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19414:24:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "19404:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19404:35:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "19397:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "19397:43:15"
															},
															"nodeType": "YulIf",
															"src": "19394:63:15"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "19377:5:15",
														"type": ""
													}
												],
												"src": "19341:122:15"
											}
										]
									},
									"contents": "{\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let src := offset\n        if gt(add(src, mul(length, 0x20)), end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n            src := add(src, 0x20)\n        }\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes4(value))\n    }\n\n    function abi_encode_t_stringliteral_147837e924905a3bd7649319b6fc22646b0c017a57dd5a6eac862da5a06f6816_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_147837e924905a3bd7649319b6fc22646b0c017a57dd5a6eac862da5a06f6816(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_2bdef3017b3ab8e90fcdd0203656ef49f1cf91890714ed98466b7f0b7c411dbc_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_2bdef3017b3ab8e90fcdd0203656ef49f1cf91890714ed98466b7f0b7c411dbc(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_99a5106e083f54e153095639f5c53baa0d355c3b1a37f6c84924da3b1b45cf57_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_99a5106e083f54e153095639f5c53baa0d355c3b1a37f6c84924da3b1b45cf57(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_ae81ee44af9e399b79dc430c2aa49760868f55e17e70be2d4b0876841d2be5a2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 46)\n        store_literal_in_memory_ae81ee44af9e399b79dc430c2aa49760868f55e17e70be2d4b0876841d2be5a2(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_147837e924905a3bd7649319b6fc22646b0c017a57dd5a6eac862da5a06f6816__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_147837e924905a3bd7649319b6fc22646b0c017a57dd5a6eac862da5a06f6816_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_2bdef3017b3ab8e90fcdd0203656ef49f1cf91890714ed98466b7f0b7c411dbc__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2bdef3017b3ab8e90fcdd0203656ef49f1cf91890714ed98466b7f0b7c411dbc_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_99a5106e083f54e153095639f5c53baa0d355c3b1a37f6c84924da3b1b45cf57__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_99a5106e083f54e153095639f5c53baa0d355c3b1a37f6c84924da3b1b45cf57_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_ae81ee44af9e399b79dc430c2aa49760868f55e17e70be2d4b0876841d2be5a2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ae81ee44af9e399b79dc430c2aa49760868f55e17e70be2d4b0876841d2be5a2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_147837e924905a3bd7649319b6fc22646b0c017a57dd5a6eac862da5a06f6816(memPtr) {\n\n        mstore(add(memPtr, 0), \"Backup address can not be zero\")\n\n    }\n\n    function store_literal_in_memory_2bdef3017b3ab8e90fcdd0203656ef49f1cf91890714ed98466b7f0b7c411dbc(memPtr) {\n\n        mstore(add(memPtr, 0), \"Sender address can not be zero\")\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function store_literal_in_memory_99a5106e083f54e153095639f5c53baa0d355c3b1a37f6c84924da3b1b45cf57(memPtr) {\n\n        mstore(add(memPtr, 0), \"Contract already initialized\")\n\n    }\n\n    function store_literal_in_memory_ae81ee44af9e399b79dc430c2aa49760868f55e17e70be2d4b0876841d2be5a2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Backup wallet can not be same as\")\n\n        mstore(add(memPtr, 32), \" sender wallet\")\n\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 15,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100a05760003560e01c806371b4bc991161006457806371b4bc991461018f5780638c7f807b146101b85780638da5cb5b146101cf578063bc197c81146101fa578063f09a401614610237578063f23a6e6114610260576100a7565b806301ffc9a7146100ac578063027f81ed146100e9578063150b7a0214610112578063450b2ad71461014f5780636354a2f714610166576100a7565b366100a757005b600080fd5b3480156100b857600080fd5b506100d360048036038101906100ce9190610f8d565b61029d565b6040516100e091906111c8565b60405180910390f35b3480156100f557600080fd5b50610110600480360381019061010b9190610f4d565b610317565b005b34801561011e57600080fd5b5061013960048036038101906101349190610e33565b6103a9565b60405161014691906111e3565b60405180910390f35b34801561015b57600080fd5b506101646103bd565b005b34801561017257600080fd5b5061018d60048036038101906101889190610f4d565b610466565b005b34801561019b57600080fd5b506101b660048036038101906101b19190610f4d565b610513565b005b3480156101c457600080fd5b506101cd6105c0565b005b3480156101db57600080fd5b506101e461064e565b6040516101f191906110f5565b60405180910390f35b34801561020657600080fd5b50610221600480360381019061021c9190610d64565b610677565b60405161022e91906111e3565b60405180910390f35b34801561024357600080fd5b5061025e60048036038101906102599190610d24565b61068c565b005b34801561026c57600080fd5b5061028760048036038101906102829190610eb6565b61089a565b60405161029491906111e3565b60405180910390f35b60007f4e2312e0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610310575061030f826108af565b5b9050919050565b61031f610919565b73ffffffffffffffffffffffffffffffffffffffff1661033d61064e565b73ffffffffffffffffffffffffffffffffffffffff1614610393576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038a9061123e565b60405180910390fd5b6103a561039e61064e565b8383610921565b5050565b600063150b7a0260e01b9050949350505050565b6103c5610919565b73ffffffffffffffffffffffffffffffffffffffff166103e361064e565b73ffffffffffffffffffffffffffffffffffffffff1614610439576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104309061123e565b60405180910390fd5b610464600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610995565b565b61046e610919565b73ffffffffffffffffffffffffffffffffffffffff1661048c61064e565b73ffffffffffffffffffffffffffffffffffffffff16146104e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d99061123e565b60405180910390fd5b61050f600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1683836109ef565b5050565b61051b610919565b73ffffffffffffffffffffffffffffffffffffffff1661053961064e565b73ffffffffffffffffffffffffffffffffffffffff161461058f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105869061123e565b60405180910390fd5b6105bc600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168383610921565b5050565b6105c8610919565b73ffffffffffffffffffffffffffffffffffffffff166105e661064e565b73ffffffffffffffffffffffffffffffffffffffff161461063c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106339061123e565b60405180910390fd5b61064c61064761064e565b610995565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600063bc197c8160e01b905095945050505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156106fc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106f39061121e565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561076c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610763906111fe565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156107db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107d29061127e565b60405180910390fd5b60001515600060149054906101000a900460ff16151514610831576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108289061125e565b60405180910390fd5b61083a82610afe565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600060146101000a81548160ff0219169083151502179055505050565b600063f23a6e6160e01b905095945050505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600033905090565b8173ffffffffffffffffffffffffffffffffffffffff166342842e0e3085846040518463ffffffff1660e01b815260040161095e93929190611110565b600060405180830381600087803b15801561097857600080fd5b505af115801561098c573d6000803e3d6000fd5b50505050505050565b600047905060008111156109eb578173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156109e9573d6000803e3d6000fd5b505b5050565b60008273ffffffffffffffffffffffffffffffffffffffff1662fdd58e30846040518363ffffffff1660e01b8152600401610a2b92919061119f565b60206040518083038186803b158015610a4357600080fd5b505afa158015610a57573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a7b9190610fba565b90506000811115610af8578273ffffffffffffffffffffffffffffffffffffffff1663f242432a308685856040518563ffffffff1660e01b8152600401610ac59493929190611147565b600060405180830381600087803b158015610adf57600080fd5b505af1158015610af3573d6000803e3d6000fd5b505050505b50505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000610bd5610bd0846112c3565b61129e565b90508083825260208201905082856020860282011115610bf857610bf761142a565b5b60005b85811015610c285781610c0e8882610cfa565b845260208401935060208301925050600181019050610bfb565b5050509392505050565b6000610c45610c40846112ef565b61129e565b905082815260208101848484011115610c6157610c6061142f565b5b610c6c8482856113b6565b509392505050565b600081359050610c8381611545565b92915050565b600082601f830112610c9e57610c9d611425565b5b8135610cae848260208601610bc2565b91505092915050565b600081359050610cc68161155c565b92915050565b600082601f830112610ce157610ce0611425565b5b8135610cf1848260208601610c32565b91505092915050565b600081359050610d0981611573565b92915050565b600081519050610d1e81611573565b92915050565b60008060408385031215610d3b57610d3a611439565b5b6000610d4985828601610c74565b9250506020610d5a85828601610c74565b9150509250929050565b600080600080600060a08688031215610d8057610d7f611439565b5b6000610d8e88828901610c74565b9550506020610d9f88828901610c74565b945050604086013567ffffffffffffffff811115610dc057610dbf611434565b5b610dcc88828901610c89565b935050606086013567ffffffffffffffff811115610ded57610dec611434565b5b610df988828901610c89565b925050608086013567ffffffffffffffff811115610e1a57610e19611434565b5b610e2688828901610ccc565b9150509295509295909350565b60008060008060808587031215610e4d57610e4c611439565b5b6000610e5b87828801610c74565b9450506020610e6c87828801610c74565b9350506040610e7d87828801610cfa565b925050606085013567ffffffffffffffff811115610e9e57610e9d611434565b5b610eaa87828801610ccc565b91505092959194509250565b600080600080600060a08688031215610ed257610ed1611439565b5b6000610ee088828901610c74565b9550506020610ef188828901610c74565b9450506040610f0288828901610cfa565b9350506060610f1388828901610cfa565b925050608086013567ffffffffffffffff811115610f3457610f33611434565b5b610f4088828901610ccc565b9150509295509295909350565b60008060408385031215610f6457610f63611439565b5b6000610f7285828601610c74565b9250506020610f8385828601610cfa565b9150509250929050565b600060208284031215610fa357610fa2611439565b5b6000610fb184828501610cb7565b91505092915050565b600060208284031215610fd057610fcf611439565b5b6000610fde84828501610d0f565b91505092915050565b610ff081611342565b82525050565b610fff81611354565b82525050565b61100e81611360565b82525050565b6000611021601e83611331565b915061102c8261144f565b602082019050919050565b6000611044601e83611331565b915061104f82611478565b602082019050919050565b6000611067602083611331565b9150611072826114a1565b602082019050919050565b600061108a601c83611331565b9150611095826114ca565b602082019050919050565b60006110ad602e83611331565b91506110b8826114f3565b604082019050919050565b60006110d0600083611320565b91506110db82611542565b600082019050919050565b6110ef816113ac565b82525050565b600060208201905061110a6000830184610fe7565b92915050565b60006060820190506111256000830186610fe7565b6111326020830185610fe7565b61113f60408301846110e6565b949350505050565b600060a08201905061115c6000830187610fe7565b6111696020830186610fe7565b61117660408301856110e6565b61118360608301846110e6565b8181036080830152611194816110c3565b905095945050505050565b60006040820190506111b46000830185610fe7565b6111c160208301846110e6565b9392505050565b60006020820190506111dd6000830184610ff6565b92915050565b60006020820190506111f86000830184611005565b92915050565b6000602082019050818103600083015261121781611014565b9050919050565b6000602082019050818103600083015261123781611037565b9050919050565b600060208201905081810360008301526112578161105a565b9050919050565b600060208201905081810360008301526112778161107d565b9050919050565b60006020820190508181036000830152611297816110a0565b9050919050565b60006112a86112b9565b90506112b482826113c5565b919050565b6000604051905090565b600067ffffffffffffffff8211156112de576112dd6113f6565b5b602082029050602081019050919050565b600067ffffffffffffffff82111561130a576113096113f6565b5b6113138261143e565b9050602081019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600061134d8261138c565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b6113ce8261143e565b810181811067ffffffffffffffff821117156113ed576113ec6113f6565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4261636b757020616464726573732063616e206e6f74206265207a65726f0000600082015250565b7f53656e64657220616464726573732063616e206e6f74206265207a65726f0000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f436f6e747261637420616c726561647920696e697469616c697a656400000000600082015250565b7f4261636b75702077616c6c65742063616e206e6f742062652073616d6520617360008201527f2073656e6465722077616c6c6574000000000000000000000000000000000000602082015250565b50565b61154e81611342565b811461155957600080fd5b50565b61156581611360565b811461157057600080fd5b50565b61157c816113ac565b811461158757600080fd5b5056fea26469706673582212205706ad18650f717c94ad14e5d04441dc5c94a17c424e12f614f6920032507d7e64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA0 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x71B4BC99 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x71B4BC99 EQ PUSH2 0x18F JUMPI DUP1 PUSH4 0x8C7F807B EQ PUSH2 0x1B8 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1CF JUMPI DUP1 PUSH4 0xBC197C81 EQ PUSH2 0x1FA JUMPI DUP1 PUSH4 0xF09A4016 EQ PUSH2 0x237 JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0x260 JUMPI PUSH2 0xA7 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xAC JUMPI DUP1 PUSH4 0x27F81ED EQ PUSH2 0xE9 JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x112 JUMPI DUP1 PUSH4 0x450B2AD7 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x6354A2F7 EQ PUSH2 0x166 JUMPI PUSH2 0xA7 JUMP JUMPDEST CALLDATASIZE PUSH2 0xA7 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCE SWAP2 SWAP1 PUSH2 0xF8D JUMP JUMPDEST PUSH2 0x29D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE0 SWAP2 SWAP1 PUSH2 0x11C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x110 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10B SWAP2 SWAP1 PUSH2 0xF4D JUMP JUMPDEST PUSH2 0x317 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x139 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x134 SWAP2 SWAP1 PUSH2 0xE33 JUMP JUMPDEST PUSH2 0x3A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP2 SWAP1 PUSH2 0x11E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x164 PUSH2 0x3BD JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x172 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x188 SWAP2 SWAP1 PUSH2 0xF4D JUMP JUMPDEST PUSH2 0x466 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B1 SWAP2 SWAP1 PUSH2 0xF4D JUMP JUMPDEST PUSH2 0x513 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CD PUSH2 0x5C0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E4 PUSH2 0x64E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F1 SWAP2 SWAP1 PUSH2 0x10F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x206 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x221 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21C SWAP2 SWAP1 PUSH2 0xD64 JUMP JUMPDEST PUSH2 0x677 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22E SWAP2 SWAP1 PUSH2 0x11E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x243 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x259 SWAP2 SWAP1 PUSH2 0xD24 JUMP JUMPDEST PUSH2 0x68C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x287 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x282 SWAP2 SWAP1 PUSH2 0xEB6 JUMP JUMPDEST PUSH2 0x89A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x294 SWAP2 SWAP1 PUSH2 0x11E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x4E2312E000000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x310 JUMPI POP PUSH2 0x30F DUP3 PUSH2 0x8AF JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x31F PUSH2 0x919 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x33D PUSH2 0x64E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x393 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x38A SWAP1 PUSH2 0x123E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3A5 PUSH2 0x39E PUSH2 0x64E JUMP JUMPDEST DUP4 DUP4 PUSH2 0x921 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0x150B7A02 PUSH1 0xE0 SHL SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x3C5 PUSH2 0x919 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3E3 PUSH2 0x64E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x439 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x430 SWAP1 PUSH2 0x123E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x464 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x995 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x46E PUSH2 0x919 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x48C PUSH2 0x64E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x4E2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D9 SWAP1 PUSH2 0x123E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x50F PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 DUP4 PUSH2 0x9EF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x51B PUSH2 0x919 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x539 PUSH2 0x64E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x58F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x586 SWAP1 PUSH2 0x123E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5BC PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 DUP4 PUSH2 0x921 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x5C8 PUSH2 0x919 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x5E6 PUSH2 0x64E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x63C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x633 SWAP1 PUSH2 0x123E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x64C PUSH2 0x647 PUSH2 0x64E JUMP JUMPDEST PUSH2 0x995 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x6FC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F3 SWAP1 PUSH2 0x121E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x76C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x763 SWAP1 PUSH2 0x11FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x7DB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7D2 SWAP1 PUSH2 0x127E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x831 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x828 SWAP1 PUSH2 0x125E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x83A DUP3 PUSH2 0xAFE JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x42842E0E ADDRESS DUP6 DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x95E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1110 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x978 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x98C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x9EB JUMPI DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x9E9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH3 0xFDD58E ADDRESS DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA2B SWAP3 SWAP2 SWAP1 PUSH2 0x119F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA43 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA57 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA7B SWAP2 SWAP1 PUSH2 0xFBA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0xAF8 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF242432A ADDRESS DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAC5 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1147 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xADF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xAF3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBD5 PUSH2 0xBD0 DUP5 PUSH2 0x12C3 JUMP JUMPDEST PUSH2 0x129E JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0xBF8 JUMPI PUSH2 0xBF7 PUSH2 0x142A JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0xC28 JUMPI DUP2 PUSH2 0xC0E DUP9 DUP3 PUSH2 0xCFA JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0xBFB JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC45 PUSH2 0xC40 DUP5 PUSH2 0x12EF JUMP JUMPDEST PUSH2 0x129E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0xC61 JUMPI PUSH2 0xC60 PUSH2 0x142F JUMP JUMPDEST JUMPDEST PUSH2 0xC6C DUP5 DUP3 DUP6 PUSH2 0x13B6 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC83 DUP2 PUSH2 0x1545 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xC9E JUMPI PUSH2 0xC9D PUSH2 0x1425 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xCAE DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xBC2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xCC6 DUP2 PUSH2 0x155C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xCE1 JUMPI PUSH2 0xCE0 PUSH2 0x1425 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xCF1 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xC32 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD09 DUP2 PUSH2 0x1573 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xD1E DUP2 PUSH2 0x1573 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD3B JUMPI PUSH2 0xD3A PUSH2 0x1439 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD49 DUP6 DUP3 DUP7 ADD PUSH2 0xC74 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD5A DUP6 DUP3 DUP7 ADD PUSH2 0xC74 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xD80 JUMPI PUSH2 0xD7F PUSH2 0x1439 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD8E DUP9 DUP3 DUP10 ADD PUSH2 0xC74 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0xD9F DUP9 DUP3 DUP10 ADD PUSH2 0xC74 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xDC0 JUMPI PUSH2 0xDBF PUSH2 0x1434 JUMP JUMPDEST JUMPDEST PUSH2 0xDCC DUP9 DUP3 DUP10 ADD PUSH2 0xC89 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xDED JUMPI PUSH2 0xDEC PUSH2 0x1434 JUMP JUMPDEST JUMPDEST PUSH2 0xDF9 DUP9 DUP3 DUP10 ADD PUSH2 0xC89 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE1A JUMPI PUSH2 0xE19 PUSH2 0x1434 JUMP JUMPDEST JUMPDEST PUSH2 0xE26 DUP9 DUP3 DUP10 ADD PUSH2 0xCCC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xE4D JUMPI PUSH2 0xE4C PUSH2 0x1439 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE5B DUP8 DUP3 DUP9 ADD PUSH2 0xC74 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0xE6C DUP8 DUP3 DUP9 ADD PUSH2 0xC74 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0xE7D DUP8 DUP3 DUP9 ADD PUSH2 0xCFA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE9E JUMPI PUSH2 0xE9D PUSH2 0x1434 JUMP JUMPDEST JUMPDEST PUSH2 0xEAA DUP8 DUP3 DUP9 ADD PUSH2 0xCCC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xED2 JUMPI PUSH2 0xED1 PUSH2 0x1439 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xEE0 DUP9 DUP3 DUP10 ADD PUSH2 0xC74 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0xEF1 DUP9 DUP3 DUP10 ADD PUSH2 0xC74 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0xF02 DUP9 DUP3 DUP10 ADD PUSH2 0xCFA JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0xF13 DUP9 DUP3 DUP10 ADD PUSH2 0xCFA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xF34 JUMPI PUSH2 0xF33 PUSH2 0x1434 JUMP JUMPDEST JUMPDEST PUSH2 0xF40 DUP9 DUP3 DUP10 ADD PUSH2 0xCCC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF64 JUMPI PUSH2 0xF63 PUSH2 0x1439 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF72 DUP6 DUP3 DUP7 ADD PUSH2 0xC74 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xF83 DUP6 DUP3 DUP7 ADD PUSH2 0xCFA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFA3 JUMPI PUSH2 0xFA2 PUSH2 0x1439 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xFB1 DUP5 DUP3 DUP6 ADD PUSH2 0xCB7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFD0 JUMPI PUSH2 0xFCF PUSH2 0x1439 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xFDE DUP5 DUP3 DUP6 ADD PUSH2 0xD0F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xFF0 DUP2 PUSH2 0x1342 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xFFF DUP2 PUSH2 0x1354 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x100E DUP2 PUSH2 0x1360 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1021 PUSH1 0x1E DUP4 PUSH2 0x1331 JUMP JUMPDEST SWAP2 POP PUSH2 0x102C DUP3 PUSH2 0x144F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1044 PUSH1 0x1E DUP4 PUSH2 0x1331 JUMP JUMPDEST SWAP2 POP PUSH2 0x104F DUP3 PUSH2 0x1478 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1067 PUSH1 0x20 DUP4 PUSH2 0x1331 JUMP JUMPDEST SWAP2 POP PUSH2 0x1072 DUP3 PUSH2 0x14A1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x108A PUSH1 0x1C DUP4 PUSH2 0x1331 JUMP JUMPDEST SWAP2 POP PUSH2 0x1095 DUP3 PUSH2 0x14CA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10AD PUSH1 0x2E DUP4 PUSH2 0x1331 JUMP JUMPDEST SWAP2 POP PUSH2 0x10B8 DUP3 PUSH2 0x14F3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10D0 PUSH1 0x0 DUP4 PUSH2 0x1320 JUMP JUMPDEST SWAP2 POP PUSH2 0x10DB DUP3 PUSH2 0x1542 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10EF DUP2 PUSH2 0x13AC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x110A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xFE7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1125 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xFE7 JUMP JUMPDEST PUSH2 0x1132 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xFE7 JUMP JUMPDEST PUSH2 0x113F PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x10E6 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x115C PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0xFE7 JUMP JUMPDEST PUSH2 0x1169 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0xFE7 JUMP JUMPDEST PUSH2 0x1176 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x10E6 JUMP JUMPDEST PUSH2 0x1183 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x10E6 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x1194 DUP2 PUSH2 0x10C3 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x11B4 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xFE7 JUMP JUMPDEST PUSH2 0x11C1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x10E6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11DD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xFF6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11F8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1005 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1217 DUP2 PUSH2 0x1014 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1237 DUP2 PUSH2 0x1037 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1257 DUP2 PUSH2 0x105A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1277 DUP2 PUSH2 0x107D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1297 DUP2 PUSH2 0x10A0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12A8 PUSH2 0x12B9 JUMP JUMPDEST SWAP1 POP PUSH2 0x12B4 DUP3 DUP3 PUSH2 0x13C5 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x12DE JUMPI PUSH2 0x12DD PUSH2 0x13F6 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x130A JUMPI PUSH2 0x1309 PUSH2 0x13F6 JUMP JUMPDEST JUMPDEST PUSH2 0x1313 DUP3 PUSH2 0x143E JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x134D DUP3 PUSH2 0x138C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH2 0x13CE DUP3 PUSH2 0x143E JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x13ED JUMPI PUSH2 0x13EC PUSH2 0x13F6 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4261636B757020616464726573732063616E206E6F74206265207A65726F0000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x53656E64657220616464726573732063616E206E6F74206265207A65726F0000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x436F6E747261637420616C726561647920696E697469616C697A656400000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4261636B75702077616C6C65742063616E206E6F742062652073616D65206173 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x2073656E6465722077616C6C6574000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x154E DUP2 PUSH2 0x1342 JUMP JUMPDEST DUP2 EQ PUSH2 0x1559 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1565 DUP2 PUSH2 0x1360 JUMP JUMPDEST DUP2 EQ PUSH2 0x1570 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x157C DUP2 PUSH2 0x13AC JUMP JUMPDEST DUP2 EQ PUSH2 0x1587 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPI MOD 0xAD XOR PUSH6 0xF717C94AD14 0xE5 0xD0 DIFFICULTY COINBASE 0xDC 0x5C SWAP5 LOG1 PUSH29 0x424E12F614F6920032507D7E64736F6C63430008070033000000000000 ",
							"sourceMap": "467:5374:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;387:221:3;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1672:201:14;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;588:200:8;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4242:129:14;;;;;;;;;;;;;:::i;:::-;;4032:204;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3824:202;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2360:122;;;;;;;;;;;;;:::i;:::-;;933:85:13;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;724:247:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;644:500:14;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;499:219:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;387:221:3;489:4;527:34;512:49;;;:11;:49;;;;:89;;;;565:36;589:11;565:23;:36::i;:::-;512:89;505:96;;387:221;;;:::o;1672:201:14:-;1156:12:13;:10;:12::i;:::-;1145:23;;:7;:5;:7::i;:::-;:23;;;1137:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1805:61:14::1;1835:7;:5;:7::i;:::-;1844:12;1858:7;1805:29;:61::i;:::-;1672:201:::0;;:::o;588:200:8:-;726:6;751:30;;;744:37;;588:200;;;;;;:::o;4242:129:14:-;1156:12:13;:10;:12::i;:::-;1145:23;;:7;:5;:7::i;:::-;:23;;;1137:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;4312:52:14::1;4350:12;;;;;;;;;;;4312:29;:52::i;:::-;4242:129::o:0;4032:204::-;1156:12:13;:10;:12::i;:::-;1145:23;;:7;:5;:7::i;:::-;:23;;;1137:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;4162:67:14::1;4193:12;;;;;;;;;;;4207;4221:7;4162:30;:67::i;:::-;4032:204:::0;;:::o;3824:202::-;1156:12:13;:10;:12::i;:::-;1145:23;;:7;:5;:7::i;:::-;:23;;;1137:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;3953:66:14::1;3983:12;;;;;;;;;;;3997;4011:7;3953:29;:66::i;:::-;3824:202:::0;;:::o;2360:122::-;1156:12:13;:10;:12::i;:::-;1145:23;;:7;:5;:7::i;:::-;:23;;;1137:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2428:47:14::1;2466:7;:5;:7::i;:::-;2428:29;:47::i;:::-;2360:122::o:0;933:85:13:-;979:7;1005:6;;;;;;;;;;;998:13;;933:85;:::o;724:247:2:-;903:6;928:36;;;921:43;;724:247;;;;;;;:::o;644:500:14:-;751:1;733:20;;:7;:20;;;;725:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;830:1;806:26;;:13;:26;;;;798:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;901:7;885:23;;:13;:23;;;;877:82;;;;;;;;;;;;:::i;:::-;;;;;;;;;994:5;977:22;;:13;;;;;;;;;;;:22;;;969:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1042:27;1061:7;1042:18;:27::i;:::-;1094:13;1079:12;;:28;;;;;;;;;;;;;;;;;;1133:4;1117:13;;:20;;;;;;;;;;;;;;;;;;644:500;;:::o;499:219:2:-;655:6;680:31;;;673:38;;499:219;;;;;;;:::o;829:155:11:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;640:96:10:-;693:7;719:10;712:17;;640:96;:::o;4377:225:14:-;4530:12;4522:38;;;4569:4;4576:9;4587:7;4522:73;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4377:225;;;:::o;5631:208::-;5715:15;5733:21;5715:39;;5778:1;5768:7;:11;5764:69;;;5795:9;:18;;:27;5814:7;5795:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5764:69;5705:134;5631:208;:::o;4608:493::-;4754:15;4781:12;4772:32;;;4826:4;4845:7;4772:90;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4754:108;;4886:1;4876:7;:11;4872:223;;;4912:12;4903:39;;;4968:4;4991:9;5018:7;5043;4903:181;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4872:223;4744:357;4608:493;;;:::o;1377:187:13:-;1450:16;1469:6;;;;;;;;;;;1450:25;;1494:8;1485:6;;:17;;;;;;;;;;;;;;;;;;1548:8;1517:40;;1538:8;1517:40;;;;;;;;;;;;1440:124;1377:187;:::o;24:722:15:-;120:5;145:81;161:64;218:6;161:64;:::i;:::-;145:81;:::i;:::-;136:90;;246:5;275:6;268:5;261:21;309:4;302:5;298:16;291:23;;335:6;385:3;377:4;369:6;365:17;360:3;356:27;353:36;350:143;;;404:79;;:::i;:::-;350:143;517:1;502:238;527:6;524:1;521:13;502:238;;;595:3;624:37;657:3;645:10;624:37;:::i;:::-;619:3;612:50;691:4;686:3;682:14;675:21;;725:4;720:3;716:14;709:21;;562:178;549:1;546;542:9;537:14;;502:238;;;506:14;126:620;;24:722;;;;;:::o;752:410::-;829:5;854:65;870:48;911:6;870:48;:::i;:::-;854:65;:::i;:::-;845:74;;942:6;935:5;928:21;980:4;973:5;969:16;1018:3;1009:6;1004:3;1000:16;997:25;994:112;;;1025:79;;:::i;:::-;994:112;1115:41;1149:6;1144:3;1139;1115:41;:::i;:::-;835:327;752:410;;;;;:::o;1168:139::-;1214:5;1252:6;1239:20;1230:29;;1268:33;1295:5;1268:33;:::i;:::-;1168:139;;;;:::o;1330:370::-;1401:5;1450:3;1443:4;1435:6;1431:17;1427:27;1417:122;;1458:79;;:::i;:::-;1417:122;1575:6;1562:20;1600:94;1690:3;1682:6;1675:4;1667:6;1663:17;1600:94;:::i;:::-;1591:103;;1407:293;1330:370;;;;:::o;1706:137::-;1751:5;1789:6;1776:20;1767:29;;1805:32;1831:5;1805:32;:::i;:::-;1706:137;;;;:::o;1862:338::-;1917:5;1966:3;1959:4;1951:6;1947:17;1943:27;1933:122;;1974:79;;:::i;:::-;1933:122;2091:6;2078:20;2116:78;2190:3;2182:6;2175:4;2167:6;2163:17;2116:78;:::i;:::-;2107:87;;1923:277;1862:338;;;;:::o;2206:139::-;2252:5;2290:6;2277:20;2268:29;;2306:33;2333:5;2306:33;:::i;:::-;2206:139;;;;:::o;2351:143::-;2408:5;2439:6;2433:13;2424:22;;2455:33;2482:5;2455:33;:::i;:::-;2351:143;;;;:::o;2500:474::-;2568:6;2576;2625:2;2613:9;2604:7;2600:23;2596:32;2593:119;;;2631:79;;:::i;:::-;2593:119;2751:1;2776:53;2821:7;2812:6;2801:9;2797:22;2776:53;:::i;:::-;2766:63;;2722:117;2878:2;2904:53;2949:7;2940:6;2929:9;2925:22;2904:53;:::i;:::-;2894:63;;2849:118;2500:474;;;;;:::o;2980:1509::-;3134:6;3142;3150;3158;3166;3215:3;3203:9;3194:7;3190:23;3186:33;3183:120;;;3222:79;;:::i;:::-;3183:120;3342:1;3367:53;3412:7;3403:6;3392:9;3388:22;3367:53;:::i;:::-;3357:63;;3313:117;3469:2;3495:53;3540:7;3531:6;3520:9;3516:22;3495:53;:::i;:::-;3485:63;;3440:118;3625:2;3614:9;3610:18;3597:32;3656:18;3648:6;3645:30;3642:117;;;3678:79;;:::i;:::-;3642:117;3783:78;3853:7;3844:6;3833:9;3829:22;3783:78;:::i;:::-;3773:88;;3568:303;3938:2;3927:9;3923:18;3910:32;3969:18;3961:6;3958:30;3955:117;;;3991:79;;:::i;:::-;3955:117;4096:78;4166:7;4157:6;4146:9;4142:22;4096:78;:::i;:::-;4086:88;;3881:303;4251:3;4240:9;4236:19;4223:33;4283:18;4275:6;4272:30;4269:117;;;4305:79;;:::i;:::-;4269:117;4410:62;4464:7;4455:6;4444:9;4440:22;4410:62;:::i;:::-;4400:72;;4194:288;2980:1509;;;;;;;;:::o;4495:943::-;4590:6;4598;4606;4614;4663:3;4651:9;4642:7;4638:23;4634:33;4631:120;;;4670:79;;:::i;:::-;4631:120;4790:1;4815:53;4860:7;4851:6;4840:9;4836:22;4815:53;:::i;:::-;4805:63;;4761:117;4917:2;4943:53;4988:7;4979:6;4968:9;4964:22;4943:53;:::i;:::-;4933:63;;4888:118;5045:2;5071:53;5116:7;5107:6;5096:9;5092:22;5071:53;:::i;:::-;5061:63;;5016:118;5201:2;5190:9;5186:18;5173:32;5232:18;5224:6;5221:30;5218:117;;;5254:79;;:::i;:::-;5218:117;5359:62;5413:7;5404:6;5393:9;5389:22;5359:62;:::i;:::-;5349:72;;5144:287;4495:943;;;;;;;:::o;5444:1089::-;5548:6;5556;5564;5572;5580;5629:3;5617:9;5608:7;5604:23;5600:33;5597:120;;;5636:79;;:::i;:::-;5597:120;5756:1;5781:53;5826:7;5817:6;5806:9;5802:22;5781:53;:::i;:::-;5771:63;;5727:117;5883:2;5909:53;5954:7;5945:6;5934:9;5930:22;5909:53;:::i;:::-;5899:63;;5854:118;6011:2;6037:53;6082:7;6073:6;6062:9;6058:22;6037:53;:::i;:::-;6027:63;;5982:118;6139:2;6165:53;6210:7;6201:6;6190:9;6186:22;6165:53;:::i;:::-;6155:63;;6110:118;6295:3;6284:9;6280:19;6267:33;6327:18;6319:6;6316:30;6313:117;;;6349:79;;:::i;:::-;6313:117;6454:62;6508:7;6499:6;6488:9;6484:22;6454:62;:::i;:::-;6444:72;;6238:288;5444:1089;;;;;;;;:::o;6539:474::-;6607:6;6615;6664:2;6652:9;6643:7;6639:23;6635:32;6632:119;;;6670:79;;:::i;:::-;6632:119;6790:1;6815:53;6860:7;6851:6;6840:9;6836:22;6815:53;:::i;:::-;6805:63;;6761:117;6917:2;6943:53;6988:7;6979:6;6968:9;6964:22;6943:53;:::i;:::-;6933:63;;6888:118;6539:474;;;;;:::o;7019:327::-;7077:6;7126:2;7114:9;7105:7;7101:23;7097:32;7094:119;;;7132:79;;:::i;:::-;7094:119;7252:1;7277:52;7321:7;7312:6;7301:9;7297:22;7277:52;:::i;:::-;7267:62;;7223:116;7019:327;;;;:::o;7352:351::-;7422:6;7471:2;7459:9;7450:7;7446:23;7442:32;7439:119;;;7477:79;;:::i;:::-;7439:119;7597:1;7622:64;7678:7;7669:6;7658:9;7654:22;7622:64;:::i;:::-;7612:74;;7568:128;7352:351;;;;:::o;7709:118::-;7796:24;7814:5;7796:24;:::i;:::-;7791:3;7784:37;7709:118;;:::o;7833:109::-;7914:21;7929:5;7914:21;:::i;:::-;7909:3;7902:34;7833:109;;:::o;7948:115::-;8033:23;8050:5;8033:23;:::i;:::-;8028:3;8021:36;7948:115;;:::o;8069:366::-;8211:3;8232:67;8296:2;8291:3;8232:67;:::i;:::-;8225:74;;8308:93;8397:3;8308:93;:::i;:::-;8426:2;8421:3;8417:12;8410:19;;8069:366;;;:::o;8441:::-;8583:3;8604:67;8668:2;8663:3;8604:67;:::i;:::-;8597:74;;8680:93;8769:3;8680:93;:::i;:::-;8798:2;8793:3;8789:12;8782:19;;8441:366;;;:::o;8813:::-;8955:3;8976:67;9040:2;9035:3;8976:67;:::i;:::-;8969:74;;9052:93;9141:3;9052:93;:::i;:::-;9170:2;9165:3;9161:12;9154:19;;8813:366;;;:::o;9185:::-;9327:3;9348:67;9412:2;9407:3;9348:67;:::i;:::-;9341:74;;9424:93;9513:3;9424:93;:::i;:::-;9542:2;9537:3;9533:12;9526:19;;9185:366;;;:::o;9557:::-;9699:3;9720:67;9784:2;9779:3;9720:67;:::i;:::-;9713:74;;9796:93;9885:3;9796:93;:::i;:::-;9914:2;9909:3;9905:12;9898:19;;9557:366;;;:::o;9929:362::-;10070:3;10091:65;10154:1;10149:3;10091:65;:::i;:::-;10084:72;;10165:93;10254:3;10165:93;:::i;:::-;10283:1;10278:3;10274:11;10267:18;;9929:362;;;:::o;10297:118::-;10384:24;10402:5;10384:24;:::i;:::-;10379:3;10372:37;10297:118;;:::o;10421:222::-;10514:4;10552:2;10541:9;10537:18;10529:26;;10565:71;10633:1;10622:9;10618:17;10609:6;10565:71;:::i;:::-;10421:222;;;;:::o;10649:442::-;10798:4;10836:2;10825:9;10821:18;10813:26;;10849:71;10917:1;10906:9;10902:17;10893:6;10849:71;:::i;:::-;10930:72;10998:2;10987:9;10983:18;10974:6;10930:72;:::i;:::-;11012;11080:2;11069:9;11065:18;11056:6;11012:72;:::i;:::-;10649:442;;;;;;:::o;11097:859::-;11374:4;11412:3;11401:9;11397:19;11389:27;;11426:71;11494:1;11483:9;11479:17;11470:6;11426:71;:::i;:::-;11507:72;11575:2;11564:9;11560:18;11551:6;11507:72;:::i;:::-;11589;11657:2;11646:9;11642:18;11633:6;11589:72;:::i;:::-;11671;11739:2;11728:9;11724:18;11715:6;11671:72;:::i;:::-;11791:9;11785:4;11781:20;11775:3;11764:9;11760:19;11753:49;11819:130;11944:4;11819:130;:::i;:::-;11811:138;;11097:859;;;;;;;:::o;11962:332::-;12083:4;12121:2;12110:9;12106:18;12098:26;;12134:71;12202:1;12191:9;12187:17;12178:6;12134:71;:::i;:::-;12215:72;12283:2;12272:9;12268:18;12259:6;12215:72;:::i;:::-;11962:332;;;;;:::o;12300:210::-;12387:4;12425:2;12414:9;12410:18;12402:26;;12438:65;12500:1;12489:9;12485:17;12476:6;12438:65;:::i;:::-;12300:210;;;;:::o;12516:218::-;12607:4;12645:2;12634:9;12630:18;12622:26;;12658:69;12724:1;12713:9;12709:17;12700:6;12658:69;:::i;:::-;12516:218;;;;:::o;12740:419::-;12906:4;12944:2;12933:9;12929:18;12921:26;;12993:9;12987:4;12983:20;12979:1;12968:9;12964:17;12957:47;13021:131;13147:4;13021:131;:::i;:::-;13013:139;;12740:419;;;:::o;13165:::-;13331:4;13369:2;13358:9;13354:18;13346:26;;13418:9;13412:4;13408:20;13404:1;13393:9;13389:17;13382:47;13446:131;13572:4;13446:131;:::i;:::-;13438:139;;13165:419;;;:::o;13590:::-;13756:4;13794:2;13783:9;13779:18;13771:26;;13843:9;13837:4;13833:20;13829:1;13818:9;13814:17;13807:47;13871:131;13997:4;13871:131;:::i;:::-;13863:139;;13590:419;;;:::o;14015:::-;14181:4;14219:2;14208:9;14204:18;14196:26;;14268:9;14262:4;14258:20;14254:1;14243:9;14239:17;14232:47;14296:131;14422:4;14296:131;:::i;:::-;14288:139;;14015:419;;;:::o;14440:::-;14606:4;14644:2;14633:9;14629:18;14621:26;;14693:9;14687:4;14683:20;14679:1;14668:9;14664:17;14657:47;14721:131;14847:4;14721:131;:::i;:::-;14713:139;;14440:419;;;:::o;14865:129::-;14899:6;14926:20;;:::i;:::-;14916:30;;14955:33;14983:4;14975:6;14955:33;:::i;:::-;14865:129;;;:::o;15000:75::-;15033:6;15066:2;15060:9;15050:19;;15000:75;:::o;15081:311::-;15158:4;15248:18;15240:6;15237:30;15234:56;;;15270:18;;:::i;:::-;15234:56;15320:4;15312:6;15308:17;15300:25;;15380:4;15374;15370:15;15362:23;;15081:311;;;:::o;15398:307::-;15459:4;15549:18;15541:6;15538:30;15535:56;;;15571:18;;:::i;:::-;15535:56;15609:29;15631:6;15609:29;:::i;:::-;15601:37;;15693:4;15687;15683:15;15675:23;;15398:307;;;:::o;15711:168::-;15794:11;15828:6;15823:3;15816:19;15868:4;15863:3;15859:14;15844:29;;15711:168;;;;:::o;15885:169::-;15969:11;16003:6;15998:3;15991:19;16043:4;16038:3;16034:14;16019:29;;15885:169;;;;:::o;16060:96::-;16097:7;16126:24;16144:5;16126:24;:::i;:::-;16115:35;;16060:96;;;:::o;16162:90::-;16196:7;16239:5;16232:13;16225:21;16214:32;;16162:90;;;:::o;16258:149::-;16294:7;16334:66;16327:5;16323:78;16312:89;;16258:149;;;:::o;16413:126::-;16450:7;16490:42;16483:5;16479:54;16468:65;;16413:126;;;:::o;16545:77::-;16582:7;16611:5;16600:16;;16545:77;;;:::o;16628:154::-;16712:6;16707:3;16702;16689:30;16774:1;16765:6;16760:3;16756:16;16749:27;16628:154;;;:::o;16788:281::-;16871:27;16893:4;16871:27;:::i;:::-;16863:6;16859:40;17001:6;16989:10;16986:22;16965:18;16953:10;16950:34;16947:62;16944:88;;;17012:18;;:::i;:::-;16944:88;17052:10;17048:2;17041:22;16831:238;16788:281;;:::o;17075:180::-;17123:77;17120:1;17113:88;17220:4;17217:1;17210:15;17244:4;17241:1;17234:15;17261:117;17370:1;17367;17360:12;17384:117;17493:1;17490;17483:12;17507:117;17616:1;17613;17606:12;17630:117;17739:1;17736;17729:12;17753:117;17862:1;17859;17852:12;17876:102;17917:6;17968:2;17964:7;17959:2;17952:5;17948:14;17944:28;17934:38;;17876:102;;;:::o;17984:180::-;18124:32;18120:1;18112:6;18108:14;18101:56;17984:180;:::o;18170:::-;18310:32;18306:1;18298:6;18294:14;18287:56;18170:180;:::o;18356:182::-;18496:34;18492:1;18484:6;18480:14;18473:58;18356:182;:::o;18544:178::-;18684:30;18680:1;18672:6;18668:14;18661:54;18544:178;:::o;18728:233::-;18868:34;18864:1;18856:6;18852:14;18845:58;18937:16;18932:2;18924:6;18920:15;18913:41;18728:233;:::o;18967:114::-;;:::o;19087:122::-;19160:24;19178:5;19160:24;:::i;:::-;19153:5;19150:35;19140:63;;19199:1;19196;19189:12;19140:63;19087:122;:::o;19215:120::-;19287:23;19304:5;19287:23;:::i;:::-;19280:5;19277:34;19267:62;;19325:1;19322;19315:12;19267:62;19215:120;:::o;19341:122::-;19414:24;19432:5;19414:24;:::i;:::-;19407:5;19404:35;19394:63;;19453:1;19450;19443:12;19394:63;19341:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1113600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"init(address,address)": "infinite",
								"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "infinite",
								"onERC1155Received(address,address,uint256,uint256,bytes)": "infinite",
								"onERC721Received(address,address,uint256,bytes)": "infinite",
								"owner()": "2566",
								"sendERC1155FundsToBackupWallet(address,uint256)": "infinite",
								"sendERC721FundsToBackupWallet(address,uint256)": "infinite",
								"sendNativeFundsToBackupWallet()": "infinite",
								"supportsInterface(bytes4)": "728",
								"transferERC721AssetsToWallet(address,uint256)": "infinite",
								"transferNativeAssetToWallet()": "infinite"
							},
							"internal": {
								"_transferERC1155FundsToAddress(address,address,uint256)": "infinite",
								"_transferERC20FundsToAddress(address,address[] memory)": "infinite",
								"_transferERC721FundsToAddress(address,address,uint256)": "infinite",
								"_transferNativeFundsToAddress(address payable)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 467,
									"end": 5841,
									"name": "PUSH",
									"source": 14,
									"value": "80"
								},
								{
									"begin": 467,
									"end": 5841,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 467,
									"end": 5841,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 467,
									"end": 5841,
									"name": "CALLVALUE",
									"source": 14
								},
								{
									"begin": 467,
									"end": 5841,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 467,
									"end": 5841,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 467,
									"end": 5841,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 467,
									"end": 5841,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 467,
									"end": 5841,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 5841,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 467,
									"end": 5841,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 467,
									"end": 5841,
									"name": "tag",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 467,
									"end": 5841,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 467,
									"end": 5841,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 818,
									"end": 850,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 837,
									"end": 849,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "5"
								},
								{
									"begin": 837,
									"end": 847,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "6"
								},
								{
									"begin": 837,
									"end": 847,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 837,
									"end": 847,
									"name": "SHL",
									"source": 13
								},
								{
									"begin": 837,
									"end": 849,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 837,
									"end": 849,
									"name": "SHR",
									"source": 13
								},
								{
									"begin": 837,
									"end": 849,
									"name": "JUMP",
									"source": 13,
									"value": "[in]"
								},
								{
									"begin": 837,
									"end": 849,
									"name": "tag",
									"source": 13,
									"value": "5"
								},
								{
									"begin": 837,
									"end": 849,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 818,
									"end": 836,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "7"
								},
								{
									"begin": 818,
									"end": 836,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 818,
									"end": 836,
									"name": "SHL",
									"source": 13
								},
								{
									"begin": 818,
									"end": 850,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 818,
									"end": 850,
									"name": "SHR",
									"source": 13
								},
								{
									"begin": 818,
									"end": 850,
									"name": "JUMP",
									"source": 13,
									"value": "[in]"
								},
								{
									"begin": 818,
									"end": 850,
									"name": "tag",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 818,
									"end": 850,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 467,
									"end": 5841,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "8"
								},
								{
									"begin": 467,
									"end": 5841,
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 10,
									"value": "6"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 693,
									"end": 700,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 10
								},
								{
									"begin": 712,
									"end": 729,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 712,
									"end": 729,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMP",
									"source": 10,
									"value": "[out]"
								},
								{
									"begin": 1377,
									"end": 1564,
									"name": "tag",
									"source": 13,
									"value": "7"
								},
								{
									"begin": 1377,
									"end": 1564,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1450,
									"end": 1466,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1469,
									"end": 1475,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1469,
									"end": 1475,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1469,
									"end": 1475,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1469,
									"end": 1475,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": 1469,
									"end": 1475,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1469,
									"end": 1475,
									"name": "PUSH",
									"source": 13,
									"value": "100"
								},
								{
									"begin": 1469,
									"end": 1475,
									"name": "EXP",
									"source": 13
								},
								{
									"begin": 1469,
									"end": 1475,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1469,
									"end": 1475,
									"name": "DIV",
									"source": 13
								},
								{
									"begin": 1469,
									"end": 1475,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1469,
									"end": 1475,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 1450,
									"end": 1475,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1450,
									"end": 1475,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1494,
									"end": 1502,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1485,
									"end": 1491,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1485,
									"end": 1491,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1485,
									"end": 1502,
									"name": "PUSH",
									"source": 13,
									"value": "100"
								},
								{
									"begin": 1485,
									"end": 1502,
									"name": "EXP",
									"source": 13
								},
								{
									"begin": 1485,
									"end": 1502,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1485,
									"end": 1502,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": 1485,
									"end": 1502,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1485,
									"end": 1502,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1485,
									"end": 1502,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 1485,
									"end": 1502,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 1485,
									"end": 1502,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 1485,
									"end": 1502,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1485,
									"end": 1502,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 1485,
									"end": 1502,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1485,
									"end": 1502,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 1485,
									"end": 1502,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 1485,
									"end": 1502,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 1485,
									"end": 1502,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1485,
									"end": 1502,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 1485,
									"end": 1502,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1548,
									"end": 1556,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1517,
									"end": 1557,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1517,
									"end": 1557,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 1538,
									"end": 1546,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1517,
									"end": 1557,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1517,
									"end": 1557,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 1517,
									"end": 1557,
									"name": "PUSH",
									"source": 13,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 1517,
									"end": 1557,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 1517,
									"end": 1557,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 1517,
									"end": 1557,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 1517,
									"end": 1557,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 1517,
									"end": 1557,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1517,
									"end": 1557,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1517,
									"end": 1557,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 1517,
									"end": 1557,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1517,
									"end": 1557,
									"name": "LOG3",
									"source": 13
								},
								{
									"begin": 1440,
									"end": 1564,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1377,
									"end": 1564,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1377,
									"end": 1564,
									"name": "JUMP",
									"source": 13,
									"value": "[out]"
								},
								{
									"begin": 467,
									"end": 5841,
									"name": "tag",
									"source": 14,
									"value": "8"
								},
								{
									"begin": 467,
									"end": 5841,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 467,
									"end": 5841,
									"name": "PUSH #[$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 5841,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 467,
									"end": 5841,
									"name": "PUSH [$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 5841,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 5841,
									"name": "CODECOPY",
									"source": 14
								},
								{
									"begin": 467,
									"end": 5841,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 5841,
									"name": "RETURN",
									"source": 14
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205706ad18650f717c94ad14e5d04441dc5c94a17c424e12f614f6920032507d7e64736f6c63430008070033",
									".code": [
										{
											"begin": 467,
											"end": 5841,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 467,
											"end": 5841,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 467,
											"end": 5841,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 467,
											"end": 5841,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 467,
											"end": 5841,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 467,
											"end": 5841,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 467,
											"end": 5841,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 467,
											"end": 5841,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 467,
											"end": 5841,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 467,
											"end": 5841,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 467,
											"end": 5841,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 467,
											"end": 5841,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 467,
											"end": 5841,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 467,
											"end": 5841,
											"name": "PUSH",
											"source": 14,
											"value": "71B4BC99"
										},
										{
											"begin": 467,
											"end": 5841,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 467,
											"end": 5841,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "14"
										},
										{
											"begin": 467,
											"end": 5841,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 467,
											"end": 5841,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 467,
											"end": 5841,
											"name": "PUSH",
											"source": 14,
											"value": "71B4BC99"
										},
										{
											"begin": 467,
											"end": 5841,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 467,
											"end": 5841,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "8"
										},
										{
											"begin": 467,
											"end": 5841,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 467,
											"end": 5841,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 467,
											"end": 5841,
											"name": "PUSH",
											"source": 14,
											"value": "8C7F807B"
										},
										{
											"begin": 467,
											"end": 5841,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 467,
											"end": 5841,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "9"
										},
										{
											"begin": 467,
											"end": 5841,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 467,
											"end": 5841,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 467,
											"end": 5841,
											"name": "PUSH",
											"source": 14,
											"value": "8DA5CB5B"
										},
										{
											"begin": 467,
											"end": 5841,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 467,
											"end": 5841,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "10"
										},
										{
											"begin": 467,
											"end": 5841,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 467,
											"end": 5841,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 467,
											"end": 5841,
											"name": "PUSH",
											"source": 14,
											"value": "BC197C81"
										},
										{
											"begin": 467,
											"end": 5841,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 467,
											"end": 5841,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "11"
										},
										{
											"begin": 467,
											"end": 5841,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 467,
											"end": 5841,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 467,
											"end": 5841,
											"name": "PUSH",
											"source": 14,
											"value": "F09A4016"
										},
										{
											"begin": 467,
											"end": 5841,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 467,
											"end": 5841,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "12"
										},
										{
											"begin": 467,
											"end": 5841,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 467,
											"end": 5841,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 467,
											"end": 5841,
											"name": "PUSH",
											"source": 14,
											"value": "F23A6E61"
										},
										{
											"begin": 467,
											"end": 5841,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 467,
											"end": 5841,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "13"
										},
										{
											"begin": 467,
											"end": 5841,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 467,
											"end": 5841,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 467,
											"end": 5841,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 467,
											"end": 5841,
											"name": "tag",
											"source": 14,
											"value": "14"
										},
										{
											"begin": 467,
											"end": 5841,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 467,
											"end": 5841,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 467,
											"end": 5841,
											"name": "PUSH",
											"source": 14,
											"value": "1FFC9A7"
										},
										{
											"begin": 467,
											"end": 5841,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 467,
											"end": 5841,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 467,
											"end": 5841,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 467,
											"end": 5841,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 467,
											"end": 5841,
											"name": "PUSH",
											"source": 14,
											"value": "27F81ED"
										},
										{
											"begin": 467,
											"end": 5841,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 467,
											"end": 5841,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 467,
											"end": 5841,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 467,
											"end": 5841,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 467,
											"end": 5841,
											"name": "PUSH",
											"source": 14,
											"value": "150B7A02"
										},
										{
											"begin": 467,
											"end": 5841,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 467,
											"end": 5841,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "5"
										},
										{
											"begin": 467,
											"end": 5841,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 467,
											"end": 5841,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 467,
											"end": 5841,
											"name": "PUSH",
											"source": 14,
											"value": "450B2AD7"
										},
										{
											"begin": 467,
											"end": 5841,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 467,
											"end": 5841,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "6"
										},
										{
											"begin": 467,
											"end": 5841,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 467,
											"end": 5841,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 467,
											"end": 5841,
											"name": "PUSH",
											"source": 14,
											"value": "6354A2F7"
										},
										{
											"begin": 467,
											"end": 5841,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 467,
											"end": 5841,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "7"
										},
										{
											"begin": 467,
											"end": 5841,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 467,
											"end": 5841,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 467,
											"end": 5841,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 467,
											"end": 5841,
											"name": "tag",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 467,
											"end": 5841,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 467,
											"end": 5841,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 467,
											"end": 5841,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 467,
											"end": 5841,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 467,
											"end": 5841,
											"name": "STOP",
											"source": 14
										},
										{
											"begin": 467,
											"end": 5841,
											"name": "tag",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 467,
											"end": 5841,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 467,
											"end": 5841,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 467,
											"end": 5841,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 467,
											"end": 5841,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 387,
											"end": 608,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1672,
											"end": 1873,
											"name": "tag",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 1672,
											"end": 1873,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1672,
											"end": 1873,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 1672,
											"end": 1873,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1672,
											"end": 1873,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1672,
											"end": 1873,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 1672,
											"end": 1873,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1672,
											"end": 1873,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1672,
											"end": 1873,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1672,
											"end": 1873,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1672,
											"end": 1873,
											"name": "tag",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 1672,
											"end": 1873,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1672,
											"end": 1873,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1672,
											"end": 1873,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "25"
										},
										{
											"begin": 1672,
											"end": 1873,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 1672,
											"end": 1873,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1672,
											"end": 1873,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 1672,
											"end": 1873,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1672,
											"end": 1873,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1672,
											"end": 1873,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1672,
											"end": 1873,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1672,
											"end": 1873,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "26"
										},
										{
											"begin": 1672,
											"end": 1873,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1672,
											"end": 1873,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1672,
											"end": 1873,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "27"
										},
										{
											"begin": 1672,
											"end": 1873,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 1672,
											"end": 1873,
											"name": "tag",
											"source": 14,
											"value": "26"
										},
										{
											"begin": 1672,
											"end": 1873,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1672,
											"end": 1873,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "28"
										},
										{
											"begin": 1672,
											"end": 1873,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 1672,
											"end": 1873,
											"name": "tag",
											"source": 14,
											"value": "25"
										},
										{
											"begin": 1672,
											"end": 1873,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1672,
											"end": 1873,
											"name": "STOP",
											"source": 14
										},
										{
											"begin": 588,
											"end": 788,
											"name": "tag",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "tag",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "tag",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "tag",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "tag",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 4242,
											"end": 4371,
											"name": "tag",
											"source": 14,
											"value": "6"
										},
										{
											"begin": 4242,
											"end": 4371,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4242,
											"end": 4371,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 4242,
											"end": 4371,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4242,
											"end": 4371,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4242,
											"end": 4371,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "36"
										},
										{
											"begin": 4242,
											"end": 4371,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4242,
											"end": 4371,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4242,
											"end": 4371,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4242,
											"end": 4371,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 4242,
											"end": 4371,
											"name": "tag",
											"source": 14,
											"value": "36"
										},
										{
											"begin": 4242,
											"end": 4371,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4242,
											"end": 4371,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4242,
											"end": 4371,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "37"
										},
										{
											"begin": 4242,
											"end": 4371,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "38"
										},
										{
											"begin": 4242,
											"end": 4371,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 4242,
											"end": 4371,
											"name": "tag",
											"source": 14,
											"value": "37"
										},
										{
											"begin": 4242,
											"end": 4371,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4242,
											"end": 4371,
											"name": "STOP",
											"source": 14
										},
										{
											"begin": 4032,
											"end": 4236,
											"name": "tag",
											"source": 14,
											"value": "7"
										},
										{
											"begin": 4032,
											"end": 4236,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4032,
											"end": 4236,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 4032,
											"end": 4236,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4032,
											"end": 4236,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4032,
											"end": 4236,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "39"
										},
										{
											"begin": 4032,
											"end": 4236,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4032,
											"end": 4236,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4032,
											"end": 4236,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4032,
											"end": 4236,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 4032,
											"end": 4236,
											"name": "tag",
											"source": 14,
											"value": "39"
										},
										{
											"begin": 4032,
											"end": 4236,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4032,
											"end": 4236,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4032,
											"end": 4236,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4032,
											"end": 4236,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 4032,
											"end": 4236,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4032,
											"end": 4236,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 4032,
											"end": 4236,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 4032,
											"end": 4236,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4032,
											"end": 4236,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4032,
											"end": 4236,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4032,
											"end": 4236,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "41"
										},
										{
											"begin": 4032,
											"end": 4236,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4032,
											"end": 4236,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4032,
											"end": 4236,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "27"
										},
										{
											"begin": 4032,
											"end": 4236,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 4032,
											"end": 4236,
											"name": "tag",
											"source": 14,
											"value": "41"
										},
										{
											"begin": 4032,
											"end": 4236,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4032,
											"end": 4236,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "42"
										},
										{
											"begin": 4032,
											"end": 4236,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 4032,
											"end": 4236,
											"name": "tag",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4032,
											"end": 4236,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4032,
											"end": 4236,
											"name": "STOP",
											"source": 14
										},
										{
											"begin": 3824,
											"end": 4026,
											"name": "tag",
											"source": 14,
											"value": "8"
										},
										{
											"begin": 3824,
											"end": 4026,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3824,
											"end": 4026,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 3824,
											"end": 4026,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3824,
											"end": 4026,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3824,
											"end": 4026,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "43"
										},
										{
											"begin": 3824,
											"end": 4026,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3824,
											"end": 4026,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3824,
											"end": 4026,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3824,
											"end": 4026,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 3824,
											"end": 4026,
											"name": "tag",
											"source": 14,
											"value": "43"
										},
										{
											"begin": 3824,
											"end": 4026,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3824,
											"end": 4026,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3824,
											"end": 4026,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 3824,
											"end": 4026,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 3824,
											"end": 4026,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3824,
											"end": 4026,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 3824,
											"end": 4026,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 3824,
											"end": 4026,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3824,
											"end": 4026,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3824,
											"end": 4026,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3824,
											"end": 4026,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "45"
										},
										{
											"begin": 3824,
											"end": 4026,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3824,
											"end": 4026,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3824,
											"end": 4026,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "27"
										},
										{
											"begin": 3824,
											"end": 4026,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 3824,
											"end": 4026,
											"name": "tag",
											"source": 14,
											"value": "45"
										},
										{
											"begin": 3824,
											"end": 4026,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3824,
											"end": 4026,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "46"
										},
										{
											"begin": 3824,
											"end": 4026,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 3824,
											"end": 4026,
											"name": "tag",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 3824,
											"end": 4026,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3824,
											"end": 4026,
											"name": "STOP",
											"source": 14
										},
										{
											"begin": 2360,
											"end": 2482,
											"name": "tag",
											"source": 14,
											"value": "9"
										},
										{
											"begin": 2360,
											"end": 2482,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2360,
											"end": 2482,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 2360,
											"end": 2482,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2360,
											"end": 2482,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2360,
											"end": 2482,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "47"
										},
										{
											"begin": 2360,
											"end": 2482,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2360,
											"end": 2482,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2360,
											"end": 2482,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2360,
											"end": 2482,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2360,
											"end": 2482,
											"name": "tag",
											"source": 14,
											"value": "47"
										},
										{
											"begin": 2360,
											"end": 2482,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2360,
											"end": 2482,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2360,
											"end": 2482,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "48"
										},
										{
											"begin": 2360,
											"end": 2482,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "49"
										},
										{
											"begin": 2360,
											"end": 2482,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 2360,
											"end": 2482,
											"name": "tag",
											"source": 14,
											"value": "48"
										},
										{
											"begin": 2360,
											"end": 2482,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2360,
											"end": 2482,
											"name": "STOP",
											"source": 14
										},
										{
											"begin": 933,
											"end": 1018,
											"name": "tag",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 933,
											"end": 1018,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 933,
											"end": 1018,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 933,
											"end": 1018,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 933,
											"end": 1018,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 933,
											"end": 1018,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "50"
										},
										{
											"begin": 933,
											"end": 1018,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 933,
											"end": 1018,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 933,
											"end": 1018,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 933,
											"end": 1018,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 933,
											"end": 1018,
											"name": "tag",
											"source": 13,
											"value": "50"
										},
										{
											"begin": 933,
											"end": 1018,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 933,
											"end": 1018,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 933,
											"end": 1018,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "51"
										},
										{
											"begin": 933,
											"end": 1018,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "52"
										},
										{
											"begin": 933,
											"end": 1018,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 933,
											"end": 1018,
											"name": "tag",
											"source": 13,
											"value": "51"
										},
										{
											"begin": 933,
											"end": 1018,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 933,
											"end": 1018,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 933,
											"end": 1018,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 933,
											"end": 1018,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "53"
										},
										{
											"begin": 933,
											"end": 1018,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 933,
											"end": 1018,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 933,
											"end": 1018,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "54"
										},
										{
											"begin": 933,
											"end": 1018,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 933,
											"end": 1018,
											"name": "tag",
											"source": 13,
											"value": "53"
										},
										{
											"begin": 933,
											"end": 1018,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 933,
											"end": 1018,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 933,
											"end": 1018,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 933,
											"end": 1018,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 933,
											"end": 1018,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 933,
											"end": 1018,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 933,
											"end": 1018,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 933,
											"end": 1018,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 724,
											"end": 971,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 644,
											"end": 1144,
											"name": "tag",
											"source": 14,
											"value": "12"
										},
										{
											"begin": 644,
											"end": 1144,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 644,
											"end": 1144,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 644,
											"end": 1144,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 644,
											"end": 1144,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 644,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "61"
										},
										{
											"begin": 644,
											"end": 1144,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 644,
											"end": 1144,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 644,
											"end": 1144,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 644,
											"end": 1144,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 644,
											"end": 1144,
											"name": "tag",
											"source": 14,
											"value": "61"
										},
										{
											"begin": 644,
											"end": 1144,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 644,
											"end": 1144,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 644,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "62"
										},
										{
											"begin": 644,
											"end": 1144,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 644,
											"end": 1144,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 644,
											"end": 1144,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 644,
											"end": 1144,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 644,
											"end": 1144,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 644,
											"end": 1144,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 644,
											"end": 1144,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 644,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "63"
										},
										{
											"begin": 644,
											"end": 1144,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 644,
											"end": 1144,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 644,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 644,
											"end": 1144,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 644,
											"end": 1144,
											"name": "tag",
											"source": 14,
											"value": "63"
										},
										{
											"begin": 644,
											"end": 1144,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 644,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "65"
										},
										{
											"begin": 644,
											"end": 1144,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 644,
											"end": 1144,
											"name": "tag",
											"source": 14,
											"value": "62"
										},
										{
											"begin": 644,
											"end": 1144,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 644,
											"end": 1144,
											"name": "STOP",
											"source": 14
										},
										{
											"begin": 499,
											"end": 718,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 387,
											"end": 608,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 489,
											"end": 493,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 527,
											"end": 561,
											"name": "PUSH",
											"source": 3,
											"value": "4E2312E000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 512,
											"end": 561,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 512,
											"end": 561,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 512,
											"end": 561,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 512,
											"end": 523,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 512,
											"end": 561,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 512,
											"end": 561,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 512,
											"end": 561,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 512,
											"end": 561,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 512,
											"end": 601,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 512,
											"end": 601,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 512,
											"end": 601,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 512,
											"end": 601,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 565,
											"end": 601,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 589,
											"end": 600,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 565,
											"end": 588,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 565,
											"end": 601,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 565,
											"end": 601,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 565,
											"end": 601,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 512,
											"end": 601,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 512,
											"end": 601,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 505,
											"end": 601,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 505,
											"end": 601,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1672,
											"end": 1873,
											"name": "tag",
											"source": 14,
											"value": "28"
										},
										{
											"begin": 1672,
											"end": 1873,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1156,
											"end": 1168,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "77"
										},
										{
											"begin": 1156,
											"end": 1166,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "78"
										},
										{
											"begin": 1156,
											"end": 1168,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1156,
											"end": 1168,
											"name": "tag",
											"source": 13,
											"value": "77"
										},
										{
											"begin": 1156,
											"end": 1168,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1145,
											"end": 1168,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1145,
											"end": 1168,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "79"
										},
										{
											"begin": 1145,
											"end": 1150,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "52"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "tag",
											"source": 13,
											"value": "79"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1145,
											"end": 1168,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1145,
											"end": 1168,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1145,
											"end": 1168,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "81"
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "82"
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "tag",
											"source": 13,
											"value": "81"
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "tag",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1805,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "84"
										},
										{
											"begin": 1835,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "85"
										},
										{
											"begin": 1835,
											"end": 1840,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "52"
										},
										{
											"begin": 1835,
											"end": 1842,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 1835,
											"end": 1842,
											"name": "tag",
											"source": 14,
											"value": "85"
										},
										{
											"begin": 1835,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1844,
											"end": 1856,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1858,
											"end": 1865,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1805,
											"end": 1834,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "86"
										},
										{
											"begin": 1805,
											"end": 1866,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 1805,
											"end": 1866,
											"name": "tag",
											"source": 14,
											"value": "84"
										},
										{
											"begin": 1805,
											"end": 1866,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1672,
											"end": 1873,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1672,
											"end": 1873,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1672,
											"end": 1873,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "tag",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 726,
											"end": 732,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 781,
											"name": "PUSH",
											"source": 8,
											"value": "150B7A02"
										},
										{
											"begin": 751,
											"end": 781,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 751,
											"end": 781,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 744,
											"end": 781,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 744,
											"end": 781,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 4242,
											"end": 4371,
											"name": "tag",
											"source": 14,
											"value": "38"
										},
										{
											"begin": 4242,
											"end": 4371,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1156,
											"end": 1168,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "89"
										},
										{
											"begin": 1156,
											"end": 1166,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "78"
										},
										{
											"begin": 1156,
											"end": 1168,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1156,
											"end": 1168,
											"name": "tag",
											"source": 13,
											"value": "89"
										},
										{
											"begin": 1156,
											"end": 1168,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1145,
											"end": 1168,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1145,
											"end": 1168,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "90"
										},
										{
											"begin": 1145,
											"end": 1150,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "52"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "tag",
											"source": 13,
											"value": "90"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1145,
											"end": 1168,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1145,
											"end": 1168,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1145,
											"end": 1168,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "91"
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "92"
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "82"
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "tag",
											"source": 13,
											"value": "92"
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "tag",
											"source": 13,
											"value": "91"
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4312,
											"end": 4364,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "94"
										},
										{
											"begin": 4350,
											"end": 4362,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 4350,
											"end": 4362,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4350,
											"end": 4362,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4350,
											"end": 4362,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 4350,
											"end": 4362,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4350,
											"end": 4362,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 4350,
											"end": 4362,
											"name": "EXP",
											"source": 14
										},
										{
											"begin": 4350,
											"end": 4362,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4350,
											"end": 4362,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 4350,
											"end": 4362,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4350,
											"end": 4362,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4312,
											"end": 4341,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "95"
										},
										{
											"begin": 4312,
											"end": 4364,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 4312,
											"end": 4364,
											"name": "tag",
											"source": 14,
											"value": "94"
										},
										{
											"begin": 4312,
											"end": 4364,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4242,
											"end": 4371,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 4032,
											"end": 4236,
											"name": "tag",
											"source": 14,
											"value": "42"
										},
										{
											"begin": 4032,
											"end": 4236,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1156,
											"end": 1168,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 1156,
											"end": 1166,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "78"
										},
										{
											"begin": 1156,
											"end": 1168,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1156,
											"end": 1168,
											"name": "tag",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 1156,
											"end": 1168,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1145,
											"end": 1168,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1145,
											"end": 1168,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "98"
										},
										{
											"begin": 1145,
											"end": 1150,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "52"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "tag",
											"source": 13,
											"value": "98"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1145,
											"end": 1168,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1145,
											"end": 1168,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1145,
											"end": 1168,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "99"
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "82"
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "tag",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "tag",
											"source": 13,
											"value": "99"
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4162,
											"end": 4229,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "102"
										},
										{
											"begin": 4193,
											"end": 4205,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 4193,
											"end": 4205,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4193,
											"end": 4205,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4193,
											"end": 4205,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 4193,
											"end": 4205,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4193,
											"end": 4205,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 4193,
											"end": 4205,
											"name": "EXP",
											"source": 14
										},
										{
											"begin": 4193,
											"end": 4205,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4193,
											"end": 4205,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 4193,
											"end": 4205,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4193,
											"end": 4205,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4207,
											"end": 4219,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4221,
											"end": 4228,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4162,
											"end": 4192,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "103"
										},
										{
											"begin": 4162,
											"end": 4229,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 4162,
											"end": 4229,
											"name": "tag",
											"source": 14,
											"value": "102"
										},
										{
											"begin": 4162,
											"end": 4229,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4032,
											"end": 4236,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4032,
											"end": 4236,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4032,
											"end": 4236,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 3824,
											"end": 4026,
											"name": "tag",
											"source": 14,
											"value": "46"
										},
										{
											"begin": 3824,
											"end": 4026,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1156,
											"end": 1168,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 1156,
											"end": 1166,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "78"
										},
										{
											"begin": 1156,
											"end": 1168,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1156,
											"end": 1168,
											"name": "tag",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 1156,
											"end": 1168,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1145,
											"end": 1168,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1145,
											"end": 1168,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "106"
										},
										{
											"begin": 1145,
											"end": 1150,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "52"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "tag",
											"source": 13,
											"value": "106"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1145,
											"end": 1168,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1145,
											"end": 1168,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1145,
											"end": 1168,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "107"
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "108"
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "82"
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "tag",
											"source": 13,
											"value": "108"
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "tag",
											"source": 13,
											"value": "107"
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3953,
											"end": 4019,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "110"
										},
										{
											"begin": 3983,
											"end": 3995,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 3983,
											"end": 3995,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3983,
											"end": 3995,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3983,
											"end": 3995,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 3983,
											"end": 3995,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3983,
											"end": 3995,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 3983,
											"end": 3995,
											"name": "EXP",
											"source": 14
										},
										{
											"begin": 3983,
											"end": 3995,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3983,
											"end": 3995,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 3983,
											"end": 3995,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3983,
											"end": 3995,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3997,
											"end": 4009,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4011,
											"end": 4018,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3953,
											"end": 3982,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "86"
										},
										{
											"begin": 3953,
											"end": 4019,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 3953,
											"end": 4019,
											"name": "tag",
											"source": 14,
											"value": "110"
										},
										{
											"begin": 3953,
											"end": 4019,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3824,
											"end": 4026,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3824,
											"end": 4026,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3824,
											"end": 4026,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 2360,
											"end": 2482,
											"name": "tag",
											"source": 14,
											"value": "49"
										},
										{
											"begin": 2360,
											"end": 2482,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1156,
											"end": 1168,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "112"
										},
										{
											"begin": 1156,
											"end": 1166,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "78"
										},
										{
											"begin": 1156,
											"end": 1168,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1156,
											"end": 1168,
											"name": "tag",
											"source": 13,
											"value": "112"
										},
										{
											"begin": 1156,
											"end": 1168,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1145,
											"end": 1168,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1145,
											"end": 1168,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "113"
										},
										{
											"begin": 1145,
											"end": 1150,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "52"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "tag",
											"source": 13,
											"value": "113"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1145,
											"end": 1168,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1145,
											"end": 1168,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1145,
											"end": 1168,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "114"
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "115"
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "82"
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "tag",
											"source": 13,
											"value": "115"
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "tag",
											"source": 13,
											"value": "114"
										},
										{
											"begin": 1137,
											"end": 1205,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2428,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "117"
										},
										{
											"begin": 2466,
											"end": 2473,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "118"
										},
										{
											"begin": 2466,
											"end": 2471,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "52"
										},
										{
											"begin": 2466,
											"end": 2473,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 2466,
											"end": 2473,
											"name": "tag",
											"source": 14,
											"value": "118"
										},
										{
											"begin": 2466,
											"end": 2473,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2428,
											"end": 2457,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "95"
										},
										{
											"begin": 2428,
											"end": 2475,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 2428,
											"end": 2475,
											"name": "tag",
											"source": 14,
											"value": "117"
										},
										{
											"begin": 2428,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2360,
											"end": 2482,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 933,
											"end": 1018,
											"name": "tag",
											"source": 13,
											"value": "52"
										},
										{
											"begin": 933,
											"end": 1018,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 979,
											"end": 986,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1005,
											"end": 1011,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1005,
											"end": 1011,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1005,
											"end": 1011,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1005,
											"end": 1011,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1005,
											"end": 1011,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1005,
											"end": 1011,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 1005,
											"end": 1011,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 1005,
											"end": 1011,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1005,
											"end": 1011,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 1005,
											"end": 1011,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1005,
											"end": 1011,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 998,
											"end": 1011,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 998,
											"end": 1011,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 933,
											"end": 1018,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 933,
											"end": 1018,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 903,
											"end": 909,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 928,
											"end": 964,
											"name": "PUSH",
											"source": 2,
											"value": "BC197C81"
										},
										{
											"begin": 928,
											"end": 964,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 928,
											"end": 964,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 921,
											"end": 964,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 921,
											"end": 964,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 644,
											"end": 1144,
											"name": "tag",
											"source": 14,
											"value": "65"
										},
										{
											"begin": 644,
											"end": 1144,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 751,
											"end": 752,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 733,
											"end": 753,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 733,
											"end": 753,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 733,
											"end": 740,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 733,
											"end": 753,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 733,
											"end": 753,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 733,
											"end": 753,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 733,
											"end": 753,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 725,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "122"
										},
										{
											"begin": 725,
											"end": 788,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 725,
											"end": 788,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 725,
											"end": 788,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 725,
											"end": 788,
											"name": "PUSH",
											"source": 14,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 725,
											"end": 788,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 725,
											"end": 788,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 725,
											"end": 788,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 725,
											"end": 788,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 725,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "123"
										},
										{
											"begin": 725,
											"end": 788,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 725,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "124"
										},
										{
											"begin": 725,
											"end": 788,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 725,
											"end": 788,
											"name": "tag",
											"source": 14,
											"value": "123"
										},
										{
											"begin": 725,
											"end": 788,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 725,
											"end": 788,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 725,
											"end": 788,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 725,
											"end": 788,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 725,
											"end": 788,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 725,
											"end": 788,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 725,
											"end": 788,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 725,
											"end": 788,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 725,
											"end": 788,
											"name": "tag",
											"source": 14,
											"value": "122"
										},
										{
											"begin": 725,
											"end": 788,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 830,
											"end": 831,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 806,
											"end": 832,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 806,
											"end": 832,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 806,
											"end": 819,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 806,
											"end": 832,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 806,
											"end": 832,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 806,
											"end": 832,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 806,
											"end": 832,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 798,
											"end": 867,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "125"
										},
										{
											"begin": 798,
											"end": 867,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 798,
											"end": 867,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 798,
											"end": 867,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 798,
											"end": 867,
											"name": "PUSH",
											"source": 14,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 798,
											"end": 867,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 798,
											"end": 867,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 798,
											"end": 867,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 798,
											"end": 867,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 798,
											"end": 867,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "126"
										},
										{
											"begin": 798,
											"end": 867,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 798,
											"end": 867,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "127"
										},
										{
											"begin": 798,
											"end": 867,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 798,
											"end": 867,
											"name": "tag",
											"source": 14,
											"value": "126"
										},
										{
											"begin": 798,
											"end": 867,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 798,
											"end": 867,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 798,
											"end": 867,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 798,
											"end": 867,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 798,
											"end": 867,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 798,
											"end": 867,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 798,
											"end": 867,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 798,
											"end": 867,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 798,
											"end": 867,
											"name": "tag",
											"source": 14,
											"value": "125"
										},
										{
											"begin": 798,
											"end": 867,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 901,
											"end": 908,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 885,
											"end": 908,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 885,
											"end": 908,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 885,
											"end": 898,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 885,
											"end": 908,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 885,
											"end": 908,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 885,
											"end": 908,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 885,
											"end": 908,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 877,
											"end": 959,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "128"
										},
										{
											"begin": 877,
											"end": 959,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 877,
											"end": 959,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 877,
											"end": 959,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 877,
											"end": 959,
											"name": "PUSH",
											"source": 14,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 877,
											"end": 959,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 877,
											"end": 959,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 877,
											"end": 959,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 877,
											"end": 959,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 877,
											"end": 959,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "129"
										},
										{
											"begin": 877,
											"end": 959,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 877,
											"end": 959,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "130"
										},
										{
											"begin": 877,
											"end": 959,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 877,
											"end": 959,
											"name": "tag",
											"source": 14,
											"value": "129"
										},
										{
											"begin": 877,
											"end": 959,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 877,
											"end": 959,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 877,
											"end": 959,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 877,
											"end": 959,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 877,
											"end": 959,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 877,
											"end": 959,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 877,
											"end": 959,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 877,
											"end": 959,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 877,
											"end": 959,
											"name": "tag",
											"source": 14,
											"value": "128"
										},
										{
											"begin": 877,
											"end": 959,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 994,
											"end": 999,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 977,
											"end": 999,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 977,
											"end": 999,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 977,
											"end": 990,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 977,
											"end": 990,
											"name": "PUSH",
											"source": 14,
											"value": "14"
										},
										{
											"begin": 977,
											"end": 990,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 977,
											"end": 990,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 977,
											"end": 990,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 977,
											"end": 990,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 977,
											"end": 990,
											"name": "EXP",
											"source": 14
										},
										{
											"begin": 977,
											"end": 990,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 977,
											"end": 990,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 977,
											"end": 990,
											"name": "PUSH",
											"source": 14,
											"value": "FF"
										},
										{
											"begin": 977,
											"end": 990,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 977,
											"end": 999,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 977,
											"end": 999,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 977,
											"end": 999,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 969,
											"end": 1032,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "131"
										},
										{
											"begin": 969,
											"end": 1032,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 969,
											"end": 1032,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 969,
											"end": 1032,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 969,
											"end": 1032,
											"name": "PUSH",
											"source": 14,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 969,
											"end": 1032,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 969,
											"end": 1032,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 969,
											"end": 1032,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 969,
											"end": 1032,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 969,
											"end": 1032,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "132"
										},
										{
											"begin": 969,
											"end": 1032,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 969,
											"end": 1032,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "133"
										},
										{
											"begin": 969,
											"end": 1032,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 969,
											"end": 1032,
											"name": "tag",
											"source": 14,
											"value": "132"
										},
										{
											"begin": 969,
											"end": 1032,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 969,
											"end": 1032,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 969,
											"end": 1032,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 969,
											"end": 1032,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 969,
											"end": 1032,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 969,
											"end": 1032,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 969,
											"end": 1032,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 969,
											"end": 1032,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 969,
											"end": 1032,
											"name": "tag",
											"source": 14,
											"value": "131"
										},
										{
											"begin": 969,
											"end": 1032,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1042,
											"end": 1069,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "134"
										},
										{
											"begin": 1061,
											"end": 1068,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1042,
											"end": 1060,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "135"
										},
										{
											"begin": 1042,
											"end": 1069,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 1042,
											"end": 1069,
											"name": "tag",
											"source": 14,
											"value": "134"
										},
										{
											"begin": 1042,
											"end": 1069,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1079,
											"end": 1091,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 1079,
											"end": 1091,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1079,
											"end": 1107,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 1079,
											"end": 1107,
											"name": "EXP",
											"source": 14
										},
										{
											"begin": 1079,
											"end": 1107,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1079,
											"end": 1107,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 1079,
											"end": 1107,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1079,
											"end": 1107,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1079,
											"end": 1107,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 1079,
											"end": 1107,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 1079,
											"end": 1107,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1079,
											"end": 1107,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1079,
											"end": 1107,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1079,
											"end": 1107,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1079,
											"end": 1107,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1079,
											"end": 1107,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 1079,
											"end": 1107,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 1079,
											"end": 1107,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1079,
											"end": 1107,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 1079,
											"end": 1107,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1133,
											"end": 1137,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 1117,
											"end": 1130,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1117,
											"end": 1130,
											"name": "PUSH",
											"source": 14,
											"value": "14"
										},
										{
											"begin": 1117,
											"end": 1137,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 1117,
											"end": 1137,
											"name": "EXP",
											"source": 14
										},
										{
											"begin": 1117,
											"end": 1137,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1117,
											"end": 1137,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 1117,
											"end": 1137,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1117,
											"end": 1137,
											"name": "PUSH",
											"source": 14,
											"value": "FF"
										},
										{
											"begin": 1117,
											"end": 1137,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 1117,
											"end": 1137,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 1117,
											"end": 1137,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1117,
											"end": 1137,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1117,
											"end": 1137,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1117,
											"end": 1137,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1117,
											"end": 1137,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1117,
											"end": 1137,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 1117,
											"end": 1137,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 1117,
											"end": 1137,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1117,
											"end": 1137,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 1117,
											"end": 1137,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 644,
											"end": 1144,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 644,
											"end": 1144,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 644,
											"end": 1144,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 655,
											"end": 661,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 711,
											"name": "PUSH",
											"source": 2,
											"value": "F23A6E61"
										},
										{
											"begin": 680,
											"end": 711,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 680,
											"end": 711,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 673,
											"end": 711,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 673,
											"end": 711,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "tag",
											"source": 11,
											"value": "75"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 914,
											"end": 918,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 952,
											"end": 977,
											"name": "PUSH",
											"source": 11,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 937,
											"end": 948,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 937,
											"end": 977,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 937,
											"end": 977,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 930,
											"end": 977,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 930,
											"end": 977,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 829,
											"end": 984,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 829,
											"end": 984,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 10,
											"value": "78"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 4377,
											"end": 4602,
											"name": "tag",
											"source": 14,
											"value": "86"
										},
										{
											"begin": 4377,
											"end": 4602,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4530,
											"end": 4542,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4522,
											"end": 4560,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4522,
											"end": 4560,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4522,
											"end": 4560,
											"name": "PUSH",
											"source": 14,
											"value": "42842E0E"
										},
										{
											"begin": 4569,
											"end": 4573,
											"name": "ADDRESS",
											"source": 14
										},
										{
											"begin": 4576,
											"end": 4585,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 4587,
											"end": 4594,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4522,
											"end": 4595,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4522,
											"end": 4595,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4522,
											"end": 4595,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4522,
											"end": 4595,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4522,
											"end": 4595,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4522,
											"end": 4595,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 4522,
											"end": 4595,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 4522,
											"end": 4595,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4522,
											"end": 4595,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4522,
											"end": 4595,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 4522,
											"end": 4595,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4522,
											"end": 4595,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "140"
										},
										{
											"begin": 4522,
											"end": 4595,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 4522,
											"end": 4595,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4522,
											"end": 4595,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4522,
											"end": 4595,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4522,
											"end": 4595,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "141"
										},
										{
											"begin": 4522,
											"end": 4595,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 4522,
											"end": 4595,
											"name": "tag",
											"source": 14,
											"value": "140"
										},
										{
											"begin": 4522,
											"end": 4595,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4522,
											"end": 4595,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4522,
											"end": 4595,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4522,
											"end": 4595,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4522,
											"end": 4595,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4522,
											"end": 4595,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4522,
											"end": 4595,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 4522,
											"end": 4595,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4522,
											"end": 4595,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4522,
											"end": 4595,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 4522,
											"end": 4595,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4522,
											"end": 4595,
											"name": "EXTCODESIZE",
											"source": 14
										},
										{
											"begin": 4522,
											"end": 4595,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4522,
											"end": 4595,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4522,
											"end": 4595,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4522,
											"end": 4595,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "142"
										},
										{
											"begin": 4522,
											"end": 4595,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4522,
											"end": 4595,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4522,
											"end": 4595,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4522,
											"end": 4595,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 4522,
											"end": 4595,
											"name": "tag",
											"source": 14,
											"value": "142"
										},
										{
											"begin": 4522,
											"end": 4595,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4522,
											"end": 4595,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4522,
											"end": 4595,
											"name": "GAS",
											"source": 14
										},
										{
											"begin": 4522,
											"end": 4595,
											"name": "CALL",
											"source": 14
										},
										{
											"begin": 4522,
											"end": 4595,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4522,
											"end": 4595,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4522,
											"end": 4595,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4522,
											"end": 4595,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "144"
										},
										{
											"begin": 4522,
											"end": 4595,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4522,
											"end": 4595,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 4522,
											"end": 4595,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4522,
											"end": 4595,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4522,
											"end": 4595,
											"name": "RETURNDATACOPY",
											"source": 14
										},
										{
											"begin": 4522,
											"end": 4595,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 4522,
											"end": 4595,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4522,
											"end": 4595,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 4522,
											"end": 4595,
											"name": "tag",
											"source": 14,
											"value": "144"
										},
										{
											"begin": 4522,
											"end": 4595,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4522,
											"end": 4595,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4522,
											"end": 4595,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4522,
											"end": 4595,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4522,
											"end": 4595,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4377,
											"end": 4602,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4377,
											"end": 4602,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4377,
											"end": 4602,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4377,
											"end": 4602,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 5631,
											"end": 5839,
											"name": "tag",
											"source": 14,
											"value": "95"
										},
										{
											"begin": 5631,
											"end": 5839,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5715,
											"end": 5730,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5733,
											"end": 5754,
											"name": "SELFBALANCE",
											"source": 14
										},
										{
											"begin": 5715,
											"end": 5754,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5715,
											"end": 5754,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5778,
											"end": 5779,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5768,
											"end": 5775,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5768,
											"end": 5779,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 5764,
											"end": 5833,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 5764,
											"end": 5833,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "146"
										},
										{
											"begin": 5764,
											"end": 5833,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5795,
											"end": 5804,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5795,
											"end": 5813,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5795,
											"end": 5813,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 5795,
											"end": 5822,
											"name": "PUSH",
											"source": 14,
											"value": "8FC"
										},
										{
											"begin": 5814,
											"end": 5821,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5795,
											"end": 5822,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5795,
											"end": 5822,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5795,
											"end": 5822,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 5795,
											"end": 5822,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 5795,
											"end": 5822,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5795,
											"end": 5822,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 5795,
											"end": 5822,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 5795,
											"end": 5822,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5795,
											"end": 5822,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 5795,
											"end": 5822,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 5795,
											"end": 5822,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5795,
											"end": 5822,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 5795,
											"end": 5822,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 5795,
											"end": 5822,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5795,
											"end": 5822,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 5795,
											"end": 5822,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 5795,
											"end": 5822,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 5795,
											"end": 5822,
											"name": "CALL",
											"source": 14
										},
										{
											"begin": 5795,
											"end": 5822,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 5795,
											"end": 5822,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5795,
											"end": 5822,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5795,
											"end": 5822,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5795,
											"end": 5822,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5795,
											"end": 5822,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 5795,
											"end": 5822,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5795,
											"end": 5822,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 5795,
											"end": 5822,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "148"
										},
										{
											"begin": 5795,
											"end": 5822,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5795,
											"end": 5822,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 5795,
											"end": 5822,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5795,
											"end": 5822,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5795,
											"end": 5822,
											"name": "RETURNDATACOPY",
											"source": 14
										},
										{
											"begin": 5795,
											"end": 5822,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 5795,
											"end": 5822,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5795,
											"end": 5822,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 5795,
											"end": 5822,
											"name": "tag",
											"source": 14,
											"value": "148"
										},
										{
											"begin": 5795,
											"end": 5822,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5795,
											"end": 5822,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5764,
											"end": 5833,
											"name": "tag",
											"source": 14,
											"value": "146"
										},
										{
											"begin": 5764,
											"end": 5833,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5705,
											"end": 5839,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5631,
											"end": 5839,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5631,
											"end": 5839,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 4608,
											"end": 5101,
											"name": "tag",
											"source": 14,
											"value": "103"
										},
										{
											"begin": 4608,
											"end": 5101,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4754,
											"end": 4769,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4781,
											"end": 4793,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4772,
											"end": 4804,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4772,
											"end": 4804,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4772,
											"end": 4804,
											"name": "PUSH",
											"source": 14,
											"value": "FDD58E"
										},
										{
											"begin": 4826,
											"end": 4830,
											"name": "ADDRESS",
											"source": 14
										},
										{
											"begin": 4845,
											"end": 4852,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4772,
											"end": 4862,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4772,
											"end": 4862,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4772,
											"end": 4862,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4772,
											"end": 4862,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4772,
											"end": 4862,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4772,
											"end": 4862,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 4772,
											"end": 4862,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 4772,
											"end": 4862,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4772,
											"end": 4862,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4772,
											"end": 4862,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 4772,
											"end": 4862,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4772,
											"end": 4862,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "150"
										},
										{
											"begin": 4772,
											"end": 4862,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4772,
											"end": 4862,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4772,
											"end": 4862,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4772,
											"end": 4862,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "151"
										},
										{
											"begin": 4772,
											"end": 4862,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 4772,
											"end": 4862,
											"name": "tag",
											"source": 14,
											"value": "150"
										},
										{
											"begin": 4772,
											"end": 4862,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4772,
											"end": 4862,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4772,
											"end": 4862,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4772,
											"end": 4862,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4772,
											"end": 4862,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4772,
											"end": 4862,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4772,
											"end": 4862,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 4772,
											"end": 4862,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4772,
											"end": 4862,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 4772,
											"end": 4862,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4772,
											"end": 4862,
											"name": "EXTCODESIZE",
											"source": 14
										},
										{
											"begin": 4772,
											"end": 4862,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4772,
											"end": 4862,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4772,
											"end": 4862,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4772,
											"end": 4862,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "152"
										},
										{
											"begin": 4772,
											"end": 4862,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4772,
											"end": 4862,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4772,
											"end": 4862,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4772,
											"end": 4862,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 4772,
											"end": 4862,
											"name": "tag",
											"source": 14,
											"value": "152"
										},
										{
											"begin": 4772,
											"end": 4862,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4772,
											"end": 4862,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4772,
											"end": 4862,
											"name": "GAS",
											"source": 14
										},
										{
											"begin": 4772,
											"end": 4862,
											"name": "STATICCALL",
											"source": 14
										},
										{
											"begin": 4772,
											"end": 4862,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4772,
											"end": 4862,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4772,
											"end": 4862,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4772,
											"end": 4862,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "154"
										},
										{
											"begin": 4772,
											"end": 4862,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4772,
											"end": 4862,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 4772,
											"end": 4862,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4772,
											"end": 4862,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4772,
											"end": 4862,
											"name": "RETURNDATACOPY",
											"source": 14
										},
										{
											"begin": 4772,
											"end": 4862,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 4772,
											"end": 4862,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4772,
											"end": 4862,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 4772,
											"end": 4862,
											"name": "tag",
											"source": 14,
											"value": "154"
										},
										{
											"begin": 4772,
											"end": 4862,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4772,
											"end": 4862,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4772,
											"end": 4862,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4772,
											"end": 4862,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4772,
											"end": 4862,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4772,
											"end": 4862,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4772,
											"end": 4862,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4772,
											"end": 4862,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 4772,
											"end": 4862,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 4772,
											"end": 4862,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 4772,
											"end": 4862,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 4772,
											"end": 4862,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4772,
											"end": 4862,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4772,
											"end": 4862,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4772,
											"end": 4862,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4772,
											"end": 4862,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4772,
											"end": 4862,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4772,
											"end": 4862,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4772,
											"end": 4862,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4772,
											"end": 4862,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4772,
											"end": 4862,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4772,
											"end": 4862,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4772,
											"end": 4862,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4772,
											"end": 4862,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "155"
										},
										{
											"begin": 4772,
											"end": 4862,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4772,
											"end": 4862,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4772,
											"end": 4862,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "156"
										},
										{
											"begin": 4772,
											"end": 4862,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 4772,
											"end": 4862,
											"name": "tag",
											"source": 14,
											"value": "155"
										},
										{
											"begin": 4772,
											"end": 4862,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4754,
											"end": 4862,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4754,
											"end": 4862,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4886,
											"end": 4887,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4876,
											"end": 4883,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4876,
											"end": 4887,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 4872,
											"end": 5095,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4872,
											"end": 5095,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "157"
										},
										{
											"begin": 4872,
											"end": 5095,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4912,
											"end": 4924,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4903,
											"end": 4942,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4903,
											"end": 4942,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4903,
											"end": 4942,
											"name": "PUSH",
											"source": 14,
											"value": "F242432A"
										},
										{
											"begin": 4968,
											"end": 4972,
											"name": "ADDRESS",
											"source": 14
										},
										{
											"begin": 4991,
											"end": 5000,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 5018,
											"end": 5025,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 5043,
											"end": 5050,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 4903,
											"end": 5084,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4903,
											"end": 5084,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4903,
											"end": 5084,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 4903,
											"end": 5084,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4903,
											"end": 5084,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4903,
											"end": 5084,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 4903,
											"end": 5084,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 4903,
											"end": 5084,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4903,
											"end": 5084,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4903,
											"end": 5084,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 4903,
											"end": 5084,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4903,
											"end": 5084,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "158"
										},
										{
											"begin": 4903,
											"end": 5084,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 4903,
											"end": 5084,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 4903,
											"end": 5084,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4903,
											"end": 5084,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4903,
											"end": 5084,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4903,
											"end": 5084,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "159"
										},
										{
											"begin": 4903,
											"end": 5084,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 4903,
											"end": 5084,
											"name": "tag",
											"source": 14,
											"value": "158"
										},
										{
											"begin": 4903,
											"end": 5084,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4903,
											"end": 5084,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4903,
											"end": 5084,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4903,
											"end": 5084,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4903,
											"end": 5084,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4903,
											"end": 5084,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4903,
											"end": 5084,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 4903,
											"end": 5084,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4903,
											"end": 5084,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4903,
											"end": 5084,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 4903,
											"end": 5084,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4903,
											"end": 5084,
											"name": "EXTCODESIZE",
											"source": 14
										},
										{
											"begin": 4903,
											"end": 5084,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4903,
											"end": 5084,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4903,
											"end": 5084,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4903,
											"end": 5084,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "160"
										},
										{
											"begin": 4903,
											"end": 5084,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4903,
											"end": 5084,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4903,
											"end": 5084,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4903,
											"end": 5084,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 4903,
											"end": 5084,
											"name": "tag",
											"source": 14,
											"value": "160"
										},
										{
											"begin": 4903,
											"end": 5084,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4903,
											"end": 5084,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4903,
											"end": 5084,
											"name": "GAS",
											"source": 14
										},
										{
											"begin": 4903,
											"end": 5084,
											"name": "CALL",
											"source": 14
										},
										{
											"begin": 4903,
											"end": 5084,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4903,
											"end": 5084,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4903,
											"end": 5084,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4903,
											"end": 5084,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "162"
										},
										{
											"begin": 4903,
											"end": 5084,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4903,
											"end": 5084,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 4903,
											"end": 5084,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4903,
											"end": 5084,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4903,
											"end": 5084,
											"name": "RETURNDATACOPY",
											"source": 14
										},
										{
											"begin": 4903,
											"end": 5084,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 4903,
											"end": 5084,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4903,
											"end": 5084,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 4903,
											"end": 5084,
											"name": "tag",
											"source": 14,
											"value": "162"
										},
										{
											"begin": 4903,
											"end": 5084,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4903,
											"end": 5084,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4903,
											"end": 5084,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4903,
											"end": 5084,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4903,
											"end": 5084,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4872,
											"end": 5095,
											"name": "tag",
											"source": 14,
											"value": "157"
										},
										{
											"begin": 4872,
											"end": 5095,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4744,
											"end": 5101,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4608,
											"end": 5101,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4608,
											"end": 5101,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4608,
											"end": 5101,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4608,
											"end": 5101,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 1377,
											"end": 1564,
											"name": "tag",
											"source": 13,
											"value": "135"
										},
										{
											"begin": 1377,
											"end": 1564,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1450,
											"end": 1466,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1469,
											"end": 1475,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1469,
											"end": 1475,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1469,
											"end": 1475,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1469,
											"end": 1475,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1469,
											"end": 1475,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1469,
											"end": 1475,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 1469,
											"end": 1475,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 1469,
											"end": 1475,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1469,
											"end": 1475,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 1469,
											"end": 1475,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1469,
											"end": 1475,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1450,
											"end": 1475,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1450,
											"end": 1475,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1494,
											"end": 1502,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1485,
											"end": 1491,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1485,
											"end": 1491,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1485,
											"end": 1502,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 1485,
											"end": 1502,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 1485,
											"end": 1502,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1485,
											"end": 1502,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1485,
											"end": 1502,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1485,
											"end": 1502,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1485,
											"end": 1502,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 1485,
											"end": 1502,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 1485,
											"end": 1502,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1485,
											"end": 1502,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1485,
											"end": 1502,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1485,
											"end": 1502,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1485,
											"end": 1502,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1485,
											"end": 1502,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 1485,
											"end": 1502,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 1485,
											"end": 1502,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1485,
											"end": 1502,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 1485,
											"end": 1502,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1548,
											"end": 1556,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1517,
											"end": 1557,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1517,
											"end": 1557,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1538,
											"end": 1546,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1517,
											"end": 1557,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1517,
											"end": 1557,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1517,
											"end": 1557,
											"name": "PUSH",
											"source": 13,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1517,
											"end": 1557,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1517,
											"end": 1557,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1517,
											"end": 1557,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1517,
											"end": 1557,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1517,
											"end": 1557,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1517,
											"end": 1557,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1517,
											"end": 1557,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1517,
											"end": 1557,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1517,
											"end": 1557,
											"name": "LOG3",
											"source": 13
										},
										{
											"begin": 1440,
											"end": 1564,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1377,
											"end": 1564,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1377,
											"end": 1564,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 24,
											"end": 746,
											"name": "tag",
											"source": 15,
											"value": "165"
										},
										{
											"begin": 24,
											"end": 746,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 120,
											"end": 125,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 145,
											"end": 226,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "167"
										},
										{
											"begin": 161,
											"end": 225,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "168"
										},
										{
											"begin": 218,
											"end": 224,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 161,
											"end": 225,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "169"
										},
										{
											"begin": 161,
											"end": 225,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 161,
											"end": 225,
											"name": "tag",
											"source": 15,
											"value": "168"
										},
										{
											"begin": 161,
											"end": 225,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 145,
											"end": 226,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "170"
										},
										{
											"begin": 145,
											"end": 226,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 145,
											"end": 226,
											"name": "tag",
											"source": 15,
											"value": "167"
										},
										{
											"begin": 145,
											"end": 226,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 136,
											"end": 226,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 136,
											"end": 226,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 246,
											"end": 251,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 275,
											"end": 281,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 268,
											"end": 273,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 261,
											"end": 282,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 309,
											"end": 313,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 302,
											"end": 307,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 298,
											"end": 314,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 291,
											"end": 314,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 291,
											"end": 314,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 335,
											"end": 341,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 385,
											"end": 388,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 377,
											"end": 381,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 369,
											"end": 375,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 365,
											"end": 382,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 360,
											"end": 363,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 356,
											"end": 383,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 353,
											"end": 389,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 350,
											"end": 493,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 350,
											"end": 493,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "171"
										},
										{
											"begin": 350,
											"end": 493,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 404,
											"end": 483,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "172"
										},
										{
											"begin": 404,
											"end": 483,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "173"
										},
										{
											"begin": 404,
											"end": 483,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 404,
											"end": 483,
											"name": "tag",
											"source": 15,
											"value": "172"
										},
										{
											"begin": 404,
											"end": 483,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 350,
											"end": 493,
											"name": "tag",
											"source": 15,
											"value": "171"
										},
										{
											"begin": 350,
											"end": 493,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 517,
											"end": 518,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 502,
											"end": 740,
											"name": "tag",
											"source": 15,
											"value": "174"
										},
										{
											"begin": 502,
											"end": 740,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 527,
											"end": 533,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 524,
											"end": 525,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 521,
											"end": 534,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 502,
											"end": 740,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 502,
											"end": 740,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "176"
										},
										{
											"begin": 502,
											"end": 740,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 595,
											"end": 598,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 624,
											"end": 661,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "177"
										},
										{
											"begin": 657,
											"end": 660,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 645,
											"end": 655,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 624,
											"end": 661,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "178"
										},
										{
											"begin": 624,
											"end": 661,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 624,
											"end": 661,
											"name": "tag",
											"source": 15,
											"value": "177"
										},
										{
											"begin": 624,
											"end": 661,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 619,
											"end": 622,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 612,
											"end": 662,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 691,
											"end": 695,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 686,
											"end": 689,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 682,
											"end": 696,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 675,
											"end": 696,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 675,
											"end": 696,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 725,
											"end": 729,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 720,
											"end": 723,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 716,
											"end": 730,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 709,
											"end": 730,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 709,
											"end": 730,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 562,
											"end": 740,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 549,
											"end": 550,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 546,
											"end": 547,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 542,
											"end": 551,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 537,
											"end": 551,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 537,
											"end": 551,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 502,
											"end": 740,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "174"
										},
										{
											"begin": 502,
											"end": 740,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 502,
											"end": 740,
											"name": "tag",
											"source": 15,
											"value": "176"
										},
										{
											"begin": 502,
											"end": 740,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 506,
											"end": 520,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 126,
											"end": 746,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 126,
											"end": 746,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 24,
											"end": 746,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 24,
											"end": 746,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 24,
											"end": 746,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 24,
											"end": 746,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 24,
											"end": 746,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 24,
											"end": 746,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 752,
											"end": 1162,
											"name": "tag",
											"source": 15,
											"value": "179"
										},
										{
											"begin": 752,
											"end": 1162,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 829,
											"end": 834,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 854,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "181"
										},
										{
											"begin": 870,
											"end": 918,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "182"
										},
										{
											"begin": 911,
											"end": 917,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 870,
											"end": 918,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "183"
										},
										{
											"begin": 870,
											"end": 918,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 870,
											"end": 918,
											"name": "tag",
											"source": 15,
											"value": "182"
										},
										{
											"begin": 870,
											"end": 918,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 854,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "170"
										},
										{
											"begin": 854,
											"end": 919,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 854,
											"end": 919,
											"name": "tag",
											"source": 15,
											"value": "181"
										},
										{
											"begin": 854,
											"end": 919,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 845,
											"end": 919,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 845,
											"end": 919,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 942,
											"end": 948,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 935,
											"end": 940,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 928,
											"end": 949,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 980,
											"end": 984,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 973,
											"end": 978,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 969,
											"end": 985,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1018,
											"end": 1021,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1009,
											"end": 1015,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1004,
											"end": 1007,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1000,
											"end": 1016,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 997,
											"end": 1022,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 994,
											"end": 1106,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 994,
											"end": 1106,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "184"
										},
										{
											"begin": 994,
											"end": 1106,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1025,
											"end": 1104,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "185"
										},
										{
											"begin": 1025,
											"end": 1104,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "186"
										},
										{
											"begin": 1025,
											"end": 1104,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 1025,
											"end": 1104,
											"name": "tag",
											"source": 15,
											"value": "185"
										},
										{
											"begin": 1025,
											"end": 1104,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 994,
											"end": 1106,
											"name": "tag",
											"source": 15,
											"value": "184"
										},
										{
											"begin": 994,
											"end": 1106,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1115,
											"end": 1156,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "187"
										},
										{
											"begin": 1149,
											"end": 1155,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1144,
											"end": 1147,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1139,
											"end": 1142,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 1115,
											"end": 1156,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "188"
										},
										{
											"begin": 1115,
											"end": 1156,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 1115,
											"end": 1156,
											"name": "tag",
											"source": 15,
											"value": "187"
										},
										{
											"begin": 1115,
											"end": 1156,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 835,
											"end": 1162,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 752,
											"end": 1162,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 752,
											"end": 1162,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 752,
											"end": 1162,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 752,
											"end": 1162,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 752,
											"end": 1162,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 752,
											"end": 1162,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 1168,
											"end": 1307,
											"name": "tag",
											"source": 15,
											"value": "189"
										},
										{
											"begin": 1168,
											"end": 1307,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1214,
											"end": 1219,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1252,
											"end": 1258,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1239,
											"end": 1259,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 1230,
											"end": 1259,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1230,
											"end": 1259,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1268,
											"end": 1301,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "191"
										},
										{
											"begin": 1295,
											"end": 1300,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1268,
											"end": 1301,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "192"
										},
										{
											"begin": 1268,
											"end": 1301,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 1268,
											"end": 1301,
											"name": "tag",
											"source": 15,
											"value": "191"
										},
										{
											"begin": 1268,
											"end": 1301,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1168,
											"end": 1307,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1168,
											"end": 1307,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1168,
											"end": 1307,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1168,
											"end": 1307,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1168,
											"end": 1307,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 1330,
											"end": 1700,
											"name": "tag",
											"source": 15,
											"value": "193"
										},
										{
											"begin": 1330,
											"end": 1700,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1401,
											"end": 1406,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1450,
											"end": 1453,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1443,
											"end": 1447,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 1435,
											"end": 1441,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1431,
											"end": 1448,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1427,
											"end": 1454,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 1417,
											"end": 1539,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "195"
										},
										{
											"begin": 1417,
											"end": 1539,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1458,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "196"
										},
										{
											"begin": 1458,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "197"
										},
										{
											"begin": 1458,
											"end": 1537,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 1458,
											"end": 1537,
											"name": "tag",
											"source": 15,
											"value": "196"
										},
										{
											"begin": 1458,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1417,
											"end": 1539,
											"name": "tag",
											"source": 15,
											"value": "195"
										},
										{
											"begin": 1417,
											"end": 1539,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1575,
											"end": 1581,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1562,
											"end": 1582,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 1600,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "198"
										},
										{
											"begin": 1690,
											"end": 1693,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1682,
											"end": 1688,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1675,
											"end": 1679,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1667,
											"end": 1673,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 1663,
											"end": 1680,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1600,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "165"
										},
										{
											"begin": 1600,
											"end": 1694,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 1600,
											"end": 1694,
											"name": "tag",
											"source": 15,
											"value": "198"
										},
										{
											"begin": 1600,
											"end": 1694,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1591,
											"end": 1694,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1591,
											"end": 1694,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1407,
											"end": 1700,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1330,
											"end": 1700,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1330,
											"end": 1700,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1330,
											"end": 1700,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1330,
											"end": 1700,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1330,
											"end": 1700,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 1706,
											"end": 1843,
											"name": "tag",
											"source": 15,
											"value": "199"
										},
										{
											"begin": 1706,
											"end": 1843,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1751,
											"end": 1756,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1789,
											"end": 1795,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1776,
											"end": 1796,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 1767,
											"end": 1796,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1767,
											"end": 1796,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1805,
											"end": 1837,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "201"
										},
										{
											"begin": 1831,
											"end": 1836,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1805,
											"end": 1837,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "202"
										},
										{
											"begin": 1805,
											"end": 1837,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 1805,
											"end": 1837,
											"name": "tag",
											"source": 15,
											"value": "201"
										},
										{
											"begin": 1805,
											"end": 1837,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1706,
											"end": 1843,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1706,
											"end": 1843,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1706,
											"end": 1843,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1706,
											"end": 1843,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1706,
											"end": 1843,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 1862,
											"end": 2200,
											"name": "tag",
											"source": 15,
											"value": "203"
										},
										{
											"begin": 1862,
											"end": 2200,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1917,
											"end": 1922,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1966,
											"end": 1969,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1959,
											"end": 1963,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 1951,
											"end": 1957,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1947,
											"end": 1964,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1943,
											"end": 1970,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 1933,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "205"
										},
										{
											"begin": 1933,
											"end": 2055,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1974,
											"end": 2053,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "206"
										},
										{
											"begin": 1974,
											"end": 2053,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "197"
										},
										{
											"begin": 1974,
											"end": 2053,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 1974,
											"end": 2053,
											"name": "tag",
											"source": 15,
											"value": "206"
										},
										{
											"begin": 1974,
											"end": 2053,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1933,
											"end": 2055,
											"name": "tag",
											"source": 15,
											"value": "205"
										},
										{
											"begin": 1933,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2091,
											"end": 2097,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 2116,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "207"
										},
										{
											"begin": 2190,
											"end": 2193,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 2182,
											"end": 2188,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2175,
											"end": 2179,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2167,
											"end": 2173,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 2163,
											"end": 2180,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2116,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "179"
										},
										{
											"begin": 2116,
											"end": 2194,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 2116,
											"end": 2194,
											"name": "tag",
											"source": 15,
											"value": "207"
										},
										{
											"begin": 2116,
											"end": 2194,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2107,
											"end": 2194,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2107,
											"end": 2194,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1923,
											"end": 2200,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1862,
											"end": 2200,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1862,
											"end": 2200,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1862,
											"end": 2200,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1862,
											"end": 2200,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1862,
											"end": 2200,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 2206,
											"end": 2345,
											"name": "tag",
											"source": 15,
											"value": "178"
										},
										{
											"begin": 2206,
											"end": 2345,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2252,
											"end": 2257,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2290,
											"end": 2296,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2277,
											"end": 2297,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 2268,
											"end": 2297,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2268,
											"end": 2297,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2306,
											"end": 2339,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "209"
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2306,
											"end": 2339,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "210"
										},
										{
											"begin": 2306,
											"end": 2339,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 2306,
											"end": 2339,
											"name": "tag",
											"source": 15,
											"value": "209"
										},
										{
											"begin": 2306,
											"end": 2339,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2206,
											"end": 2345,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2206,
											"end": 2345,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2206,
											"end": 2345,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2206,
											"end": 2345,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2206,
											"end": 2345,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 2351,
											"end": 2494,
											"name": "tag",
											"source": 15,
											"value": "211"
										},
										{
											"begin": 2351,
											"end": 2494,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2408,
											"end": 2413,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2439,
											"end": 2445,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2433,
											"end": 2446,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 2424,
											"end": 2446,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2424,
											"end": 2446,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2455,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "213"
										},
										{
											"begin": 2482,
											"end": 2487,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2455,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "210"
										},
										{
											"begin": 2455,
											"end": 2488,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 2455,
											"end": 2488,
											"name": "tag",
											"source": 15,
											"value": "213"
										},
										{
											"begin": 2455,
											"end": 2488,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2351,
											"end": 2494,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2351,
											"end": 2494,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2351,
											"end": 2494,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2351,
											"end": 2494,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2351,
											"end": 2494,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 2500,
											"end": 2974,
											"name": "tag",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 2500,
											"end": 2974,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2568,
											"end": 2574,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2576,
											"end": 2582,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2625,
											"end": 2627,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2613,
											"end": 2622,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 2604,
											"end": 2611,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 2600,
											"end": 2623,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 2596,
											"end": 2628,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 2593,
											"end": 2712,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2593,
											"end": 2712,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "215"
										},
										{
											"begin": 2593,
											"end": 2712,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2631,
											"end": 2710,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "216"
										},
										{
											"begin": 2631,
											"end": 2710,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "217"
										},
										{
											"begin": 2631,
											"end": 2710,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 2631,
											"end": 2710,
											"name": "tag",
											"source": 15,
											"value": "216"
										},
										{
											"begin": 2631,
											"end": 2710,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2593,
											"end": 2712,
											"name": "tag",
											"source": 15,
											"value": "215"
										},
										{
											"begin": 2593,
											"end": 2712,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2751,
											"end": 2752,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2776,
											"end": 2829,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "218"
										},
										{
											"begin": 2821,
											"end": 2828,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 2812,
											"end": 2818,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2801,
											"end": 2810,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 2797,
											"end": 2819,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2776,
											"end": 2829,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "189"
										},
										{
											"begin": 2776,
											"end": 2829,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 2776,
											"end": 2829,
											"name": "tag",
											"source": 15,
											"value": "218"
										},
										{
											"begin": 2776,
											"end": 2829,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2766,
											"end": 2829,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2766,
											"end": 2829,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2722,
											"end": 2839,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2878,
											"end": 2880,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2904,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "219"
										},
										{
											"begin": 2949,
											"end": 2956,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 2940,
											"end": 2946,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2929,
											"end": 2938,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 2925,
											"end": 2947,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2904,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "189"
										},
										{
											"begin": 2904,
											"end": 2957,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 2904,
											"end": 2957,
											"name": "tag",
											"source": 15,
											"value": "219"
										},
										{
											"begin": 2904,
											"end": 2957,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2894,
											"end": 2957,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2894,
											"end": 2957,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2849,
											"end": 2967,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2500,
											"end": 2974,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2500,
											"end": 2974,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2500,
											"end": 2974,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2500,
											"end": 2974,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2500,
											"end": 2974,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2500,
											"end": 2974,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 2980,
											"end": 4489,
											"name": "tag",
											"source": 15,
											"value": "58"
										},
										{
											"begin": 2980,
											"end": 4489,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3134,
											"end": 3140,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3142,
											"end": 3148,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3150,
											"end": 3156,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3158,
											"end": 3164,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3166,
											"end": 3172,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3215,
											"end": 3218,
											"name": "PUSH",
											"source": 15,
											"value": "A0"
										},
										{
											"begin": 3203,
											"end": 3212,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 3194,
											"end": 3201,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 3190,
											"end": 3213,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 3186,
											"end": 3219,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 3183,
											"end": 3303,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3183,
											"end": 3303,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "221"
										},
										{
											"begin": 3183,
											"end": 3303,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3222,
											"end": 3301,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "222"
										},
										{
											"begin": 3222,
											"end": 3301,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "217"
										},
										{
											"begin": 3222,
											"end": 3301,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 3222,
											"end": 3301,
											"name": "tag",
											"source": 15,
											"value": "222"
										},
										{
											"begin": 3222,
											"end": 3301,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3183,
											"end": 3303,
											"name": "tag",
											"source": 15,
											"value": "221"
										},
										{
											"begin": 3183,
											"end": 3303,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3342,
											"end": 3343,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3367,
											"end": 3420,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "223"
										},
										{
											"begin": 3412,
											"end": 3419,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 3403,
											"end": 3409,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3392,
											"end": 3401,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 3388,
											"end": 3410,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3367,
											"end": 3420,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "189"
										},
										{
											"begin": 3367,
											"end": 3420,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 3367,
											"end": 3420,
											"name": "tag",
											"source": 15,
											"value": "223"
										},
										{
											"begin": 3367,
											"end": 3420,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3357,
											"end": 3420,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 3357,
											"end": 3420,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3313,
											"end": 3430,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3469,
											"end": 3471,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3495,
											"end": 3548,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "224"
										},
										{
											"begin": 3540,
											"end": 3547,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 3531,
											"end": 3537,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3520,
											"end": 3529,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 3516,
											"end": 3538,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3495,
											"end": 3548,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "189"
										},
										{
											"begin": 3495,
											"end": 3548,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 3495,
											"end": 3548,
											"name": "tag",
											"source": 15,
											"value": "224"
										},
										{
											"begin": 3495,
											"end": 3548,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3485,
											"end": 3548,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 3485,
											"end": 3548,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3440,
											"end": 3558,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3625,
											"end": 3627,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 3614,
											"end": 3623,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 3610,
											"end": 3628,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3597,
											"end": 3629,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 3656,
											"end": 3674,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3648,
											"end": 3654,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3645,
											"end": 3675,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 3642,
											"end": 3759,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3642,
											"end": 3759,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "225"
										},
										{
											"begin": 3642,
											"end": 3759,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3678,
											"end": 3757,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "226"
										},
										{
											"begin": 3678,
											"end": 3757,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "227"
										},
										{
											"begin": 3678,
											"end": 3757,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 3678,
											"end": 3757,
											"name": "tag",
											"source": 15,
											"value": "226"
										},
										{
											"begin": 3678,
											"end": 3757,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3642,
											"end": 3759,
											"name": "tag",
											"source": 15,
											"value": "225"
										},
										{
											"begin": 3642,
											"end": 3759,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3783,
											"end": 3861,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "228"
										},
										{
											"begin": 3853,
											"end": 3860,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 3844,
											"end": 3850,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3833,
											"end": 3842,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 3829,
											"end": 3851,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3783,
											"end": 3861,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "193"
										},
										{
											"begin": 3783,
											"end": 3861,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 3783,
											"end": 3861,
											"name": "tag",
											"source": 15,
											"value": "228"
										},
										{
											"begin": 3783,
											"end": 3861,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3773,
											"end": 3861,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 3773,
											"end": 3861,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3568,
											"end": 3871,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3938,
											"end": 3940,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 3927,
											"end": 3936,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 3923,
											"end": 3941,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3910,
											"end": 3942,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 3969,
											"end": 3987,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3961,
											"end": 3967,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3958,
											"end": 3988,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 3955,
											"end": 4072,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3955,
											"end": 4072,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "229"
										},
										{
											"begin": 3955,
											"end": 4072,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3991,
											"end": 4070,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "230"
										},
										{
											"begin": 3991,
											"end": 4070,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "227"
										},
										{
											"begin": 3991,
											"end": 4070,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 3991,
											"end": 4070,
											"name": "tag",
											"source": 15,
											"value": "230"
										},
										{
											"begin": 3991,
											"end": 4070,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3955,
											"end": 4072,
											"name": "tag",
											"source": 15,
											"value": "229"
										},
										{
											"begin": 3955,
											"end": 4072,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4096,
											"end": 4174,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "231"
										},
										{
											"begin": 4166,
											"end": 4173,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 4157,
											"end": 4163,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4146,
											"end": 4155,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 4142,
											"end": 4164,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4096,
											"end": 4174,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "193"
										},
										{
											"begin": 4096,
											"end": 4174,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 4096,
											"end": 4174,
											"name": "tag",
											"source": 15,
											"value": "231"
										},
										{
											"begin": 4096,
											"end": 4174,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4086,
											"end": 4174,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4086,
											"end": 4174,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3881,
											"end": 4184,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4251,
											"end": 4254,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 4240,
											"end": 4249,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 4236,
											"end": 4255,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4223,
											"end": 4256,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 4283,
											"end": 4301,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4275,
											"end": 4281,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4272,
											"end": 4302,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 4269,
											"end": 4386,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 4269,
											"end": 4386,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "232"
										},
										{
											"begin": 4269,
											"end": 4386,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4305,
											"end": 4384,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "233"
										},
										{
											"begin": 4305,
											"end": 4384,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "227"
										},
										{
											"begin": 4305,
											"end": 4384,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 4305,
											"end": 4384,
											"name": "tag",
											"source": 15,
											"value": "233"
										},
										{
											"begin": 4305,
											"end": 4384,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4269,
											"end": 4386,
											"name": "tag",
											"source": 15,
											"value": "232"
										},
										{
											"begin": 4269,
											"end": 4386,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4410,
											"end": 4472,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "234"
										},
										{
											"begin": 4464,
											"end": 4471,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 4455,
											"end": 4461,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4444,
											"end": 4453,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 4440,
											"end": 4462,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4410,
											"end": 4472,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "203"
										},
										{
											"begin": 4410,
											"end": 4472,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 4410,
											"end": 4472,
											"name": "tag",
											"source": 15,
											"value": "234"
										},
										{
											"begin": 4410,
											"end": 4472,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4400,
											"end": 4472,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4400,
											"end": 4472,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4194,
											"end": 4482,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2980,
											"end": 4489,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2980,
											"end": 4489,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 2980,
											"end": 4489,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2980,
											"end": 4489,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2980,
											"end": 4489,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 2980,
											"end": 4489,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2980,
											"end": 4489,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 2980,
											"end": 4489,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2980,
											"end": 4489,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 4495,
											"end": 5438,
											"name": "tag",
											"source": 15,
											"value": "32"
										},
										{
											"begin": 4495,
											"end": 5438,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4590,
											"end": 4596,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4598,
											"end": 4604,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4606,
											"end": 4612,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4614,
											"end": 4620,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4663,
											"end": 4666,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 4651,
											"end": 4660,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 4642,
											"end": 4649,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 4638,
											"end": 4661,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 4634,
											"end": 4667,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 4631,
											"end": 4751,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 4631,
											"end": 4751,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "236"
										},
										{
											"begin": 4631,
											"end": 4751,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4670,
											"end": 4749,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "237"
										},
										{
											"begin": 4670,
											"end": 4749,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "217"
										},
										{
											"begin": 4670,
											"end": 4749,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 4670,
											"end": 4749,
											"name": "tag",
											"source": 15,
											"value": "237"
										},
										{
											"begin": 4670,
											"end": 4749,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4631,
											"end": 4751,
											"name": "tag",
											"source": 15,
											"value": "236"
										},
										{
											"begin": 4631,
											"end": 4751,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4790,
											"end": 4791,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4815,
											"end": 4868,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "238"
										},
										{
											"begin": 4860,
											"end": 4867,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 4851,
											"end": 4857,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4840,
											"end": 4849,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 4836,
											"end": 4858,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4815,
											"end": 4868,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "189"
										},
										{
											"begin": 4815,
											"end": 4868,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 4815,
											"end": 4868,
											"name": "tag",
											"source": 15,
											"value": "238"
										},
										{
											"begin": 4815,
											"end": 4868,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4805,
											"end": 4868,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 4805,
											"end": 4868,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4761,
											"end": 4878,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4917,
											"end": 4919,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4943,
											"end": 4996,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "239"
										},
										{
											"begin": 4988,
											"end": 4995,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 4979,
											"end": 4985,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4968,
											"end": 4977,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 4964,
											"end": 4986,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4943,
											"end": 4996,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "189"
										},
										{
											"begin": 4943,
											"end": 4996,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 4943,
											"end": 4996,
											"name": "tag",
											"source": 15,
											"value": "239"
										},
										{
											"begin": 4943,
											"end": 4996,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4933,
											"end": 4996,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 4933,
											"end": 4996,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4888,
											"end": 5006,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5045,
											"end": 5047,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 5071,
											"end": 5124,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "240"
										},
										{
											"begin": 5116,
											"end": 5123,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 5107,
											"end": 5113,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5096,
											"end": 5105,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 5092,
											"end": 5114,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5071,
											"end": 5124,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "178"
										},
										{
											"begin": 5071,
											"end": 5124,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 5071,
											"end": 5124,
											"name": "tag",
											"source": 15,
											"value": "240"
										},
										{
											"begin": 5071,
											"end": 5124,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5061,
											"end": 5124,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 5061,
											"end": 5124,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5016,
											"end": 5134,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5201,
											"end": 5203,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 5190,
											"end": 5199,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 5186,
											"end": 5204,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5173,
											"end": 5205,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 5232,
											"end": 5250,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5224,
											"end": 5230,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5221,
											"end": 5251,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 5218,
											"end": 5335,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 5218,
											"end": 5335,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "241"
										},
										{
											"begin": 5218,
											"end": 5335,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 5254,
											"end": 5333,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "242"
										},
										{
											"begin": 5254,
											"end": 5333,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "227"
										},
										{
											"begin": 5254,
											"end": 5333,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 5254,
											"end": 5333,
											"name": "tag",
											"source": 15,
											"value": "242"
										},
										{
											"begin": 5254,
											"end": 5333,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5218,
											"end": 5335,
											"name": "tag",
											"source": 15,
											"value": "241"
										},
										{
											"begin": 5218,
											"end": 5335,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5359,
											"end": 5421,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "243"
										},
										{
											"begin": 5413,
											"end": 5420,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 5404,
											"end": 5410,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5393,
											"end": 5402,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 5389,
											"end": 5411,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5359,
											"end": 5421,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "203"
										},
										{
											"begin": 5359,
											"end": 5421,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 5359,
											"end": 5421,
											"name": "tag",
											"source": 15,
											"value": "243"
										},
										{
											"begin": 5359,
											"end": 5421,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5349,
											"end": 5421,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5349,
											"end": 5421,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5144,
											"end": 5431,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4495,
											"end": 5438,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4495,
											"end": 5438,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 4495,
											"end": 5438,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4495,
											"end": 5438,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 4495,
											"end": 5438,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4495,
											"end": 5438,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4495,
											"end": 5438,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4495,
											"end": 5438,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 5444,
											"end": 6533,
											"name": "tag",
											"source": 15,
											"value": "69"
										},
										{
											"begin": 5444,
											"end": 6533,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5548,
											"end": 5554,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5556,
											"end": 5562,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5564,
											"end": 5570,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5572,
											"end": 5578,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5580,
											"end": 5586,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5629,
											"end": 5632,
											"name": "PUSH",
											"source": 15,
											"value": "A0"
										},
										{
											"begin": 5617,
											"end": 5626,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 5608,
											"end": 5615,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 5604,
											"end": 5627,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 5600,
											"end": 5633,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 5597,
											"end": 5717,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 5597,
											"end": 5717,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "245"
										},
										{
											"begin": 5597,
											"end": 5717,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 5636,
											"end": 5715,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "246"
										},
										{
											"begin": 5636,
											"end": 5715,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "217"
										},
										{
											"begin": 5636,
											"end": 5715,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 5636,
											"end": 5715,
											"name": "tag",
											"source": 15,
											"value": "246"
										},
										{
											"begin": 5636,
											"end": 5715,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5597,
											"end": 5717,
											"name": "tag",
											"source": 15,
											"value": "245"
										},
										{
											"begin": 5597,
											"end": 5717,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5756,
											"end": 5757,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5781,
											"end": 5834,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "247"
										},
										{
											"begin": 5826,
											"end": 5833,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 5817,
											"end": 5823,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5806,
											"end": 5815,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 5802,
											"end": 5824,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5781,
											"end": 5834,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "189"
										},
										{
											"begin": 5781,
											"end": 5834,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 5781,
											"end": 5834,
											"name": "tag",
											"source": 15,
											"value": "247"
										},
										{
											"begin": 5781,
											"end": 5834,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5771,
											"end": 5834,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 5771,
											"end": 5834,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5727,
											"end": 5844,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5883,
											"end": 5885,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5909,
											"end": 5962,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "248"
										},
										{
											"begin": 5954,
											"end": 5961,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 5945,
											"end": 5951,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5934,
											"end": 5943,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 5930,
											"end": 5952,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5909,
											"end": 5962,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "189"
										},
										{
											"begin": 5909,
											"end": 5962,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 5909,
											"end": 5962,
											"name": "tag",
											"source": 15,
											"value": "248"
										},
										{
											"begin": 5909,
											"end": 5962,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5899,
											"end": 5962,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 5899,
											"end": 5962,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5854,
											"end": 5972,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6011,
											"end": 6013,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 6037,
											"end": 6090,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "249"
										},
										{
											"begin": 6082,
											"end": 6089,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 6073,
											"end": 6079,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6062,
											"end": 6071,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 6058,
											"end": 6080,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6037,
											"end": 6090,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "178"
										},
										{
											"begin": 6037,
											"end": 6090,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 6037,
											"end": 6090,
											"name": "tag",
											"source": 15,
											"value": "249"
										},
										{
											"begin": 6037,
											"end": 6090,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6027,
											"end": 6090,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 6027,
											"end": 6090,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5982,
											"end": 6100,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6139,
											"end": 6141,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 6165,
											"end": 6218,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "250"
										},
										{
											"begin": 6210,
											"end": 6217,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 6201,
											"end": 6207,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6190,
											"end": 6199,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 6186,
											"end": 6208,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6165,
											"end": 6218,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "178"
										},
										{
											"begin": 6165,
											"end": 6218,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 6165,
											"end": 6218,
											"name": "tag",
											"source": 15,
											"value": "250"
										},
										{
											"begin": 6165,
											"end": 6218,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6155,
											"end": 6218,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 6155,
											"end": 6218,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6110,
											"end": 6228,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6295,
											"end": 6298,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 6284,
											"end": 6293,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 6280,
											"end": 6299,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6267,
											"end": 6300,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 6327,
											"end": 6345,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6319,
											"end": 6325,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6316,
											"end": 6346,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 6313,
											"end": 6430,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 6313,
											"end": 6430,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "251"
										},
										{
											"begin": 6313,
											"end": 6430,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 6349,
											"end": 6428,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "252"
										},
										{
											"begin": 6349,
											"end": 6428,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "227"
										},
										{
											"begin": 6349,
											"end": 6428,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 6349,
											"end": 6428,
											"name": "tag",
											"source": 15,
											"value": "252"
										},
										{
											"begin": 6349,
											"end": 6428,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6313,
											"end": 6430,
											"name": "tag",
											"source": 15,
											"value": "251"
										},
										{
											"begin": 6313,
											"end": 6430,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6454,
											"end": 6516,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "253"
										},
										{
											"begin": 6508,
											"end": 6515,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 6499,
											"end": 6505,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6488,
											"end": 6497,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 6484,
											"end": 6506,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6454,
											"end": 6516,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "203"
										},
										{
											"begin": 6454,
											"end": 6516,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 6454,
											"end": 6516,
											"name": "tag",
											"source": 15,
											"value": "253"
										},
										{
											"begin": 6454,
											"end": 6516,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6444,
											"end": 6516,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6444,
											"end": 6516,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6238,
											"end": 6526,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5444,
											"end": 6533,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 5444,
											"end": 6533,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 5444,
											"end": 6533,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5444,
											"end": 6533,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 5444,
											"end": 6533,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 5444,
											"end": 6533,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5444,
											"end": 6533,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 5444,
											"end": 6533,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5444,
											"end": 6533,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 6539,
											"end": 7013,
											"name": "tag",
											"source": 15,
											"value": "27"
										},
										{
											"begin": 6539,
											"end": 7013,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6607,
											"end": 6613,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 6664,
											"end": 6666,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 6652,
											"end": 6661,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 6643,
											"end": 6650,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 6639,
											"end": 6662,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 6635,
											"end": 6667,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 6632,
											"end": 6751,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 6632,
											"end": 6751,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "255"
										},
										{
											"begin": 6632,
											"end": 6751,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 6670,
											"end": 6749,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "256"
										},
										{
											"begin": 6670,
											"end": 6749,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "217"
										},
										{
											"begin": 6670,
											"end": 6749,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 6670,
											"end": 6749,
											"name": "tag",
											"source": 15,
											"value": "256"
										},
										{
											"begin": 6670,
											"end": 6749,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6632,
											"end": 6751,
											"name": "tag",
											"source": 15,
											"value": "255"
										},
										{
											"begin": 6632,
											"end": 6751,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6790,
											"end": 6791,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6815,
											"end": 6868,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "257"
										},
										{
											"begin": 6860,
											"end": 6867,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 6851,
											"end": 6857,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6840,
											"end": 6849,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 6836,
											"end": 6858,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6815,
											"end": 6868,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "189"
										},
										{
											"begin": 6815,
											"end": 6868,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 6815,
											"end": 6868,
											"name": "tag",
											"source": 15,
											"value": "257"
										},
										{
											"begin": 6815,
											"end": 6868,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6805,
											"end": 6868,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 6805,
											"end": 6868,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6761,
											"end": 6878,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6917,
											"end": 6919,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 6943,
											"end": 6996,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "258"
										},
										{
											"begin": 6988,
											"end": 6995,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 6979,
											"end": 6985,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6968,
											"end": 6977,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 6964,
											"end": 6986,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6943,
											"end": 6996,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "178"
										},
										{
											"begin": 6943,
											"end": 6996,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 6943,
											"end": 6996,
											"name": "tag",
											"source": 15,
											"value": "258"
										},
										{
											"begin": 6943,
											"end": 6996,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6933,
											"end": 6996,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6933,
											"end": 6996,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6888,
											"end": 7006,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6539,
											"end": 7013,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 6539,
											"end": 7013,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6539,
											"end": 7013,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 6539,
											"end": 7013,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6539,
											"end": 7013,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6539,
											"end": 7013,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 7019,
											"end": 7346,
											"name": "tag",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 7019,
											"end": 7346,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7077,
											"end": 7083,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7126,
											"end": 7128,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 7114,
											"end": 7123,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7105,
											"end": 7112,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 7101,
											"end": 7124,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 7097,
											"end": 7129,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 7094,
											"end": 7213,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 7094,
											"end": 7213,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "260"
										},
										{
											"begin": 7094,
											"end": 7213,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 7132,
											"end": 7211,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "261"
										},
										{
											"begin": 7132,
											"end": 7211,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "217"
										},
										{
											"begin": 7132,
											"end": 7211,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 7132,
											"end": 7211,
											"name": "tag",
											"source": 15,
											"value": "261"
										},
										{
											"begin": 7132,
											"end": 7211,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7094,
											"end": 7213,
											"name": "tag",
											"source": 15,
											"value": "260"
										},
										{
											"begin": 7094,
											"end": 7213,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7252,
											"end": 7253,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7277,
											"end": 7329,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "262"
										},
										{
											"begin": 7321,
											"end": 7328,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 7312,
											"end": 7318,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7301,
											"end": 7310,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 7297,
											"end": 7319,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7277,
											"end": 7329,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "199"
										},
										{
											"begin": 7277,
											"end": 7329,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 7277,
											"end": 7329,
											"name": "tag",
											"source": 15,
											"value": "262"
										},
										{
											"begin": 7277,
											"end": 7329,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7267,
											"end": 7329,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 7267,
											"end": 7329,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7223,
											"end": 7339,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7019,
											"end": 7346,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 7019,
											"end": 7346,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 7019,
											"end": 7346,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7019,
											"end": 7346,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7019,
											"end": 7346,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 7352,
											"end": 7703,
											"name": "tag",
											"source": 15,
											"value": "156"
										},
										{
											"begin": 7352,
											"end": 7703,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7422,
											"end": 7428,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7471,
											"end": 7473,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 7459,
											"end": 7468,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7450,
											"end": 7457,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 7446,
											"end": 7469,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 7442,
											"end": 7474,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 7439,
											"end": 7558,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 7439,
											"end": 7558,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "264"
										},
										{
											"begin": 7439,
											"end": 7558,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 7477,
											"end": 7556,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "265"
										},
										{
											"begin": 7477,
											"end": 7556,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "217"
										},
										{
											"begin": 7477,
											"end": 7556,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 7477,
											"end": 7556,
											"name": "tag",
											"source": 15,
											"value": "265"
										},
										{
											"begin": 7477,
											"end": 7556,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7439,
											"end": 7558,
											"name": "tag",
											"source": 15,
											"value": "264"
										},
										{
											"begin": 7439,
											"end": 7558,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7597,
											"end": 7598,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "266"
										},
										{
											"begin": 7678,
											"end": 7685,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 7669,
											"end": 7675,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7658,
											"end": 7667,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 7654,
											"end": 7676,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "211"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "tag",
											"source": 15,
											"value": "266"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7612,
											"end": 7686,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 7612,
											"end": 7686,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7568,
											"end": 7696,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7352,
											"end": 7703,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 7352,
											"end": 7703,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 7352,
											"end": 7703,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7352,
											"end": 7703,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7352,
											"end": 7703,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 7709,
											"end": 7827,
											"name": "tag",
											"source": 15,
											"value": "267"
										},
										{
											"begin": 7709,
											"end": 7827,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7796,
											"end": 7820,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "269"
										},
										{
											"begin": 7814,
											"end": 7819,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7796,
											"end": 7820,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "270"
										},
										{
											"begin": 7796,
											"end": 7820,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 7796,
											"end": 7820,
											"name": "tag",
											"source": 15,
											"value": "269"
										},
										{
											"begin": 7796,
											"end": 7820,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7791,
											"end": 7794,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7784,
											"end": 7821,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7709,
											"end": 7827,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7709,
											"end": 7827,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7709,
											"end": 7827,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 7833,
											"end": 7942,
											"name": "tag",
											"source": 15,
											"value": "271"
										},
										{
											"begin": 7833,
											"end": 7942,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7914,
											"end": 7935,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "273"
										},
										{
											"begin": 7929,
											"end": 7934,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7914,
											"end": 7935,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "274"
										},
										{
											"begin": 7914,
											"end": 7935,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 7914,
											"end": 7935,
											"name": "tag",
											"source": 15,
											"value": "273"
										},
										{
											"begin": 7914,
											"end": 7935,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7909,
											"end": 7912,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7902,
											"end": 7936,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7833,
											"end": 7942,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7833,
											"end": 7942,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7833,
											"end": 7942,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 7948,
											"end": 8063,
											"name": "tag",
											"source": 15,
											"value": "275"
										},
										{
											"begin": 7948,
											"end": 8063,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8033,
											"end": 8056,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "277"
										},
										{
											"begin": 8050,
											"end": 8055,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8033,
											"end": 8056,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "278"
										},
										{
											"begin": 8033,
											"end": 8056,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 8033,
											"end": 8056,
											"name": "tag",
											"source": 15,
											"value": "277"
										},
										{
											"begin": 8033,
											"end": 8056,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8028,
											"end": 8031,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8021,
											"end": 8057,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7948,
											"end": 8063,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7948,
											"end": 8063,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7948,
											"end": 8063,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 8069,
											"end": 8435,
											"name": "tag",
											"source": 15,
											"value": "279"
										},
										{
											"begin": 8069,
											"end": 8435,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8211,
											"end": 8214,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8232,
											"end": 8299,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "281"
										},
										{
											"begin": 8296,
											"end": 8298,
											"name": "PUSH",
											"source": 15,
											"value": "1E"
										},
										{
											"begin": 8291,
											"end": 8294,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 8232,
											"end": 8299,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "282"
										},
										{
											"begin": 8232,
											"end": 8299,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 8232,
											"end": 8299,
											"name": "tag",
											"source": 15,
											"value": "281"
										},
										{
											"begin": 8232,
											"end": 8299,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8225,
											"end": 8299,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 8225,
											"end": 8299,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8308,
											"end": 8401,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "283"
										},
										{
											"begin": 8397,
											"end": 8400,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8308,
											"end": 8401,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "284"
										},
										{
											"begin": 8308,
											"end": 8401,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 8308,
											"end": 8401,
											"name": "tag",
											"source": 15,
											"value": "283"
										},
										{
											"begin": 8308,
											"end": 8401,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8426,
											"end": 8428,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 8421,
											"end": 8424,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8417,
											"end": 8429,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8410,
											"end": 8429,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8410,
											"end": 8429,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8069,
											"end": 8435,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 8069,
											"end": 8435,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8069,
											"end": 8435,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8069,
											"end": 8435,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 8441,
											"end": 8807,
											"name": "tag",
											"source": 15,
											"value": "285"
										},
										{
											"begin": 8441,
											"end": 8807,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8583,
											"end": 8586,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8604,
											"end": 8671,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "287"
										},
										{
											"begin": 8668,
											"end": 8670,
											"name": "PUSH",
											"source": 15,
											"value": "1E"
										},
										{
											"begin": 8663,
											"end": 8666,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 8604,
											"end": 8671,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "282"
										},
										{
											"begin": 8604,
											"end": 8671,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 8604,
											"end": 8671,
											"name": "tag",
											"source": 15,
											"value": "287"
										},
										{
											"begin": 8604,
											"end": 8671,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8597,
											"end": 8671,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 8597,
											"end": 8671,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8680,
											"end": 8773,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "288"
										},
										{
											"begin": 8769,
											"end": 8772,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8680,
											"end": 8773,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "289"
										},
										{
											"begin": 8680,
											"end": 8773,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 8680,
											"end": 8773,
											"name": "tag",
											"source": 15,
											"value": "288"
										},
										{
											"begin": 8680,
											"end": 8773,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8798,
											"end": 8800,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 8793,
											"end": 8796,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8789,
											"end": 8801,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8782,
											"end": 8801,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8782,
											"end": 8801,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8441,
											"end": 8807,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 8441,
											"end": 8807,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8441,
											"end": 8807,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8441,
											"end": 8807,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 8813,
											"end": 9179,
											"name": "tag",
											"source": 15,
											"value": "290"
										},
										{
											"begin": 8813,
											"end": 9179,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8955,
											"end": 8958,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8976,
											"end": 9043,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "292"
										},
										{
											"begin": 9040,
											"end": 9042,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 9035,
											"end": 9038,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 8976,
											"end": 9043,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "282"
										},
										{
											"begin": 8976,
											"end": 9043,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 8976,
											"end": 9043,
											"name": "tag",
											"source": 15,
											"value": "292"
										},
										{
											"begin": 8976,
											"end": 9043,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8969,
											"end": 9043,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 8969,
											"end": 9043,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9052,
											"end": 9145,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "293"
										},
										{
											"begin": 9141,
											"end": 9144,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9052,
											"end": 9145,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "294"
										},
										{
											"begin": 9052,
											"end": 9145,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 9052,
											"end": 9145,
											"name": "tag",
											"source": 15,
											"value": "293"
										},
										{
											"begin": 9052,
											"end": 9145,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9170,
											"end": 9172,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 9165,
											"end": 9168,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9161,
											"end": 9173,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9154,
											"end": 9173,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9154,
											"end": 9173,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8813,
											"end": 9179,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 8813,
											"end": 9179,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8813,
											"end": 9179,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8813,
											"end": 9179,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 9185,
											"end": 9551,
											"name": "tag",
											"source": 15,
											"value": "295"
										},
										{
											"begin": 9185,
											"end": 9551,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9327,
											"end": 9330,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9348,
											"end": 9415,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "297"
										},
										{
											"begin": 9412,
											"end": 9414,
											"name": "PUSH",
											"source": 15,
											"value": "1C"
										},
										{
											"begin": 9407,
											"end": 9410,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 9348,
											"end": 9415,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "282"
										},
										{
											"begin": 9348,
											"end": 9415,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 9348,
											"end": 9415,
											"name": "tag",
											"source": 15,
											"value": "297"
										},
										{
											"begin": 9348,
											"end": 9415,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9341,
											"end": 9415,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 9341,
											"end": 9415,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9424,
											"end": 9517,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "298"
										},
										{
											"begin": 9513,
											"end": 9516,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9424,
											"end": 9517,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "299"
										},
										{
											"begin": 9424,
											"end": 9517,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 9424,
											"end": 9517,
											"name": "tag",
											"source": 15,
											"value": "298"
										},
										{
											"begin": 9424,
											"end": 9517,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9542,
											"end": 9544,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 9537,
											"end": 9540,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9533,
											"end": 9545,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9526,
											"end": 9545,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9526,
											"end": 9545,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9185,
											"end": 9551,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 9185,
											"end": 9551,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9185,
											"end": 9551,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9185,
											"end": 9551,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 9557,
											"end": 9923,
											"name": "tag",
											"source": 15,
											"value": "300"
										},
										{
											"begin": 9557,
											"end": 9923,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9699,
											"end": 9702,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9720,
											"end": 9787,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "302"
										},
										{
											"begin": 9784,
											"end": 9786,
											"name": "PUSH",
											"source": 15,
											"value": "2E"
										},
										{
											"begin": 9779,
											"end": 9782,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 9720,
											"end": 9787,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "282"
										},
										{
											"begin": 9720,
											"end": 9787,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 9720,
											"end": 9787,
											"name": "tag",
											"source": 15,
											"value": "302"
										},
										{
											"begin": 9720,
											"end": 9787,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9713,
											"end": 9787,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 9713,
											"end": 9787,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9796,
											"end": 9889,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "303"
										},
										{
											"begin": 9885,
											"end": 9888,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9796,
											"end": 9889,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "304"
										},
										{
											"begin": 9796,
											"end": 9889,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 9796,
											"end": 9889,
											"name": "tag",
											"source": 15,
											"value": "303"
										},
										{
											"begin": 9796,
											"end": 9889,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9914,
											"end": 9916,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 9909,
											"end": 9912,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9905,
											"end": 9917,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9898,
											"end": 9917,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9898,
											"end": 9917,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9557,
											"end": 9923,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 9557,
											"end": 9923,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9557,
											"end": 9923,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9557,
											"end": 9923,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 9929,
											"end": 10291,
											"name": "tag",
											"source": 15,
											"value": "305"
										},
										{
											"begin": 9929,
											"end": 10291,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10070,
											"end": 10073,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10091,
											"end": 10156,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "307"
										},
										{
											"begin": 10154,
											"end": 10155,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10149,
											"end": 10152,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 10091,
											"end": 10156,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "308"
										},
										{
											"begin": 10091,
											"end": 10156,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 10091,
											"end": 10156,
											"name": "tag",
											"source": 15,
											"value": "307"
										},
										{
											"begin": 10091,
											"end": 10156,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10084,
											"end": 10156,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 10084,
											"end": 10156,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10165,
											"end": 10258,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "309"
										},
										{
											"begin": 10254,
											"end": 10257,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10165,
											"end": 10258,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "310"
										},
										{
											"begin": 10165,
											"end": 10258,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 10165,
											"end": 10258,
											"name": "tag",
											"source": 15,
											"value": "309"
										},
										{
											"begin": 10165,
											"end": 10258,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10283,
											"end": 10284,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10278,
											"end": 10281,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10274,
											"end": 10285,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10267,
											"end": 10285,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 10267,
											"end": 10285,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9929,
											"end": 10291,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 9929,
											"end": 10291,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9929,
											"end": 10291,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9929,
											"end": 10291,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 10297,
											"end": 10415,
											"name": "tag",
											"source": 15,
											"value": "311"
										},
										{
											"begin": 10297,
											"end": 10415,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10384,
											"end": 10408,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "313"
										},
										{
											"begin": 10402,
											"end": 10407,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 10384,
											"end": 10408,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "314"
										},
										{
											"begin": 10384,
											"end": 10408,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 10384,
											"end": 10408,
											"name": "tag",
											"source": 15,
											"value": "313"
										},
										{
											"begin": 10384,
											"end": 10408,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10379,
											"end": 10382,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10372,
											"end": 10409,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 10297,
											"end": 10415,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10297,
											"end": 10415,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10297,
											"end": 10415,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 10421,
											"end": 10643,
											"name": "tag",
											"source": 15,
											"value": "54"
										},
										{
											"begin": 10421,
											"end": 10643,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10514,
											"end": 10518,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10552,
											"end": 10554,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 10541,
											"end": 10550,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10537,
											"end": 10555,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10529,
											"end": 10555,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 10529,
											"end": 10555,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10565,
											"end": 10636,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "316"
										},
										{
											"begin": 10633,
											"end": 10634,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10622,
											"end": 10631,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 10618,
											"end": 10635,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10609,
											"end": 10615,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 10565,
											"end": 10636,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "267"
										},
										{
											"begin": 10565,
											"end": 10636,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 10565,
											"end": 10636,
											"name": "tag",
											"source": 15,
											"value": "316"
										},
										{
											"begin": 10565,
											"end": 10636,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10421,
											"end": 10643,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 10421,
											"end": 10643,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 10421,
											"end": 10643,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10421,
											"end": 10643,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10421,
											"end": 10643,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 10649,
											"end": 11091,
											"name": "tag",
											"source": 15,
											"value": "141"
										},
										{
											"begin": 10649,
											"end": 11091,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10798,
											"end": 10802,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10836,
											"end": 10838,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 10825,
											"end": 10834,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10821,
											"end": 10839,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10813,
											"end": 10839,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 10813,
											"end": 10839,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10849,
											"end": 10920,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "318"
										},
										{
											"begin": 10917,
											"end": 10918,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10906,
											"end": 10915,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 10902,
											"end": 10919,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10893,
											"end": 10899,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 10849,
											"end": 10920,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "267"
										},
										{
											"begin": 10849,
											"end": 10920,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 10849,
											"end": 10920,
											"name": "tag",
											"source": 15,
											"value": "318"
										},
										{
											"begin": 10849,
											"end": 10920,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10930,
											"end": 11002,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "319"
										},
										{
											"begin": 10998,
											"end": 11000,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 10987,
											"end": 10996,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 10983,
											"end": 11001,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10974,
											"end": 10980,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 10930,
											"end": 11002,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "267"
										},
										{
											"begin": 10930,
											"end": 11002,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 10930,
											"end": 11002,
											"name": "tag",
											"source": 15,
											"value": "319"
										},
										{
											"begin": 10930,
											"end": 11002,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11012,
											"end": 11084,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "320"
										},
										{
											"begin": 11080,
											"end": 11082,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 11069,
											"end": 11078,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 11065,
											"end": 11083,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11056,
											"end": 11062,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 11012,
											"end": 11084,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "311"
										},
										{
											"begin": 11012,
											"end": 11084,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 11012,
											"end": 11084,
											"name": "tag",
											"source": 15,
											"value": "320"
										},
										{
											"begin": 11012,
											"end": 11084,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10649,
											"end": 11091,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 10649,
											"end": 11091,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 10649,
											"end": 11091,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10649,
											"end": 11091,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10649,
											"end": 11091,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10649,
											"end": 11091,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10649,
											"end": 11091,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 11097,
											"end": 11956,
											"name": "tag",
											"source": 15,
											"value": "159"
										},
										{
											"begin": 11097,
											"end": 11956,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11374,
											"end": 11378,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11412,
											"end": 11415,
											"name": "PUSH",
											"source": 15,
											"value": "A0"
										},
										{
											"begin": 11401,
											"end": 11410,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11397,
											"end": 11416,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11389,
											"end": 11416,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 11389,
											"end": 11416,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11426,
											"end": 11497,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "322"
										},
										{
											"begin": 11494,
											"end": 11495,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11483,
											"end": 11492,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 11479,
											"end": 11496,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11470,
											"end": 11476,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 11426,
											"end": 11497,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "267"
										},
										{
											"begin": 11426,
											"end": 11497,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 11426,
											"end": 11497,
											"name": "tag",
											"source": 15,
											"value": "322"
										},
										{
											"begin": 11426,
											"end": 11497,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11507,
											"end": 11579,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "323"
										},
										{
											"begin": 11575,
											"end": 11577,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 11564,
											"end": 11573,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 11560,
											"end": 11578,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11551,
											"end": 11557,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 11507,
											"end": 11579,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "267"
										},
										{
											"begin": 11507,
											"end": 11579,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 11507,
											"end": 11579,
											"name": "tag",
											"source": 15,
											"value": "323"
										},
										{
											"begin": 11507,
											"end": 11579,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11589,
											"end": 11661,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "324"
										},
										{
											"begin": 11657,
											"end": 11659,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 11646,
											"end": 11655,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 11642,
											"end": 11660,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11633,
											"end": 11639,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 11589,
											"end": 11661,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "311"
										},
										{
											"begin": 11589,
											"end": 11661,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 11589,
											"end": 11661,
											"name": "tag",
											"source": 15,
											"value": "324"
										},
										{
											"begin": 11589,
											"end": 11661,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11671,
											"end": 11743,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "325"
										},
										{
											"begin": 11739,
											"end": 11741,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 11728,
											"end": 11737,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 11724,
											"end": 11742,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11715,
											"end": 11721,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 11671,
											"end": 11743,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "311"
										},
										{
											"begin": 11671,
											"end": 11743,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 11671,
											"end": 11743,
											"name": "tag",
											"source": 15,
											"value": "325"
										},
										{
											"begin": 11671,
											"end": 11743,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11791,
											"end": 11800,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 11785,
											"end": 11789,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 11781,
											"end": 11801,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 11775,
											"end": 11778,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 11764,
											"end": 11773,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 11760,
											"end": 11779,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11753,
											"end": 11802,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 11819,
											"end": 11949,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "326"
										},
										{
											"begin": 11944,
											"end": 11948,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 11819,
											"end": 11949,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "305"
										},
										{
											"begin": 11819,
											"end": 11949,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 11819,
											"end": 11949,
											"name": "tag",
											"source": 15,
											"value": "326"
										},
										{
											"begin": 11819,
											"end": 11949,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11811,
											"end": 11949,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 11811,
											"end": 11949,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11097,
											"end": 11956,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 11097,
											"end": 11956,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 11097,
											"end": 11956,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11097,
											"end": 11956,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11097,
											"end": 11956,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11097,
											"end": 11956,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11097,
											"end": 11956,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11097,
											"end": 11956,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 11962,
											"end": 12294,
											"name": "tag",
											"source": 15,
											"value": "151"
										},
										{
											"begin": 11962,
											"end": 12294,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12083,
											"end": 12087,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12121,
											"end": 12123,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 12110,
											"end": 12119,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12106,
											"end": 12124,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12098,
											"end": 12124,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12098,
											"end": 12124,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12134,
											"end": 12205,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "328"
										},
										{
											"begin": 12202,
											"end": 12203,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12191,
											"end": 12200,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 12187,
											"end": 12204,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12178,
											"end": 12184,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 12134,
											"end": 12205,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "267"
										},
										{
											"begin": 12134,
											"end": 12205,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 12134,
											"end": 12205,
											"name": "tag",
											"source": 15,
											"value": "328"
										},
										{
											"begin": 12134,
											"end": 12205,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12215,
											"end": 12287,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "329"
										},
										{
											"begin": 12283,
											"end": 12285,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 12272,
											"end": 12281,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 12268,
											"end": 12286,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12259,
											"end": 12265,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 12215,
											"end": 12287,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "311"
										},
										{
											"begin": 12215,
											"end": 12287,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 12215,
											"end": 12287,
											"name": "tag",
											"source": 15,
											"value": "329"
										},
										{
											"begin": 12215,
											"end": 12287,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11962,
											"end": 12294,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 11962,
											"end": 12294,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 11962,
											"end": 12294,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11962,
											"end": 12294,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11962,
											"end": 12294,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11962,
											"end": 12294,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 12300,
											"end": 12510,
											"name": "tag",
											"source": 15,
											"value": "23"
										},
										{
											"begin": 12300,
											"end": 12510,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12387,
											"end": 12391,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12425,
											"end": 12427,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 12414,
											"end": 12423,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12410,
											"end": 12428,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12402,
											"end": 12428,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12402,
											"end": 12428,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12438,
											"end": 12503,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "331"
										},
										{
											"begin": 12500,
											"end": 12501,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12489,
											"end": 12498,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 12485,
											"end": 12502,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12476,
											"end": 12482,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 12438,
											"end": 12503,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "271"
										},
										{
											"begin": 12438,
											"end": 12503,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 12438,
											"end": 12503,
											"name": "tag",
											"source": 15,
											"value": "331"
										},
										{
											"begin": 12438,
											"end": 12503,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12300,
											"end": 12510,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 12300,
											"end": 12510,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 12300,
											"end": 12510,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12300,
											"end": 12510,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12300,
											"end": 12510,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 12516,
											"end": 12734,
											"name": "tag",
											"source": 15,
											"value": "35"
										},
										{
											"begin": 12516,
											"end": 12734,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12607,
											"end": 12611,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12645,
											"end": 12647,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 12634,
											"end": 12643,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12630,
											"end": 12648,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12622,
											"end": 12648,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12622,
											"end": 12648,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12658,
											"end": 12727,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "333"
										},
										{
											"begin": 12724,
											"end": 12725,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12713,
											"end": 12722,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 12709,
											"end": 12726,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12700,
											"end": 12706,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 12658,
											"end": 12727,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "275"
										},
										{
											"begin": 12658,
											"end": 12727,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 12658,
											"end": 12727,
											"name": "tag",
											"source": 15,
											"value": "333"
										},
										{
											"begin": 12658,
											"end": 12727,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12516,
											"end": 12734,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 12516,
											"end": 12734,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 12516,
											"end": 12734,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12516,
											"end": 12734,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12516,
											"end": 12734,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 12740,
											"end": 13159,
											"name": "tag",
											"source": 15,
											"value": "127"
										},
										{
											"begin": 12740,
											"end": 13159,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12906,
											"end": 12910,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12944,
											"end": 12946,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 12933,
											"end": 12942,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12929,
											"end": 12947,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12921,
											"end": 12947,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12921,
											"end": 12947,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12993,
											"end": 13002,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12987,
											"end": 12991,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12983,
											"end": 13003,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 12979,
											"end": 12980,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12968,
											"end": 12977,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 12964,
											"end": 12981,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12957,
											"end": 13004,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 13021,
											"end": 13152,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "335"
										},
										{
											"begin": 13147,
											"end": 13151,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 13021,
											"end": 13152,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "279"
										},
										{
											"begin": 13021,
											"end": 13152,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 13021,
											"end": 13152,
											"name": "tag",
											"source": 15,
											"value": "335"
										},
										{
											"begin": 13021,
											"end": 13152,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13013,
											"end": 13152,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 13013,
											"end": 13152,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12740,
											"end": 13159,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 12740,
											"end": 13159,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12740,
											"end": 13159,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12740,
											"end": 13159,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 13165,
											"end": 13584,
											"name": "tag",
											"source": 15,
											"value": "124"
										},
										{
											"begin": 13165,
											"end": 13584,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13331,
											"end": 13335,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 13369,
											"end": 13371,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 13358,
											"end": 13367,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13354,
											"end": 13372,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13346,
											"end": 13372,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 13346,
											"end": 13372,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13418,
											"end": 13427,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 13412,
											"end": 13416,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 13408,
											"end": 13428,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 13404,
											"end": 13405,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 13393,
											"end": 13402,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 13389,
											"end": 13406,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13382,
											"end": 13429,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 13446,
											"end": 13577,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "337"
										},
										{
											"begin": 13572,
											"end": 13576,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 13446,
											"end": 13577,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "285"
										},
										{
											"begin": 13446,
											"end": 13577,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 13446,
											"end": 13577,
											"name": "tag",
											"source": 15,
											"value": "337"
										},
										{
											"begin": 13446,
											"end": 13577,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13438,
											"end": 13577,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 13438,
											"end": 13577,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13165,
											"end": 13584,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 13165,
											"end": 13584,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 13165,
											"end": 13584,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13165,
											"end": 13584,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 13590,
											"end": 14009,
											"name": "tag",
											"source": 15,
											"value": "82"
										},
										{
											"begin": 13590,
											"end": 14009,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13756,
											"end": 13760,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 13794,
											"end": 13796,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 13783,
											"end": 13792,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13779,
											"end": 13797,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13771,
											"end": 13797,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 13771,
											"end": 13797,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13843,
											"end": 13852,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 13837,
											"end": 13841,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 13833,
											"end": 13853,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 13829,
											"end": 13830,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 13818,
											"end": 13827,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 13814,
											"end": 13831,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13807,
											"end": 13854,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 13871,
											"end": 14002,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "339"
										},
										{
											"begin": 13997,
											"end": 14001,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 13871,
											"end": 14002,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "290"
										},
										{
											"begin": 13871,
											"end": 14002,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 13871,
											"end": 14002,
											"name": "tag",
											"source": 15,
											"value": "339"
										},
										{
											"begin": 13871,
											"end": 14002,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13863,
											"end": 14002,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 13863,
											"end": 14002,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13590,
											"end": 14009,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 13590,
											"end": 14009,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 13590,
											"end": 14009,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13590,
											"end": 14009,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 14015,
											"end": 14434,
											"name": "tag",
											"source": 15,
											"value": "133"
										},
										{
											"begin": 14015,
											"end": 14434,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14181,
											"end": 14185,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 14219,
											"end": 14221,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 14208,
											"end": 14217,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14204,
											"end": 14222,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14196,
											"end": 14222,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 14196,
											"end": 14222,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14268,
											"end": 14277,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 14262,
											"end": 14266,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 14258,
											"end": 14278,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 14254,
											"end": 14255,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 14243,
											"end": 14252,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 14239,
											"end": 14256,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14232,
											"end": 14279,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 14296,
											"end": 14427,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "341"
										},
										{
											"begin": 14422,
											"end": 14426,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 14296,
											"end": 14427,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "295"
										},
										{
											"begin": 14296,
											"end": 14427,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 14296,
											"end": 14427,
											"name": "tag",
											"source": 15,
											"value": "341"
										},
										{
											"begin": 14296,
											"end": 14427,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14288,
											"end": 14427,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 14288,
											"end": 14427,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14015,
											"end": 14434,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 14015,
											"end": 14434,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 14015,
											"end": 14434,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14015,
											"end": 14434,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 14440,
											"end": 14859,
											"name": "tag",
											"source": 15,
											"value": "130"
										},
										{
											"begin": 14440,
											"end": 14859,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14606,
											"end": 14610,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 14644,
											"end": 14646,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 14633,
											"end": 14642,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14629,
											"end": 14647,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14621,
											"end": 14647,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 14621,
											"end": 14647,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14693,
											"end": 14702,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 14687,
											"end": 14691,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 14683,
											"end": 14703,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 14679,
											"end": 14680,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 14668,
											"end": 14677,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 14664,
											"end": 14681,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14657,
											"end": 14704,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 14721,
											"end": 14852,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "343"
										},
										{
											"begin": 14847,
											"end": 14851,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 14721,
											"end": 14852,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "300"
										},
										{
											"begin": 14721,
											"end": 14852,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 14721,
											"end": 14852,
											"name": "tag",
											"source": 15,
											"value": "343"
										},
										{
											"begin": 14721,
											"end": 14852,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14713,
											"end": 14852,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 14713,
											"end": 14852,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14440,
											"end": 14859,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 14440,
											"end": 14859,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 14440,
											"end": 14859,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14440,
											"end": 14859,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 14865,
											"end": 14994,
											"name": "tag",
											"source": 15,
											"value": "170"
										},
										{
											"begin": 14865,
											"end": 14994,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14899,
											"end": 14905,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 14926,
											"end": 14946,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "345"
										},
										{
											"begin": 14926,
											"end": 14946,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "346"
										},
										{
											"begin": 14926,
											"end": 14946,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 14926,
											"end": 14946,
											"name": "tag",
											"source": 15,
											"value": "345"
										},
										{
											"begin": 14926,
											"end": 14946,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14916,
											"end": 14946,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 14916,
											"end": 14946,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14955,
											"end": 14988,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "347"
										},
										{
											"begin": 14983,
											"end": 14987,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14975,
											"end": 14981,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14955,
											"end": 14988,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "348"
										},
										{
											"begin": 14955,
											"end": 14988,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 14955,
											"end": 14988,
											"name": "tag",
											"source": 15,
											"value": "347"
										},
										{
											"begin": 14955,
											"end": 14988,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14865,
											"end": 14994,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 14865,
											"end": 14994,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 14865,
											"end": 14994,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14865,
											"end": 14994,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 15000,
											"end": 15075,
											"name": "tag",
											"source": 15,
											"value": "346"
										},
										{
											"begin": 15000,
											"end": 15075,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15033,
											"end": 15039,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 15066,
											"end": 15068,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 15060,
											"end": 15069,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 15050,
											"end": 15069,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 15050,
											"end": 15069,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15000,
											"end": 15075,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 15000,
											"end": 15075,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 15081,
											"end": 15392,
											"name": "tag",
											"source": 15,
											"value": "169"
										},
										{
											"begin": 15081,
											"end": 15392,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15158,
											"end": 15162,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 15248,
											"end": 15266,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15240,
											"end": 15246,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15237,
											"end": 15267,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 15234,
											"end": 15290,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 15234,
											"end": 15290,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "351"
										},
										{
											"begin": 15234,
											"end": 15290,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 15270,
											"end": 15288,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "352"
										},
										{
											"begin": 15270,
											"end": 15288,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "353"
										},
										{
											"begin": 15270,
											"end": 15288,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 15270,
											"end": 15288,
											"name": "tag",
											"source": 15,
											"value": "352"
										},
										{
											"begin": 15270,
											"end": 15288,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15234,
											"end": 15290,
											"name": "tag",
											"source": 15,
											"value": "351"
										},
										{
											"begin": 15234,
											"end": 15290,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15320,
											"end": 15324,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 15312,
											"end": 15318,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15308,
											"end": 15325,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 15300,
											"end": 15325,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 15300,
											"end": 15325,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15380,
											"end": 15384,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 15374,
											"end": 15378,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 15370,
											"end": 15385,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15362,
											"end": 15385,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 15362,
											"end": 15385,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15081,
											"end": 15392,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 15081,
											"end": 15392,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 15081,
											"end": 15392,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15081,
											"end": 15392,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 15398,
											"end": 15705,
											"name": "tag",
											"source": 15,
											"value": "183"
										},
										{
											"begin": 15398,
											"end": 15705,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15459,
											"end": 15463,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 15549,
											"end": 15567,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15541,
											"end": 15547,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15538,
											"end": 15568,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 15535,
											"end": 15591,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 15535,
											"end": 15591,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "355"
										},
										{
											"begin": 15535,
											"end": 15591,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 15571,
											"end": 15589,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "356"
										},
										{
											"begin": 15571,
											"end": 15589,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "353"
										},
										{
											"begin": 15571,
											"end": 15589,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 15571,
											"end": 15589,
											"name": "tag",
											"source": 15,
											"value": "356"
										},
										{
											"begin": 15571,
											"end": 15589,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15535,
											"end": 15591,
											"name": "tag",
											"source": 15,
											"value": "355"
										},
										{
											"begin": 15535,
											"end": 15591,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15609,
											"end": 15638,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "357"
										},
										{
											"begin": 15631,
											"end": 15637,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15609,
											"end": 15638,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "358"
										},
										{
											"begin": 15609,
											"end": 15638,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 15609,
											"end": 15638,
											"name": "tag",
											"source": 15,
											"value": "357"
										},
										{
											"begin": 15609,
											"end": 15638,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15601,
											"end": 15638,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 15601,
											"end": 15638,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15693,
											"end": 15697,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 15687,
											"end": 15691,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 15683,
											"end": 15698,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15675,
											"end": 15698,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 15675,
											"end": 15698,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15398,
											"end": 15705,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 15398,
											"end": 15705,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 15398,
											"end": 15705,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15398,
											"end": 15705,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 15711,
											"end": 15879,
											"name": "tag",
											"source": 15,
											"value": "308"
										},
										{
											"begin": 15711,
											"end": 15879,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15794,
											"end": 15805,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 15828,
											"end": 15834,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15823,
											"end": 15826,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15816,
											"end": 15835,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 15868,
											"end": 15872,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 15863,
											"end": 15866,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15859,
											"end": 15873,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15844,
											"end": 15873,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 15844,
											"end": 15873,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15711,
											"end": 15879,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 15711,
											"end": 15879,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 15711,
											"end": 15879,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15711,
											"end": 15879,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15711,
											"end": 15879,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 15885,
											"end": 16054,
											"name": "tag",
											"source": 15,
											"value": "282"
										},
										{
											"begin": 15885,
											"end": 16054,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15969,
											"end": 15980,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 16003,
											"end": 16009,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15998,
											"end": 16001,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15991,
											"end": 16010,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 16043,
											"end": 16047,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 16038,
											"end": 16041,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 16034,
											"end": 16048,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16019,
											"end": 16048,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 16019,
											"end": 16048,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15885,
											"end": 16054,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 15885,
											"end": 16054,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 15885,
											"end": 16054,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15885,
											"end": 16054,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15885,
											"end": 16054,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 16060,
											"end": 16156,
											"name": "tag",
											"source": 15,
											"value": "270"
										},
										{
											"begin": 16060,
											"end": 16156,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16097,
											"end": 16104,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 16126,
											"end": 16150,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "362"
										},
										{
											"begin": 16144,
											"end": 16149,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 16126,
											"end": 16150,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "363"
										},
										{
											"begin": 16126,
											"end": 16150,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 16126,
											"end": 16150,
											"name": "tag",
											"source": 15,
											"value": "362"
										},
										{
											"begin": 16126,
											"end": 16150,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16115,
											"end": 16150,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 16115,
											"end": 16150,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16060,
											"end": 16156,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 16060,
											"end": 16156,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 16060,
											"end": 16156,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16060,
											"end": 16156,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 16162,
											"end": 16252,
											"name": "tag",
											"source": 15,
											"value": "274"
										},
										{
											"begin": 16162,
											"end": 16252,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16196,
											"end": 16203,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 16239,
											"end": 16244,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 16232,
											"end": 16245,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 16225,
											"end": 16246,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 16214,
											"end": 16246,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 16214,
											"end": 16246,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16162,
											"end": 16252,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 16162,
											"end": 16252,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 16162,
											"end": 16252,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16162,
											"end": 16252,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 16258,
											"end": 16407,
											"name": "tag",
											"source": 15,
											"value": "278"
										},
										{
											"begin": 16258,
											"end": 16407,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16294,
											"end": 16301,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 16334,
											"end": 16400,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16327,
											"end": 16332,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 16323,
											"end": 16401,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 16312,
											"end": 16401,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 16312,
											"end": 16401,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16258,
											"end": 16407,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 16258,
											"end": 16407,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 16258,
											"end": 16407,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16258,
											"end": 16407,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 16413,
											"end": 16539,
											"name": "tag",
											"source": 15,
											"value": "363"
										},
										{
											"begin": 16413,
											"end": 16539,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16450,
											"end": 16457,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 16490,
											"end": 16532,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16483,
											"end": 16488,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 16479,
											"end": 16533,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 16468,
											"end": 16533,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 16468,
											"end": 16533,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16413,
											"end": 16539,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 16413,
											"end": 16539,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 16413,
											"end": 16539,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16413,
											"end": 16539,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 16545,
											"end": 16622,
											"name": "tag",
											"source": 15,
											"value": "314"
										},
										{
											"begin": 16545,
											"end": 16622,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16582,
											"end": 16589,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 16611,
											"end": 16616,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 16600,
											"end": 16616,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 16600,
											"end": 16616,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16545,
											"end": 16622,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 16545,
											"end": 16622,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 16545,
											"end": 16622,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16545,
											"end": 16622,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 16628,
											"end": 16782,
											"name": "tag",
											"source": 15,
											"value": "188"
										},
										{
											"begin": 16628,
											"end": 16782,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16712,
											"end": 16718,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 16707,
											"end": 16710,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 16702,
											"end": 16705,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 16689,
											"end": 16719,
											"name": "CALLDATACOPY",
											"source": 15
										},
										{
											"begin": 16774,
											"end": 16775,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 16765,
											"end": 16771,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 16760,
											"end": 16763,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 16756,
											"end": 16772,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16749,
											"end": 16776,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 16628,
											"end": 16782,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16628,
											"end": 16782,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16628,
											"end": 16782,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16628,
											"end": 16782,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 16788,
											"end": 17069,
											"name": "tag",
											"source": 15,
											"value": "348"
										},
										{
											"begin": 16788,
											"end": 17069,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16871,
											"end": 16898,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "370"
										},
										{
											"begin": 16893,
											"end": 16897,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 16871,
											"end": 16898,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "358"
										},
										{
											"begin": 16871,
											"end": 16898,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 16871,
											"end": 16898,
											"name": "tag",
											"source": 15,
											"value": "370"
										},
										{
											"begin": 16871,
											"end": 16898,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16863,
											"end": 16869,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 16859,
											"end": 16899,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 17001,
											"end": 17007,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 16989,
											"end": 16999,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 16986,
											"end": 17008,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 16965,
											"end": 16983,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16953,
											"end": 16963,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 16950,
											"end": 16984,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 16947,
											"end": 17009,
											"name": "OR",
											"source": 15
										},
										{
											"begin": 16944,
											"end": 17032,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 16944,
											"end": 17032,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "371"
										},
										{
											"begin": 16944,
											"end": 17032,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 17012,
											"end": 17030,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "372"
										},
										{
											"begin": 17012,
											"end": 17030,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "353"
										},
										{
											"begin": 17012,
											"end": 17030,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 17012,
											"end": 17030,
											"name": "tag",
											"source": 15,
											"value": "372"
										},
										{
											"begin": 17012,
											"end": 17030,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16944,
											"end": 17032,
											"name": "tag",
											"source": 15,
											"value": "371"
										},
										{
											"begin": 16944,
											"end": 17032,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17052,
											"end": 17062,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 17048,
											"end": 17050,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 17041,
											"end": 17063,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 16831,
											"end": 17069,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16788,
											"end": 17069,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16788,
											"end": 17069,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16788,
											"end": 17069,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 17075,
											"end": 17255,
											"name": "tag",
											"source": 15,
											"value": "353"
										},
										{
											"begin": 17075,
											"end": 17255,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17123,
											"end": 17200,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17120,
											"end": 17121,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 17113,
											"end": 17201,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 17220,
											"end": 17224,
											"name": "PUSH",
											"source": 15,
											"value": "41"
										},
										{
											"begin": 17217,
											"end": 17218,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 17210,
											"end": 17225,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 17244,
											"end": 17248,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 17241,
											"end": 17242,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 17234,
											"end": 17249,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 17261,
											"end": 17378,
											"name": "tag",
											"source": 15,
											"value": "197"
										},
										{
											"begin": 17261,
											"end": 17378,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17370,
											"end": 17371,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 17367,
											"end": 17368,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 17360,
											"end": 17372,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 17384,
											"end": 17501,
											"name": "tag",
											"source": 15,
											"value": "173"
										},
										{
											"begin": 17384,
											"end": 17501,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17493,
											"end": 17494,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 17490,
											"end": 17491,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 17483,
											"end": 17495,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 17507,
											"end": 17624,
											"name": "tag",
											"source": 15,
											"value": "186"
										},
										{
											"begin": 17507,
											"end": 17624,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17616,
											"end": 17617,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 17613,
											"end": 17614,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 17606,
											"end": 17618,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 17630,
											"end": 17747,
											"name": "tag",
											"source": 15,
											"value": "227"
										},
										{
											"begin": 17630,
											"end": 17747,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17739,
											"end": 17740,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 17736,
											"end": 17737,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 17729,
											"end": 17741,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 17753,
											"end": 17870,
											"name": "tag",
											"source": 15,
											"value": "217"
										},
										{
											"begin": 17753,
											"end": 17870,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17862,
											"end": 17863,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 17859,
											"end": 17860,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 17852,
											"end": 17864,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 17876,
											"end": 17978,
											"name": "tag",
											"source": 15,
											"value": "358"
										},
										{
											"begin": 17876,
											"end": 17978,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17917,
											"end": 17923,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 17968,
											"end": 17970,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 17964,
											"end": 17971,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 17959,
											"end": 17961,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 17952,
											"end": 17957,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 17948,
											"end": 17962,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 17944,
											"end": 17972,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 17934,
											"end": 17972,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 17934,
											"end": 17972,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17876,
											"end": 17978,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 17876,
											"end": 17978,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 17876,
											"end": 17978,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17876,
											"end": 17978,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 17984,
											"end": 18164,
											"name": "tag",
											"source": 15,
											"value": "284"
										},
										{
											"begin": 17984,
											"end": 18164,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18124,
											"end": 18156,
											"name": "PUSH",
											"source": 15,
											"value": "4261636B757020616464726573732063616E206E6F74206265207A65726F0000"
										},
										{
											"begin": 18120,
											"end": 18121,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 18112,
											"end": 18118,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 18108,
											"end": 18122,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 18101,
											"end": 18157,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 17984,
											"end": 18164,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17984,
											"end": 18164,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 18170,
											"end": 18350,
											"name": "tag",
											"source": 15,
											"value": "289"
										},
										{
											"begin": 18170,
											"end": 18350,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18310,
											"end": 18342,
											"name": "PUSH",
											"source": 15,
											"value": "53656E64657220616464726573732063616E206E6F74206265207A65726F0000"
										},
										{
											"begin": 18306,
											"end": 18307,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 18298,
											"end": 18304,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 18294,
											"end": 18308,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 18287,
											"end": 18343,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 18170,
											"end": 18350,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18170,
											"end": 18350,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 18356,
											"end": 18538,
											"name": "tag",
											"source": 15,
											"value": "294"
										},
										{
											"begin": 18356,
											"end": 18538,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18496,
											"end": 18530,
											"name": "PUSH",
											"source": 15,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 18492,
											"end": 18493,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 18484,
											"end": 18490,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 18480,
											"end": 18494,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 18473,
											"end": 18531,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 18356,
											"end": 18538,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18356,
											"end": 18538,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 18544,
											"end": 18722,
											"name": "tag",
											"source": 15,
											"value": "299"
										},
										{
											"begin": 18544,
											"end": 18722,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18684,
											"end": 18714,
											"name": "PUSH",
											"source": 15,
											"value": "436F6E747261637420616C726561647920696E697469616C697A656400000000"
										},
										{
											"begin": 18680,
											"end": 18681,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 18672,
											"end": 18678,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 18668,
											"end": 18682,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 18661,
											"end": 18715,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 18544,
											"end": 18722,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18544,
											"end": 18722,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 18728,
											"end": 18961,
											"name": "tag",
											"source": 15,
											"value": "304"
										},
										{
											"begin": 18728,
											"end": 18961,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18868,
											"end": 18902,
											"name": "PUSH",
											"source": 15,
											"value": "4261636B75702077616C6C65742063616E206E6F742062652073616D65206173"
										},
										{
											"begin": 18864,
											"end": 18865,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 18856,
											"end": 18862,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 18852,
											"end": 18866,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 18845,
											"end": 18903,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 18937,
											"end": 18953,
											"name": "PUSH",
											"source": 15,
											"value": "2073656E6465722077616C6C6574000000000000000000000000000000000000"
										},
										{
											"begin": 18932,
											"end": 18934,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 18924,
											"end": 18930,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 18920,
											"end": 18935,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 18913,
											"end": 18954,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 18728,
											"end": 18961,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18728,
											"end": 18961,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 18967,
											"end": 19081,
											"name": "tag",
											"source": 15,
											"value": "310"
										},
										{
											"begin": 18967,
											"end": 19081,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18967,
											"end": 19081,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18967,
											"end": 19081,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 19087,
											"end": 19209,
											"name": "tag",
											"source": 15,
											"value": "192"
										},
										{
											"begin": 19087,
											"end": 19209,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19160,
											"end": 19184,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "387"
										},
										{
											"begin": 19178,
											"end": 19183,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 19160,
											"end": 19184,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "270"
										},
										{
											"begin": 19160,
											"end": 19184,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 19160,
											"end": 19184,
											"name": "tag",
											"source": 15,
											"value": "387"
										},
										{
											"begin": 19160,
											"end": 19184,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19153,
											"end": 19158,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 19150,
											"end": 19185,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 19140,
											"end": 19203,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "388"
										},
										{
											"begin": 19140,
											"end": 19203,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 19199,
											"end": 19200,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 19196,
											"end": 19197,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 19189,
											"end": 19201,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 19140,
											"end": 19203,
											"name": "tag",
											"source": 15,
											"value": "388"
										},
										{
											"begin": 19140,
											"end": 19203,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19087,
											"end": 19209,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19087,
											"end": 19209,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 19215,
											"end": 19335,
											"name": "tag",
											"source": 15,
											"value": "202"
										},
										{
											"begin": 19215,
											"end": 19335,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19287,
											"end": 19310,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "390"
										},
										{
											"begin": 19304,
											"end": 19309,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 19287,
											"end": 19310,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "278"
										},
										{
											"begin": 19287,
											"end": 19310,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 19287,
											"end": 19310,
											"name": "tag",
											"source": 15,
											"value": "390"
										},
										{
											"begin": 19287,
											"end": 19310,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19280,
											"end": 19285,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 19277,
											"end": 19311,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 19267,
											"end": 19329,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "391"
										},
										{
											"begin": 19267,
											"end": 19329,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 19325,
											"end": 19326,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 19322,
											"end": 19323,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 19315,
											"end": 19327,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 19267,
											"end": 19329,
											"name": "tag",
											"source": 15,
											"value": "391"
										},
										{
											"begin": 19267,
											"end": 19329,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19215,
											"end": 19335,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19215,
											"end": 19335,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 19341,
											"end": 19463,
											"name": "tag",
											"source": 15,
											"value": "210"
										},
										{
											"begin": 19341,
											"end": 19463,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19414,
											"end": 19438,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "393"
										},
										{
											"begin": 19432,
											"end": 19437,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 19414,
											"end": 19438,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "314"
										},
										{
											"begin": 19414,
											"end": 19438,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 19414,
											"end": 19438,
											"name": "tag",
											"source": 15,
											"value": "393"
										},
										{
											"begin": 19414,
											"end": 19438,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19407,
											"end": 19412,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 19404,
											"end": 19439,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 19394,
											"end": 19457,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "394"
										},
										{
											"begin": 19394,
											"end": 19457,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 19453,
											"end": 19454,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 19450,
											"end": 19451,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 19443,
											"end": 19455,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 19394,
											"end": 19457,
											"name": "tag",
											"source": 15,
											"value": "394"
										},
										{
											"begin": 19394,
											"end": 19457,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19341,
											"end": 19463,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19341,
											"end": 19463,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"init(address,address)": "f09a4016",
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"onERC721Received(address,address,uint256,bytes)": "150b7a02",
							"owner()": "8da5cb5b",
							"sendERC1155FundsToBackupWallet(address,uint256)": "6354a2f7",
							"sendERC721FundsToBackupWallet(address,uint256)": "71b4bc99",
							"sendNativeFundsToBackupWallet()": "450b2ad7",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferERC721AssetsToWallet(address,uint256)": "027f81ed",
							"transferNativeAssetToWallet()": "8c7f807b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_backupWallet\",\"type\":\"address\"}],\"name\":\"init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"sendERC1155FundsToBackupWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"sendERC721FundsToBackupWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sendNativeFundsToBackupWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferERC721AssetsToWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"transferNativeAssetToWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Practice NFT.sol\":\"TwoFactor\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x8e93de94c9062ebc94fb7e2e3929b0781ac6a2b7772e2f7a59045861c93e5be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f920a631bf986c610fe573d3c70a2bb6f224f86f4a8550016470c7ee476c9ab5\",\"dweb:/ipfs/QmYzsyVMfnaREKHcHv5RPS8Xg5r1Q38E2SDsGBTnXeFWzb\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":{\"keccak256\":\"0x2e024ca51ce5abe16c0d34e6992a1104f356e2244eb4ccbec970435e8b3405e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a74009db3c6fc8db851ba69ddb6795b5c1ef1120c5a00fd1a8dc3a717dd9d519\",\"dweb:/ipfs/QmZMk8Yh2X3gPS51ckUVLEXjZUhMSEeGApnA53WtjvLb9h\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":{\"keccak256\":\"0x3dd5e1a66a56f30302108a1da97d677a42b1daa60e503696b2bcbbf3e4c95bcb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0808de0ae4918c664643c885ca7fa6503e8ef2bd75609dfc85152c0128a3422d\",\"dweb:/ipfs/QmNrhFC1XgBKuuxfahFeiwi1MCdu3FLNpHj2uStgmf4iJj\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4632c341a06ba5c079b51ca5a915efab4e6ab57735b37839b3e8365ff806a43e\",\"dweb:/ipfs/QmTHT3xHYed2wajEoA5qu7ii2BxLpPhQZHwAhtLK5Z7ANK\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x0d4de01fe5360c38b4ad2b0822a12722958428f5138a7ff47c1720eb6fa52bba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77724cecdfba8814632ab58737c2b0f2d4ad2d532bc614aee559b5593c1152f0\",\"dweb:/ipfs/QmUcE6gXyv7CQh4sUdcDABYKGTovTe1zLMZSEq95nkc3ph\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":{\"keccak256\":\"0x0108bf6a6ebd5f96678bed33a35947537263f96766131ee91461fb6485805028\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ae2d274bf3d56a6d49a9bbd0a4871c54997a82551eb3eb1c0c39dc98698ff8bf\",\"dweb:/ipfs/QmTT7ty5DPGAmRnx94Xu3TUDYGSPDVLN2bppJAjjedrg1e\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"Ownable.sol\":{\"keccak256\":\"0x27859030a47f274f647c726d7154207782f41c299a471ad984fb937a96726e9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://03dc74c9002f66b328d3cf2146f8684fe1a4574b771948933a39ecda1467ab89\",\"dweb:/ipfs/QmPJq3SLdXqcbaejBs6UxANXkaYryGwjBSixR2CcWzVgQw\"]},\"Practice NFT.sol\":{\"keccak256\":\"0xf5041062f66086789d93eac24827fdee7f91622107d46ab592e643c74048a339\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://233b4de3e9dc6a7c22e6e4586147e0192a4b26fd98ba479152ba331f8e016f5b\",\"dweb:/ipfs/QmYSVJRoZcjkSpPzSD9bxkNgWrZfkbGPVreqhq8Gd5M3pC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1071,
								"contract": "Practice NFT.sol:TwoFactor",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 1152,
								"contract": "Practice NFT.sol:TwoFactor",
								"label": "isInitialized",
								"offset": 20,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 1154,
								"contract": "Practice NFT.sol:TwoFactor",
								"label": "backupWallet",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
					"exportedSymbols": {
						"IERC1155": [
							121
						],
						"IERC165": [
							1063
						]
					},
					"id": 122,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "95:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 122,
							"sourceUnit": 1064,
							"src": "120:47:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1063,
										"src": "357:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "357:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "169:165:0",
								"text": " @dev Required interface of an ERC1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[EIP].\n _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 121,
							"linearizedBaseContracts": [
								121,
								1063
							],
							"name": "IERC1155",
							"nameLocation": "345:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 6,
										"nodeType": "StructuredDocumentation",
										"src": "371:121:0",
										"text": " @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
									},
									"id": 18,
									"name": "TransferSingle",
									"nameLocation": "503:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "534:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "518:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 7,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "518:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 10,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "560:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "544:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 9,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "544:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 12,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "582:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "566:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 11,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "566:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 14,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "594:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "586:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "586:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "606:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "598:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 15,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "598:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "517:95:0"
									},
									"src": "497:116:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 19,
										"nodeType": "StructuredDocumentation",
										"src": "619:144:0",
										"text": " @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."
									},
									"id": 33,
									"name": "TransferBatch",
									"nameLocation": "774:13:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "813:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "797:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 20,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "797:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 23,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "847:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "831:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 22,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "831:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 25,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "877:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "861:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 24,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "861:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"indexed": false,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "899:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "889:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 26,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "889:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 27,
													"nodeType": "ArrayTypeName",
													"src": "889:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 31,
												"indexed": false,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "922:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "912:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 29,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "912:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 30,
													"nodeType": "ArrayTypeName",
													"src": "912:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "787:147:0"
									},
									"src": "768:167:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 34,
										"nodeType": "StructuredDocumentation",
										"src": "941:147:0",
										"text": " @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."
									},
									"id": 42,
									"name": "ApprovalForAll",
									"nameLocation": "1099:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 36,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1130:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "1114:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 35,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1114:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1155:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "1139:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1139:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 40,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "1170:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "1165:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 39,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1165:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1113:66:0"
									},
									"src": "1093:87:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "1186:343:0",
										"text": " @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."
									},
									"id": 49,
									"name": "URI",
									"nameLocation": "1540:3:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1551:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 49,
												"src": "1544:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 44,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1544:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 47,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1574:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 49,
												"src": "1558:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 46,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1558:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1543:34:0"
									},
									"src": "1534:44:0"
								},
								{
									"documentation": {
										"id": 50,
										"nodeType": "StructuredDocumentation",
										"src": "1584:173:0",
										"text": " @dev Returns the amount of tokens of token type `id` owned by `account`.\n Requirements:\n - `account` cannot be the zero address."
									},
									"functionSelector": "00fdd58e",
									"id": 59,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1771:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1789:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "1781:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 51,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1781:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1806:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "1798:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 53,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1798:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1780:29:0"
									},
									"returnParameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "1833:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1833:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1832:9:0"
									},
									"scope": 121,
									"src": "1762:80:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 60,
										"nodeType": "StructuredDocumentation",
										"src": "1848:188:0",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 72,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "2050:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "2084:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "2065:27:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 61,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2065:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 62,
													"nodeType": "ArrayTypeName",
													"src": "2065:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2113:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "2094:22:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 64,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2094:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 65,
													"nodeType": "ArrayTypeName",
													"src": "2094:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2064:53:0"
									},
									"returnParameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "2165:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 68,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2165:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 69,
													"nodeType": "ArrayTypeName",
													"src": "2165:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2164:18:0"
									},
									"scope": 121,
									"src": "2041:142:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 73,
										"nodeType": "StructuredDocumentation",
										"src": "2189:248:0",
										"text": " @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the caller."
									},
									"functionSelector": "a22cb465",
									"id": 80,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "2451:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2477:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2469:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 74,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "2492:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2487:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 76,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2487:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:33:0"
									},
									"returnParameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2510:0:0"
									},
									"scope": 121,
									"src": "2442:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "2517:135:0",
										"text": " @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 90,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "2666:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2691:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "2683:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2683:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2708:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "2700:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 84,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2700:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2682:35:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 88,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "2741:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 87,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2741:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2740:6:0"
									},
									"scope": 121,
									"src": "2657:90:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "2753:559:0",
										"text": " @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `amount`.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"functionSelector": "f242432a",
									"id": 104,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3326:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3360:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "3352:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3352:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3382:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "3374:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 94,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3374:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3402:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "3394:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3394:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3422:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "3414:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3414:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3453:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "3438:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 100,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3438:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3342:121:0"
									},
									"returnParameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3472:0:0"
									},
									"scope": 121,
									"src": "3317:156:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 105,
										"nodeType": "StructuredDocumentation",
										"src": "3479:390:0",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `amounts` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"functionSelector": "2eb2c2d6",
									"id": 120,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "3883:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3922:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "3914:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 106,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3914:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3944:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "3936:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3936:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "3975:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "3956:22:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 110,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3956:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 111,
													"nodeType": "ArrayTypeName",
													"src": "3956:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "4007:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "3988:26:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 113,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3988:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 114,
													"nodeType": "ArrayTypeName",
													"src": "3988:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4039:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "4024:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 116,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4024:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3904:145:0"
									},
									"returnParameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4058:0:0"
									},
									"scope": 121,
									"src": "3874:185:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 122,
							"src": "335:3726:0",
							"usedErrors": []
						}
					],
					"src": "95:3967:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
					"exportedSymbols": {
						"IERC1155Receiver": [
							162
						],
						"IERC165": [
							1063
						]
					},
					"id": 163,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 123,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "118:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 124,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 163,
							"sourceUnit": 1064,
							"src": "143:47:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 126,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1063,
										"src": "262:7:1"
									},
									"id": 127,
									"nodeType": "InheritanceSpecifier",
									"src": "262:7:1"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 125,
								"nodeType": "StructuredDocumentation",
								"src": "192:39:1",
								"text": " @dev _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 162,
							"linearizedBaseContracts": [
								162,
								1063
							],
							"name": "IERC1155Receiver",
							"nameLocation": "242:16:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 128,
										"nodeType": "StructuredDocumentation",
										"src": "276:826:1",
										"text": " @dev Handles the receipt of a single ERC1155 token type. This function is\n called at the end of a `safeTransferFrom` after the balance has been updated.\n NOTE: To accept the transfer, this must return\n `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n (i.e. 0xf23a6e61, or its own function selector).\n @param operator The address which initiated the transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param id The ID of the token being transferred\n @param value The amount of tokens being transferred\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "f23a6e61",
									"id": 143,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155Received",
									"nameLocation": "1116:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 130,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1151:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "1143:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 129,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1143:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1177:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "1169:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 131,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1169:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1199:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "1191:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 133,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1191:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1219:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "1211:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1249:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "1234:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 137,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1234:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1133:126:1"
									},
									"returnParameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 141,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "1278:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 140,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1278:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1277:8:1"
									},
									"scope": 162,
									"src": "1107:179:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 144,
										"nodeType": "StructuredDocumentation",
										"src": "1292:994:1",
										"text": " @dev Handles the receipt of a multiple ERC1155 token types. This function\n is called at the end of a `safeBatchTransferFrom` after the balances have\n been updated.\n NOTE: To accept the transfer(s), this must return\n `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n (i.e. 0xbc197c81, or its own function selector).\n @param operator The address which initiated the batch transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param ids An array containing ids of each token being transferred (order and length must match values array)\n @param values An array containing amounts of each token being transferred (order and length must match ids array)\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "bc197c81",
									"id": 161,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155BatchReceived",
									"nameLocation": "2300:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2340:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "2332:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 145,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2332:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2366:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "2358:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2358:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2399:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "2380:22:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 149,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2380:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 150,
													"nodeType": "ArrayTypeName",
													"src": "2380:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "2431:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "2412:25:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 152,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2412:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 153,
													"nodeType": "ArrayTypeName",
													"src": "2412:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2462:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "2447:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 155,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2447:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:150:1"
									},
									"returnParameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "2491:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 158,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2491:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2490:8:1"
									},
									"scope": 162,
									"src": "2291:208:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 163,
							"src": "232:2269:1",
							"usedErrors": []
						}
					],
					"src": "118:2384:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol",
					"exportedSymbols": {
						"ERC1155Holder": [
							213
						],
						"ERC1155Receiver": [
							247
						],
						"ERC165": [
							1051
						],
						"IERC1155Receiver": [
							162
						],
						"IERC165": [
							1063
						]
					},
					"id": 214,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 164,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "121:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol",
							"file": "./ERC1155Receiver.sol",
							"id": 165,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 214,
							"sourceUnit": 248,
							"src": "146:31:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 167,
										"name": "ERC1155Receiver",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 247,
										"src": "477:15:2"
									},
									"id": 168,
									"nodeType": "InheritanceSpecifier",
									"src": "477:15:2"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 166,
								"nodeType": "StructuredDocumentation",
								"src": "179:271:2",
								"text": " Simple implementation of `ERC1155Receiver` that will allow a contract to hold ERC1155 tokens.\n IMPORTANT: When inheriting this contract, you must include a way to use the received tokens, otherwise they will be\n stuck.\n @dev _Available since v3.1._"
							},
							"fullyImplemented": true,
							"id": 213,
							"linearizedBaseContracts": [
								213,
								247,
								162,
								1051,
								1063
							],
							"name": "ERC1155Holder",
							"nameLocation": "460:13:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										143
									],
									"body": {
										"id": 188,
										"nodeType": "Block",
										"src": "663:55:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 184,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967268,
															"src": "680:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC1155Holder_$213",
																"typeString": "contract ERC1155Holder"
															}
														},
														"id": 185,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "onERC1155Received",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 189,
														"src": "680:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
															"typeString": "function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"
														}
													},
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberName": "selector",
													"nodeType": "MemberAccess",
													"src": "680:31:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"functionReturnParameters": 183,
												"id": 187,
												"nodeType": "Return",
												"src": "673:38:2"
											}
										]
									},
									"functionSelector": "f23a6e61",
									"id": 189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155Received",
									"nameLocation": "508:17:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 180,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "637:8:2"
									},
									"parameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "535:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 169,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "535:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "552:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "552:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "569:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "569:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "586:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "586:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "603:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 177,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "603:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "525:96:2"
									},
									"returnParameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "655:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 181,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "655:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:8:2"
									},
									"scope": 213,
									"src": "499:219:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										161
									],
									"body": {
										"id": 211,
										"nodeType": "Block",
										"src": "911:60:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 207,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967268,
															"src": "928:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC1155Holder_$213",
																"typeString": "contract ERC1155Holder"
															}
														},
														"id": 208,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "onERC1155BatchReceived",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 212,
														"src": "928:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"
														}
													},
													"id": 209,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberName": "selector",
													"nodeType": "MemberAccess",
													"src": "928:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"functionReturnParameters": 206,
												"id": 210,
												"nodeType": "Return",
												"src": "921:43:2"
											}
										]
									},
									"functionSelector": "bc197c81",
									"id": 212,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155BatchReceived",
									"nameLocation": "733:22:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 203,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "885:8:2"
									},
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "765:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 190,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "765:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "782:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "782:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "799:16:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 194,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "799:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 195,
													"nodeType": "ArrayTypeName",
													"src": "799:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "825:16:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 197,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "825:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 198,
													"nodeType": "ArrayTypeName",
													"src": "825:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "851:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 200,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "851:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "755:114:2"
									},
									"returnParameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "903:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 204,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "903:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "902:8:2"
									},
									"scope": 213,
									"src": "724:247:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 214,
							"src": "451:522:2",
							"usedErrors": []
						}
					],
					"src": "121:853:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol",
					"exportedSymbols": {
						"ERC1155Receiver": [
							247
						],
						"ERC165": [
							1051
						],
						"IERC1155Receiver": [
							162
						],
						"IERC165": [
							1063
						]
					},
					"id": 248,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 215,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
							"file": "../IERC1155Receiver.sol",
							"id": 216,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 248,
							"sourceUnit": 163,
							"src": "133:33:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../../utils/introspection/ERC165.sol",
							"id": 217,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 248,
							"sourceUnit": 1052,
							"src": "167:49:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 219,
										"name": "ERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1051,
										"src": "295:6:3"
									},
									"id": 220,
									"nodeType": "InheritanceSpecifier",
									"src": "295:6:3"
								},
								{
									"baseName": {
										"id": 221,
										"name": "IERC1155Receiver",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 162,
										"src": "303:16:3"
									},
									"id": 222,
									"nodeType": "InheritanceSpecifier",
									"src": "303:16:3"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 218,
								"nodeType": "StructuredDocumentation",
								"src": "218:39:3",
								"text": " @dev _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 247,
							"linearizedBaseContracts": [
								247,
								162,
								1051,
								1063
							],
							"name": "ERC1155Receiver",
							"nameLocation": "276:15:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1050,
										1062
									],
									"body": {
										"id": 245,
										"nodeType": "Block",
										"src": "495:113:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 238,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 233,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 225,
															"src": "512:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 235,
																		"name": "IERC1155Receiver",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 162,
																		"src": "532:16:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$162_$",
																			"typeString": "type(contract IERC1155Receiver)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$162_$",
																			"typeString": "type(contract IERC1155Receiver)"
																		}
																	],
																	"id": 234,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "527:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 236,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "527:22:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155Receiver_$162",
																	"typeString": "type(contract IERC1155Receiver)"
																}
															},
															"id": 237,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "527:34:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "512:49:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 241,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 225,
																"src": "589:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 239,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "565:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC1155Receiver_$247_$",
																	"typeString": "type(contract super ERC1155Receiver)"
																}
															},
															"id": 240,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1050,
															"src": "565:23:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 242,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "565:36:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "512:89:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 232,
												"id": 244,
												"nodeType": "Return",
												"src": "505:96:3"
											}
										]
									},
									"documentation": {
										"id": 223,
										"nodeType": "StructuredDocumentation",
										"src": "326:56:3",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 246,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "396:17:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 229,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 227,
												"name": "ERC165",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1051,
												"src": "463:6:3"
											},
											{
												"id": 228,
												"name": "IERC165",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1063,
												"src": "471:7:3"
											}
										],
										"src": "454:25:3"
									},
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "421:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "414:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 224,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "414:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "413:20:3"
									},
									"returnParameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "489:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 230,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "489:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "488:6:3"
									},
									"scope": 247,
									"src": "387:221:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 248,
							"src": "258:352:3",
							"usedErrors": []
						}
					],
					"src": "108:503:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							325
						]
					},
					"id": 326,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 249,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 250,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:4",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 325,
							"linearizedBaseContracts": [
								325
							],
							"name": "IERC20",
							"nameLocation": "212:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 251,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:4",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 259,
									"name": "Transfer",
									"nameLocation": "394:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 253,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "403:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 252,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 255,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "425:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 254,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 257,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "445:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 256,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:4"
									},
									"src": "388:72:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:4",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 268,
									"name": "Approval",
									"nameLocation": "625:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "634:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "657:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "682:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 265,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:4"
									},
									"src": "619:78:4"
								},
								{
									"documentation": {
										"id": 269,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:4",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 274,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:4"
									},
									"returnParameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "820:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:4"
									},
									"scope": 325,
									"src": "774:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 275,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:4",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 282,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "931:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 276,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:4"
									},
									"returnParameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "971:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 279,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:4"
									},
									"scope": 325,
									"src": "912:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 283,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:4",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 292,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "1211:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 284,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "1223:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 286,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:4"
									},
									"returnParameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "1257:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 289,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:4"
									},
									"scope": 325,
									"src": "1193:70:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 293,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:4",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 302,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "1557:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 294,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "1572:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 296,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:4"
									},
									"returnParameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "1612:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 299,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:4"
									},
									"scope": 325,
									"src": "1538:83:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:4",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 312,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "2291:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "2308:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 306,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:4"
									},
									"returnParameters": {
										"id": 311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 310,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "2342:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 309,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:4"
									},
									"scope": 325,
									"src": "2274:74:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 313,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:4",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 324,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 324,
												"src": "2677:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 314,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 324,
												"src": "2699:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 316,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 324,
												"src": "2719:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 318,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:4"
									},
									"returnParameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 324,
												"src": "2758:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 321,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:4"
									},
									"scope": 325,
									"src": "2646:118:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 326,
							"src": "202:2564:4",
							"usedErrors": []
						}
					],
					"src": "106:2661:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							1005
						],
						"IERC20": [
							325
						],
						"SafeERC20": [
							549
						]
					},
					"id": 550,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 327,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 328,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 550,
							"sourceUnit": 326,
							"src": "125:23:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 329,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 550,
							"sourceUnit": 1006,
							"src": "149:36:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 330,
								"nodeType": "StructuredDocumentation",
								"src": "187:457:5",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 549,
							"linearizedBaseContracts": [
								549
							],
							"name": "SafeERC20",
							"nameLocation": "653:9:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 333,
									"libraryName": {
										"id": 331,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1005,
										"src": "675:7:5"
									},
									"nodeType": "UsingForDirective",
									"src": "669:26:5",
									"typeName": {
										"id": 332,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "687:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 355,
										"nodeType": "Block",
										"src": "803:103:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 344,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 336,
															"src": "833:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$325",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 347,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 336,
																			"src": "863:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$325",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 348,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 292,
																		"src": "863:14:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 349,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "863:23:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 350,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 338,
																	"src": "888:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 351,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 340,
																	"src": "892:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 345,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "840:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 346,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "840:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 352,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "840:58:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$325",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 343,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 548,
														"src": "813:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$325_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "813:86:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 354,
												"nodeType": "ExpressionStatement",
												"src": "813:86:5"
											}
										]
									},
									"id": 356,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "710:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "739:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 356,
												"src": "732:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$325",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 335,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 334,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 325,
														"src": "732:6:5"
													},
													"referencedDeclaration": 325,
													"src": "732:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$325",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "762:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 356,
												"src": "754:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 337,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "754:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "782:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 356,
												"src": "774:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 339,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "774:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "722:71:5"
									},
									"returnParameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "803:0:5"
									},
									"scope": 549,
									"src": "701:205:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 381,
										"nodeType": "Block",
										"src": "1040:113:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 369,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 359,
															"src": "1070:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$325",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 372,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 359,
																			"src": "1100:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$325",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 373,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 324,
																		"src": "1100:18:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 374,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1100:27:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 375,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 361,
																	"src": "1129:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 376,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 363,
																	"src": "1135:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 377,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 365,
																	"src": "1139:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 370,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1077:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 371,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1077:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 378,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1077:68:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$325",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 368,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 548,
														"src": "1050:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$325_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1050:96:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 380,
												"nodeType": "ExpressionStatement",
												"src": "1050:96:5"
											}
										]
									},
									"id": 382,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "921:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "954:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "947:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$325",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 358,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 357,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 325,
														"src": "947:6:5"
													},
													"referencedDeclaration": 325,
													"src": "947:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$325",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "977:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "969:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 360,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "969:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "999:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "991:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 362,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "991:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1019:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "1011:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 364,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "937:93:5"
									},
									"returnParameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1040:0:5"
									},
									"scope": 549,
									"src": "912:241:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "1519:497:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 409,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 396,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 394,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 390,
																			"src": "1768:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 395,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1777:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1768:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 397,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1767:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 407,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 402,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "1808:4:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$549",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$549",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 401,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1800:7:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 400,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "1800:7:5",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 403,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1800:13:5",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 404,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 388,
																					"src": "1815:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 398,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 386,
																					"src": "1784:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$325",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 399,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 302,
																				"src": "1784:15:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 405,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1784:39:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 406,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1827:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1784:44:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 408,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1783:46:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1767:62:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 410,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1843:56:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 393,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1746:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1746:163:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 412,
												"nodeType": "ExpressionStatement",
												"src": "1746:163:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 414,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "1939:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$325",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 417,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 386,
																			"src": "1969:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$325",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 418,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 312,
																		"src": "1969:13:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 419,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1969:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 420,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "1993:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 421,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 390,
																	"src": "2002:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 415,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1946:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 416,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1946:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 422,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1946:62:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$325",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 413,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 548,
														"src": "1919:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$325_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1919:90:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 424,
												"nodeType": "ExpressionStatement",
												"src": "1919:90:5"
											}
										]
									},
									"documentation": {
										"id": 383,
										"nodeType": "StructuredDocumentation",
										"src": "1159:249:5",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "1422:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1450:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "1443:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$325",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 385,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 384,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 325,
														"src": "1443:6:5"
													},
													"referencedDeclaration": 325,
													"src": "1443:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$325",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1473:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "1465:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1465:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1498:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "1490:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1490:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1433:76:5"
									},
									"returnParameters": {
										"id": 392,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1519:0:5"
									},
									"scope": 549,
									"src": "1413:603:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 461,
										"nodeType": "Block",
										"src": "2138:194:5",
										"statements": [
											{
												"assignments": [
													437
												],
												"declarations": [
													{
														"constant": false,
														"id": 437,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "2156:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 461,
														"src": "2148:20:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 436,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2148:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 448,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 442,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2195:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_SafeERC20_$549",
																			"typeString": "library SafeERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_SafeERC20_$549",
																			"typeString": "library SafeERC20"
																		}
																	],
																	"id": 441,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2187:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 440,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2187:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 443,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2187:13:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 444,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 431,
																"src": "2202:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 438,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 429,
																"src": "2171:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$325",
																	"typeString": "contract IERC20"
																}
															},
															"id": 439,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "allowance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 302,
															"src": "2171:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address,address) view external returns (uint256)"
															}
														},
														"id": 445,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2171:39:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 446,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 433,
														"src": "2213:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2171:47:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2148:70:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 450,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "2248:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$325",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 453,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 429,
																			"src": "2278:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$325",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 454,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 312,
																		"src": "2278:13:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 455,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2278:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 456,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 431,
																	"src": "2302:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 457,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 437,
																	"src": "2311:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 451,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2255:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 452,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2255:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 458,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2255:69:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$325",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 449,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 548,
														"src": "2228:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$325_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2228:97:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 460,
												"nodeType": "ExpressionStatement",
												"src": "2228:97:5"
											}
										]
									},
									"id": 462,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2031:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2069:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "2062:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$325",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 428,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 427,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 325,
														"src": "2062:6:5"
													},
													"referencedDeclaration": 325,
													"src": "2062:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$325",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2092:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "2084:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 430,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2084:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2117:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "2109:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 432,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2109:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2052:76:5"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2138:0:5"
									},
									"scope": 549,
									"src": "2022:310:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 509,
										"nodeType": "Block",
										"src": "2454:370:5",
										"statements": [
											{
												"id": 508,
												"nodeType": "UncheckedBlock",
												"src": "2464:354:5",
												"statements": [
													{
														"assignments": [
															473
														],
														"declarations": [
															{
																"constant": false,
																"id": 473,
																"mutability": "mutable",
																"name": "oldAllowance",
																"nameLocation": "2496:12:5",
																"nodeType": "VariableDeclaration",
																"scope": 508,
																"src": "2488:20:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 472,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2488:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 482,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 478,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2535:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$549",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$549",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 477,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2527:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 476,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2527:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 479,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2527:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 480,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 467,
																	"src": "2542:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 474,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 465,
																	"src": "2511:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$325",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 475,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 302,
																"src": "2511:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 481,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2511:39:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2488:62:5"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 486,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 484,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 473,
																		"src": "2572:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 485,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 469,
																		"src": "2588:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2572:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 487,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2595:43:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	},
																	"value": "SafeERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	}
																],
																"id": 483,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2564:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 488,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2564:75:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 489,
														"nodeType": "ExpressionStatement",
														"src": "2564:75:5"
													},
													{
														"assignments": [
															491
														],
														"declarations": [
															{
																"constant": false,
																"id": 491,
																"mutability": "mutable",
																"name": "newAllowance",
																"nameLocation": "2661:12:5",
																"nodeType": "VariableDeclaration",
																"scope": 508,
																"src": "2653:20:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 490,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2653:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 495,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 492,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 473,
																"src": "2676:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 493,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 469,
																"src": "2691:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2676:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2653:43:5"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 497,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 465,
																	"src": "2730:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$325",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"expression": {
																					"id": 500,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 465,
																					"src": "2760:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$325",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 501,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 312,
																				"src": "2760:13:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 502,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "2760:22:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		{
																			"id": 503,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 467,
																			"src": "2784:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 504,
																			"name": "newAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 491,
																			"src": "2793:12:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 498,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "2737:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 499,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "encodeWithSelector",
																		"nodeType": "MemberAccess",
																		"src": "2737:22:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes4) pure returns (bytes memory)"
																		}
																	},
																	"id": 505,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2737:69:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$325",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 496,
																"name": "_callOptionalReturn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 548,
																"src": "2710:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$325_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (contract IERC20,bytes memory)"
																}
															},
															"id": 506,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2710:97:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 507,
														"nodeType": "ExpressionStatement",
														"src": "2710:97:5"
													}
												]
											}
										]
									},
									"id": 510,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2347:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2385:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 510,
												"src": "2378:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$325",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 464,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 463,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 325,
														"src": "2378:6:5"
													},
													"referencedDeclaration": 325,
													"src": "2378:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$325",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 467,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2408:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 510,
												"src": "2400:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 466,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2400:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 469,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2433:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 510,
												"src": "2425:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 468,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2425:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2368:76:5"
									},
									"returnParameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2454:0:5"
									},
									"scope": 549,
									"src": "2338:486:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 547,
										"nodeType": "Block",
										"src": "3277:636:5",
										"statements": [
											{
												"assignments": [
													520
												],
												"declarations": [
													{
														"constant": false,
														"id": 520,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3639:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 547,
														"src": "3626:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 519,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3626:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 529,
												"initialValue": {
													"arguments": [
														{
															"id": 526,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 516,
															"src": "3680:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 527,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3686:34:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 523,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 514,
																	"src": "3660:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$325",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$325",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 522,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3652:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 521,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3652:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 524,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3652:14:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 525,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 799,
														"src": "3652:27:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 528,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3652:69:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3626:95:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 533,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 530,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 520,
															"src": "3735:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 531,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3735:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 532,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3755:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3735:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 546,
												"nodeType": "IfStatement",
												"src": "3731:176:5",
												"trueBody": {
													"id": 545,
													"nodeType": "Block",
													"src": "3758:149:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 537,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 520,
																				"src": "3830:10:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 539,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "3843:4:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 538,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "3843:4:5",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 540,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3842:6:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 535,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3819:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 536,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "3819:10:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 541,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3819:30:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 542,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3851:44:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 534,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3811:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 543,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3811:85:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 544,
															"nodeType": "ExpressionStatement",
															"src": "3811:85:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 511,
										"nodeType": "StructuredDocumentation",
										"src": "2830:372:5",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 548,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "3216:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3243:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "3236:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$325",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 513,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 512,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 325,
														"src": "3236:6:5"
													},
													"referencedDeclaration": 325,
													"src": "3236:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$325",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3263:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "3250:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 515,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3250:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3235:33:5"
									},
									"returnParameters": {
										"id": 518,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3277:0:5"
									},
									"scope": 549,
									"src": "3207:706:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 550,
							"src": "645:3270:5",
							"usedErrors": []
						}
					],
					"src": "100:3816:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							1063
						],
						"IERC721": [
							665
						]
					},
					"id": 666,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 551,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 552,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 666,
							"sourceUnit": 1064,
							"src": "133:47:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 554,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1063,
										"src": "271:7:6"
									},
									"id": 555,
									"nodeType": "InheritanceSpecifier",
									"src": "271:7:6"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 553,
								"nodeType": "StructuredDocumentation",
								"src": "182:67:6",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 665,
							"linearizedBaseContracts": [
								665,
								1063
							],
							"name": "IERC721",
							"nameLocation": "260:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 556,
										"nodeType": "StructuredDocumentation",
										"src": "285:88:6",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"id": 564,
									"name": "Transfer",
									"nameLocation": "384:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 558,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "409:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "393:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 557,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "393:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 560,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "431:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "415:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 559,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "415:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 562,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "451:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "435:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 561,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "435:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "392:67:6"
									},
									"src": "378:82:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 565,
										"nodeType": "StructuredDocumentation",
										"src": "466:94:6",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"id": 573,
									"name": "Approval",
									"nameLocation": "571:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 567,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "596:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "580:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 566,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "580:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 569,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "619:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "603:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 568,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "603:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 571,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "645:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "629:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 570,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "629:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "579:74:6"
									},
									"src": "565:89:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 574,
										"nodeType": "StructuredDocumentation",
										"src": "660:117:6",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"id": 582,
									"name": "ApprovalForAll",
									"nameLocation": "788:14:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 576,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "819:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 582,
												"src": "803:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 575,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "803:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 578,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "842:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 582,
												"src": "826:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "826:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 580,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "857:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 582,
												"src": "852:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 579,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "852:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "802:64:6"
									},
									"src": "782:85:6"
								},
								{
									"documentation": {
										"id": 583,
										"nodeType": "StructuredDocumentation",
										"src": "873:76:6",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 590,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "963:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "981:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "973:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 584,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "973:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "972:15:6"
									},
									"returnParameters": {
										"id": 589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1019:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "1011:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 587,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1010:17:6"
									},
									"scope": 665,
									"src": "954:74:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 591,
										"nodeType": "StructuredDocumentation",
										"src": "1034:131:6",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 598,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1179:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 593,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1195:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "1187:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 592,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1187:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1186:17:6"
									},
									"returnParameters": {
										"id": 597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 596,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1235:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "1227:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 595,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1227:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1226:15:6"
									},
									"scope": 665,
									"src": "1170:72:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 599,
										"nodeType": "StructuredDocumentation",
										"src": "1248:556:6",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 610,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1818:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 601,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1852:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "1844:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 600,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1844:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 603,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1874:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "1866:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 602,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1866:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1894:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "1886:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 604,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1926:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "1911:19:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 606,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1911:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1834:102:6"
									},
									"returnParameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1945:0:6"
									},
									"scope": 665,
									"src": "1809:137:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 611,
										"nodeType": "StructuredDocumentation",
										"src": "1952:690:6",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 620,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2656:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2690:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "2682:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 612,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2682:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2712:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "2704:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 614,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2704:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 617,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2732:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "2724:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 616,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2724:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2672:73:6"
									},
									"returnParameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2754:0:6"
									},
									"scope": 665,
									"src": "2647:108:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 621,
										"nodeType": "StructuredDocumentation",
										"src": "2761:504:6",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 630,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3279:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 628,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 623,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3309:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "3301:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 622,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3301:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 625,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3331:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "3323:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 624,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3323:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 627,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3351:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "3343:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 626,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3343:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3291:73:6"
									},
									"returnParameters": {
										"id": 629,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3373:0:6"
									},
									"scope": 665,
									"src": "3270:104:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 631,
										"nodeType": "StructuredDocumentation",
										"src": "3380:452:6",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 638,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3846:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3862:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "3854:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 632,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3854:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3874:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "3866:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 634,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3866:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3853:29:6"
									},
									"returnParameters": {
										"id": 637,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3891:0:6"
									},
									"scope": 665,
									"src": "3837:55:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 639,
										"nodeType": "StructuredDocumentation",
										"src": "3898:309:6",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 646,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4221:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 641,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4247:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "4239:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 640,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4239:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "4262:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "4257:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 642,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4257:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4238:34:6"
									},
									"returnParameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4281:0:6"
									},
									"scope": 665,
									"src": "4212:70:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 647,
										"nodeType": "StructuredDocumentation",
										"src": "4288:139:6",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 654,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4441:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4461:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 654,
												"src": "4453:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 648,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4453:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4452:17:6"
									},
									"returnParameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 652,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4501:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 654,
												"src": "4493:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 651,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4493:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4492:18:6"
									},
									"scope": 665,
									"src": "4432:79:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "4517:138:6",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 664,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4669:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4694:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 664,
												"src": "4686:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4686:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4709:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 664,
												"src": "4701:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4701:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4685:33:6"
									},
									"returnParameters": {
										"id": 663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 664,
												"src": "4742:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 661,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4742:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4741:6:6"
									},
									"scope": 665,
									"src": "4660:88:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 666,
							"src": "250:4500:6",
							"usedErrors": []
						}
					],
					"src": "108:4643:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							683
						]
					},
					"id": 684,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 667,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "116:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 668,
								"nodeType": "StructuredDocumentation",
								"src": "141:152:7",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 683,
							"linearizedBaseContracts": [
								683
							],
							"name": "IERC721Receiver",
							"nameLocation": "304:15:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 669,
										"nodeType": "StructuredDocumentation",
										"src": "326:493:7",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 682,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "833:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 678,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "867:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 682,
												"src": "859:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 670,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "859:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 673,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "893:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 682,
												"src": "885:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 672,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "885:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "915:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 682,
												"src": "907:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 674,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "907:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "947:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 682,
												"src": "932:19:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 676,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "932:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:108:7"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 680,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 682,
												"src": "976:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 679,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "976:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "975:8:7"
									},
									"scope": 683,
									"src": "824:160:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 684,
							"src": "294:692:7",
							"usedErrors": []
						}
					],
					"src": "116:871:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol",
					"exportedSymbols": {
						"ERC721Holder": [
							710
						],
						"IERC721Receiver": [
							683
						]
					},
					"id": 711,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 685,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "104:23:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"file": "../IERC721Receiver.sol",
							"id": 686,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 711,
							"sourceUnit": 684,
							"src": "129:32:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 688,
										"name": "IERC721Receiver",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 683,
										"src": "424:15:8"
									},
									"id": 689,
									"nodeType": "InheritanceSpecifier",
									"src": "424:15:8"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 687,
								"nodeType": "StructuredDocumentation",
								"src": "163:235:8",
								"text": " @dev Implementation of the {IERC721Receiver} interface.\n Accepts all token transfers.\n Make sure the contract is able to use its token with {IERC721-safeTransferFrom}, {IERC721-approve} or {IERC721-setApprovalForAll}."
							},
							"fullyImplemented": true,
							"id": 710,
							"linearizedBaseContracts": [
								710,
								683
							],
							"name": "ERC721Holder",
							"nameLocation": "408:12:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										682
									],
									"body": {
										"id": 708,
										"nodeType": "Block",
										"src": "734:54:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 704,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967268,
															"src": "751:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC721Holder_$710",
																"typeString": "contract ERC721Holder"
															}
														},
														"id": 705,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "onERC721Received",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 709,
														"src": "751:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
															"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
														}
													},
													"id": 706,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberName": "selector",
													"nodeType": "MemberAccess",
													"src": "751:30:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"functionReturnParameters": 703,
												"id": 707,
												"nodeType": "Return",
												"src": "744:37:8"
											}
										]
									},
									"documentation": {
										"id": 690,
										"nodeType": "StructuredDocumentation",
										"src": "446:137:8",
										"text": " @dev See {IERC721Receiver-onERC721Received}.\n Always returns `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 709,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "597:16:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 700,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "708:8:8"
									},
									"parameters": {
										"id": 699,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 692,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "623:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 691,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "623:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "640:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 693,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "640:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 696,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "657:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 695,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 698,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "674:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 697,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "613:79:8"
									},
									"returnParameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "726:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 701,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "726:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "725:8:8"
									},
									"scope": 710,
									"src": "588:200:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 711,
							"src": "399:391:8",
							"usedErrors": []
						}
					],
					"src": "104:687:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1005
						]
					},
					"id": 1006,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 712,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 713,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:9",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1005,
							"linearizedBaseContracts": [
								1005
							],
							"name": "Address",
							"nameLocation": "202:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 727,
										"nodeType": "Block",
										"src": "1241:254:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 725,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 721,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 716,
																"src": "1465:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 722,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1465:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 723,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1465:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 724,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1487:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1465:23:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 720,
												"id": 726,
												"nodeType": "Return",
												"src": "1458:30:9"
											}
										]
									},
									"documentation": {
										"id": 714,
										"nodeType": "StructuredDocumentation",
										"src": "216:954:9",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 728,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1184:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1203:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "1195:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 715,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:17:9"
									},
									"returnParameters": {
										"id": 720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "1235:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 718,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1235:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1234:6:9"
									},
									"scope": 1005,
									"src": "1175:320:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 761,
										"nodeType": "Block",
										"src": "2483:241:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 743,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 739,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2509:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1005",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1005",
																				"typeString": "library Address"
																			}
																		],
																		"id": 738,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2501:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 737,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2501:7:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 740,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2501:13:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 741,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2501:21:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 742,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 733,
																"src": "2526:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2501:31:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 744,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2534:31:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 736,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2493:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2493:73:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 746,
												"nodeType": "ExpressionStatement",
												"src": "2493:73:9"
											},
											{
												"assignments": [
													748,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 748,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2583:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 761,
														"src": "2578:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 747,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2578:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 755,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 753,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 749,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 731,
																"src": "2596:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 750,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2596:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 752,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 751,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 733,
																"src": "2618:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2596:29:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2596:33:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2577:52:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 757,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 748,
															"src": "2647:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 758,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2656:60:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 756,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2639:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 759,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2639:78:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 760,
												"nodeType": "ExpressionStatement",
												"src": "2639:78:9"
											}
										]
									},
									"documentation": {
										"id": 729,
										"nodeType": "StructuredDocumentation",
										"src": "1501:906:9",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 762,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2421:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 731,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2447:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "2431:25:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 730,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2431:15:9",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 733,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2466:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "2458:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 732,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2458:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:43:9"
									},
									"returnParameters": {
										"id": 735,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2483:0:9"
									},
									"scope": 1005,
									"src": "2412:312:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 778,
										"nodeType": "Block",
										"src": "3555:84:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 773,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 765,
															"src": "3585:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 774,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 767,
															"src": "3593:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 775,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3599:32:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 772,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															779,
															799
														],
														"referencedDeclaration": 799,
														"src": "3572:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3572:60:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 771,
												"id": 777,
												"nodeType": "Return",
												"src": "3565:67:9"
											}
										]
									},
									"documentation": {
										"id": 763,
										"nodeType": "StructuredDocumentation",
										"src": "2730:731:9",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 779,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3475:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3496:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 779,
												"src": "3488:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 764,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3488:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3517:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 779,
												"src": "3504:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 766,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3504:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3487:35:9"
									},
									"returnParameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 779,
												"src": "3541:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 769,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3541:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3540:14:9"
									},
									"scope": 1005,
									"src": "3466:173:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 798,
										"nodeType": "Block",
										"src": "4008:76:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 792,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 782,
															"src": "4047:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 793,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 784,
															"src": "4055:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 794,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4061:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 795,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 786,
															"src": "4064:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 791,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															819,
															869
														],
														"referencedDeclaration": 869,
														"src": "4025:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 796,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4025:52:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 790,
												"id": 797,
												"nodeType": "Return",
												"src": "4018:59:9"
											}
										]
									},
									"documentation": {
										"id": 780,
										"nodeType": "StructuredDocumentation",
										"src": "3645:211:9",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 799,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3870:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 787,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 782,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3900:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "3892:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 781,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3892:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 784,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3929:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "3916:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 783,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3916:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 786,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3957:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "3943:26:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 785,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3943:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3882:93:9"
									},
									"returnParameters": {
										"id": 790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 789,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "3994:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 788,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3994:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3993:14:9"
									},
									"scope": 1005,
									"src": "3861:223:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 818,
										"nodeType": "Block",
										"src": "4589:111:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 812,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 802,
															"src": "4628:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 813,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 804,
															"src": "4636:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 814,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 806,
															"src": "4642:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 815,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4649:43:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 811,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															819,
															869
														],
														"referencedDeclaration": 869,
														"src": "4606:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4606:87:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 810,
												"id": 817,
												"nodeType": "Return",
												"src": "4599:94:9"
											}
										]
									},
									"documentation": {
										"id": 800,
										"nodeType": "StructuredDocumentation",
										"src": "4090:351:9",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 819,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4455:21:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4494:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "4486:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 801,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4486:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 804,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4523:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "4510:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 803,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4510:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4545:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "4537:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 805,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4537:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4476:80:9"
									},
									"returnParameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 809,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "4575:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 808,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4575:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4574:14:9"
									},
									"scope": 1005,
									"src": "4446:254:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 868,
										"nodeType": "Block",
										"src": "5127:320:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 840,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 836,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5153:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1005",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1005",
																				"typeString": "library Address"
																			}
																		],
																		"id": 835,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5145:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 834,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5145:7:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 837,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5145:13:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 838,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5145:21:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 839,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 826,
																"src": "5170:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5145:30:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 841,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5177:40:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 833,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5137:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 842,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5137:81:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 843,
												"nodeType": "ExpressionStatement",
												"src": "5137:81:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 846,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 822,
																	"src": "5247:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 845,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 728,
																"src": "5236:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 847,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5236:18:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 848,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5256:31:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 844,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5228:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 849,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5228:60:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 850,
												"nodeType": "ExpressionStatement",
												"src": "5228:60:9"
											},
											{
												"assignments": [
													852,
													854
												],
												"declarations": [
													{
														"constant": false,
														"id": 852,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5305:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 868,
														"src": "5300:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 851,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5300:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 854,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5327:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 868,
														"src": "5314:23:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 853,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5314:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 861,
												"initialValue": {
													"arguments": [
														{
															"id": 859,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 824,
															"src": "5367:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 855,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 822,
																"src": "5341:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 856,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5341:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 858,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 857,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 826,
																"src": "5360:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5341:25:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5341:31:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5299:73:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 863,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 852,
															"src": "5406:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 864,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 854,
															"src": "5415:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 865,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 828,
															"src": "5427:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 862,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1004,
														"src": "5389:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 866,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5389:51:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 832,
												"id": 867,
												"nodeType": "Return",
												"src": "5382:58:9"
											}
										]
									},
									"documentation": {
										"id": 820,
										"nodeType": "StructuredDocumentation",
										"src": "4706:237:9",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 869,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4957:21:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 829,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 822,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4996:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "4988:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 821,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4988:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5025:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "5012:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 823,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5012:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 826,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5047:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "5039:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 825,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5039:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 828,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5076:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "5062:26:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 827,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5062:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4978:116:9"
									},
									"returnParameters": {
										"id": 832,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "5113:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 830,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5113:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5112:14:9"
									},
									"scope": 1005,
									"src": "4948:499:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 885,
										"nodeType": "Block",
										"src": "5724:97:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 880,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 872,
															"src": "5760:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 881,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 874,
															"src": "5768:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 882,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5774:39:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 879,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															886,
															921
														],
														"referencedDeclaration": 921,
														"src": "5741:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 883,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5741:73:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 878,
												"id": 884,
												"nodeType": "Return",
												"src": "5734:80:9"
											}
										]
									},
									"documentation": {
										"id": 870,
										"nodeType": "StructuredDocumentation",
										"src": "5453:166:9",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 886,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5633:18:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 872,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5660:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "5652:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 871,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5652:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5681:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "5668:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 873,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5668:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5651:35:9"
									},
									"returnParameters": {
										"id": 878,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 877,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "5710:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 876,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5710:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5709:14:9"
									},
									"scope": 1005,
									"src": "5624:197:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 920,
										"nodeType": "Block",
										"src": "6163:228:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 900,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 889,
																	"src": "6192:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 899,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 728,
																"src": "6181:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 901,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6181:18:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 902,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6201:38:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 898,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6173:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 903,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6173:67:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 904,
												"nodeType": "ExpressionStatement",
												"src": "6173:67:9"
											},
											{
												"assignments": [
													906,
													908
												],
												"declarations": [
													{
														"constant": false,
														"id": 906,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6257:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 920,
														"src": "6252:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 905,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6252:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 908,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6279:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 920,
														"src": "6266:23:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 907,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6266:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 913,
												"initialValue": {
													"arguments": [
														{
															"id": 911,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 891,
															"src": "6311:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 909,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 889,
															"src": "6293:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 910,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6293:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6293:23:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6251:65:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 915,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 906,
															"src": "6350:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 916,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 908,
															"src": "6359:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 917,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 893,
															"src": "6371:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 914,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1004,
														"src": "6333:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6333:51:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 897,
												"id": 919,
												"nodeType": "Return",
												"src": "6326:58:9"
											}
										]
									},
									"documentation": {
										"id": 887,
										"nodeType": "StructuredDocumentation",
										"src": "5827:173:9",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 921,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6014:18:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 894,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 889,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6050:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 921,
												"src": "6042:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 888,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6042:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 891,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6079:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 921,
												"src": "6066:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 890,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6066:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 893,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6107:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 921,
												"src": "6093:26:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 892,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6093:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6032:93:9"
									},
									"returnParameters": {
										"id": 897,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 896,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 921,
												"src": "6149:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 895,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6149:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6148:14:9"
									},
									"scope": 1005,
									"src": "6005:386:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 937,
										"nodeType": "Block",
										"src": "6667:101:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 932,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 924,
															"src": "6705:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 933,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 926,
															"src": "6713:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 934,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6719:41:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 931,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															938,
															973
														],
														"referencedDeclaration": 973,
														"src": "6684:20:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 935,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6684:77:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 930,
												"id": 936,
												"nodeType": "Return",
												"src": "6677:84:9"
											}
										]
									},
									"documentation": {
										"id": 922,
										"nodeType": "StructuredDocumentation",
										"src": "6397:168:9",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 938,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6579:20:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 927,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 924,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6608:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 938,
												"src": "6600:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 923,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6600:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 926,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 938,
												"src": "6616:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 925,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6599:35:9"
									},
									"returnParameters": {
										"id": 930,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 929,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 938,
												"src": "6653:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 928,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6653:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6652:14:9"
									},
									"scope": 1005,
									"src": "6570:198:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 972,
										"nodeType": "Block",
										"src": "7109:232:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 952,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 941,
																	"src": "7138:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 951,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 728,
																"src": "7127:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 953,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7127:18:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 954,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7147:40:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 950,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7119:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 955,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7119:69:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 956,
												"nodeType": "ExpressionStatement",
												"src": "7119:69:9"
											},
											{
												"assignments": [
													958,
													960
												],
												"declarations": [
													{
														"constant": false,
														"id": 958,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7205:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 972,
														"src": "7200:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 957,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7200:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 960,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7227:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 972,
														"src": "7214:23:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 959,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7214:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 965,
												"initialValue": {
													"arguments": [
														{
															"id": 963,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 943,
															"src": "7261:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 961,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 941,
															"src": "7241:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 962,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7241:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 964,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7241:25:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7199:67:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 967,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 958,
															"src": "7300:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 968,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 960,
															"src": "7309:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 969,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 945,
															"src": "7321:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 966,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1004,
														"src": "7283:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 970,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7283:51:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 949,
												"id": 971,
												"nodeType": "Return",
												"src": "7276:58:9"
											}
										]
									},
									"documentation": {
										"id": 939,
										"nodeType": "StructuredDocumentation",
										"src": "6774:175:9",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 973,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6963:20:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 946,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 941,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7001:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "6993:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 940,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6993:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 943,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7030:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "7017:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 942,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7017:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 945,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7058:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "7044:26:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 944,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7044:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6983:93:9"
									},
									"returnParameters": {
										"id": 949,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 948,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "7095:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 947,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7095:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7094:14:9"
									},
									"scope": 1005,
									"src": "6954:387:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1003,
										"nodeType": "Block",
										"src": "7721:532:9",
										"statements": [
											{
												"condition": {
													"id": 985,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 976,
													"src": "7735:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1001,
													"nodeType": "Block",
													"src": "7792:455:9",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 992,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 989,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 978,
																		"src": "7876:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 990,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7876:17:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 991,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7896:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7876:21:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 999,
																"nodeType": "Block",
																"src": "8184:53:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 996,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 980,
																					"src": "8209:12:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 995,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "8202:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 997,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8202:20:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 998,
																		"nodeType": "ExpressionStatement",
																		"src": "8202:20:9"
																	}
																]
															},
															"id": 1000,
															"nodeType": "IfStatement",
															"src": "7872:365:9",
															"trueBody": {
																"id": 994,
																"nodeType": "Block",
																"src": "7899:279:9",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "8019:145:9",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "8041:40:9",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "8070:10:9"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "8064:5:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8064:17:9"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "8045:15:9",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8113:2:9",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "8117:10:9"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8109:3:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8109:19:9"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "8130:15:9"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "8102:6:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8102:44:9"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "8102:44:9"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 978,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8070:10:9",
																				"valueSize": 1
																			},
																			{
																				"declaration": 978,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8117:10:9",
																				"valueSize": 1
																			}
																		],
																		"id": 993,
																		"nodeType": "InlineAssembly",
																		"src": "8010:154:9"
																	}
																]
															}
														}
													]
												},
												"id": 1002,
												"nodeType": "IfStatement",
												"src": "7731:516:9",
												"trueBody": {
													"id": 988,
													"nodeType": "Block",
													"src": "7744:42:9",
													"statements": [
														{
															"expression": {
																"id": 986,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 978,
																"src": "7765:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 984,
															"id": 987,
															"nodeType": "Return",
															"src": "7758:17:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 974,
										"nodeType": "StructuredDocumentation",
										"src": "7347:209:9",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 1004,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7570:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 981,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 976,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7601:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1004,
												"src": "7596:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 975,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7596:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 978,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7631:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1004,
												"src": "7618:23:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 977,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7618:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 980,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7665:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1004,
												"src": "7651:26:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 979,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7651:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7586:97:9"
									},
									"returnParameters": {
										"id": 984,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 983,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1004,
												"src": "7707:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 982,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7707:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7706:14:9"
									},
									"scope": 1005,
									"src": "7561:692:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1006,
							"src": "194:8061:9",
							"usedErrors": []
						}
					],
					"src": "101:8155:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1027
						]
					},
					"id": 1028,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1007,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:10"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1008,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:10",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1027,
							"linearizedBaseContracts": [
								1027
							],
							"name": "Context",
							"nameLocation": "626:7:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1016,
										"nodeType": "Block",
										"src": "702:34:10",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1013,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1014,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1012,
												"id": 1015,
												"nodeType": "Return",
												"src": "712:17:10"
											}
										]
									},
									"id": 1017,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1009,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:10"
									},
									"returnParameters": {
										"id": 1012,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1011,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "693:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1010,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:10"
									},
									"scope": 1027,
									"src": "640:96:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1025,
										"nodeType": "Block",
										"src": "809:32:10",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1022,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1023,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1021,
												"id": 1024,
												"nodeType": "Return",
												"src": "819:15:10"
											}
										]
									},
									"id": 1026,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1018,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:10"
									},
									"returnParameters": {
										"id": 1021,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1020,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "793:14:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1019,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:10"
									},
									"scope": 1027,
									"src": "742:99:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1028,
							"src": "608:235:10",
							"usedErrors": []
						}
					],
					"src": "86:758:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1051
						],
						"IERC165": [
							1063
						]
					},
					"id": 1052,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1029,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "99:23:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1030,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1052,
							"sourceUnit": 1064,
							"src": "124:23:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1032,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1063,
										"src": "754:7:11"
									},
									"id": 1033,
									"nodeType": "InheritanceSpecifier",
									"src": "754:7:11"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1031,
								"nodeType": "StructuredDocumentation",
								"src": "149:576:11",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 1051,
							"linearizedBaseContracts": [
								1051,
								1063
							],
							"name": "ERC165",
							"nameLocation": "744:6:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1062
									],
									"body": {
										"id": 1049,
										"nodeType": "Block",
										"src": "920:64:11",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1047,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1042,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1036,
														"src": "937:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1044,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1063,
																	"src": "957:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1063_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1063_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1043,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "952:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1045,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "952:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1063",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1046,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "952:25:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "937:40:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1041,
												"id": 1048,
												"nodeType": "Return",
												"src": "930:47:11"
											}
										]
									},
									"documentation": {
										"id": 1034,
										"nodeType": "StructuredDocumentation",
										"src": "768:56:11",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1050,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "838:17:11",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1038,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "896:8:11"
									},
									"parameters": {
										"id": 1037,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1036,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "863:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "856:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1035,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "856:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "855:20:11"
									},
									"returnParameters": {
										"id": 1041,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1040,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "914:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1039,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "914:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "913:6:11"
									},
									"scope": 1051,
									"src": "829:155:11",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1052,
							"src": "726:260:11",
							"usedErrors": []
						}
					],
					"src": "99:888:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1063
						]
					},
					"id": 1064,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1053,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1054,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:12",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1063,
							"linearizedBaseContracts": [
								1063
							],
							"name": "IERC165",
							"nameLocation": "415:7:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1055,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:12",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1062,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1058,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1057,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 1062,
												"src": "801:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1056,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:12"
									},
									"returnParameters": {
										"id": 1061,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1060,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1062,
												"src": "844:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1059,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:12"
									},
									"scope": 1063,
									"src": "774:76:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1064,
							"src": "405:447:12",
							"usedErrors": []
						}
					],
					"src": "100:753:12"
				},
				"id": 12
			},
			"Ownable.sol": {
				"ast": {
					"absolutePath": "Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1027
						],
						"Ownable": [
							1131
						]
					},
					"id": 1132,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1065,
							"literals": [
								"solidity",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "32:22:13"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "@openzeppelin/contracts/utils/Context.sol",
							"id": 1066,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1132,
							"sourceUnit": 1028,
							"src": "55:51:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1068,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1027,
										"src": "543:7:13"
									},
									"id": 1069,
									"nodeType": "InheritanceSpecifier",
									"src": "543:7:13"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1067,
								"nodeType": "StructuredDocumentation",
								"src": "107:406:13",
								"text": " @dev This contract module is inspired from \n https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\n OpenZepplin Ownable contract. The code is forked from Ownable except \n 2 functions i.e. renounce and transfer ownership. In our usecase, we do not require users \n to transfer or renounce ownership as it is always aligned with the original user."
							},
							"fullyImplemented": true,
							"id": 1131,
							"linearizedBaseContracts": [
								1131,
								1027
							],
							"name": "Ownable",
							"nameLocation": "532:7:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1071,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "573:6:13",
									"nodeType": "VariableDeclaration",
									"scope": 1131,
									"src": "557:22:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1070,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "557:7:13",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 1077,
									"name": "OwnershipTransferred",
									"nameLocation": "592:20:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1076,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1073,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "638:13:13",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "622:29:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1072,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "622:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1075,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "677:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "661:24:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1074,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "661:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "612:79:13"
									},
									"src": "586:106:13"
								},
								{
									"body": {
										"id": 1086,
										"nodeType": "Block",
										"src": "808:49:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1082,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1017,
																"src": "837:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1083,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "837:12:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1081,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1130,
														"src": "818:18:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1084,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "818:32:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1085,
												"nodeType": "ExpressionStatement",
												"src": "818:32:13"
											}
										]
									},
									"documentation": {
										"id": 1078,
										"nodeType": "StructuredDocumentation",
										"src": "698:91:13",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 1087,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1079,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "805:2:13"
									},
									"returnParameters": {
										"id": 1080,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "808:0:13"
									},
									"scope": 1131,
									"src": "794:63:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1095,
										"nodeType": "Block",
										"src": "988:30:13",
										"statements": [
											{
												"expression": {
													"id": 1093,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1071,
													"src": "1005:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1092,
												"id": 1094,
												"nodeType": "Return",
												"src": "998:13:13"
											}
										]
									},
									"documentation": {
										"id": 1088,
										"nodeType": "StructuredDocumentation",
										"src": "863:65:13",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 1096,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "942:5:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1089,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "947:2:13"
									},
									"returnParameters": {
										"id": 1092,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1091,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1096,
												"src": "979:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1090,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "979:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "978:9:13"
									},
									"scope": 1131,
									"src": "933:85:13",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1109,
										"nodeType": "Block",
										"src": "1127:96:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1104,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1100,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1096,
																	"src": "1145:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1101,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1145:7:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1102,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1017,
																	"src": "1156:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1103,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1156:12:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1145:23:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 1105,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1170:34:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 1099,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1137:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1137:68:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1107,
												"nodeType": "ExpressionStatement",
												"src": "1137:68:13"
											},
											{
												"id": 1108,
												"nodeType": "PlaceholderStatement",
												"src": "1215:1:13"
											}
										]
									},
									"documentation": {
										"id": 1097,
										"nodeType": "StructuredDocumentation",
										"src": "1024:77:13",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 1110,
									"name": "onlyOwner",
									"nameLocation": "1115:9:13",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1098,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1124:2:13"
									},
									"src": "1106:117:13",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1129,
										"nodeType": "Block",
										"src": "1440:124:13",
										"statements": [
											{
												"assignments": [
													1117
												],
												"declarations": [
													{
														"constant": false,
														"id": 1117,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "1458:8:13",
														"nodeType": "VariableDeclaration",
														"scope": 1129,
														"src": "1450:16:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1116,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1450:7:13",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1119,
												"initialValue": {
													"id": 1118,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1071,
													"src": "1469:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1450:25:13"
											},
											{
												"expression": {
													"id": 1122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1120,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1071,
														"src": "1485:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1121,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1113,
														"src": "1494:8:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1485:17:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1123,
												"nodeType": "ExpressionStatement",
												"src": "1485:17:13"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1125,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1117,
															"src": "1538:8:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1126,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1113,
															"src": "1548:8:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1124,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1077,
														"src": "1517:20:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1517:40:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1128,
												"nodeType": "EmitStatement",
												"src": "1512:45:13"
											}
										]
									},
									"documentation": {
										"id": 1111,
										"nodeType": "StructuredDocumentation",
										"src": "1229:143:13",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 1130,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "1386:18:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1113,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1413:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 1130,
												"src": "1405:16:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1405:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1404:18:13"
									},
									"returnParameters": {
										"id": 1115,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1440:0:13"
									},
									"scope": 1131,
									"src": "1377:187:13",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1132,
							"src": "514:1052:13",
							"usedErrors": []
						}
					],
					"src": "32:1534:13"
				},
				"id": 13
			},
			"Practice NFT.sol": {
				"ast": {
					"absolutePath": "Practice NFT.sol",
					"exportedSymbols": {
						"Address": [
							1005
						],
						"Context": [
							1027
						],
						"ERC1155Holder": [
							213
						],
						"ERC1155Receiver": [
							247
						],
						"ERC165": [
							1051
						],
						"ERC721Holder": [
							710
						],
						"IERC1155": [
							121
						],
						"IERC1155Receiver": [
							162
						],
						"IERC165": [
							1063
						],
						"IERC20": [
							325
						],
						"IERC721": [
							665
						],
						"IERC721Receiver": [
							683
						],
						"Ownable": [
							1131
						],
						"SafeERC20": [
							549
						],
						"TwoFactor": [
							1437
						]
					},
					"id": 1438,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1133,
							"literals": [
								"solidity",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "32:22:14"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1134,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1438,
							"sourceUnit": 326,
							"src": "56:56:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 1135,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1438,
							"sourceUnit": 550,
							"src": "113:65:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"id": 1136,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1438,
							"sourceUnit": 666,
							"src": "179:58:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol",
							"file": "@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol",
							"id": 1137,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1438,
							"sourceUnit": 711,
							"src": "238:69:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
							"file": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
							"id": 1138,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1438,
							"sourceUnit": 122,
							"src": "308:60:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol",
							"file": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol",
							"id": 1139,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1438,
							"sourceUnit": 214,
							"src": "369:71:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Ownable.sol",
							"file": "./Ownable.sol",
							"id": 1140,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1438,
							"sourceUnit": 1132,
							"src": "441:23:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1141,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1131,
										"src": "489:7:14"
									},
									"id": 1142,
									"nodeType": "InheritanceSpecifier",
									"src": "489:7:14"
								},
								{
									"baseName": {
										"id": 1143,
										"name": "ERC721Holder",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 710,
										"src": "498:12:14"
									},
									"id": 1144,
									"nodeType": "InheritanceSpecifier",
									"src": "498:12:14"
								},
								{
									"baseName": {
										"id": 1145,
										"name": "ERC1155Holder",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 213,
										"src": "512:13:14"
									},
									"id": 1146,
									"nodeType": "InheritanceSpecifier",
									"src": "512:13:14"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1437,
							"linearizedBaseContracts": [
								1437,
								213,
								247,
								162,
								1051,
								1063,
								710,
								683,
								1131,
								1027
							],
							"name": "TwoFactor",
							"nameLocation": "476:9:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1150,
									"libraryName": {
										"id": 1147,
										"name": "SafeERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 549,
										"src": "543:9:14"
									},
									"nodeType": "UsingForDirective",
									"src": "537:27:14",
									"typeName": {
										"id": 1149,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1148,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 325,
											"src": "557:6:14"
										},
										"referencedDeclaration": 325,
										"src": "557:6:14",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$325",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"id": 1152,
									"mutability": "mutable",
									"name": "isInitialized",
									"nameLocation": "588:13:14",
									"nodeType": "VariableDeclaration",
									"scope": 1437,
									"src": "575:26:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1151,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "575:4:14",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1154,
									"mutability": "mutable",
									"name": "backupWallet",
									"nameLocation": "623:12:14",
									"nodeType": "VariableDeclaration",
									"scope": 1437,
									"src": "607:28:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1153,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "607:7:14",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1207,
										"nodeType": "Block",
										"src": "707:437:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1167,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1162,
																"name": "_sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1156,
																"src": "733:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1165,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "751:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1164,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "743:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1163,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "743:7:14",
																		"typeDescriptions": {}
																	}
																},
																"id": 1166,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "743:10:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "733:20:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53656e64657220616464726573732063616e206e6f74206265207a65726f",
															"id": 1168,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "755:32:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2bdef3017b3ab8e90fcdd0203656ef49f1cf91890714ed98466b7f0b7c411dbc",
																"typeString": "literal_string \"Sender address can not be zero\""
															},
															"value": "Sender address can not be zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2bdef3017b3ab8e90fcdd0203656ef49f1cf91890714ed98466b7f0b7c411dbc",
																"typeString": "literal_string \"Sender address can not be zero\""
															}
														],
														"id": 1161,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "725:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "725:63:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1170,
												"nodeType": "ExpressionStatement",
												"src": "725:63:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1177,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1172,
																"name": "_backupWallet",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1158,
																"src": "806:13:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1175,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "830:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1174,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "822:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1173,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "822:7:14",
																		"typeDescriptions": {}
																	}
																},
																"id": 1176,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "822:10:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "806:26:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4261636b757020616464726573732063616e206e6f74206265207a65726f",
															"id": 1178,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "834:32:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_147837e924905a3bd7649319b6fc22646b0c017a57dd5a6eac862da5a06f6816",
																"typeString": "literal_string \"Backup address can not be zero\""
															},
															"value": "Backup address can not be zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_147837e924905a3bd7649319b6fc22646b0c017a57dd5a6eac862da5a06f6816",
																"typeString": "literal_string \"Backup address can not be zero\""
															}
														],
														"id": 1171,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "798:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "798:69:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1180,
												"nodeType": "ExpressionStatement",
												"src": "798:69:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1184,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1182,
																"name": "_backupWallet",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1158,
																"src": "885:13:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1183,
																"name": "_sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1156,
																"src": "901:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "885:23:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4261636b75702077616c6c65742063616e206e6f742062652073616d652061732073656e6465722077616c6c6574",
															"id": 1185,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "910:48:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ae81ee44af9e399b79dc430c2aa49760868f55e17e70be2d4b0876841d2be5a2",
																"typeString": "literal_string \"Backup wallet can not be same as sender wallet\""
															},
															"value": "Backup wallet can not be same as sender wallet"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ae81ee44af9e399b79dc430c2aa49760868f55e17e70be2d4b0876841d2be5a2",
																"typeString": "literal_string \"Backup wallet can not be same as sender wallet\""
															}
														],
														"id": 1181,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "877:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "877:82:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1187,
												"nodeType": "ExpressionStatement",
												"src": "877:82:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1191,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1189,
																"name": "isInitialized",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1152,
																"src": "977:13:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "66616c7365",
																"id": 1190,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "994:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"src": "977:22:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f6e747261637420616c726561647920696e697469616c697a6564",
															"id": 1192,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1001:30:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_99a5106e083f54e153095639f5c53baa0d355c3b1a37f6c84924da3b1b45cf57",
																"typeString": "literal_string \"Contract already initialized\""
															},
															"value": "Contract already initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_99a5106e083f54e153095639f5c53baa0d355c3b1a37f6c84924da3b1b45cf57",
																"typeString": "literal_string \"Contract already initialized\""
															}
														],
														"id": 1188,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "969:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "969:63:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1194,
												"nodeType": "ExpressionStatement",
												"src": "969:63:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1196,
															"name": "_sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1156,
															"src": "1061:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1195,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1130,
														"src": "1042:18:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1042:27:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1198,
												"nodeType": "ExpressionStatement",
												"src": "1042:27:14"
											},
											{
												"expression": {
													"id": 1201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1199,
														"name": "backupWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1154,
														"src": "1079:12:14",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1200,
														"name": "_backupWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1158,
														"src": "1094:13:14",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1079:28:14",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1202,
												"nodeType": "ExpressionStatement",
												"src": "1079:28:14"
											},
											{
												"expression": {
													"id": 1205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1203,
														"name": "isInitialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1152,
														"src": "1117:13:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1204,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1133:4:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1117:20:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1206,
												"nodeType": "ExpressionStatement",
												"src": "1117:20:14"
											}
										]
									},
									"functionSelector": "f09a4016",
									"id": 1208,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "init",
									"nameLocation": "653:4:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1156,
												"mutability": "mutable",
												"name": "_sender",
												"nameLocation": "666:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 1208,
												"src": "658:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1155,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1158,
												"mutability": "mutable",
												"name": "_backupWallet",
												"nameLocation": "683:13:14",
												"nodeType": "VariableDeclaration",
												"scope": 1208,
												"src": "675:21:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1157,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "675:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "657:40:14"
									},
									"returnParameters": {
										"id": 1160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "707:0:14"
									},
									"scope": 1437,
									"src": "644:500:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1211,
										"nodeType": "Block",
										"src": "1181:15:14",
										"statements": []
									},
									"id": 1212,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1209,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1161:2:14"
									},
									"returnParameters": {
										"id": 1210,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1181:0:14"
									},
									"scope": 1437,
									"src": "1154:42:14",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1228,
										"nodeType": "Block",
										"src": "1795:78:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1222,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1096,
																"src": "1835:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1223,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1835:7:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1224,
															"name": "tokenAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1214,
															"src": "1844:12:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1225,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1216,
															"src": "1858:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1221,
														"name": "_transferERC721FundsToAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1310,
														"src": "1805:29:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1805:61:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1227,
												"nodeType": "ExpressionStatement",
												"src": "1805:61:14"
											}
										]
									},
									"functionSelector": "027f81ed",
									"id": 1229,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1219,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1218,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1110,
												"src": "1780:9:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "1780:9:14"
										}
									],
									"name": "transferERC721AssetsToWallet",
									"nameLocation": "1681:28:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1214,
												"mutability": "mutable",
												"name": "tokenAddress",
												"nameLocation": "1727:12:14",
												"nodeType": "VariableDeclaration",
												"scope": 1229,
												"src": "1719:20:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1719:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1216,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1757:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 1229,
												"src": "1749:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1215,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1749:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1709:61:14"
									},
									"returnParameters": {
										"id": 1220,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1795:0:14"
									},
									"scope": 1437,
									"src": "1672:201:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1242,
										"nodeType": "Block",
										"src": "2418:64:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1237,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1096,
																		"src": "2466:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1238,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2466:7:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1236,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2458:8:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 1235,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2458:8:14",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 1239,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2458:16:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 1234,
														"name": "_transferNativeFundsToAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1436,
														"src": "2428:29:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$returns$__$",
															"typeString": "function (address payable)"
														}
													},
													"id": 1240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2428:47:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1241,
												"nodeType": "ExpressionStatement",
												"src": "2428:47:14"
											}
										]
									},
									"functionSelector": "8c7f807b",
									"id": 1243,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1232,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1231,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1110,
												"src": "2408:9:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "2408:9:14"
										}
									],
									"name": "transferNativeAssetToWallet",
									"nameLocation": "2369:27:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1230,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2396:2:14"
									},
									"returnParameters": {
										"id": 1233,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2418:0:14"
									},
									"scope": 1437,
									"src": "2360:122:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1258,
										"nodeType": "Block",
										"src": "3943:83:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1253,
															"name": "backupWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1154,
															"src": "3983:12:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1254,
															"name": "tokenAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1245,
															"src": "3997:12:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1255,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1247,
															"src": "4011:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1252,
														"name": "_transferERC721FundsToAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1310,
														"src": "3953:29:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3953:66:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1257,
												"nodeType": "ExpressionStatement",
												"src": "3953:66:14"
											}
										]
									},
									"functionSelector": "71b4bc99",
									"id": 1259,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1250,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1249,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1110,
												"src": "3933:9:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "3933:9:14"
										}
									],
									"name": "sendERC721FundsToBackupWallet",
									"nameLocation": "3833:29:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1245,
												"mutability": "mutable",
												"name": "tokenAddress",
												"nameLocation": "3880:12:14",
												"nodeType": "VariableDeclaration",
												"scope": 1259,
												"src": "3872:20:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3872:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3910:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 1259,
												"src": "3902:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3902:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:61:14"
									},
									"returnParameters": {
										"id": 1251,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3943:0:14"
									},
									"scope": 1437,
									"src": "3824:202:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1274,
										"nodeType": "Block",
										"src": "4152:84:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1269,
															"name": "backupWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1154,
															"src": "4193:12:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1270,
															"name": "tokenAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1261,
															"src": "4207:12:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1271,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1263,
															"src": "4221:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1268,
														"name": "_transferERC1155FundsToAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1352,
														"src": "4162:30:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4162:67:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1273,
												"nodeType": "ExpressionStatement",
												"src": "4162:67:14"
											}
										]
									},
									"functionSelector": "6354a2f7",
									"id": 1275,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1266,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1265,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1110,
												"src": "4142:9:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "4142:9:14"
										}
									],
									"name": "sendERC1155FundsToBackupWallet",
									"nameLocation": "4041:30:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1261,
												"mutability": "mutable",
												"name": "tokenAddress",
												"nameLocation": "4089:12:14",
												"nodeType": "VariableDeclaration",
												"scope": 1275,
												"src": "4081:20:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4081:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1263,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4119:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 1275,
												"src": "4111:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4111:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4071:61:14"
									},
									"returnParameters": {
										"id": 1267,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4152:0:14"
									},
									"scope": 1437,
									"src": "4032:204:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1287,
										"nodeType": "Block",
										"src": "4302:69:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1283,
																	"name": "backupWallet",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1154,
																	"src": "4350:12:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1282,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4342:8:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 1281,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4342:8:14",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 1284,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4342:21:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 1280,
														"name": "_transferNativeFundsToAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1436,
														"src": "4312:29:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$returns$__$",
															"typeString": "function (address payable)"
														}
													},
													"id": 1285,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4312:52:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1286,
												"nodeType": "ExpressionStatement",
												"src": "4312:52:14"
											}
										]
									},
									"functionSelector": "450b2ad7",
									"id": 1288,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1278,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1277,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1110,
												"src": "4292:9:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "4292:9:14"
										}
									],
									"name": "sendNativeFundsToBackupWallet",
									"nameLocation": "4251:29:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1276,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4280:2:14"
									},
									"returnParameters": {
										"id": 1279,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4302:0:14"
									},
									"scope": 1437,
									"src": "4242:129:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1309,
										"nodeType": "Block",
										"src": "4512:90:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1303,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4569:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_TwoFactor_$1437",
																		"typeString": "contract TwoFactor"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_TwoFactor_$1437",
																		"typeString": "contract TwoFactor"
																	}
																],
																"id": 1302,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4561:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1301,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4561:7:14",
																	"typeDescriptions": {}
																}
															},
															"id": 1304,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4561:13:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1305,
															"name": "toAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1290,
															"src": "4576:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1306,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1294,
															"src": "4587:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1298,
																	"name": "tokenAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1292,
																	"src": "4530:12:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1297,
																"name": "IERC721",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 665,
																"src": "4522:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC721_$665_$",
																	"typeString": "type(contract IERC721)"
																}
															},
															"id": 1299,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4522:21:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$665",
																"typeString": "contract IERC721"
															}
														},
														"id": 1300,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 620,
														"src": "4522:38:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 1307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4522:73:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1308,
												"nodeType": "ExpressionStatement",
												"src": "4522:73:14"
											}
										]
									},
									"id": 1310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferERC721FundsToAddress",
									"nameLocation": "4386:29:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1290,
												"mutability": "mutable",
												"name": "toAddress",
												"nameLocation": "4433:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 1310,
												"src": "4425:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1289,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4425:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1292,
												"mutability": "mutable",
												"name": "tokenAddress",
												"nameLocation": "4460:12:14",
												"nodeType": "VariableDeclaration",
												"scope": 1310,
												"src": "4452:20:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1291,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4452:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1294,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4490:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 1310,
												"src": "4482:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1293,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4482:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4415:88:14"
									},
									"returnParameters": {
										"id": 1296,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4512:0:14"
									},
									"scope": 1437,
									"src": "4377:225:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1351,
										"nodeType": "Block",
										"src": "4744:357:14",
										"statements": [
											{
												"assignments": [
													1320
												],
												"declarations": [
													{
														"constant": false,
														"id": 1320,
														"mutability": "mutable",
														"name": "balance",
														"nameLocation": "4762:7:14",
														"nodeType": "VariableDeclaration",
														"scope": 1351,
														"src": "4754:15:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1319,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4754:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1331,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1327,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4826:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_TwoFactor_$1437",
																		"typeString": "contract TwoFactor"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_TwoFactor_$1437",
																		"typeString": "contract TwoFactor"
																	}
																],
																"id": 1326,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4818:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1325,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4818:7:14",
																	"typeDescriptions": {}
																}
															},
															"id": 1328,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4818:13:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1329,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1316,
															"src": "4845:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1322,
																	"name": "tokenAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1314,
																	"src": "4781:12:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1321,
																"name": "IERC1155",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 121,
																"src": "4772:8:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC1155_$121_$",
																	"typeString": "type(contract IERC1155)"
																}
															},
															"id": 1323,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4772:22:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC1155_$121",
																"typeString": "contract IERC1155"
															}
														},
														"id": 1324,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 59,
														"src": "4772:32:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (address,uint256) view external returns (uint256)"
														}
													},
													"id": 1330,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4772:90:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4754:108:14"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1332,
														"name": "balance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1320,
														"src": "4876:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1333,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4886:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4876:11:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1350,
												"nodeType": "IfStatement",
												"src": "4872:223:14",
												"trueBody": {
													"id": 1349,
													"nodeType": "Block",
													"src": "4889:206:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1341,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "4968:4:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_TwoFactor_$1437",
																					"typeString": "contract TwoFactor"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_TwoFactor_$1437",
																					"typeString": "contract TwoFactor"
																				}
																			],
																			"id": 1340,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4960:7:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1339,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4960:7:14",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1342,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4960:13:14",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1343,
																		"name": "toAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1312,
																		"src": "4991:9:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1344,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1316,
																		"src": "5018:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1345,
																		"name": "balance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1320,
																		"src": "5043:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"hexValue": "",
																		"id": 1346,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5068:2:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		},
																		"value": ""
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1336,
																				"name": "tokenAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1314,
																				"src": "4912:12:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1335,
																			"name": "IERC1155",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 121,
																			"src": "4903:8:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155_$121_$",
																				"typeString": "type(contract IERC1155)"
																			}
																		},
																		"id": 1337,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4903:22:14",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155_$121",
																			"typeString": "contract IERC1155"
																		}
																	},
																	"id": 1338,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 104,
																	"src": "4903:39:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (address,address,uint256,uint256,bytes memory) external"
																	}
																},
																"id": 1347,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4903:181:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1348,
															"nodeType": "ExpressionStatement",
															"src": "4903:181:14"
														}
													]
												}
											}
										]
									},
									"id": 1352,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferERC1155FundsToAddress",
									"nameLocation": "4617:30:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1312,
												"mutability": "mutable",
												"name": "toAddress",
												"nameLocation": "4665:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 1352,
												"src": "4657:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1311,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4657:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1314,
												"mutability": "mutable",
												"name": "tokenAddress",
												"nameLocation": "4692:12:14",
												"nodeType": "VariableDeclaration",
												"scope": 1352,
												"src": "4684:20:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1313,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4684:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1316,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4722:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 1352,
												"src": "4714:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4714:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4647:88:14"
									},
									"returnParameters": {
										"id": 1318,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4744:0:14"
									},
									"scope": 1437,
									"src": "4608:493:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1410,
										"nodeType": "Block",
										"src": "5229:396:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1364,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1361,
																	"name": "tokenAddressList",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1357,
																	"src": "5247:16:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																"id": 1362,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "5247:23:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1363,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5274:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5247:28:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "417373657473206c6973742063616e6e6f7420626520656d707479",
															"id": 1365,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5277:29:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bf945bfab7d23ad196c45ee1ee36e4fe8bd8b02689cd07a1b003a6134067df91",
																"typeString": "literal_string \"Assets list cannot be empty\""
															},
															"value": "Assets list cannot be empty"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bf945bfab7d23ad196c45ee1ee36e4fe8bd8b02689cd07a1b003a6134067df91",
																"typeString": "literal_string \"Assets list cannot be empty\""
															}
														],
														"id": 1360,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5239:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5239:68:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1367,
												"nodeType": "ExpressionStatement",
												"src": "5239:68:14"
											},
											{
												"body": {
													"id": 1408,
													"nodeType": "Block",
													"src": "5371:248:14",
													"statements": [
														{
															"assignments": [
																1380
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1380,
																	"mutability": "mutable",
																	"name": "balance",
																	"nameLocation": "5393:7:14",
																	"nodeType": "VariableDeclaration",
																	"scope": 1408,
																	"src": "5385:15:14",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1379,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5385:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1392,
															"initialValue": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1389,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "5466:4:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_TwoFactor_$1437",
																					"typeString": "contract TwoFactor"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_TwoFactor_$1437",
																					"typeString": "contract TwoFactor"
																				}
																			],
																			"id": 1388,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5458:7:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1387,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5458:7:14",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1390,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5458:13:14",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"baseExpression": {
																					"id": 1382,
																					"name": "tokenAddressList",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1357,
																					"src": "5410:16:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																						"typeString": "address[] memory"
																					}
																				},
																				"id": 1384,
																				"indexExpression": {
																					"id": 1383,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1369,
																					"src": "5427:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "5410:19:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1381,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 325,
																			"src": "5403:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$325_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1385,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5403:27:14",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$325",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1386,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 282,
																	"src": "5403:37:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1391,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5403:82:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5385:100:14"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1395,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1393,
																	"name": "balance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1380,
																	"src": "5503:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1394,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5513:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "5503:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1407,
															"nodeType": "IfStatement",
															"src": "5499:110:14",
															"trueBody": {
																"id": 1406,
																"nodeType": "Block",
																"src": "5516:93:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1402,
																					"name": "toAddress",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1354,
																					"src": "5575:9:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1403,
																					"name": "balance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1380,
																					"src": "5586:7:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"baseExpression": {
																								"id": 1397,
																								"name": "tokenAddressList",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1357,
																								"src": "5541:16:14",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																									"typeString": "address[] memory"
																								}
																							},
																							"id": 1399,
																							"indexExpression": {
																								"id": 1398,
																								"name": "i",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1369,
																								"src": "5558:1:14",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "5541:19:14",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 1396,
																						"name": "IERC20",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 325,
																						"src": "5534:6:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_IERC20_$325_$",
																							"typeString": "type(contract IERC20)"
																						}
																					},
																					"id": 1400,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "5534:27:14",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$325",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 1401,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "safeTransfer",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 356,
																				"src": "5534:40:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$325_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$325_$",
																					"typeString": "function (contract IERC20,address,uint256)"
																				}
																			},
																			"id": 1404,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5534:60:14",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1405,
																		"nodeType": "ExpressionStatement",
																		"src": "5534:60:14"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1372,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1369,
														"src": "5337:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1373,
															"name": "tokenAddressList",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1357,
															"src": "5341:16:14",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 1374,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5341:23:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5337:27:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1409,
												"initializationExpression": {
													"assignments": [
														1369
													],
													"declarations": [
														{
															"constant": false,
															"id": 1369,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "5330:1:14",
															"nodeType": "VariableDeclaration",
															"scope": 1409,
															"src": "5322:9:14",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1368,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5322:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1371,
													"initialValue": {
														"hexValue": "30",
														"id": 1370,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5334:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "5322:13:14"
												},
												"loopExpression": {
													"expression": {
														"id": 1377,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "5366:3:14",
														"subExpression": {
															"id": 1376,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1369,
															"src": "5366:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1378,
													"nodeType": "ExpressionStatement",
													"src": "5366:3:14"
												},
												"nodeType": "ForStatement",
												"src": "5317:302:14"
											}
										]
									},
									"id": 1411,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferERC20FundsToAddress",
									"nameLocation": "5116:28:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1354,
												"mutability": "mutable",
												"name": "toAddress",
												"nameLocation": "5162:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 1411,
												"src": "5154:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1353,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5154:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1357,
												"mutability": "mutable",
												"name": "tokenAddressList",
												"nameLocation": "5198:16:14",
												"nodeType": "VariableDeclaration",
												"scope": 1411,
												"src": "5181:33:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1355,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "5181:7:14",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1356,
													"nodeType": "ArrayTypeName",
													"src": "5181:9:14",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5144:76:14"
									},
									"returnParameters": {
										"id": 1359,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5229:0:14"
									},
									"scope": 1437,
									"src": "5107:518:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1435,
										"nodeType": "Block",
										"src": "5705:134:14",
										"statements": [
											{
												"assignments": [
													1417
												],
												"declarations": [
													{
														"constant": false,
														"id": 1417,
														"mutability": "mutable",
														"name": "balance",
														"nameLocation": "5723:7:14",
														"nodeType": "VariableDeclaration",
														"scope": 1435,
														"src": "5715:15:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1416,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5715:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1423,
												"initialValue": {
													"expression": {
														"arguments": [
															{
																"id": 1420,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "5741:4:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_TwoFactor_$1437",
																	"typeString": "contract TwoFactor"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_TwoFactor_$1437",
																	"typeString": "contract TwoFactor"
																}
															],
															"id": 1419,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5733:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1418,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5733:7:14",
																"typeDescriptions": {}
															}
														},
														"id": 1421,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5733:13:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "5733:21:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5715:39:14"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1424,
														"name": "balance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1417,
														"src": "5768:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1425,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5778:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5768:11:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1434,
												"nodeType": "IfStatement",
												"src": "5764:69:14",
												"trueBody": {
													"id": 1433,
													"nodeType": "Block",
													"src": "5781:52:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1430,
																		"name": "balance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1417,
																		"src": "5814:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1427,
																		"name": "toAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1413,
																		"src": "5795:9:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"id": 1429,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"src": "5795:18:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 1431,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5795:27:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1432,
															"nodeType": "ExpressionStatement",
															"src": "5795:27:14"
														}
													]
												}
											}
										]
									},
									"id": 1436,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferNativeFundsToAddress",
									"nameLocation": "5640:29:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1413,
												"mutability": "mutable",
												"name": "toAddress",
												"nameLocation": "5686:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 1436,
												"src": "5670:25:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1412,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5670:15:14",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5669:27:14"
									},
									"returnParameters": {
										"id": 1415,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5705:0:14"
									},
									"scope": 1437,
									"src": "5631:208:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1438,
							"src": "467:5374:14",
							"usedErrors": []
						}
					],
					"src": "32:5809:14"
				},
				"id": 14
			}
		}
	}
}