{
	"id": "fdf18cd8c1f136846a59bffc0e7ee645",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"Pratice2nd.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.7;\n\n\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\";\n\n\ncontract ManiTransfer is ERC721Holder {\n    \n    function _transferERC721FundsToAddress(\n        address toAddress,\n        address tokenAddress,\n        uint256 tokenId\n    ) public {\n        IERC721(tokenAddress).safeTransferFrom(address(this), toAddress, tokenId);\n    }\n}"
			},
			"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/utils/ERC721Holder.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC721Receiver.sol\";\n\n/**\n * @dev Implementation of the {IERC721Receiver} interface.\n *\n * Accepts all token transfers.\n * Make sure the contract is able to use its token with {IERC721-safeTransferFrom}, {IERC721-approve} or {IERC721-setApprovalForAll}.\n */\ncontract ERC721Holder is IERC721Receiver {\n    /**\n     * @dev See {IERC721Receiver-onERC721Received}.\n     *\n     * Always returns `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address,\n        address,\n        uint256,\n        bytes memory\n    ) public virtual override returns (bytes4) {\n        return this.onERC721Received.selector;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x0d4de01fe5360c38b4ad2b0822a12722958428f5138a7ff47c1720eb6fa52bba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77724cecdfba8814632ab58737c2b0f2d4ad2d532bc614aee559b5593c1152f0\",\"dweb:/ipfs/QmUcE6gXyv7CQh4sUdcDABYKGTovTe1zLMZSEq95nkc3ph\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol": {
				"ERC721Holder": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC721Receiver} interface. Accepts all token transfers. Make sure the contract is able to use its token with {IERC721-safeTransferFrom}, {IERC721-approve} or {IERC721-setApprovalForAll}.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":399:790  contract ERC721Holder is IERC721Receiver {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":399:790  contract ERC721Holder is IERC721Receiver {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x150b7a02\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":588:788  function onERC721Received(... */\n    tag_3:\n      tag_4\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_5\n      swap2\n      swap1\n      tag_6\n      jump\t// in\n    tag_5:\n      tag_7\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_7:\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":726:732  bytes4 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":751:781  this.onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":744:781  return this.onERC721Received.selector */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":588:788  function onERC721Received(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:417   */\n    tag_12:\n        /* \"#utility.yul\":84:89   */\n      0x00\n        /* \"#utility.yul\":109:174   */\n      tag_14\n        /* \"#utility.yul\":125:173   */\n      tag_15\n        /* \"#utility.yul\":166:172   */\n      dup5\n        /* \"#utility.yul\":125:173   */\n      tag_16\n      jump\t// in\n    tag_15:\n        /* \"#utility.yul\":109:174   */\n      tag_17\n      jump\t// in\n    tag_14:\n        /* \"#utility.yul\":100:174   */\n      swap1\n      pop\n        /* \"#utility.yul\":197:203   */\n      dup3\n        /* \"#utility.yul\":190:195   */\n      dup2\n        /* \"#utility.yul\":183:204   */\n      mstore\n        /* \"#utility.yul\":235:239   */\n      0x20\n        /* \"#utility.yul\":228:233   */\n      dup2\n        /* \"#utility.yul\":224:240   */\n      add\n        /* \"#utility.yul\":273:276   */\n      dup5\n        /* \"#utility.yul\":264:270   */\n      dup5\n        /* \"#utility.yul\":259:262   */\n      dup5\n        /* \"#utility.yul\":255:271   */\n      add\n        /* \"#utility.yul\":252:277   */\n      gt\n        /* \"#utility.yul\":249:361   */\n      iszero\n      tag_18\n      jumpi\n        /* \"#utility.yul\":280:359   */\n      tag_19\n      tag_20\n      jump\t// in\n    tag_19:\n        /* \"#utility.yul\":249:361   */\n    tag_18:\n        /* \"#utility.yul\":370:411   */\n      tag_21\n        /* \"#utility.yul\":404:410   */\n      dup5\n        /* \"#utility.yul\":399:402   */\n      dup3\n        /* \"#utility.yul\":394:397   */\n      dup6\n        /* \"#utility.yul\":370:411   */\n      tag_22\n      jump\t// in\n    tag_21:\n        /* \"#utility.yul\":90:417   */\n      pop\n        /* \"#utility.yul\":7:417   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":423:562   */\n    tag_23:\n        /* \"#utility.yul\":469:474   */\n      0x00\n        /* \"#utility.yul\":507:513   */\n      dup2\n        /* \"#utility.yul\":494:514   */\n      calldataload\n        /* \"#utility.yul\":485:514   */\n      swap1\n      pop\n        /* \"#utility.yul\":523:556   */\n      tag_25\n        /* \"#utility.yul\":550:555   */\n      dup2\n        /* \"#utility.yul\":523:556   */\n      tag_26\n      jump\t// in\n    tag_25:\n        /* \"#utility.yul\":423:562   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":581:919   */\n    tag_27:\n        /* \"#utility.yul\":636:641   */\n      0x00\n        /* \"#utility.yul\":685:688   */\n      dup3\n        /* \"#utility.yul\":678:682   */\n      0x1f\n        /* \"#utility.yul\":670:676   */\n      dup4\n        /* \"#utility.yul\":666:683   */\n      add\n        /* \"#utility.yul\":662:689   */\n      slt\n        /* \"#utility.yul\":652:774   */\n      tag_29\n      jumpi\n        /* \"#utility.yul\":693:772   */\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n        /* \"#utility.yul\":652:774   */\n    tag_29:\n        /* \"#utility.yul\":810:816   */\n      dup2\n        /* \"#utility.yul\":797:817   */\n      calldataload\n        /* \"#utility.yul\":835:913   */\n      tag_32\n        /* \"#utility.yul\":909:912   */\n      dup5\n        /* \"#utility.yul\":901:907   */\n      dup3\n        /* \"#utility.yul\":894:898   */\n      0x20\n        /* \"#utility.yul\":886:892   */\n      dup7\n        /* \"#utility.yul\":882:899   */\n      add\n        /* \"#utility.yul\":835:913   */\n      tag_12\n      jump\t// in\n    tag_32:\n        /* \"#utility.yul\":826:913   */\n      swap2\n      pop\n        /* \"#utility.yul\":642:919   */\n      pop\n        /* \"#utility.yul\":581:919   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":925:1064   */\n    tag_33:\n        /* \"#utility.yul\":971:976   */\n      0x00\n        /* \"#utility.yul\":1009:1015   */\n      dup2\n        /* \"#utility.yul\":996:1016   */\n      calldataload\n        /* \"#utility.yul\":987:1016   */\n      swap1\n      pop\n        /* \"#utility.yul\":1025:1058   */\n      tag_35\n        /* \"#utility.yul\":1052:1057   */\n      dup2\n        /* \"#utility.yul\":1025:1058   */\n      tag_36\n      jump\t// in\n    tag_35:\n        /* \"#utility.yul\":925:1064   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1070:2013   */\n    tag_6:\n        /* \"#utility.yul\":1165:1171   */\n      0x00\n        /* \"#utility.yul\":1173:1179   */\n      dup1\n        /* \"#utility.yul\":1181:1187   */\n      0x00\n        /* \"#utility.yul\":1189:1195   */\n      dup1\n        /* \"#utility.yul\":1238:1241   */\n      0x80\n        /* \"#utility.yul\":1226:1235   */\n      dup6\n        /* \"#utility.yul\":1217:1224   */\n      dup8\n        /* \"#utility.yul\":1213:1236   */\n      sub\n        /* \"#utility.yul\":1209:1242   */\n      slt\n        /* \"#utility.yul\":1206:1326   */\n      iszero\n      tag_38\n      jumpi\n        /* \"#utility.yul\":1245:1324   */\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n        /* \"#utility.yul\":1206:1326   */\n    tag_38:\n        /* \"#utility.yul\":1365:1366   */\n      0x00\n        /* \"#utility.yul\":1390:1443   */\n      tag_41\n        /* \"#utility.yul\":1435:1442   */\n      dup8\n        /* \"#utility.yul\":1426:1432   */\n      dup3\n        /* \"#utility.yul\":1415:1424   */\n      dup9\n        /* \"#utility.yul\":1411:1433   */\n      add\n        /* \"#utility.yul\":1390:1443   */\n      tag_23\n      jump\t// in\n    tag_41:\n        /* \"#utility.yul\":1380:1443   */\n      swap5\n      pop\n        /* \"#utility.yul\":1336:1453   */\n      pop\n        /* \"#utility.yul\":1492:1494   */\n      0x20\n        /* \"#utility.yul\":1518:1571   */\n      tag_42\n        /* \"#utility.yul\":1563:1570   */\n      dup8\n        /* \"#utility.yul\":1554:1560   */\n      dup3\n        /* \"#utility.yul\":1543:1552   */\n      dup9\n        /* \"#utility.yul\":1539:1561   */\n      add\n        /* \"#utility.yul\":1518:1571   */\n      tag_23\n      jump\t// in\n    tag_42:\n        /* \"#utility.yul\":1508:1571   */\n      swap4\n      pop\n        /* \"#utility.yul\":1463:1581   */\n      pop\n        /* \"#utility.yul\":1620:1622   */\n      0x40\n        /* \"#utility.yul\":1646:1699   */\n      tag_43\n        /* \"#utility.yul\":1691:1698   */\n      dup8\n        /* \"#utility.yul\":1682:1688   */\n      dup3\n        /* \"#utility.yul\":1671:1680   */\n      dup9\n        /* \"#utility.yul\":1667:1689   */\n      add\n        /* \"#utility.yul\":1646:1699   */\n      tag_33\n      jump\t// in\n    tag_43:\n        /* \"#utility.yul\":1636:1699   */\n      swap3\n      pop\n        /* \"#utility.yul\":1591:1709   */\n      pop\n        /* \"#utility.yul\":1776:1778   */\n      0x60\n        /* \"#utility.yul\":1765:1774   */\n      dup6\n        /* \"#utility.yul\":1761:1779   */\n      add\n        /* \"#utility.yul\":1748:1780   */\n      calldataload\n        /* \"#utility.yul\":1807:1825   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1799:1805   */\n      dup2\n        /* \"#utility.yul\":1796:1826   */\n      gt\n        /* \"#utility.yul\":1793:1910   */\n      iszero\n      tag_44\n      jumpi\n        /* \"#utility.yul\":1829:1908   */\n      tag_45\n      tag_46\n      jump\t// in\n    tag_45:\n        /* \"#utility.yul\":1793:1910   */\n    tag_44:\n        /* \"#utility.yul\":1934:1996   */\n      tag_47\n        /* \"#utility.yul\":1988:1995   */\n      dup8\n        /* \"#utility.yul\":1979:1985   */\n      dup3\n        /* \"#utility.yul\":1968:1977   */\n      dup9\n        /* \"#utility.yul\":1964:1986   */\n      add\n        /* \"#utility.yul\":1934:1996   */\n      tag_27\n      jump\t// in\n    tag_47:\n        /* \"#utility.yul\":1924:1996   */\n      swap2\n      pop\n        /* \"#utility.yul\":1719:2006   */\n      pop\n        /* \"#utility.yul\":1070:2013   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2019:2134   */\n    tag_48:\n        /* \"#utility.yul\":2104:2127   */\n      tag_50\n        /* \"#utility.yul\":2121:2126   */\n      dup2\n        /* \"#utility.yul\":2104:2127   */\n      tag_51\n      jump\t// in\n    tag_50:\n        /* \"#utility.yul\":2099:2102   */\n      dup3\n        /* \"#utility.yul\":2092:2128   */\n      mstore\n        /* \"#utility.yul\":2019:2134   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2140:2358   */\n    tag_9:\n        /* \"#utility.yul\":2231:2235   */\n      0x00\n        /* \"#utility.yul\":2269:2271   */\n      0x20\n        /* \"#utility.yul\":2258:2267   */\n      dup3\n        /* \"#utility.yul\":2254:2272   */\n      add\n        /* \"#utility.yul\":2246:2272   */\n      swap1\n      pop\n        /* \"#utility.yul\":2282:2351   */\n      tag_53\n        /* \"#utility.yul\":2348:2349   */\n      0x00\n        /* \"#utility.yul\":2337:2346   */\n      dup4\n        /* \"#utility.yul\":2333:2350   */\n      add\n        /* \"#utility.yul\":2324:2330   */\n      dup5\n        /* \"#utility.yul\":2282:2351   */\n      tag_48\n      jump\t// in\n    tag_53:\n        /* \"#utility.yul\":2140:2358   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2364:2493   */\n    tag_17:\n        /* \"#utility.yul\":2398:2404   */\n      0x00\n        /* \"#utility.yul\":2425:2445   */\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n        /* \"#utility.yul\":2415:2445   */\n      swap1\n      pop\n        /* \"#utility.yul\":2454:2487   */\n      tag_57\n        /* \"#utility.yul\":2482:2486   */\n      dup3\n        /* \"#utility.yul\":2474:2480   */\n      dup3\n        /* \"#utility.yul\":2454:2487   */\n      tag_58\n      jump\t// in\n    tag_57:\n        /* \"#utility.yul\":2364:2493   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2499:2574   */\n    tag_56:\n        /* \"#utility.yul\":2532:2538   */\n      0x00\n        /* \"#utility.yul\":2565:2567   */\n      0x40\n        /* \"#utility.yul\":2559:2568   */\n      mload\n        /* \"#utility.yul\":2549:2568   */\n      swap1\n      pop\n        /* \"#utility.yul\":2499:2574   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":2580:2887   */\n    tag_16:\n        /* \"#utility.yul\":2641:2645   */\n      0x00\n        /* \"#utility.yul\":2731:2749   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2723:2729   */\n      dup3\n        /* \"#utility.yul\":2720:2750   */\n      gt\n        /* \"#utility.yul\":2717:2773   */\n      iszero\n      tag_61\n      jumpi\n        /* \"#utility.yul\":2753:2771   */\n      tag_62\n      tag_63\n      jump\t// in\n    tag_62:\n        /* \"#utility.yul\":2717:2773   */\n    tag_61:\n        /* \"#utility.yul\":2791:2820   */\n      tag_64\n        /* \"#utility.yul\":2813:2819   */\n      dup3\n        /* \"#utility.yul\":2791:2820   */\n      tag_65\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":2783:2820   */\n      swap1\n      pop\n        /* \"#utility.yul\":2875:2879   */\n      0x20\n        /* \"#utility.yul\":2869:2873   */\n      dup2\n        /* \"#utility.yul\":2865:2880   */\n      add\n        /* \"#utility.yul\":2857:2880   */\n      swap1\n      pop\n        /* \"#utility.yul\":2580:2887   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2893:2989   */\n    tag_66:\n        /* \"#utility.yul\":2930:2937   */\n      0x00\n        /* \"#utility.yul\":2959:2983   */\n      tag_68\n        /* \"#utility.yul\":2977:2982   */\n      dup3\n        /* \"#utility.yul\":2959:2983   */\n      tag_69\n      jump\t// in\n    tag_68:\n        /* \"#utility.yul\":2948:2983   */\n      swap1\n      pop\n        /* \"#utility.yul\":2893:2989   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2995:3144   */\n    tag_51:\n        /* \"#utility.yul\":3031:3038   */\n      0x00\n        /* \"#utility.yul\":3071:3137   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3064:3069   */\n      dup3\n        /* \"#utility.yul\":3060:3138   */\n      and\n        /* \"#utility.yul\":3049:3138   */\n      swap1\n      pop\n        /* \"#utility.yul\":2995:3144   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3150:3276   */\n    tag_69:\n        /* \"#utility.yul\":3187:3194   */\n      0x00\n        /* \"#utility.yul\":3227:3269   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3220:3225   */\n      dup3\n        /* \"#utility.yul\":3216:3270   */\n      and\n        /* \"#utility.yul\":3205:3270   */\n      swap1\n      pop\n        /* \"#utility.yul\":3150:3276   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3282:3359   */\n    tag_72:\n        /* \"#utility.yul\":3319:3326   */\n      0x00\n        /* \"#utility.yul\":3348:3353   */\n      dup2\n        /* \"#utility.yul\":3337:3353   */\n      swap1\n      pop\n        /* \"#utility.yul\":3282:3359   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3365:3519   */\n    tag_22:\n        /* \"#utility.yul\":3449:3455   */\n      dup3\n        /* \"#utility.yul\":3444:3447   */\n      dup2\n        /* \"#utility.yul\":3439:3442   */\n      dup4\n        /* \"#utility.yul\":3426:3456   */\n      calldatacopy\n        /* \"#utility.yul\":3511:3512   */\n      0x00\n        /* \"#utility.yul\":3502:3508   */\n      dup4\n        /* \"#utility.yul\":3497:3500   */\n      dup4\n        /* \"#utility.yul\":3493:3509   */\n      add\n        /* \"#utility.yul\":3486:3513   */\n      mstore\n        /* \"#utility.yul\":3365:3519   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3525:3806   */\n    tag_58:\n        /* \"#utility.yul\":3608:3635   */\n      tag_76\n        /* \"#utility.yul\":3630:3634   */\n      dup3\n        /* \"#utility.yul\":3608:3635   */\n      tag_65\n      jump\t// in\n    tag_76:\n        /* \"#utility.yul\":3600:3606   */\n      dup2\n        /* \"#utility.yul\":3596:3636   */\n      add\n        /* \"#utility.yul\":3738:3744   */\n      dup2\n        /* \"#utility.yul\":3726:3736   */\n      dup2\n        /* \"#utility.yul\":3723:3745   */\n      lt\n        /* \"#utility.yul\":3702:3720   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3690:3700   */\n      dup3\n        /* \"#utility.yul\":3687:3721   */\n      gt\n        /* \"#utility.yul\":3684:3746   */\n      or\n        /* \"#utility.yul\":3681:3769   */\n      iszero\n      tag_77\n      jumpi\n        /* \"#utility.yul\":3749:3767   */\n      tag_78\n      tag_63\n      jump\t// in\n    tag_78:\n        /* \"#utility.yul\":3681:3769   */\n    tag_77:\n        /* \"#utility.yul\":3789:3799   */\n      dup1\n        /* \"#utility.yul\":3785:3787   */\n      0x40\n        /* \"#utility.yul\":3778:3800   */\n      mstore\n        /* \"#utility.yul\":3568:3806   */\n      pop\n        /* \"#utility.yul\":3525:3806   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3812:3992   */\n    tag_63:\n        /* \"#utility.yul\":3860:3937   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3857:3858   */\n      0x00\n        /* \"#utility.yul\":3850:3938   */\n      mstore\n        /* \"#utility.yul\":3957:3961   */\n      0x41\n        /* \"#utility.yul\":3954:3955   */\n      0x04\n        /* \"#utility.yul\":3947:3962   */\n      mstore\n        /* \"#utility.yul\":3981:3985   */\n      0x24\n        /* \"#utility.yul\":3978:3979   */\n      0x00\n        /* \"#utility.yul\":3971:3986   */\n      revert\n        /* \"#utility.yul\":3998:4115   */\n    tag_31:\n        /* \"#utility.yul\":4107:4108   */\n      0x00\n        /* \"#utility.yul\":4104:4105   */\n      dup1\n        /* \"#utility.yul\":4097:4109   */\n      revert\n        /* \"#utility.yul\":4121:4238   */\n    tag_20:\n        /* \"#utility.yul\":4230:4231   */\n      0x00\n        /* \"#utility.yul\":4227:4228   */\n      dup1\n        /* \"#utility.yul\":4220:4232   */\n      revert\n        /* \"#utility.yul\":4244:4361   */\n    tag_46:\n        /* \"#utility.yul\":4353:4354   */\n      0x00\n        /* \"#utility.yul\":4350:4351   */\n      dup1\n        /* \"#utility.yul\":4343:4355   */\n      revert\n        /* \"#utility.yul\":4367:4484   */\n    tag_40:\n        /* \"#utility.yul\":4476:4477   */\n      0x00\n        /* \"#utility.yul\":4473:4474   */\n      dup1\n        /* \"#utility.yul\":4466:4478   */\n      revert\n        /* \"#utility.yul\":4490:4592   */\n    tag_65:\n        /* \"#utility.yul\":4531:4537   */\n      0x00\n        /* \"#utility.yul\":4582:4584   */\n      0x1f\n        /* \"#utility.yul\":4578:4585   */\n      not\n        /* \"#utility.yul\":4573:4575   */\n      0x1f\n        /* \"#utility.yul\":4566:4571   */\n      dup4\n        /* \"#utility.yul\":4562:4576   */\n      add\n        /* \"#utility.yul\":4558:4586   */\n      and\n        /* \"#utility.yul\":4548:4586   */\n      swap1\n      pop\n        /* \"#utility.yul\":4490:4592   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4598:4720   */\n    tag_26:\n        /* \"#utility.yul\":4671:4695   */\n      tag_86\n        /* \"#utility.yul\":4689:4694   */\n      dup2\n        /* \"#utility.yul\":4671:4695   */\n      tag_66\n      jump\t// in\n    tag_86:\n        /* \"#utility.yul\":4664:4669   */\n      dup2\n        /* \"#utility.yul\":4661:4696   */\n      eq\n        /* \"#utility.yul\":4651:4714   */\n      tag_87\n      jumpi\n        /* \"#utility.yul\":4710:4711   */\n      0x00\n        /* \"#utility.yul\":4707:4708   */\n      dup1\n        /* \"#utility.yul\":4700:4712   */\n      revert\n        /* \"#utility.yul\":4651:4714   */\n    tag_87:\n        /* \"#utility.yul\":4598:4720   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4726:4848   */\n    tag_36:\n        /* \"#utility.yul\":4799:4823   */\n      tag_89\n        /* \"#utility.yul\":4817:4822   */\n      dup2\n        /* \"#utility.yul\":4799:4823   */\n      tag_72\n      jump\t// in\n    tag_89:\n        /* \"#utility.yul\":4792:4797   */\n      dup2\n        /* \"#utility.yul\":4789:4824   */\n      eq\n        /* \"#utility.yul\":4779:4842   */\n      tag_90\n      jumpi\n        /* \"#utility.yul\":4838:4839   */\n      0x00\n        /* \"#utility.yul\":4835:4836   */\n      dup1\n        /* \"#utility.yul\":4828:4840   */\n      revert\n        /* \"#utility.yul\":4779:4842   */\n    tag_90:\n        /* \"#utility.yul\":4726:4848   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220115588fbcdf5dab7da7bd34dccded22eacbc217b00e408cac02adfbab4e87b9164736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610371806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063150b7a0214610030575b600080fd5b61004a6004803603810190610045919061010e565b610060565b60405161005791906101a0565b60405180910390f35b600063150b7a0260e01b9050949350505050565b6000610087610082846101e0565b6101bb565b9050828152602081018484840111156100a3576100a26102ed565b5b6100ae848285610279565b509392505050565b6000813590506100c58161030d565b92915050565b600082601f8301126100e0576100df6102e8565b5b81356100f0848260208601610074565b91505092915050565b60008135905061010881610324565b92915050565b60008060008060808587031215610128576101276102f7565b5b6000610136878288016100b6565b9450506020610147878288016100b6565b9350506040610158878288016100f9565b925050606085013567ffffffffffffffff811115610179576101786102f2565b5b610185878288016100cb565b91505092959194509250565b61019a81610223565b82525050565b60006020820190506101b56000830184610191565b92915050565b60006101c56101d6565b90506101d18282610288565b919050565b6000604051905090565b600067ffffffffffffffff8211156101fb576101fa6102b9565b5b610204826102fc565b9050602081019050919050565b600061021c8261024f565b9050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b610291826102fc565b810181811067ffffffffffffffff821117156102b0576102af6102b9565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b61031681610211565b811461032157600080fd5b50565b61032d8161026f565b811461033857600080fd5b5056fea2646970667358221220115588fbcdf5dab7da7bd34dccded22eacbc217b00e408cac02adfbab4e87b9164736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x371 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x10E JUMP JUMPDEST PUSH2 0x60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57 SWAP2 SWAP1 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH4 0x150B7A02 PUSH1 0xE0 SHL SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x87 PUSH2 0x82 DUP5 PUSH2 0x1E0 JUMP JUMPDEST PUSH2 0x1BB JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0xA3 JUMPI PUSH2 0xA2 PUSH2 0x2ED JUMP JUMPDEST JUMPDEST PUSH2 0xAE DUP5 DUP3 DUP6 PUSH2 0x279 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC5 DUP2 PUSH2 0x30D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xE0 JUMPI PUSH2 0xDF PUSH2 0x2E8 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xF0 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x74 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x108 DUP2 PUSH2 0x324 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x128 JUMPI PUSH2 0x127 PUSH2 0x2F7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x136 DUP8 DUP3 DUP9 ADD PUSH2 0xB6 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x147 DUP8 DUP3 DUP9 ADD PUSH2 0xB6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x158 DUP8 DUP3 DUP9 ADD PUSH2 0xF9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x179 JUMPI PUSH2 0x178 PUSH2 0x2F2 JUMP JUMPDEST JUMPDEST PUSH2 0x185 DUP8 DUP3 DUP9 ADD PUSH2 0xCB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x19A DUP2 PUSH2 0x223 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x191 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C5 PUSH2 0x1D6 JUMP JUMPDEST SWAP1 POP PUSH2 0x1D1 DUP3 DUP3 PUSH2 0x288 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1FB JUMPI PUSH2 0x1FA PUSH2 0x2B9 JUMP JUMPDEST JUMPDEST PUSH2 0x204 DUP3 PUSH2 0x2FC JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21C DUP3 PUSH2 0x24F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH2 0x291 DUP3 PUSH2 0x2FC JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2B0 JUMPI PUSH2 0x2AF PUSH2 0x2B9 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x316 DUP2 PUSH2 0x211 JUMP JUMPDEST DUP2 EQ PUSH2 0x321 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x32D DUP2 PUSH2 0x26F JUMP JUMPDEST DUP2 EQ PUSH2 0x338 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GT SSTORE DUP9 0xFB 0xCD CREATE2 0xDA 0xB7 0xDA PUSH28 0xD34DCCDED22EACBC217B00E408CAC02ADFBAB4E87B9164736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "399:391:2:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@onERC721Received_159": {
									"entryPoint": 96,
									"id": 159,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 116,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 182,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 203,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 249,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 270,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_encode_t_bytes4_to_t_bytes4_fromStack": {
									"entryPoint": 401,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
									"entryPoint": 416,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 443,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 470,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 480,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 529,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 547,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 591,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 623,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory": {
									"entryPoint": 633,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"finalize_allocation": {
									"entryPoint": 648,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 697,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 744,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 749,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 754,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 759,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 764,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 781,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 804,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4851:5",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "90:327:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "100:74:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "166:6:5"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "125:40:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "125:48:5"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "109:15:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "109:65:5"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "100:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "190:5:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "197:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "183:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "183:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "183:21:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "213:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "228:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "235:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "224:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "224:16:5"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "217:3:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "278:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "280:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "280:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "280:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "259:3:5"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "264:6:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "255:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "255:16:5"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "273:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "252:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "252:25:5"
															},
															"nodeType": "YulIf",
															"src": "249:112:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "394:3:5"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "399:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "404:6:5"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "370:23:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "370:41:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "370:41:5"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "63:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "68:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "76:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "84:5:5",
														"type": ""
													}
												],
												"src": "7:410:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "475:87:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "485:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "507:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "494:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "494:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "485:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "523:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "523:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "523:33:5"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "453:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "461:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "469:5:5",
														"type": ""
													}
												],
												"src": "423:139:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "642:277:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "691:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "693:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "693:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "693:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "670:6:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "678:4:5",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "666:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "666:17:5"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "685:3:5"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "662:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "662:27:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "655:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "655:35:5"
															},
															"nodeType": "YulIf",
															"src": "652:122:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "783:34:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "810:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "797:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "797:20:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "787:6:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "826:87:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "886:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "894:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "882:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "882:17:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "901:6:5"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "909:3:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "835:46:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "835:78:5"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "826:5:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "620:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "628:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "636:5:5",
														"type": ""
													}
												],
												"src": "581:338:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "977:87:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "987:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1009:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "996:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "996:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "987:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1052:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1025:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1025:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1025:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "955:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "963:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "971:5:5",
														"type": ""
													}
												],
												"src": "925:139:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1196:817:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1243:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1245:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1245:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1245:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1217:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1226:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1213:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1213:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1238:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1209:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1209:33:5"
															},
															"nodeType": "YulIf",
															"src": "1206:120:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "1336:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1351:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1365:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1355:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1380:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1415:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1426:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1411:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1411:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1435:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1390:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1390:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1380:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1463:118:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1478:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1492:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1482:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1508:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1543:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1554:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1539:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1539:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1563:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1518:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1518:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1508:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1591:118:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1606:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1620:2:5",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1610:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1636:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1671:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1682:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1667:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1667:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1691:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1646:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1646:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "1636:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1719:287:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1734:46:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1765:9:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1776:2:5",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1761:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1761:18:5"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "1748:12:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1748:32:5"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1738:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1827:83:5",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "1829:77:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1829:79:5"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1829:79:5"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1799:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1807:18:5",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1796:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1796:30:5"
																	},
																	"nodeType": "YulIf",
																	"src": "1793:117:5"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1924:72:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1968:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1979:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1964:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1964:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1988:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "1934:29:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1934:62:5"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "1924:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1142:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1153:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1165:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1173:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1181:6:5",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "1189:6:5",
														"type": ""
													}
												],
												"src": "1070:943:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2082:52:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2099:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2121:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "2104:16:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2104:23:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2092:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2092:36:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2092:36:5"
														}
													]
												},
												"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2070:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2077:3:5",
														"type": ""
													}
												],
												"src": "2019:115:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2236:122:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2246:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2258:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2269:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2254:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2254:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2246:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2324:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2337:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2348:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2333:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2333:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2282:41:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2282:69:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2282:69:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2208:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2220:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2231:4:5",
														"type": ""
													}
												],
												"src": "2140:218:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2405:88:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2415:30:5",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "2425:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2425:20:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "2415:6:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2474:6:5"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "2482:4:5"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "2454:19:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2454:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2454:33:5"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2389:4:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2398:6:5",
														"type": ""
													}
												],
												"src": "2364:129:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2539:35:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2549:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2565:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2559:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2559:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "2549:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2532:6:5",
														"type": ""
													}
												],
												"src": "2499:75:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2646:241:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2751:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2753:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2753:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2753:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2723:6:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2731:18:5",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2720:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2720:30:5"
															},
															"nodeType": "YulIf",
															"src": "2717:56:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2783:37:5",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2813:6:5"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "2791:21:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2791:29:5"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "2783:4:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2857:23:5",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "2869:4:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2875:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2865:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2865:15:5"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "2857:4:5"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2630:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2641:4:5",
														"type": ""
													}
												],
												"src": "2580:307:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2938:51:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2948:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2977:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2959:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2959:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2948:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2920:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2930:7:5",
														"type": ""
													}
												],
												"src": "2893:96:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3039:105:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3049:89:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3064:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3071:66:5",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3060:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3060:78:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3049:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3021:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3031:7:5",
														"type": ""
													}
												],
												"src": "2995:149:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3195:81:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3205:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3220:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3227:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3216:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3216:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3205:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3177:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3187:7:5",
														"type": ""
													}
												],
												"src": "3150:126:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3327:32:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3337:16:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3348:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3337:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3309:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3319:7:5",
														"type": ""
													}
												],
												"src": "3282:77:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3416:103:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "3439:3:5"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "3444:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3449:6:5"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "3426:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3426:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3426:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "3497:3:5"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3502:6:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3493:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3493:16:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3511:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3486:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3486:27:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3486:27:5"
														}
													]
												},
												"name": "copy_calldata_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "3398:3:5",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "3403:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3408:6:5",
														"type": ""
													}
												],
												"src": "3365:154:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3568:238:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3578:58:5",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3600:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "3630:4:5"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "3608:21:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3608:27:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3596:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3596:40:5"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "3582:10:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3747:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3749:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3749:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3749:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "3690:10:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3702:18:5",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3687:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3687:34:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "3726:10:5"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3738:6:5"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "3723:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3723:22:5"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "3684:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3684:62:5"
															},
															"nodeType": "YulIf",
															"src": "3681:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3785:2:5",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "3789:10:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3778:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3778:22:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3778:22:5"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3554:6:5",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "3562:4:5",
														"type": ""
													}
												],
												"src": "3525:281:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3840:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3857:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3860:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3850:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3850:88:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3850:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3954:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3957:4:5",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3947:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3947:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3947:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3978:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3981:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3971:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3971:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3971:15:5"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "3812:180:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4087:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4104:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4107:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4097:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4097:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4097:12:5"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "3998:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4210:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4227:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4230:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4220:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4220:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4220:12:5"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "4121:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4333:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4350:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4353:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4343:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4343:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4343:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "4244:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4456:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4473:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4476:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4466:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4466:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4466:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "4367:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4538:54:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4548:38:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4566:5:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4573:2:5",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4562:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4562:14:5"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4582:2:5",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "4578:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4578:7:5"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4558:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4558:28:5"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "4548:6:5"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4521:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "4531:6:5",
														"type": ""
													}
												],
												"src": "4490:102:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4641:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4698:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4707:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4710:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4700:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4700:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4700:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4664:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4689:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "4671:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4671:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4661:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4661:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4654:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4654:43:5"
															},
															"nodeType": "YulIf",
															"src": "4651:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4634:5:5",
														"type": ""
													}
												],
												"src": "4598:122:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4769:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4826:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4835:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4838:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4828:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4828:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4828:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4792:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4817:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "4799:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4799:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4789:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4789:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4782:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4782:43:5"
															},
															"nodeType": "YulIf",
															"src": "4779:63:5"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4762:5:5",
														"type": ""
													}
												],
												"src": "4726:122:5"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes4(value))\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c8063150b7a0214610030575b600080fd5b61004a6004803603810190610045919061010e565b610060565b60405161005791906101a0565b60405180910390f35b600063150b7a0260e01b9050949350505050565b6000610087610082846101e0565b6101bb565b9050828152602081018484840111156100a3576100a26102ed565b5b6100ae848285610279565b509392505050565b6000813590506100c58161030d565b92915050565b600082601f8301126100e0576100df6102e8565b5b81356100f0848260208601610074565b91505092915050565b60008135905061010881610324565b92915050565b60008060008060808587031215610128576101276102f7565b5b6000610136878288016100b6565b9450506020610147878288016100b6565b9350506040610158878288016100f9565b925050606085013567ffffffffffffffff811115610179576101786102f2565b5b610185878288016100cb565b91505092959194509250565b61019a81610223565b82525050565b60006020820190506101b56000830184610191565b92915050565b60006101c56101d6565b90506101d18282610288565b919050565b6000604051905090565b600067ffffffffffffffff8211156101fb576101fa6102b9565b5b610204826102fc565b9050602081019050919050565b600061021c8261024f565b9050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b610291826102fc565b810181811067ffffffffffffffff821117156102b0576102af6102b9565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b61031681610211565b811461032157600080fd5b50565b61032d8161026f565b811461033857600080fd5b5056fea2646970667358221220115588fbcdf5dab7da7bd34dccded22eacbc217b00e408cac02adfbab4e87b9164736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x10E JUMP JUMPDEST PUSH2 0x60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57 SWAP2 SWAP1 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH4 0x150B7A02 PUSH1 0xE0 SHL SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x87 PUSH2 0x82 DUP5 PUSH2 0x1E0 JUMP JUMPDEST PUSH2 0x1BB JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0xA3 JUMPI PUSH2 0xA2 PUSH2 0x2ED JUMP JUMPDEST JUMPDEST PUSH2 0xAE DUP5 DUP3 DUP6 PUSH2 0x279 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC5 DUP2 PUSH2 0x30D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xE0 JUMPI PUSH2 0xDF PUSH2 0x2E8 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xF0 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x74 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x108 DUP2 PUSH2 0x324 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x128 JUMPI PUSH2 0x127 PUSH2 0x2F7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x136 DUP8 DUP3 DUP9 ADD PUSH2 0xB6 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x147 DUP8 DUP3 DUP9 ADD PUSH2 0xB6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x158 DUP8 DUP3 DUP9 ADD PUSH2 0xF9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x179 JUMPI PUSH2 0x178 PUSH2 0x2F2 JUMP JUMPDEST JUMPDEST PUSH2 0x185 DUP8 DUP3 DUP9 ADD PUSH2 0xCB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x19A DUP2 PUSH2 0x223 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x191 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C5 PUSH2 0x1D6 JUMP JUMPDEST SWAP1 POP PUSH2 0x1D1 DUP3 DUP3 PUSH2 0x288 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1FB JUMPI PUSH2 0x1FA PUSH2 0x2B9 JUMP JUMPDEST JUMPDEST PUSH2 0x204 DUP3 PUSH2 0x2FC JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21C DUP3 PUSH2 0x24F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH2 0x291 DUP3 PUSH2 0x2FC JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2B0 JUMPI PUSH2 0x2AF PUSH2 0x2B9 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x316 DUP2 PUSH2 0x211 JUMP JUMPDEST DUP2 EQ PUSH2 0x321 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x32D DUP2 PUSH2 0x26F JUMP JUMPDEST DUP2 EQ PUSH2 0x338 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GT SSTORE DUP9 0xFB 0xCD CREATE2 0xDA 0xB7 0xDA PUSH28 0xD34DCCDED22EACBC217B00E408CAC02ADFBAB4E87B9164736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "399:391:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;588:200;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;726:6;751:30;;;744:37;;588:200;;;;;;:::o;7:410:5:-;84:5;109:65;125:48;166:6;125:48;:::i;:::-;109:65;:::i;:::-;100:74;;197:6;190:5;183:21;235:4;228:5;224:16;273:3;264:6;259:3;255:16;252:25;249:112;;;280:79;;:::i;:::-;249:112;370:41;404:6;399:3;394;370:41;:::i;:::-;90:327;7:410;;;;;:::o;423:139::-;469:5;507:6;494:20;485:29;;523:33;550:5;523:33;:::i;:::-;423:139;;;;:::o;581:338::-;636:5;685:3;678:4;670:6;666:17;662:27;652:122;;693:79;;:::i;:::-;652:122;810:6;797:20;835:78;909:3;901:6;894:4;886:6;882:17;835:78;:::i;:::-;826:87;;642:277;581:338;;;;:::o;925:139::-;971:5;1009:6;996:20;987:29;;1025:33;1052:5;1025:33;:::i;:::-;925:139;;;;:::o;1070:943::-;1165:6;1173;1181;1189;1238:3;1226:9;1217:7;1213:23;1209:33;1206:120;;;1245:79;;:::i;:::-;1206:120;1365:1;1390:53;1435:7;1426:6;1415:9;1411:22;1390:53;:::i;:::-;1380:63;;1336:117;1492:2;1518:53;1563:7;1554:6;1543:9;1539:22;1518:53;:::i;:::-;1508:63;;1463:118;1620:2;1646:53;1691:7;1682:6;1671:9;1667:22;1646:53;:::i;:::-;1636:63;;1591:118;1776:2;1765:9;1761:18;1748:32;1807:18;1799:6;1796:30;1793:117;;;1829:79;;:::i;:::-;1793:117;1934:62;1988:7;1979:6;1968:9;1964:22;1934:62;:::i;:::-;1924:72;;1719:287;1070:943;;;;;;;:::o;2019:115::-;2104:23;2121:5;2104:23;:::i;:::-;2099:3;2092:36;2019:115;;:::o;2140:218::-;2231:4;2269:2;2258:9;2254:18;2246:26;;2282:69;2348:1;2337:9;2333:17;2324:6;2282:69;:::i;:::-;2140:218;;;;:::o;2364:129::-;2398:6;2425:20;;:::i;:::-;2415:30;;2454:33;2482:4;2474:6;2454:33;:::i;:::-;2364:129;;;:::o;2499:75::-;2532:6;2565:2;2559:9;2549:19;;2499:75;:::o;2580:307::-;2641:4;2731:18;2723:6;2720:30;2717:56;;;2753:18;;:::i;:::-;2717:56;2791:29;2813:6;2791:29;:::i;:::-;2783:37;;2875:4;2869;2865:15;2857:23;;2580:307;;;:::o;2893:96::-;2930:7;2959:24;2977:5;2959:24;:::i;:::-;2948:35;;2893:96;;;:::o;2995:149::-;3031:7;3071:66;3064:5;3060:78;3049:89;;2995:149;;;:::o;3150:126::-;3187:7;3227:42;3220:5;3216:54;3205:65;;3150:126;;;:::o;3282:77::-;3319:7;3348:5;3337:16;;3282:77;;;:::o;3365:154::-;3449:6;3444:3;3439;3426:30;3511:1;3502:6;3497:3;3493:16;3486:27;3365:154;;;:::o;3525:281::-;3608:27;3630:4;3608:27;:::i;:::-;3600:6;3596:40;3738:6;3726:10;3723:22;3702:18;3690:10;3687:34;3684:62;3681:88;;;3749:18;;:::i;:::-;3681:88;3789:10;3785:2;3778:22;3568:238;3525:281;;:::o;3812:180::-;3860:77;3857:1;3850:88;3957:4;3954:1;3947:15;3981:4;3978:1;3971:15;3998:117;4107:1;4104;4097:12;4121:117;4230:1;4227;4220:12;4244:117;4353:1;4350;4343:12;4367:117;4476:1;4473;4466:12;4490:102;4531:6;4582:2;4578:7;4573:2;4566:5;4562:14;4558:28;4548:38;;4490:102;;;:::o;4598:122::-;4671:24;4689:5;4671:24;:::i;:::-;4664:5;4661:35;4651:63;;4710:1;4707;4700:12;4651:63;4598:122;:::o;4726:::-;4799:24;4817:5;4799:24;:::i;:::-;4792:5;4789:35;4779:63;;4838:1;4835;4828:12;4779:63;4726:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "176200",
								"executionCost": "220",
								"totalCost": "176420"
							},
							"external": {
								"onERC721Received(address,address,uint256,bytes)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 399,
									"end": 790,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 399,
									"end": 790,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 399,
									"end": 790,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 399,
									"end": 790,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 399,
									"end": 790,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 399,
									"end": 790,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 399,
									"end": 790,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 399,
									"end": 790,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 399,
									"end": 790,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 399,
									"end": 790,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 399,
									"end": 790,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 399,
									"end": 790,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 399,
									"end": 790,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 399,
									"end": 790,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 399,
									"end": 790,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 399,
									"end": 790,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 399,
									"end": 790,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 399,
									"end": 790,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 399,
									"end": 790,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 399,
									"end": 790,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 399,
									"end": 790,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220115588fbcdf5dab7da7bd34dccded22eacbc217b00e408cac02adfbab4e87b9164736f6c63430008070033",
									".code": [
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 399,
											"end": 790,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 399,
											"end": 790,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 399,
											"end": 790,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 399,
											"end": 790,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 399,
											"end": 790,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 399,
											"end": 790,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 399,
											"end": 790,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 399,
											"end": 790,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH",
											"source": 2,
											"value": "150B7A02"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 399,
											"end": 790,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 399,
											"end": 790,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 588,
											"end": 788,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 588,
											"end": 788,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 588,
											"end": 788,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 588,
											"end": 788,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 588,
											"end": 788,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 588,
											"end": 788,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 588,
											"end": 788,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 726,
											"end": 732,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 781,
											"name": "PUSH",
											"source": 2,
											"value": "150B7A02"
										},
										{
											"begin": 751,
											"end": 781,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 751,
											"end": 781,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 744,
											"end": 781,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 744,
											"end": 781,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 588,
											"end": 788,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 588,
											"end": 788,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 588,
											"end": 788,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 588,
											"end": 788,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 417,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 7,
											"end": 417,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 84,
											"end": 89,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 109,
											"end": 174,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 125,
											"end": 173,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 166,
											"end": 172,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 125,
											"end": 173,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 125,
											"end": 173,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 125,
											"end": 173,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 125,
											"end": 173,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 109,
											"end": 174,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 109,
											"end": 174,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 109,
											"end": 174,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 109,
											"end": 174,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 100,
											"end": 174,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 100,
											"end": 174,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 197,
											"end": 203,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 190,
											"end": 195,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 183,
											"end": 204,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 235,
											"end": 239,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 228,
											"end": 233,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 224,
											"end": 240,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 273,
											"end": 276,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 264,
											"end": 270,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 259,
											"end": 262,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 255,
											"end": 271,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 252,
											"end": 277,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 249,
											"end": 361,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 249,
											"end": 361,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 249,
											"end": 361,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 280,
											"end": 359,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 280,
											"end": 359,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 280,
											"end": 359,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 280,
											"end": 359,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 280,
											"end": 359,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 249,
											"end": 361,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 249,
											"end": 361,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 370,
											"end": 411,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 404,
											"end": 410,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 399,
											"end": 402,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 394,
											"end": 397,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 370,
											"end": 411,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 370,
											"end": 411,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 370,
											"end": 411,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 370,
											"end": 411,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 90,
											"end": 417,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 417,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 7,
											"end": 417,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7,
											"end": 417,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 417,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 417,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 417,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 423,
											"end": 562,
											"name": "tag",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 423,
											"end": 562,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 469,
											"end": 474,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 507,
											"end": 513,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 494,
											"end": 514,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 485,
											"end": 514,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 485,
											"end": 514,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 523,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 523,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 523,
											"end": 556,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 523,
											"end": 556,
											"name": "tag",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 523,
											"end": 556,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 423,
											"end": 562,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 423,
											"end": 562,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 423,
											"end": 562,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 423,
											"end": 562,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 423,
											"end": 562,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 581,
											"end": 919,
											"name": "tag",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 581,
											"end": 919,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 636,
											"end": 641,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 685,
											"end": 688,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 678,
											"end": 682,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 670,
											"end": 676,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 666,
											"end": 683,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 662,
											"end": 689,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 652,
											"end": 774,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 652,
											"end": 774,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 693,
											"end": 772,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 693,
											"end": 772,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 693,
											"end": 772,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 693,
											"end": 772,
											"name": "tag",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 693,
											"end": 772,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 652,
											"end": 774,
											"name": "tag",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 652,
											"end": 774,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 810,
											"end": 816,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 797,
											"end": 817,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 835,
											"end": 913,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 909,
											"end": 912,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 901,
											"end": 907,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 894,
											"end": 898,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 886,
											"end": 892,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 882,
											"end": 899,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 835,
											"end": 913,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 835,
											"end": 913,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 835,
											"end": 913,
											"name": "tag",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 835,
											"end": 913,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 826,
											"end": 913,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 826,
											"end": 913,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 642,
											"end": 919,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 581,
											"end": 919,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 581,
											"end": 919,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 581,
											"end": 919,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 581,
											"end": 919,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 581,
											"end": 919,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 925,
											"end": 1064,
											"name": "tag",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 925,
											"end": 1064,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 971,
											"end": 976,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1009,
											"end": 1015,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 996,
											"end": 1016,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 987,
											"end": 1016,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 987,
											"end": 1016,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1025,
											"end": 1058,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 1052,
											"end": 1057,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1025,
											"end": 1058,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 1025,
											"end": 1058,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1025,
											"end": 1058,
											"name": "tag",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 1025,
											"end": 1058,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 925,
											"end": 1064,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 925,
											"end": 1064,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 925,
											"end": 1064,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 925,
											"end": 1064,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 925,
											"end": 1064,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1070,
											"end": 2013,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 1070,
											"end": 2013,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1165,
											"end": 1171,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1173,
											"end": 1179,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1181,
											"end": 1187,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1189,
											"end": 1195,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1238,
											"end": 1241,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 1226,
											"end": 1235,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1217,
											"end": 1224,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1213,
											"end": 1236,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1209,
											"end": 1242,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1326,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1326,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 1206,
											"end": 1326,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1245,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 1245,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1245,
											"end": 1324,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1245,
											"end": 1324,
											"name": "tag",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 1245,
											"end": 1324,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1326,
											"name": "tag",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 1206,
											"end": 1326,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1365,
											"end": 1366,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1390,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 1435,
											"end": 1442,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1426,
											"end": 1432,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1415,
											"end": 1424,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 1411,
											"end": 1433,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1390,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 1390,
											"end": 1443,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1390,
											"end": 1443,
											"name": "tag",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 1390,
											"end": 1443,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1380,
											"end": 1443,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 1380,
											"end": 1443,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1336,
											"end": 1453,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1492,
											"end": 1494,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1518,
											"end": 1571,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 1563,
											"end": 1570,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1554,
											"end": 1560,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1543,
											"end": 1552,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 1539,
											"end": 1561,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1518,
											"end": 1571,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 1518,
											"end": 1571,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1518,
											"end": 1571,
											"name": "tag",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 1518,
											"end": 1571,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1508,
											"end": 1571,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1508,
											"end": 1571,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1463,
											"end": 1581,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1620,
											"end": 1622,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1646,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 1691,
											"end": 1698,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1682,
											"end": 1688,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1671,
											"end": 1680,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 1667,
											"end": 1689,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1646,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 1646,
											"end": 1699,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1646,
											"end": 1699,
											"name": "tag",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 1646,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1636,
											"end": 1699,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1636,
											"end": 1699,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1591,
											"end": 1709,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1776,
											"end": 1778,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1765,
											"end": 1774,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1761,
											"end": 1779,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1748,
											"end": 1780,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1807,
											"end": 1825,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1799,
											"end": 1805,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1796,
											"end": 1826,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1793,
											"end": 1910,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1793,
											"end": 1910,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 1793,
											"end": 1910,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1908,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 1829,
											"end": 1908,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 1829,
											"end": 1908,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1829,
											"end": 1908,
											"name": "tag",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 1829,
											"end": 1908,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1793,
											"end": 1910,
											"name": "tag",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 1793,
											"end": 1910,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1934,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 1988,
											"end": 1995,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1979,
											"end": 1985,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1968,
											"end": 1977,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 1964,
											"end": 1986,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1934,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 1934,
											"end": 1996,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1934,
											"end": 1996,
											"name": "tag",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 1934,
											"end": 1996,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1924,
											"end": 1996,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1924,
											"end": 1996,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1719,
											"end": 2006,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1070,
											"end": 2013,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1070,
											"end": 2013,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 1070,
											"end": 2013,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1070,
											"end": 2013,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 1070,
											"end": 2013,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1070,
											"end": 2013,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1070,
											"end": 2013,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1070,
											"end": 2013,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2019,
											"end": 2134,
											"name": "tag",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 2019,
											"end": 2134,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2104,
											"end": 2127,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 2121,
											"end": 2126,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2104,
											"end": 2127,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 2104,
											"end": 2127,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2104,
											"end": 2127,
											"name": "tag",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 2104,
											"end": 2127,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2099,
											"end": 2102,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2092,
											"end": 2128,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2019,
											"end": 2134,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2019,
											"end": 2134,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2019,
											"end": 2134,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2140,
											"end": 2358,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 2140,
											"end": 2358,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2231,
											"end": 2235,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2269,
											"end": 2271,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2258,
											"end": 2267,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2254,
											"end": 2272,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2246,
											"end": 2272,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2246,
											"end": 2272,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2282,
											"end": 2351,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 2348,
											"end": 2349,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2337,
											"end": 2346,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2333,
											"end": 2350,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2324,
											"end": 2330,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2282,
											"end": 2351,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 2282,
											"end": 2351,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2282,
											"end": 2351,
											"name": "tag",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 2282,
											"end": 2351,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2140,
											"end": 2358,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2140,
											"end": 2358,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2140,
											"end": 2358,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2140,
											"end": 2358,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2140,
											"end": 2358,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2364,
											"end": 2493,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 2364,
											"end": 2493,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2398,
											"end": 2404,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2425,
											"end": 2445,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 2425,
											"end": 2445,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 2425,
											"end": 2445,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2425,
											"end": 2445,
											"name": "tag",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 2425,
											"end": 2445,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2415,
											"end": 2445,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2415,
											"end": 2445,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2454,
											"end": 2487,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 2482,
											"end": 2486,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2474,
											"end": 2480,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2454,
											"end": 2487,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 2454,
											"end": 2487,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2454,
											"end": 2487,
											"name": "tag",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 2454,
											"end": 2487,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2364,
											"end": 2493,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2364,
											"end": 2493,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2364,
											"end": 2493,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2364,
											"end": 2493,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2499,
											"end": 2574,
											"name": "tag",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 2499,
											"end": 2574,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2532,
											"end": 2538,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2565,
											"end": 2567,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2559,
											"end": 2568,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2549,
											"end": 2568,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2549,
											"end": 2568,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2499,
											"end": 2574,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2499,
											"end": 2574,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2580,
											"end": 2887,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 2580,
											"end": 2887,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2641,
											"end": 2645,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2731,
											"end": 2749,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2723,
											"end": 2729,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2720,
											"end": 2750,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2717,
											"end": 2773,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2717,
											"end": 2773,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 2717,
											"end": 2773,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2753,
											"end": 2771,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 2753,
											"end": 2771,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 2753,
											"end": 2771,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2753,
											"end": 2771,
											"name": "tag",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 2753,
											"end": 2771,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2717,
											"end": 2773,
											"name": "tag",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 2717,
											"end": 2773,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2791,
											"end": 2820,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 2813,
											"end": 2819,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2791,
											"end": 2820,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 2791,
											"end": 2820,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2791,
											"end": 2820,
											"name": "tag",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 2791,
											"end": 2820,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2783,
											"end": 2820,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2783,
											"end": 2820,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2875,
											"end": 2879,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2869,
											"end": 2873,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2865,
											"end": 2880,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2857,
											"end": 2880,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2857,
											"end": 2880,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2580,
											"end": 2887,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2580,
											"end": 2887,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2580,
											"end": 2887,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2580,
											"end": 2887,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2893,
											"end": 2989,
											"name": "tag",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 2893,
											"end": 2989,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2930,
											"end": 2937,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2959,
											"end": 2983,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 2977,
											"end": 2982,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2959,
											"end": 2983,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 2959,
											"end": 2983,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2959,
											"end": 2983,
											"name": "tag",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 2959,
											"end": 2983,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2948,
											"end": 2983,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2948,
											"end": 2983,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2893,
											"end": 2989,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2893,
											"end": 2989,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2893,
											"end": 2989,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2893,
											"end": 2989,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2995,
											"end": 3144,
											"name": "tag",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 2995,
											"end": 3144,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3031,
											"end": 3038,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3071,
											"end": 3137,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3064,
											"end": 3069,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3060,
											"end": 3138,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3049,
											"end": 3138,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3049,
											"end": 3138,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2995,
											"end": 3144,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2995,
											"end": 3144,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2995,
											"end": 3144,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2995,
											"end": 3144,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3150,
											"end": 3276,
											"name": "tag",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 3150,
											"end": 3276,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3187,
											"end": 3194,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3227,
											"end": 3269,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3220,
											"end": 3225,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3216,
											"end": 3270,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3205,
											"end": 3270,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3205,
											"end": 3270,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3150,
											"end": 3276,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3150,
											"end": 3276,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3150,
											"end": 3276,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3150,
											"end": 3276,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3282,
											"end": 3359,
											"name": "tag",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 3282,
											"end": 3359,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3319,
											"end": 3326,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3348,
											"end": 3353,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3337,
											"end": 3353,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3337,
											"end": 3353,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3282,
											"end": 3359,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3282,
											"end": 3359,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3282,
											"end": 3359,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3282,
											"end": 3359,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3365,
											"end": 3519,
											"name": "tag",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 3365,
											"end": 3519,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3449,
											"end": 3455,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3444,
											"end": 3447,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3439,
											"end": 3442,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3426,
											"end": 3456,
											"name": "CALLDATACOPY",
											"source": 5
										},
										{
											"begin": 3511,
											"end": 3512,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3502,
											"end": 3508,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3500,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3493,
											"end": 3509,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3486,
											"end": 3513,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3365,
											"end": 3519,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3365,
											"end": 3519,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3365,
											"end": 3519,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3365,
											"end": 3519,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3525,
											"end": 3806,
											"name": "tag",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 3525,
											"end": 3806,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3608,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 3630,
											"end": 3634,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3608,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 3608,
											"end": 3635,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3608,
											"end": 3635,
											"name": "tag",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 3608,
											"end": 3635,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3600,
											"end": 3606,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3596,
											"end": 3636,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3738,
											"end": 3744,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3726,
											"end": 3736,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3723,
											"end": 3745,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 3702,
											"end": 3720,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3690,
											"end": 3700,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3687,
											"end": 3721,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 3684,
											"end": 3746,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 3681,
											"end": 3769,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3681,
											"end": 3769,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 3681,
											"end": 3769,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3749,
											"end": 3767,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 3749,
											"end": 3767,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 3749,
											"end": 3767,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3749,
											"end": 3767,
											"name": "tag",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 3749,
											"end": 3767,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3681,
											"end": 3769,
											"name": "tag",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 3681,
											"end": 3769,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3789,
											"end": 3799,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3785,
											"end": 3787,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3778,
											"end": 3800,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3568,
											"end": 3806,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3525,
											"end": 3806,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3525,
											"end": 3806,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3525,
											"end": 3806,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3812,
											"end": 3992,
											"name": "tag",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 3812,
											"end": 3992,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3860,
											"end": 3937,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3857,
											"end": 3858,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3850,
											"end": 3938,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3957,
											"end": 3961,
											"name": "PUSH",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 3954,
											"end": 3955,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3947,
											"end": 3962,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3981,
											"end": 3985,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3978,
											"end": 3979,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3971,
											"end": 3986,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4115,
											"name": "tag",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 3998,
											"end": 4115,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4107,
											"end": 4108,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4104,
											"end": 4105,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4097,
											"end": 4109,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4121,
											"end": 4238,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4121,
											"end": 4238,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4230,
											"end": 4231,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4227,
											"end": 4228,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4220,
											"end": 4232,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4244,
											"end": 4361,
											"name": "tag",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 4244,
											"end": 4361,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4353,
											"end": 4354,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4350,
											"end": 4351,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4343,
											"end": 4355,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4367,
											"end": 4484,
											"name": "tag",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4367,
											"end": 4484,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4476,
											"end": 4477,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4473,
											"end": 4474,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4466,
											"end": 4478,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4490,
											"end": 4592,
											"name": "tag",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 4490,
											"end": 4592,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4531,
											"end": 4537,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4582,
											"end": 4584,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 4578,
											"end": 4585,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 4573,
											"end": 4575,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 4566,
											"end": 4571,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4562,
											"end": 4576,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4558,
											"end": 4586,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4548,
											"end": 4586,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4548,
											"end": 4586,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4490,
											"end": 4592,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4490,
											"end": 4592,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4490,
											"end": 4592,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4490,
											"end": 4592,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4598,
											"end": 4720,
											"name": "tag",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 4598,
											"end": 4720,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4671,
											"end": 4695,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 4689,
											"end": 4694,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4671,
											"end": 4695,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 4671,
											"end": 4695,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4671,
											"end": 4695,
											"name": "tag",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 4671,
											"end": 4695,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4664,
											"end": 4669,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4661,
											"end": 4696,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 4651,
											"end": 4714,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 4651,
											"end": 4714,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4710,
											"end": 4711,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4707,
											"end": 4708,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4700,
											"end": 4712,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4651,
											"end": 4714,
											"name": "tag",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 4651,
											"end": 4714,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4598,
											"end": 4720,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4598,
											"end": 4720,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4726,
											"end": 4848,
											"name": "tag",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 4726,
											"end": 4848,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4799,
											"end": 4823,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 4817,
											"end": 4822,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4799,
											"end": 4823,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 4799,
											"end": 4823,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4799,
											"end": 4823,
											"name": "tag",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 4799,
											"end": 4823,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4792,
											"end": 4797,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4789,
											"end": 4824,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 4779,
											"end": 4842,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 4779,
											"end": 4842,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4838,
											"end": 4839,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4835,
											"end": 4836,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4828,
											"end": 4840,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4779,
											"end": 4842,
											"name": "tag",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 4779,
											"end": 4842,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4726,
											"end": 4848,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4726,
											"end": 4848,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC721Receiver} interface. Accepts all token transfers. Make sure the contract is able to use its token with {IERC721-safeTransferFrom}, {IERC721-approve} or {IERC721-setApprovalForAll}.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":\"ERC721Holder\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":{\"keccak256\":\"0x0108bf6a6ebd5f96678bed33a35947537263f96766131ee91461fb6485805028\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ae2d274bf3d56a6d49a9bbd0a4871c54997a82551eb3eb1c0c39dc98698ff8bf\",\"dweb:/ipfs/QmTT7ty5DPGAmRnx94Xu3TUDYGSPDVLN2bppJAjjedrg1e\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Pratice2nd.sol": {
				"ManiTransfer": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "toAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "_transferERC721FundsToAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Pratice2nd.sol\":188:463  contract ManiTransfer is ERC721Holder {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Pratice2nd.sol\":188:463  contract ManiTransfer is ERC721Holder {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x150b7a02\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xcb9354cd\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":588:788  function onERC721Received(... */\n    tag_3:\n      tag_5\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_6\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      tag_8\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      tag_9\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Pratice2nd.sol\":237:461  function _transferERC721FundsToAddress(... */\n    tag_4:\n      tag_11\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_12\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n      tag_14\n      jump\t// in\n    tag_11:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":588:788  function onERC721Received(... */\n    tag_8:\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":726:732  bytes4 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":751:781  this.onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":744:781  return this.onERC721Received.selector */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":588:788  function onERC721Received(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Pratice2nd.sol\":237:461  function _transferERC721FundsToAddress(... */\n    tag_14:\n        /* \"Pratice2nd.sol\":389:401  tokenAddress */\n      dup2\n        /* \"Pratice2nd.sol\":381:419  IERC721(tokenAddress).safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x42842e0e\n        /* \"Pratice2nd.sol\":428:432  this */\n      address\n        /* \"Pratice2nd.sol\":435:444  toAddress */\n      dup6\n        /* \"Pratice2nd.sol\":446:453  tokenId */\n      dup5\n        /* \"Pratice2nd.sol\":381:454  IERC721(tokenAddress).safeTransferFrom(address(this), toAddress, tokenId) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_17\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_21\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_21:\n      pop\n      pop\n      pop\n      pop\n        /* \"Pratice2nd.sol\":237:461  function _transferERC721FundsToAddress(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:417   */\n    tag_23:\n        /* \"#utility.yul\":84:89   */\n      0x00\n        /* \"#utility.yul\":109:174   */\n      tag_25\n        /* \"#utility.yul\":125:173   */\n      tag_26\n        /* \"#utility.yul\":166:172   */\n      dup5\n        /* \"#utility.yul\":125:173   */\n      tag_27\n      jump\t// in\n    tag_26:\n        /* \"#utility.yul\":109:174   */\n      tag_28\n      jump\t// in\n    tag_25:\n        /* \"#utility.yul\":100:174   */\n      swap1\n      pop\n        /* \"#utility.yul\":197:203   */\n      dup3\n        /* \"#utility.yul\":190:195   */\n      dup2\n        /* \"#utility.yul\":183:204   */\n      mstore\n        /* \"#utility.yul\":235:239   */\n      0x20\n        /* \"#utility.yul\":228:233   */\n      dup2\n        /* \"#utility.yul\":224:240   */\n      add\n        /* \"#utility.yul\":273:276   */\n      dup5\n        /* \"#utility.yul\":264:270   */\n      dup5\n        /* \"#utility.yul\":259:262   */\n      dup5\n        /* \"#utility.yul\":255:271   */\n      add\n        /* \"#utility.yul\":252:277   */\n      gt\n        /* \"#utility.yul\":249:361   */\n      iszero\n      tag_29\n      jumpi\n        /* \"#utility.yul\":280:359   */\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n        /* \"#utility.yul\":249:361   */\n    tag_29:\n        /* \"#utility.yul\":370:411   */\n      tag_32\n        /* \"#utility.yul\":404:410   */\n      dup5\n        /* \"#utility.yul\":399:402   */\n      dup3\n        /* \"#utility.yul\":394:397   */\n      dup6\n        /* \"#utility.yul\":370:411   */\n      tag_33\n      jump\t// in\n    tag_32:\n        /* \"#utility.yul\":90:417   */\n      pop\n        /* \"#utility.yul\":7:417   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":423:562   */\n    tag_34:\n        /* \"#utility.yul\":469:474   */\n      0x00\n        /* \"#utility.yul\":507:513   */\n      dup2\n        /* \"#utility.yul\":494:514   */\n      calldataload\n        /* \"#utility.yul\":485:514   */\n      swap1\n      pop\n        /* \"#utility.yul\":523:556   */\n      tag_36\n        /* \"#utility.yul\":550:555   */\n      dup2\n        /* \"#utility.yul\":523:556   */\n      tag_37\n      jump\t// in\n    tag_36:\n        /* \"#utility.yul\":423:562   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":581:919   */\n    tag_38:\n        /* \"#utility.yul\":636:641   */\n      0x00\n        /* \"#utility.yul\":685:688   */\n      dup3\n        /* \"#utility.yul\":678:682   */\n      0x1f\n        /* \"#utility.yul\":670:676   */\n      dup4\n        /* \"#utility.yul\":666:683   */\n      add\n        /* \"#utility.yul\":662:689   */\n      slt\n        /* \"#utility.yul\":652:774   */\n      tag_40\n      jumpi\n        /* \"#utility.yul\":693:772   */\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n        /* \"#utility.yul\":652:774   */\n    tag_40:\n        /* \"#utility.yul\":810:816   */\n      dup2\n        /* \"#utility.yul\":797:817   */\n      calldataload\n        /* \"#utility.yul\":835:913   */\n      tag_43\n        /* \"#utility.yul\":909:912   */\n      dup5\n        /* \"#utility.yul\":901:907   */\n      dup3\n        /* \"#utility.yul\":894:898   */\n      0x20\n        /* \"#utility.yul\":886:892   */\n      dup7\n        /* \"#utility.yul\":882:899   */\n      add\n        /* \"#utility.yul\":835:913   */\n      tag_23\n      jump\t// in\n    tag_43:\n        /* \"#utility.yul\":826:913   */\n      swap2\n      pop\n        /* \"#utility.yul\":642:919   */\n      pop\n        /* \"#utility.yul\":581:919   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":925:1064   */\n    tag_44:\n        /* \"#utility.yul\":971:976   */\n      0x00\n        /* \"#utility.yul\":1009:1015   */\n      dup2\n        /* \"#utility.yul\":996:1016   */\n      calldataload\n        /* \"#utility.yul\":987:1016   */\n      swap1\n      pop\n        /* \"#utility.yul\":1025:1058   */\n      tag_46\n        /* \"#utility.yul\":1052:1057   */\n      dup2\n        /* \"#utility.yul\":1025:1058   */\n      tag_47\n      jump\t// in\n    tag_46:\n        /* \"#utility.yul\":925:1064   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1070:1689   */\n    tag_13:\n        /* \"#utility.yul\":1147:1153   */\n      0x00\n        /* \"#utility.yul\":1155:1161   */\n      dup1\n        /* \"#utility.yul\":1163:1169   */\n      0x00\n        /* \"#utility.yul\":1212:1214   */\n      0x60\n        /* \"#utility.yul\":1200:1209   */\n      dup5\n        /* \"#utility.yul\":1191:1198   */\n      dup7\n        /* \"#utility.yul\":1187:1210   */\n      sub\n        /* \"#utility.yul\":1183:1215   */\n      slt\n        /* \"#utility.yul\":1180:1299   */\n      iszero\n      tag_49\n      jumpi\n        /* \"#utility.yul\":1218:1297   */\n      tag_50\n      tag_51\n      jump\t// in\n    tag_50:\n        /* \"#utility.yul\":1180:1299   */\n    tag_49:\n        /* \"#utility.yul\":1338:1339   */\n      0x00\n        /* \"#utility.yul\":1363:1416   */\n      tag_52\n        /* \"#utility.yul\":1408:1415   */\n      dup7\n        /* \"#utility.yul\":1399:1405   */\n      dup3\n        /* \"#utility.yul\":1388:1397   */\n      dup8\n        /* \"#utility.yul\":1384:1406   */\n      add\n        /* \"#utility.yul\":1363:1416   */\n      tag_34\n      jump\t// in\n    tag_52:\n        /* \"#utility.yul\":1353:1416   */\n      swap4\n      pop\n        /* \"#utility.yul\":1309:1426   */\n      pop\n        /* \"#utility.yul\":1465:1467   */\n      0x20\n        /* \"#utility.yul\":1491:1544   */\n      tag_53\n        /* \"#utility.yul\":1536:1543   */\n      dup7\n        /* \"#utility.yul\":1527:1533   */\n      dup3\n        /* \"#utility.yul\":1516:1525   */\n      dup8\n        /* \"#utility.yul\":1512:1534   */\n      add\n        /* \"#utility.yul\":1491:1544   */\n      tag_34\n      jump\t// in\n    tag_53:\n        /* \"#utility.yul\":1481:1544   */\n      swap3\n      pop\n        /* \"#utility.yul\":1436:1554   */\n      pop\n        /* \"#utility.yul\":1593:1595   */\n      0x40\n        /* \"#utility.yul\":1619:1672   */\n      tag_54\n        /* \"#utility.yul\":1664:1671   */\n      dup7\n        /* \"#utility.yul\":1655:1661   */\n      dup3\n        /* \"#utility.yul\":1644:1653   */\n      dup8\n        /* \"#utility.yul\":1640:1662   */\n      add\n        /* \"#utility.yul\":1619:1672   */\n      tag_44\n      jump\t// in\n    tag_54:\n        /* \"#utility.yul\":1609:1672   */\n      swap2\n      pop\n        /* \"#utility.yul\":1564:1682   */\n      pop\n        /* \"#utility.yul\":1070:1689   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1695:2638   */\n    tag_7:\n        /* \"#utility.yul\":1790:1796   */\n      0x00\n        /* \"#utility.yul\":1798:1804   */\n      dup1\n        /* \"#utility.yul\":1806:1812   */\n      0x00\n        /* \"#utility.yul\":1814:1820   */\n      dup1\n        /* \"#utility.yul\":1863:1866   */\n      0x80\n        /* \"#utility.yul\":1851:1860   */\n      dup6\n        /* \"#utility.yul\":1842:1849   */\n      dup8\n        /* \"#utility.yul\":1838:1861   */\n      sub\n        /* \"#utility.yul\":1834:1867   */\n      slt\n        /* \"#utility.yul\":1831:1951   */\n      iszero\n      tag_56\n      jumpi\n        /* \"#utility.yul\":1870:1949   */\n      tag_57\n      tag_51\n      jump\t// in\n    tag_57:\n        /* \"#utility.yul\":1831:1951   */\n    tag_56:\n        /* \"#utility.yul\":1990:1991   */\n      0x00\n        /* \"#utility.yul\":2015:2068   */\n      tag_58\n        /* \"#utility.yul\":2060:2067   */\n      dup8\n        /* \"#utility.yul\":2051:2057   */\n      dup3\n        /* \"#utility.yul\":2040:2049   */\n      dup9\n        /* \"#utility.yul\":2036:2058   */\n      add\n        /* \"#utility.yul\":2015:2068   */\n      tag_34\n      jump\t// in\n    tag_58:\n        /* \"#utility.yul\":2005:2068   */\n      swap5\n      pop\n        /* \"#utility.yul\":1961:2078   */\n      pop\n        /* \"#utility.yul\":2117:2119   */\n      0x20\n        /* \"#utility.yul\":2143:2196   */\n      tag_59\n        /* \"#utility.yul\":2188:2195   */\n      dup8\n        /* \"#utility.yul\":2179:2185   */\n      dup3\n        /* \"#utility.yul\":2168:2177   */\n      dup9\n        /* \"#utility.yul\":2164:2186   */\n      add\n        /* \"#utility.yul\":2143:2196   */\n      tag_34\n      jump\t// in\n    tag_59:\n        /* \"#utility.yul\":2133:2196   */\n      swap4\n      pop\n        /* \"#utility.yul\":2088:2206   */\n      pop\n        /* \"#utility.yul\":2245:2247   */\n      0x40\n        /* \"#utility.yul\":2271:2324   */\n      tag_60\n        /* \"#utility.yul\":2316:2323   */\n      dup8\n        /* \"#utility.yul\":2307:2313   */\n      dup3\n        /* \"#utility.yul\":2296:2305   */\n      dup9\n        /* \"#utility.yul\":2292:2314   */\n      add\n        /* \"#utility.yul\":2271:2324   */\n      tag_44\n      jump\t// in\n    tag_60:\n        /* \"#utility.yul\":2261:2324   */\n      swap3\n      pop\n        /* \"#utility.yul\":2216:2334   */\n      pop\n        /* \"#utility.yul\":2401:2403   */\n      0x60\n        /* \"#utility.yul\":2390:2399   */\n      dup6\n        /* \"#utility.yul\":2386:2404   */\n      add\n        /* \"#utility.yul\":2373:2405   */\n      calldataload\n        /* \"#utility.yul\":2432:2450   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2424:2430   */\n      dup2\n        /* \"#utility.yul\":2421:2451   */\n      gt\n        /* \"#utility.yul\":2418:2535   */\n      iszero\n      tag_61\n      jumpi\n        /* \"#utility.yul\":2454:2533   */\n      tag_62\n      tag_63\n      jump\t// in\n    tag_62:\n        /* \"#utility.yul\":2418:2535   */\n    tag_61:\n        /* \"#utility.yul\":2559:2621   */\n      tag_64\n        /* \"#utility.yul\":2613:2620   */\n      dup8\n        /* \"#utility.yul\":2604:2610   */\n      dup3\n        /* \"#utility.yul\":2593:2602   */\n      dup9\n        /* \"#utility.yul\":2589:2611   */\n      add\n        /* \"#utility.yul\":2559:2621   */\n      tag_38\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":2549:2621   */\n      swap2\n      pop\n        /* \"#utility.yul\":2344:2631   */\n      pop\n        /* \"#utility.yul\":1695:2638   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2644:2762   */\n    tag_65:\n        /* \"#utility.yul\":2731:2755   */\n      tag_67\n        /* \"#utility.yul\":2749:2754   */\n      dup2\n        /* \"#utility.yul\":2731:2755   */\n      tag_68\n      jump\t// in\n    tag_67:\n        /* \"#utility.yul\":2726:2729   */\n      dup3\n        /* \"#utility.yul\":2719:2756   */\n      mstore\n        /* \"#utility.yul\":2644:2762   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2768:2883   */\n    tag_69:\n        /* \"#utility.yul\":2853:2876   */\n      tag_71\n        /* \"#utility.yul\":2870:2875   */\n      dup2\n        /* \"#utility.yul\":2853:2876   */\n      tag_72\n      jump\t// in\n    tag_71:\n        /* \"#utility.yul\":2848:2851   */\n      dup3\n        /* \"#utility.yul\":2841:2877   */\n      mstore\n        /* \"#utility.yul\":2768:2883   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2889:3007   */\n    tag_73:\n        /* \"#utility.yul\":2976:3000   */\n      tag_75\n        /* \"#utility.yul\":2994:2999   */\n      dup2\n        /* \"#utility.yul\":2976:3000   */\n      tag_76\n      jump\t// in\n    tag_75:\n        /* \"#utility.yul\":2971:2974   */\n      dup3\n        /* \"#utility.yul\":2964:3001   */\n      mstore\n        /* \"#utility.yul\":2889:3007   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3013:3455   */\n    tag_18:\n        /* \"#utility.yul\":3162:3166   */\n      0x00\n        /* \"#utility.yul\":3200:3202   */\n      0x60\n        /* \"#utility.yul\":3189:3198   */\n      dup3\n        /* \"#utility.yul\":3185:3203   */\n      add\n        /* \"#utility.yul\":3177:3203   */\n      swap1\n      pop\n        /* \"#utility.yul\":3213:3284   */\n      tag_78\n        /* \"#utility.yul\":3281:3282   */\n      0x00\n        /* \"#utility.yul\":3270:3279   */\n      dup4\n        /* \"#utility.yul\":3266:3283   */\n      add\n        /* \"#utility.yul\":3257:3263   */\n      dup7\n        /* \"#utility.yul\":3213:3284   */\n      tag_65\n      jump\t// in\n    tag_78:\n        /* \"#utility.yul\":3294:3366   */\n      tag_79\n        /* \"#utility.yul\":3362:3364   */\n      0x20\n        /* \"#utility.yul\":3351:3360   */\n      dup4\n        /* \"#utility.yul\":3347:3365   */\n      add\n        /* \"#utility.yul\":3338:3344   */\n      dup6\n        /* \"#utility.yul\":3294:3366   */\n      tag_65\n      jump\t// in\n    tag_79:\n        /* \"#utility.yul\":3376:3448   */\n      tag_80\n        /* \"#utility.yul\":3444:3446   */\n      0x40\n        /* \"#utility.yul\":3433:3442   */\n      dup4\n        /* \"#utility.yul\":3429:3447   */\n      add\n        /* \"#utility.yul\":3420:3426   */\n      dup5\n        /* \"#utility.yul\":3376:3448   */\n      tag_73\n      jump\t// in\n    tag_80:\n        /* \"#utility.yul\":3013:3455   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3461:3679   */\n    tag_10:\n        /* \"#utility.yul\":3552:3556   */\n      0x00\n        /* \"#utility.yul\":3590:3592   */\n      0x20\n        /* \"#utility.yul\":3579:3588   */\n      dup3\n        /* \"#utility.yul\":3575:3593   */\n      add\n        /* \"#utility.yul\":3567:3593   */\n      swap1\n      pop\n        /* \"#utility.yul\":3603:3672   */\n      tag_82\n        /* \"#utility.yul\":3669:3670   */\n      0x00\n        /* \"#utility.yul\":3658:3667   */\n      dup4\n        /* \"#utility.yul\":3654:3671   */\n      add\n        /* \"#utility.yul\":3645:3651   */\n      dup5\n        /* \"#utility.yul\":3603:3672   */\n      tag_69\n      jump\t// in\n    tag_82:\n        /* \"#utility.yul\":3461:3679   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3685:3814   */\n    tag_28:\n        /* \"#utility.yul\":3719:3725   */\n      0x00\n        /* \"#utility.yul\":3746:3766   */\n      tag_84\n      tag_85\n      jump\t// in\n    tag_84:\n        /* \"#utility.yul\":3736:3766   */\n      swap1\n      pop\n        /* \"#utility.yul\":3775:3808   */\n      tag_86\n        /* \"#utility.yul\":3803:3807   */\n      dup3\n        /* \"#utility.yul\":3795:3801   */\n      dup3\n        /* \"#utility.yul\":3775:3808   */\n      tag_87\n      jump\t// in\n    tag_86:\n        /* \"#utility.yul\":3685:3814   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3820:3895   */\n    tag_85:\n        /* \"#utility.yul\":3853:3859   */\n      0x00\n        /* \"#utility.yul\":3886:3888   */\n      0x40\n        /* \"#utility.yul\":3880:3889   */\n      mload\n        /* \"#utility.yul\":3870:3889   */\n      swap1\n      pop\n        /* \"#utility.yul\":3820:3895   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":3901:4208   */\n    tag_27:\n        /* \"#utility.yul\":3962:3966   */\n      0x00\n        /* \"#utility.yul\":4052:4070   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4044:4050   */\n      dup3\n        /* \"#utility.yul\":4041:4071   */\n      gt\n        /* \"#utility.yul\":4038:4094   */\n      iszero\n      tag_90\n      jumpi\n        /* \"#utility.yul\":4074:4092   */\n      tag_91\n      tag_92\n      jump\t// in\n    tag_91:\n        /* \"#utility.yul\":4038:4094   */\n    tag_90:\n        /* \"#utility.yul\":4112:4141   */\n      tag_93\n        /* \"#utility.yul\":4134:4140   */\n      dup3\n        /* \"#utility.yul\":4112:4141   */\n      tag_94\n      jump\t// in\n    tag_93:\n        /* \"#utility.yul\":4104:4141   */\n      swap1\n      pop\n        /* \"#utility.yul\":4196:4200   */\n      0x20\n        /* \"#utility.yul\":4190:4194   */\n      dup2\n        /* \"#utility.yul\":4186:4201   */\n      add\n        /* \"#utility.yul\":4178:4201   */\n      swap1\n      pop\n        /* \"#utility.yul\":3901:4208   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4214:4310   */\n    tag_68:\n        /* \"#utility.yul\":4251:4258   */\n      0x00\n        /* \"#utility.yul\":4280:4304   */\n      tag_96\n        /* \"#utility.yul\":4298:4303   */\n      dup3\n        /* \"#utility.yul\":4280:4304   */\n      tag_97\n      jump\t// in\n    tag_96:\n        /* \"#utility.yul\":4269:4304   */\n      swap1\n      pop\n        /* \"#utility.yul\":4214:4310   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4316:4465   */\n    tag_72:\n        /* \"#utility.yul\":4352:4359   */\n      0x00\n        /* \"#utility.yul\":4392:4458   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4385:4390   */\n      dup3\n        /* \"#utility.yul\":4381:4459   */\n      and\n        /* \"#utility.yul\":4370:4459   */\n      swap1\n      pop\n        /* \"#utility.yul\":4316:4465   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4471:4597   */\n    tag_97:\n        /* \"#utility.yul\":4508:4515   */\n      0x00\n        /* \"#utility.yul\":4548:4590   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":4541:4546   */\n      dup3\n        /* \"#utility.yul\":4537:4591   */\n      and\n        /* \"#utility.yul\":4526:4591   */\n      swap1\n      pop\n        /* \"#utility.yul\":4471:4597   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4603:4680   */\n    tag_76:\n        /* \"#utility.yul\":4640:4647   */\n      0x00\n        /* \"#utility.yul\":4669:4674   */\n      dup2\n        /* \"#utility.yul\":4658:4674   */\n      swap1\n      pop\n        /* \"#utility.yul\":4603:4680   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4686:4840   */\n    tag_33:\n        /* \"#utility.yul\":4770:4776   */\n      dup3\n        /* \"#utility.yul\":4765:4768   */\n      dup2\n        /* \"#utility.yul\":4760:4763   */\n      dup4\n        /* \"#utility.yul\":4747:4777   */\n      calldatacopy\n        /* \"#utility.yul\":4832:4833   */\n      0x00\n        /* \"#utility.yul\":4823:4829   */\n      dup4\n        /* \"#utility.yul\":4818:4821   */\n      dup4\n        /* \"#utility.yul\":4814:4830   */\n      add\n        /* \"#utility.yul\":4807:4834   */\n      mstore\n        /* \"#utility.yul\":4686:4840   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4846:5127   */\n    tag_87:\n        /* \"#utility.yul\":4929:4956   */\n      tag_103\n        /* \"#utility.yul\":4951:4955   */\n      dup3\n        /* \"#utility.yul\":4929:4956   */\n      tag_94\n      jump\t// in\n    tag_103:\n        /* \"#utility.yul\":4921:4927   */\n      dup2\n        /* \"#utility.yul\":4917:4957   */\n      add\n        /* \"#utility.yul\":5059:5065   */\n      dup2\n        /* \"#utility.yul\":5047:5057   */\n      dup2\n        /* \"#utility.yul\":5044:5066   */\n      lt\n        /* \"#utility.yul\":5023:5041   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5011:5021   */\n      dup3\n        /* \"#utility.yul\":5008:5042   */\n      gt\n        /* \"#utility.yul\":5005:5067   */\n      or\n        /* \"#utility.yul\":5002:5090   */\n      iszero\n      tag_104\n      jumpi\n        /* \"#utility.yul\":5070:5088   */\n      tag_105\n      tag_92\n      jump\t// in\n    tag_105:\n        /* \"#utility.yul\":5002:5090   */\n    tag_104:\n        /* \"#utility.yul\":5110:5120   */\n      dup1\n        /* \"#utility.yul\":5106:5108   */\n      0x40\n        /* \"#utility.yul\":5099:5121   */\n      mstore\n        /* \"#utility.yul\":4889:5127   */\n      pop\n        /* \"#utility.yul\":4846:5127   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5133:5313   */\n    tag_92:\n        /* \"#utility.yul\":5181:5258   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5178:5179   */\n      0x00\n        /* \"#utility.yul\":5171:5259   */\n      mstore\n        /* \"#utility.yul\":5278:5282   */\n      0x41\n        /* \"#utility.yul\":5275:5276   */\n      0x04\n        /* \"#utility.yul\":5268:5283   */\n      mstore\n        /* \"#utility.yul\":5302:5306   */\n      0x24\n        /* \"#utility.yul\":5299:5300   */\n      0x00\n        /* \"#utility.yul\":5292:5307   */\n      revert\n        /* \"#utility.yul\":5319:5436   */\n    tag_42:\n        /* \"#utility.yul\":5428:5429   */\n      0x00\n        /* \"#utility.yul\":5425:5426   */\n      dup1\n        /* \"#utility.yul\":5418:5430   */\n      revert\n        /* \"#utility.yul\":5442:5559   */\n    tag_31:\n        /* \"#utility.yul\":5551:5552   */\n      0x00\n        /* \"#utility.yul\":5548:5549   */\n      dup1\n        /* \"#utility.yul\":5541:5553   */\n      revert\n        /* \"#utility.yul\":5565:5682   */\n    tag_63:\n        /* \"#utility.yul\":5674:5675   */\n      0x00\n        /* \"#utility.yul\":5671:5672   */\n      dup1\n        /* \"#utility.yul\":5664:5676   */\n      revert\n        /* \"#utility.yul\":5688:5805   */\n    tag_51:\n        /* \"#utility.yul\":5797:5798   */\n      0x00\n        /* \"#utility.yul\":5794:5795   */\n      dup1\n        /* \"#utility.yul\":5787:5799   */\n      revert\n        /* \"#utility.yul\":5811:5913   */\n    tag_94:\n        /* \"#utility.yul\":5852:5858   */\n      0x00\n        /* \"#utility.yul\":5903:5905   */\n      0x1f\n        /* \"#utility.yul\":5899:5906   */\n      not\n        /* \"#utility.yul\":5894:5896   */\n      0x1f\n        /* \"#utility.yul\":5887:5892   */\n      dup4\n        /* \"#utility.yul\":5883:5897   */\n      add\n        /* \"#utility.yul\":5879:5907   */\n      and\n        /* \"#utility.yul\":5869:5907   */\n      swap1\n      pop\n        /* \"#utility.yul\":5811:5913   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5919:6041   */\n    tag_37:\n        /* \"#utility.yul\":5992:6016   */\n      tag_113\n        /* \"#utility.yul\":6010:6015   */\n      dup2\n        /* \"#utility.yul\":5992:6016   */\n      tag_68\n      jump\t// in\n    tag_113:\n        /* \"#utility.yul\":5985:5990   */\n      dup2\n        /* \"#utility.yul\":5982:6017   */\n      eq\n        /* \"#utility.yul\":5972:6035   */\n      tag_114\n      jumpi\n        /* \"#utility.yul\":6031:6032   */\n      0x00\n        /* \"#utility.yul\":6028:6029   */\n      dup1\n        /* \"#utility.yul\":6021:6033   */\n      revert\n        /* \"#utility.yul\":5972:6035   */\n    tag_114:\n        /* \"#utility.yul\":5919:6041   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6047:6169   */\n    tag_47:\n        /* \"#utility.yul\":6120:6144   */\n      tag_116\n        /* \"#utility.yul\":6138:6143   */\n      dup2\n        /* \"#utility.yul\":6120:6144   */\n      tag_76\n      jump\t// in\n    tag_116:\n        /* \"#utility.yul\":6113:6118   */\n      dup2\n        /* \"#utility.yul\":6110:6145   */\n      eq\n        /* \"#utility.yul\":6100:6163   */\n      tag_117\n      jumpi\n        /* \"#utility.yul\":6159:6160   */\n      0x00\n        /* \"#utility.yul\":6156:6157   */\n      dup1\n        /* \"#utility.yul\":6149:6161   */\n      revert\n        /* \"#utility.yul\":6100:6163   */\n    tag_117:\n        /* \"#utility.yul\":6047:6169   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212206fba8ac8ee9ec1d101d4a292007d84e69c2fa09a04743c8d4ceaf029f82c476164736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506104b4806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063150b7a021461003b578063cb9354cd1461006b575b600080fd5b610055600480360381019061005091906101fc565b610087565b60405161006291906102e3565b60405180910390f35b610085600480360381019061008091906101a9565b61009b565b005b600063150b7a0260e01b9050949350505050565b8173ffffffffffffffffffffffffffffffffffffffff166342842e0e3085846040518463ffffffff1660e01b81526004016100d8939291906102ac565b600060405180830381600087803b1580156100f257600080fd5b505af1158015610106573d6000803e3d6000fd5b50505050505050565b600061012261011d84610323565b6102fe565b90508281526020810184848401111561013e5761013d610430565b5b6101498482856103bc565b509392505050565b60008135905061016081610450565b92915050565b600082601f83011261017b5761017a61042b565b5b813561018b84826020860161010f565b91505092915050565b6000813590506101a381610467565b92915050565b6000806000606084860312156101c2576101c161043a565b5b60006101d086828701610151565b93505060206101e186828701610151565b92505060406101f286828701610194565b9150509250925092565b600080600080608085870312156102165761021561043a565b5b600061022487828801610151565b945050602061023587828801610151565b935050604061024687828801610194565b925050606085013567ffffffffffffffff81111561026757610266610435565b5b61027387828801610166565b91505092959194509250565b61028881610354565b82525050565b61029781610366565b82525050565b6102a6816103b2565b82525050565b60006060820190506102c1600083018661027f565b6102ce602083018561027f565b6102db604083018461029d565b949350505050565b60006020820190506102f8600083018461028e565b92915050565b6000610308610319565b905061031482826103cb565b919050565b6000604051905090565b600067ffffffffffffffff82111561033e5761033d6103fc565b5b6103478261043f565b9050602081019050919050565b600061035f82610392565b9050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b6103d48261043f565b810181811067ffffffffffffffff821117156103f3576103f26103fc565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b61045981610354565b811461046457600080fd5b50565b610470816103b2565b811461047b57600080fd5b5056fea26469706673582212206fba8ac8ee9ec1d101d4a292007d84e69c2fa09a04743c8d4ceaf029f82c476164736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4B4 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xCB9354CD EQ PUSH2 0x6B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x55 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x1FC JUMP JUMPDEST PUSH2 0x87 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x62 SWAP2 SWAP1 PUSH2 0x2E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x85 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x80 SWAP2 SWAP1 PUSH2 0x1A9 JUMP JUMPDEST PUSH2 0x9B JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH4 0x150B7A02 PUSH1 0xE0 SHL SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x42842E0E ADDRESS DUP6 DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2AC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x106 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x122 PUSH2 0x11D DUP5 PUSH2 0x323 JUMP JUMPDEST PUSH2 0x2FE JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x13E JUMPI PUSH2 0x13D PUSH2 0x430 JUMP JUMPDEST JUMPDEST PUSH2 0x149 DUP5 DUP3 DUP6 PUSH2 0x3BC JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x160 DUP2 PUSH2 0x450 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x17B JUMPI PUSH2 0x17A PUSH2 0x42B JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x18B DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x10F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A3 DUP2 PUSH2 0x467 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1C2 JUMPI PUSH2 0x1C1 PUSH2 0x43A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D0 DUP7 DUP3 DUP8 ADD PUSH2 0x151 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1E1 DUP7 DUP3 DUP8 ADD PUSH2 0x151 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1F2 DUP7 DUP3 DUP8 ADD PUSH2 0x194 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x216 JUMPI PUSH2 0x215 PUSH2 0x43A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x224 DUP8 DUP3 DUP9 ADD PUSH2 0x151 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x235 DUP8 DUP3 DUP9 ADD PUSH2 0x151 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x246 DUP8 DUP3 DUP9 ADD PUSH2 0x194 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x267 JUMPI PUSH2 0x266 PUSH2 0x435 JUMP JUMPDEST JUMPDEST PUSH2 0x273 DUP8 DUP3 DUP9 ADD PUSH2 0x166 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x288 DUP2 PUSH2 0x354 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x297 DUP2 PUSH2 0x366 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2A6 DUP2 PUSH2 0x3B2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2C1 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x27F JUMP JUMPDEST PUSH2 0x2CE PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x27F JUMP JUMPDEST PUSH2 0x2DB PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x29D JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2F8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x28E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x308 PUSH2 0x319 JUMP JUMPDEST SWAP1 POP PUSH2 0x314 DUP3 DUP3 PUSH2 0x3CB JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x33E JUMPI PUSH2 0x33D PUSH2 0x3FC JUMP JUMPDEST JUMPDEST PUSH2 0x347 DUP3 PUSH2 0x43F JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35F DUP3 PUSH2 0x392 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH2 0x3D4 DUP3 PUSH2 0x43F JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x3F3 JUMPI PUSH2 0x3F2 PUSH2 0x3FC JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x459 DUP2 PUSH2 0x354 JUMP JUMPDEST DUP2 EQ PUSH2 0x464 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x470 DUP2 PUSH2 0x3B2 JUMP JUMPDEST DUP2 EQ PUSH2 0x47B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH16 0xBA8AC8EE9EC1D101D4A292007D84E69C 0x2F LOG0 SWAP11 DIV PUSH21 0x3C8D4CEAF029F82C476164736F6C63430008070033 ",
							"sourceMap": "188:275:4:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_transferERC721FundsToAddress_200": {
									"entryPoint": 155,
									"id": 200,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@onERC721Received_159": {
									"entryPoint": 135,
									"id": 159,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 271,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 337,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 358,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 404,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 425,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 508,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 639,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes4_to_t_bytes4_fromStack": {
									"entryPoint": 654,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 669,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 684,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
									"entryPoint": 739,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 766,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 793,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 803,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 852,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 870,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 914,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 946,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory": {
									"entryPoint": 956,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"finalize_allocation": {
									"entryPoint": 971,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1020,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 1067,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 1072,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 1077,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1082,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 1087,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 1104,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1127,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:6172:5",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "90:327:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "100:74:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "166:6:5"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "125:40:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "125:48:5"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "109:15:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "109:65:5"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "100:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "190:5:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "197:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "183:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "183:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "183:21:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "213:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "228:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "235:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "224:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "224:16:5"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "217:3:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "278:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "280:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "280:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "280:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "259:3:5"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "264:6:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "255:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "255:16:5"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "273:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "252:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "252:25:5"
															},
															"nodeType": "YulIf",
															"src": "249:112:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "394:3:5"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "399:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "404:6:5"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "370:23:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "370:41:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "370:41:5"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "63:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "68:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "76:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "84:5:5",
														"type": ""
													}
												],
												"src": "7:410:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "475:87:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "485:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "507:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "494:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "494:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "485:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "523:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "523:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "523:33:5"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "453:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "461:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "469:5:5",
														"type": ""
													}
												],
												"src": "423:139:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "642:277:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "691:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "693:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "693:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "693:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "670:6:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "678:4:5",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "666:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "666:17:5"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "685:3:5"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "662:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "662:27:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "655:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "655:35:5"
															},
															"nodeType": "YulIf",
															"src": "652:122:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "783:34:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "810:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "797:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "797:20:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "787:6:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "826:87:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "886:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "894:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "882:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "882:17:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "901:6:5"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "909:3:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "835:46:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "835:78:5"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "826:5:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "620:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "628:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "636:5:5",
														"type": ""
													}
												],
												"src": "581:338:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "977:87:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "987:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1009:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "996:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "996:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "987:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1052:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1025:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1025:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1025:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "955:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "963:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "971:5:5",
														"type": ""
													}
												],
												"src": "925:139:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1170:519:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1216:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1218:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1218:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1218:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1191:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1200:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1187:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1187:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1212:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1183:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1183:32:5"
															},
															"nodeType": "YulIf",
															"src": "1180:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "1309:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1324:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1338:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1328:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1353:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1388:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1399:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1384:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1384:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1408:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1363:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1363:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1353:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1436:118:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1451:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1465:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1455:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1481:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1516:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1527:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1512:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1512:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1536:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1491:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1491:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1481:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1564:118:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1579:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1593:2:5",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1583:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1609:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1644:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1655:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1640:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1640:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1664:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1619:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1619:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "1609:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1124:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1135:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1147:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1155:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1163:6:5",
														"type": ""
													}
												],
												"src": "1070:619:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1821:817:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1868:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1870:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1870:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1870:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1842:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1851:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1838:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1838:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1863:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1834:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1834:33:5"
															},
															"nodeType": "YulIf",
															"src": "1831:120:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "1961:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1976:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1990:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1980:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2005:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2040:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2051:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2036:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2036:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2060:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2015:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2015:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2005:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2088:118:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2103:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2117:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2107:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2133:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2168:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2179:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2164:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2164:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2188:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2143:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2143:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2133:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2216:118:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2231:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2245:2:5",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2235:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2261:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2296:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2307:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2292:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2292:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2316:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2271:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2271:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "2261:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2344:287:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2359:46:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2390:9:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2401:2:5",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2386:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2386:18:5"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "2373:12:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2373:32:5"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2363:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "2452:83:5",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "2454:77:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2454:79:5"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "2454:79:5"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2424:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2432:18:5",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2421:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2421:30:5"
																	},
																	"nodeType": "YulIf",
																	"src": "2418:117:5"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2549:72:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2593:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2604:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2589:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2589:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2613:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "2559:29:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2559:62:5"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "2549:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1767:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1778:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1790:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1798:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1806:6:5",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "1814:6:5",
														"type": ""
													}
												],
												"src": "1695:943:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2709:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2726:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2749:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2731:17:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2731:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2719:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2719:37:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2719:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2697:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2704:3:5",
														"type": ""
													}
												],
												"src": "2644:118:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2831:52:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2848:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2870:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "2853:16:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2853:23:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2841:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2841:36:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2841:36:5"
														}
													]
												},
												"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2819:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2826:3:5",
														"type": ""
													}
												],
												"src": "2768:115:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2954:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2971:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2994:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2976:17:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2976:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2964:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2964:37:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2964:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2942:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2949:3:5",
														"type": ""
													}
												],
												"src": "2889:118:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3167:288:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3177:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3189:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3200:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3185:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3185:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3177:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3257:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3270:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3281:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3266:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3266:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3213:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3213:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3213:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3338:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3351:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3362:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3347:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3347:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3294:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3294:72:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3294:72:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "3420:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3433:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3444:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3429:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3429:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3376:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3376:72:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3376:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3123:9:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3135:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3143:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3151:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3162:4:5",
														"type": ""
													}
												],
												"src": "3013:442:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3557:122:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3567:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3579:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3590:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3575:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3575:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3567:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3645:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3658:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3669:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3654:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3654:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3603:41:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3603:69:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3603:69:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3529:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3541:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3552:4:5",
														"type": ""
													}
												],
												"src": "3461:218:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3726:88:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3736:30:5",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "3746:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3746:20:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "3736:6:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3795:6:5"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "3803:4:5"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "3775:19:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3775:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3775:33:5"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "3710:4:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3719:6:5",
														"type": ""
													}
												],
												"src": "3685:129:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3860:35:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3870:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3886:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3880:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3880:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "3870:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3853:6:5",
														"type": ""
													}
												],
												"src": "3820:75:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3967:241:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4072:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "4074:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4074:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4074:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4044:6:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4052:18:5",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4041:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4041:30:5"
															},
															"nodeType": "YulIf",
															"src": "4038:56:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4104:37:5",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4134:6:5"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "4112:21:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4112:29:5"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "4104:4:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4178:23:5",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "4190:4:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4196:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4186:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4186:15:5"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "4178:4:5"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3951:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "3962:4:5",
														"type": ""
													}
												],
												"src": "3901:307:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4259:51:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4269:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4298:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "4280:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4280:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4269:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4241:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4251:7:5",
														"type": ""
													}
												],
												"src": "4214:96:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4360:105:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4370:89:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4385:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4392:66:5",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4381:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4381:78:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4370:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4342:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4352:7:5",
														"type": ""
													}
												],
												"src": "4316:149:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4516:81:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4526:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4541:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4548:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4537:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4537:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4526:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4498:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4508:7:5",
														"type": ""
													}
												],
												"src": "4471:126:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4648:32:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4658:16:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4669:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4658:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4630:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4640:7:5",
														"type": ""
													}
												],
												"src": "4603:77:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4737:103:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "4760:3:5"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "4765:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4770:6:5"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "4747:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4747:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4747:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "4818:3:5"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4823:6:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4814:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4814:16:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4832:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4807:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4807:27:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4807:27:5"
														}
													]
												},
												"name": "copy_calldata_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "4719:3:5",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "4724:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4729:6:5",
														"type": ""
													}
												],
												"src": "4686:154:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4889:238:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4899:58:5",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "4921:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "4951:4:5"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "4929:21:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4929:27:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4917:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4917:40:5"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "4903:10:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5068:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "5070:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5070:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5070:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "5011:10:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5023:18:5",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5008:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5008:34:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "5047:10:5"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5059:6:5"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "5044:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5044:22:5"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5005:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5005:62:5"
															},
															"nodeType": "YulIf",
															"src": "5002:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5106:2:5",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "5110:10:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5099:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5099:22:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5099:22:5"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "4875:6:5",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "4883:4:5",
														"type": ""
													}
												],
												"src": "4846:281:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5161:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5178:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5181:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5171:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5171:88:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5171:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5275:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5278:4:5",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5268:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5268:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5268:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5299:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5302:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5292:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5292:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5292:15:5"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "5133:180:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5408:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5425:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5428:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5418:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5418:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5418:12:5"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "5319:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5531:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5548:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5551:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5541:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5541:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5541:12:5"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "5442:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5654:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5671:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5674:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5664:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5664:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5664:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "5565:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5777:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5794:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5797:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5787:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5787:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5787:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "5688:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5859:54:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5869:38:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5887:5:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5894:2:5",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5883:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5883:14:5"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5903:2:5",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "5899:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5899:7:5"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5879:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5879:28:5"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "5869:6:5"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5842:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "5852:6:5",
														"type": ""
													}
												],
												"src": "5811:102:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5962:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6019:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6028:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6031:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6021:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6021:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6021:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5985:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6010:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "5992:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5992:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "5982:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5982:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5975:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5975:43:5"
															},
															"nodeType": "YulIf",
															"src": "5972:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5955:5:5",
														"type": ""
													}
												],
												"src": "5919:122:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6090:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6147:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6156:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6159:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6149:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6149:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6149:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6113:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6138:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "6120:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6120:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "6110:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6110:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6103:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6103:43:5"
															},
															"nodeType": "YulIf",
															"src": "6100:63:5"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6083:5:5",
														"type": ""
													}
												],
												"src": "6047:122:5"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes4(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c8063150b7a021461003b578063cb9354cd1461006b575b600080fd5b610055600480360381019061005091906101fc565b610087565b60405161006291906102e3565b60405180910390f35b610085600480360381019061008091906101a9565b61009b565b005b600063150b7a0260e01b9050949350505050565b8173ffffffffffffffffffffffffffffffffffffffff166342842e0e3085846040518463ffffffff1660e01b81526004016100d8939291906102ac565b600060405180830381600087803b1580156100f257600080fd5b505af1158015610106573d6000803e3d6000fd5b50505050505050565b600061012261011d84610323565b6102fe565b90508281526020810184848401111561013e5761013d610430565b5b6101498482856103bc565b509392505050565b60008135905061016081610450565b92915050565b600082601f83011261017b5761017a61042b565b5b813561018b84826020860161010f565b91505092915050565b6000813590506101a381610467565b92915050565b6000806000606084860312156101c2576101c161043a565b5b60006101d086828701610151565b93505060206101e186828701610151565b92505060406101f286828701610194565b9150509250925092565b600080600080608085870312156102165761021561043a565b5b600061022487828801610151565b945050602061023587828801610151565b935050604061024687828801610194565b925050606085013567ffffffffffffffff81111561026757610266610435565b5b61027387828801610166565b91505092959194509250565b61028881610354565b82525050565b61029781610366565b82525050565b6102a6816103b2565b82525050565b60006060820190506102c1600083018661027f565b6102ce602083018561027f565b6102db604083018461029d565b949350505050565b60006020820190506102f8600083018461028e565b92915050565b6000610308610319565b905061031482826103cb565b919050565b6000604051905090565b600067ffffffffffffffff82111561033e5761033d6103fc565b5b6103478261043f565b9050602081019050919050565b600061035f82610392565b9050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b6103d48261043f565b810181811067ffffffffffffffff821117156103f3576103f26103fc565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b61045981610354565b811461046457600080fd5b50565b610470816103b2565b811461047b57600080fd5b5056fea26469706673582212206fba8ac8ee9ec1d101d4a292007d84e69c2fa09a04743c8d4ceaf029f82c476164736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xCB9354CD EQ PUSH2 0x6B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x55 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x1FC JUMP JUMPDEST PUSH2 0x87 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x62 SWAP2 SWAP1 PUSH2 0x2E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x85 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x80 SWAP2 SWAP1 PUSH2 0x1A9 JUMP JUMPDEST PUSH2 0x9B JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH4 0x150B7A02 PUSH1 0xE0 SHL SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x42842E0E ADDRESS DUP6 DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2AC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x106 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x122 PUSH2 0x11D DUP5 PUSH2 0x323 JUMP JUMPDEST PUSH2 0x2FE JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x13E JUMPI PUSH2 0x13D PUSH2 0x430 JUMP JUMPDEST JUMPDEST PUSH2 0x149 DUP5 DUP3 DUP6 PUSH2 0x3BC JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x160 DUP2 PUSH2 0x450 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x17B JUMPI PUSH2 0x17A PUSH2 0x42B JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x18B DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x10F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A3 DUP2 PUSH2 0x467 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1C2 JUMPI PUSH2 0x1C1 PUSH2 0x43A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D0 DUP7 DUP3 DUP8 ADD PUSH2 0x151 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1E1 DUP7 DUP3 DUP8 ADD PUSH2 0x151 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1F2 DUP7 DUP3 DUP8 ADD PUSH2 0x194 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x216 JUMPI PUSH2 0x215 PUSH2 0x43A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x224 DUP8 DUP3 DUP9 ADD PUSH2 0x151 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x235 DUP8 DUP3 DUP9 ADD PUSH2 0x151 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x246 DUP8 DUP3 DUP9 ADD PUSH2 0x194 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x267 JUMPI PUSH2 0x266 PUSH2 0x435 JUMP JUMPDEST JUMPDEST PUSH2 0x273 DUP8 DUP3 DUP9 ADD PUSH2 0x166 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x288 DUP2 PUSH2 0x354 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x297 DUP2 PUSH2 0x366 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2A6 DUP2 PUSH2 0x3B2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2C1 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x27F JUMP JUMPDEST PUSH2 0x2CE PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x27F JUMP JUMPDEST PUSH2 0x2DB PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x29D JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2F8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x28E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x308 PUSH2 0x319 JUMP JUMPDEST SWAP1 POP PUSH2 0x314 DUP3 DUP3 PUSH2 0x3CB JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x33E JUMPI PUSH2 0x33D PUSH2 0x3FC JUMP JUMPDEST JUMPDEST PUSH2 0x347 DUP3 PUSH2 0x43F JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35F DUP3 PUSH2 0x392 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH2 0x3D4 DUP3 PUSH2 0x43F JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x3F3 JUMPI PUSH2 0x3F2 PUSH2 0x3FC JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x459 DUP2 PUSH2 0x354 JUMP JUMPDEST DUP2 EQ PUSH2 0x464 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x470 DUP2 PUSH2 0x3B2 JUMP JUMPDEST DUP2 EQ PUSH2 0x47B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH16 0xBA8AC8EE9EC1D101D4A292007D84E69C 0x2F LOG0 SWAP11 DIV PUSH21 0x3C8D4CEAF029F82C476164736F6C63430008070033 ",
							"sourceMap": "188:275:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;588:200:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;237:224:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;588:200:2;726:6;751:30;;;744:37;;588:200;;;;;;:::o;237:224:4:-;389:12;381:38;;;428:4;435:9;446:7;381:73;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;237:224;;;:::o;7:410:5:-;84:5;109:65;125:48;166:6;125:48;:::i;:::-;109:65;:::i;:::-;100:74;;197:6;190:5;183:21;235:4;228:5;224:16;273:3;264:6;259:3;255:16;252:25;249:112;;;280:79;;:::i;:::-;249:112;370:41;404:6;399:3;394;370:41;:::i;:::-;90:327;7:410;;;;;:::o;423:139::-;469:5;507:6;494:20;485:29;;523:33;550:5;523:33;:::i;:::-;423:139;;;;:::o;581:338::-;636:5;685:3;678:4;670:6;666:17;662:27;652:122;;693:79;;:::i;:::-;652:122;810:6;797:20;835:78;909:3;901:6;894:4;886:6;882:17;835:78;:::i;:::-;826:87;;642:277;581:338;;;;:::o;925:139::-;971:5;1009:6;996:20;987:29;;1025:33;1052:5;1025:33;:::i;:::-;925:139;;;;:::o;1070:619::-;1147:6;1155;1163;1212:2;1200:9;1191:7;1187:23;1183:32;1180:119;;;1218:79;;:::i;:::-;1180:119;1338:1;1363:53;1408:7;1399:6;1388:9;1384:22;1363:53;:::i;:::-;1353:63;;1309:117;1465:2;1491:53;1536:7;1527:6;1516:9;1512:22;1491:53;:::i;:::-;1481:63;;1436:118;1593:2;1619:53;1664:7;1655:6;1644:9;1640:22;1619:53;:::i;:::-;1609:63;;1564:118;1070:619;;;;;:::o;1695:943::-;1790:6;1798;1806;1814;1863:3;1851:9;1842:7;1838:23;1834:33;1831:120;;;1870:79;;:::i;:::-;1831:120;1990:1;2015:53;2060:7;2051:6;2040:9;2036:22;2015:53;:::i;:::-;2005:63;;1961:117;2117:2;2143:53;2188:7;2179:6;2168:9;2164:22;2143:53;:::i;:::-;2133:63;;2088:118;2245:2;2271:53;2316:7;2307:6;2296:9;2292:22;2271:53;:::i;:::-;2261:63;;2216:118;2401:2;2390:9;2386:18;2373:32;2432:18;2424:6;2421:30;2418:117;;;2454:79;;:::i;:::-;2418:117;2559:62;2613:7;2604:6;2593:9;2589:22;2559:62;:::i;:::-;2549:72;;2344:287;1695:943;;;;;;;:::o;2644:118::-;2731:24;2749:5;2731:24;:::i;:::-;2726:3;2719:37;2644:118;;:::o;2768:115::-;2853:23;2870:5;2853:23;:::i;:::-;2848:3;2841:36;2768:115;;:::o;2889:118::-;2976:24;2994:5;2976:24;:::i;:::-;2971:3;2964:37;2889:118;;:::o;3013:442::-;3162:4;3200:2;3189:9;3185:18;3177:26;;3213:71;3281:1;3270:9;3266:17;3257:6;3213:71;:::i;:::-;3294:72;3362:2;3351:9;3347:18;3338:6;3294:72;:::i;:::-;3376;3444:2;3433:9;3429:18;3420:6;3376:72;:::i;:::-;3013:442;;;;;;:::o;3461:218::-;3552:4;3590:2;3579:9;3575:18;3567:26;;3603:69;3669:1;3658:9;3654:17;3645:6;3603:69;:::i;:::-;3461:218;;;;:::o;3685:129::-;3719:6;3746:20;;:::i;:::-;3736:30;;3775:33;3803:4;3795:6;3775:33;:::i;:::-;3685:129;;;:::o;3820:75::-;3853:6;3886:2;3880:9;3870:19;;3820:75;:::o;3901:307::-;3962:4;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4112:29;4134:6;4112:29;:::i;:::-;4104:37;;4196:4;4190;4186:15;4178:23;;3901:307;;;:::o;4214:96::-;4251:7;4280:24;4298:5;4280:24;:::i;:::-;4269:35;;4214:96;;;:::o;4316:149::-;4352:7;4392:66;4385:5;4381:78;4370:89;;4316:149;;;:::o;4471:126::-;4508:7;4548:42;4541:5;4537:54;4526:65;;4471:126;;;:::o;4603:77::-;4640:7;4669:5;4658:16;;4603:77;;;:::o;4686:154::-;4770:6;4765:3;4760;4747:30;4832:1;4823:6;4818:3;4814:16;4807:27;4686:154;;;:::o;4846:281::-;4929:27;4951:4;4929:27;:::i;:::-;4921:6;4917:40;5059:6;5047:10;5044:22;5023:18;5011:10;5008:34;5005:62;5002:88;;;5070:18;;:::i;:::-;5002:88;5110:10;5106:2;5099:22;4889:238;4846:281;;:::o;5133:180::-;5181:77;5178:1;5171:88;5278:4;5275:1;5268:15;5302:4;5299:1;5292:15;5319:117;5428:1;5425;5418:12;5442:117;5551:1;5548;5541:12;5565:117;5674:1;5671;5664:12;5688:117;5797:1;5794;5787:12;5811:102;5852:6;5903:2;5899:7;5894:2;5887:5;5883:14;5879:28;5869:38;;5811:102;;;:::o;5919:122::-;5992:24;6010:5;5992:24;:::i;:::-;5985:5;5982:35;5972:63;;6031:1;6028;6021:12;5972:63;5919:122;:::o;6047:::-;6120:24;6138:5;6120:24;:::i;:::-;6113:5;6110:35;6100:63;;6159:1;6156;6149:12;6100:63;6047:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "240800",
								"executionCost": "281",
								"totalCost": "241081"
							},
							"external": {
								"_transferERC721FundsToAddress(address,address,uint256)": "infinite",
								"onERC721Received(address,address,uint256,bytes)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 188,
									"end": 463,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 188,
									"end": 463,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 188,
									"end": 463,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 188,
									"end": 463,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 188,
									"end": 463,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 188,
									"end": 463,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 188,
									"end": 463,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 188,
									"end": 463,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 188,
									"end": 463,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 188,
									"end": 463,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 188,
									"end": 463,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 188,
									"end": 463,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 188,
									"end": 463,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 188,
									"end": 463,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 188,
									"end": 463,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 188,
									"end": 463,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 188,
									"end": 463,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 188,
									"end": 463,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 188,
									"end": 463,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 188,
									"end": 463,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 188,
									"end": 463,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206fba8ac8ee9ec1d101d4a292007d84e69c2fa09a04743c8d4ceaf029f82c476164736f6c63430008070033",
									".code": [
										{
											"begin": 188,
											"end": 463,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 188,
											"end": 463,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 188,
											"end": 463,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 188,
											"end": 463,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 188,
											"end": 463,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 188,
											"end": 463,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 188,
											"end": 463,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 188,
											"end": 463,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 188,
											"end": 463,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 188,
											"end": 463,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 188,
											"end": 463,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 188,
											"end": 463,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 188,
											"end": 463,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 188,
											"end": 463,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 188,
											"end": 463,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 188,
											"end": 463,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 188,
											"end": 463,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 188,
											"end": 463,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 188,
											"end": 463,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 188,
											"end": 463,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 188,
											"end": 463,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 188,
											"end": 463,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 188,
											"end": 463,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 188,
											"end": 463,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 188,
											"end": 463,
											"name": "PUSH",
											"source": 4,
											"value": "150B7A02"
										},
										{
											"begin": 188,
											"end": 463,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 188,
											"end": 463,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 188,
											"end": 463,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 188,
											"end": 463,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 188,
											"end": 463,
											"name": "PUSH",
											"source": 4,
											"value": "CB9354CD"
										},
										{
											"begin": 188,
											"end": 463,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 188,
											"end": 463,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 188,
											"end": 463,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 188,
											"end": 463,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 188,
											"end": 463,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 188,
											"end": 463,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 188,
											"end": 463,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 188,
											"end": 463,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 588,
											"end": 788,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 588,
											"end": 788,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 588,
											"end": 788,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 588,
											"end": 788,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 588,
											"end": 788,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 237,
											"end": 461,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 237,
											"end": 461,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 237,
											"end": 461,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 237,
											"end": 461,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 237,
											"end": 461,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 237,
											"end": 461,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 237,
											"end": 461,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 237,
											"end": 461,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 237,
											"end": 461,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 237,
											"end": 461,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 237,
											"end": 461,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 237,
											"end": 461,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 237,
											"end": 461,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 237,
											"end": 461,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 237,
											"end": 461,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 237,
											"end": 461,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 237,
											"end": 461,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 237,
											"end": 461,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 237,
											"end": 461,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 237,
											"end": 461,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 237,
											"end": 461,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 237,
											"end": 461,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 726,
											"end": 732,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 781,
											"name": "PUSH",
											"source": 2,
											"value": "150B7A02"
										},
										{
											"begin": 751,
											"end": 781,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 751,
											"end": 781,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 744,
											"end": 781,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 744,
											"end": 781,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 588,
											"end": 788,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 588,
											"end": 788,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 588,
											"end": 788,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 588,
											"end": 788,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 237,
											"end": 461,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 237,
											"end": 461,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 389,
											"end": 401,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 381,
											"end": 419,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 381,
											"end": 419,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 381,
											"end": 419,
											"name": "PUSH",
											"source": 4,
											"value": "42842E0E"
										},
										{
											"begin": 428,
											"end": 432,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 435,
											"end": 444,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 446,
											"end": 453,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 381,
											"end": 454,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 381,
											"end": 454,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 381,
											"end": 454,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 381,
											"end": 454,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 381,
											"end": 454,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 381,
											"end": 454,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 381,
											"end": 454,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 381,
											"end": 454,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 381,
											"end": 454,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 381,
											"end": 454,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 381,
											"end": 454,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 381,
											"end": 454,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 381,
											"end": 454,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 381,
											"end": 454,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 381,
											"end": 454,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 381,
											"end": 454,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 381,
											"end": 454,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 381,
											"end": 454,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 381,
											"end": 454,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 381,
											"end": 454,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 381,
											"end": 454,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 381,
											"end": 454,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 381,
											"end": 454,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 381,
											"end": 454,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 381,
											"end": 454,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 381,
											"end": 454,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 381,
											"end": 454,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 381,
											"end": 454,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 381,
											"end": 454,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 381,
											"end": 454,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 381,
											"end": 454,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 381,
											"end": 454,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 381,
											"end": 454,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 381,
											"end": 454,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 381,
											"end": 454,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 381,
											"end": 454,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 381,
											"end": 454,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 381,
											"end": 454,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 381,
											"end": 454,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 381,
											"end": 454,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 381,
											"end": 454,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 381,
											"end": 454,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 381,
											"end": 454,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 381,
											"end": 454,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 381,
											"end": 454,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 381,
											"end": 454,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 381,
											"end": 454,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 381,
											"end": 454,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 381,
											"end": 454,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 381,
											"end": 454,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 381,
											"end": 454,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 381,
											"end": 454,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 381,
											"end": 454,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 381,
											"end": 454,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 381,
											"end": 454,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 381,
											"end": 454,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 381,
											"end": 454,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 381,
											"end": 454,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 381,
											"end": 454,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 381,
											"end": 454,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 381,
											"end": 454,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 381,
											"end": 454,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 237,
											"end": 461,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 237,
											"end": 461,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 237,
											"end": 461,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 237,
											"end": 461,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 417,
											"name": "tag",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 7,
											"end": 417,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 84,
											"end": 89,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 109,
											"end": 174,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 125,
											"end": 173,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 166,
											"end": 172,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 125,
											"end": 173,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 125,
											"end": 173,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 125,
											"end": 173,
											"name": "tag",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 125,
											"end": 173,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 109,
											"end": 174,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 109,
											"end": 174,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 109,
											"end": 174,
											"name": "tag",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 109,
											"end": 174,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 100,
											"end": 174,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 100,
											"end": 174,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 197,
											"end": 203,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 190,
											"end": 195,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 183,
											"end": 204,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 235,
											"end": 239,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 228,
											"end": 233,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 224,
											"end": 240,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 273,
											"end": 276,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 264,
											"end": 270,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 259,
											"end": 262,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 255,
											"end": 271,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 252,
											"end": 277,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 249,
											"end": 361,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 249,
											"end": 361,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 249,
											"end": 361,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 280,
											"end": 359,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 280,
											"end": 359,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 280,
											"end": 359,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 280,
											"end": 359,
											"name": "tag",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 280,
											"end": 359,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 249,
											"end": 361,
											"name": "tag",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 249,
											"end": 361,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 370,
											"end": 411,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 404,
											"end": 410,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 399,
											"end": 402,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 394,
											"end": 397,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 370,
											"end": 411,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 370,
											"end": 411,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 370,
											"end": 411,
											"name": "tag",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 370,
											"end": 411,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 90,
											"end": 417,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 417,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 7,
											"end": 417,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7,
											"end": 417,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 417,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 417,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 417,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 423,
											"end": 562,
											"name": "tag",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 423,
											"end": 562,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 469,
											"end": 474,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 507,
											"end": 513,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 494,
											"end": 514,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 485,
											"end": 514,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 485,
											"end": 514,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 523,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 523,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 523,
											"end": 556,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 523,
											"end": 556,
											"name": "tag",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 523,
											"end": 556,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 423,
											"end": 562,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 423,
											"end": 562,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 423,
											"end": 562,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 423,
											"end": 562,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 423,
											"end": 562,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 581,
											"end": 919,
											"name": "tag",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 581,
											"end": 919,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 636,
											"end": 641,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 685,
											"end": 688,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 678,
											"end": 682,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 670,
											"end": 676,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 666,
											"end": 683,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 662,
											"end": 689,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 652,
											"end": 774,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 652,
											"end": 774,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 693,
											"end": 772,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 693,
											"end": 772,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 693,
											"end": 772,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 693,
											"end": 772,
											"name": "tag",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 693,
											"end": 772,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 652,
											"end": 774,
											"name": "tag",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 652,
											"end": 774,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 810,
											"end": 816,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 797,
											"end": 817,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 835,
											"end": 913,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 909,
											"end": 912,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 901,
											"end": 907,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 894,
											"end": 898,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 886,
											"end": 892,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 882,
											"end": 899,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 835,
											"end": 913,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 835,
											"end": 913,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 835,
											"end": 913,
											"name": "tag",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 835,
											"end": 913,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 826,
											"end": 913,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 826,
											"end": 913,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 642,
											"end": 919,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 581,
											"end": 919,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 581,
											"end": 919,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 581,
											"end": 919,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 581,
											"end": 919,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 581,
											"end": 919,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 925,
											"end": 1064,
											"name": "tag",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 925,
											"end": 1064,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 971,
											"end": 976,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1009,
											"end": 1015,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 996,
											"end": 1016,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 987,
											"end": 1016,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 987,
											"end": 1016,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1025,
											"end": 1058,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 1052,
											"end": 1057,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1025,
											"end": 1058,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 1025,
											"end": 1058,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1025,
											"end": 1058,
											"name": "tag",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 1025,
											"end": 1058,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 925,
											"end": 1064,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 925,
											"end": 1064,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 925,
											"end": 1064,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 925,
											"end": 1064,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 925,
											"end": 1064,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1070,
											"end": 1689,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 1070,
											"end": 1689,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1147,
											"end": 1153,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1155,
											"end": 1161,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1163,
											"end": 1169,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1212,
											"end": 1214,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1200,
											"end": 1209,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1191,
											"end": 1198,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1187,
											"end": 1210,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1183,
											"end": 1215,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1180,
											"end": 1299,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1180,
											"end": 1299,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 1180,
											"end": 1299,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1218,
											"end": 1297,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 1218,
											"end": 1297,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 1218,
											"end": 1297,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1218,
											"end": 1297,
											"name": "tag",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 1218,
											"end": 1297,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1180,
											"end": 1299,
											"name": "tag",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 1180,
											"end": 1299,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1338,
											"end": 1339,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1363,
											"end": 1416,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 1408,
											"end": 1415,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1399,
											"end": 1405,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1388,
											"end": 1397,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1384,
											"end": 1406,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1363,
											"end": 1416,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 1363,
											"end": 1416,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1363,
											"end": 1416,
											"name": "tag",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 1363,
											"end": 1416,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1353,
											"end": 1416,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1353,
											"end": 1416,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1309,
											"end": 1426,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1465,
											"end": 1467,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1491,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 1536,
											"end": 1543,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1527,
											"end": 1533,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1516,
											"end": 1525,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1512,
											"end": 1534,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1491,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 1491,
											"end": 1544,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1491,
											"end": 1544,
											"name": "tag",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 1491,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1481,
											"end": 1544,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1481,
											"end": 1544,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1436,
											"end": 1554,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1593,
											"end": 1595,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1619,
											"end": 1672,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 1664,
											"end": 1671,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1655,
											"end": 1661,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1644,
											"end": 1653,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1640,
											"end": 1662,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1672,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 1619,
											"end": 1672,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1619,
											"end": 1672,
											"name": "tag",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 1619,
											"end": 1672,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1609,
											"end": 1672,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1609,
											"end": 1672,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1564,
											"end": 1682,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1070,
											"end": 1689,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1070,
											"end": 1689,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1070,
											"end": 1689,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1070,
											"end": 1689,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1070,
											"end": 1689,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1070,
											"end": 1689,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1695,
											"end": 2638,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 1695,
											"end": 2638,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1790,
											"end": 1796,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1798,
											"end": 1804,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1806,
											"end": 1812,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1814,
											"end": 1820,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1863,
											"end": 1866,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 1851,
											"end": 1860,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1842,
											"end": 1849,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1838,
											"end": 1861,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1834,
											"end": 1867,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1831,
											"end": 1951,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1831,
											"end": 1951,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 1831,
											"end": 1951,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1870,
											"end": 1949,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 1870,
											"end": 1949,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 1870,
											"end": 1949,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1870,
											"end": 1949,
											"name": "tag",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 1870,
											"end": 1949,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1831,
											"end": 1951,
											"name": "tag",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 1831,
											"end": 1951,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1990,
											"end": 1991,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2068,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 2060,
											"end": 2067,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2051,
											"end": 2057,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2040,
											"end": 2049,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 2036,
											"end": 2058,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2015,
											"end": 2068,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 2015,
											"end": 2068,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2015,
											"end": 2068,
											"name": "tag",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 2015,
											"end": 2068,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2005,
											"end": 2068,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 2005,
											"end": 2068,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1961,
											"end": 2078,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2117,
											"end": 2119,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 2188,
											"end": 2195,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2179,
											"end": 2185,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2168,
											"end": 2177,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 2164,
											"end": 2186,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "tag",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2133,
											"end": 2196,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2133,
											"end": 2196,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2088,
											"end": 2206,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2245,
											"end": 2247,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2271,
											"end": 2324,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2316,
											"end": 2323,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2307,
											"end": 2313,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2296,
											"end": 2305,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 2292,
											"end": 2314,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2271,
											"end": 2324,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 2271,
											"end": 2324,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2271,
											"end": 2324,
											"name": "tag",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2271,
											"end": 2324,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2261,
											"end": 2324,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2261,
											"end": 2324,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2216,
											"end": 2334,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2401,
											"end": 2403,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2390,
											"end": 2399,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2386,
											"end": 2404,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2373,
											"end": 2405,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 2432,
											"end": 2450,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2424,
											"end": 2430,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2421,
											"end": 2451,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2418,
											"end": 2535,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2418,
											"end": 2535,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 2418,
											"end": 2535,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2454,
											"end": 2533,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 2454,
											"end": 2533,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 2454,
											"end": 2533,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2454,
											"end": 2533,
											"name": "tag",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 2454,
											"end": 2533,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2418,
											"end": 2535,
											"name": "tag",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 2418,
											"end": 2535,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2559,
											"end": 2621,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 2613,
											"end": 2620,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2604,
											"end": 2610,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2593,
											"end": 2602,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 2589,
											"end": 2611,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2559,
											"end": 2621,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 2559,
											"end": 2621,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2559,
											"end": 2621,
											"name": "tag",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 2559,
											"end": 2621,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2549,
											"end": 2621,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2549,
											"end": 2621,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2344,
											"end": 2631,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1695,
											"end": 2638,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1695,
											"end": 2638,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 1695,
											"end": 2638,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1695,
											"end": 2638,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 1695,
											"end": 2638,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1695,
											"end": 2638,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1695,
											"end": 2638,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1695,
											"end": 2638,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2644,
											"end": 2762,
											"name": "tag",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 2644,
											"end": 2762,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2731,
											"end": 2755,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 2749,
											"end": 2754,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2731,
											"end": 2755,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 2731,
											"end": 2755,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2731,
											"end": 2755,
											"name": "tag",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 2731,
											"end": 2755,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2726,
											"end": 2729,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2719,
											"end": 2756,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2644,
											"end": 2762,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2644,
											"end": 2762,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2644,
											"end": 2762,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2768,
											"end": 2883,
											"name": "tag",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 2768,
											"end": 2883,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2853,
											"end": 2876,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 2870,
											"end": 2875,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2853,
											"end": 2876,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 2853,
											"end": 2876,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2853,
											"end": 2876,
											"name": "tag",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 2853,
											"end": 2876,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2848,
											"end": 2851,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2841,
											"end": 2877,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2768,
											"end": 2883,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2768,
											"end": 2883,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2768,
											"end": 2883,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2889,
											"end": 3007,
											"name": "tag",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 2889,
											"end": 3007,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2976,
											"end": 3000,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 2994,
											"end": 2999,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2976,
											"end": 3000,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 2976,
											"end": 3000,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2976,
											"end": 3000,
											"name": "tag",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 2976,
											"end": 3000,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2971,
											"end": 2974,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2964,
											"end": 3001,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2889,
											"end": 3007,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2889,
											"end": 3007,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2889,
											"end": 3007,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3013,
											"end": 3455,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 3013,
											"end": 3455,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3162,
											"end": 3166,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3200,
											"end": 3202,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 3189,
											"end": 3198,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3185,
											"end": 3203,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3177,
											"end": 3203,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3177,
											"end": 3203,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3284,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 3281,
											"end": 3282,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3270,
											"end": 3279,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3266,
											"end": 3283,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3257,
											"end": 3263,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3284,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 3213,
											"end": 3284,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3213,
											"end": 3284,
											"name": "tag",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 3213,
											"end": 3284,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3294,
											"end": 3366,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 3362,
											"end": 3364,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3351,
											"end": 3360,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3347,
											"end": 3365,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3338,
											"end": 3344,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3294,
											"end": 3366,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 3294,
											"end": 3366,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3294,
											"end": 3366,
											"name": "tag",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 3294,
											"end": 3366,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3376,
											"end": 3448,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 3444,
											"end": 3446,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3433,
											"end": 3442,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3429,
											"end": 3447,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3420,
											"end": 3426,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3376,
											"end": 3448,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 3376,
											"end": 3448,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3376,
											"end": 3448,
											"name": "tag",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 3376,
											"end": 3448,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3013,
											"end": 3455,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 3013,
											"end": 3455,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3013,
											"end": 3455,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3013,
											"end": 3455,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3013,
											"end": 3455,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3013,
											"end": 3455,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3013,
											"end": 3455,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3461,
											"end": 3679,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 3461,
											"end": 3679,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3552,
											"end": 3556,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3590,
											"end": 3592,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3579,
											"end": 3588,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3575,
											"end": 3593,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3567,
											"end": 3593,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3567,
											"end": 3593,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3603,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 3669,
											"end": 3670,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3658,
											"end": 3667,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3654,
											"end": 3671,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3645,
											"end": 3651,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3603,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 3603,
											"end": 3672,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3603,
											"end": 3672,
											"name": "tag",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 3603,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3461,
											"end": 3679,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3461,
											"end": 3679,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3461,
											"end": 3679,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3461,
											"end": 3679,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3461,
											"end": 3679,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3685,
											"end": 3814,
											"name": "tag",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 3685,
											"end": 3814,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3719,
											"end": 3725,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3746,
											"end": 3766,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 3746,
											"end": 3766,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 3746,
											"end": 3766,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3746,
											"end": 3766,
											"name": "tag",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 3746,
											"end": 3766,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3736,
											"end": 3766,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3736,
											"end": 3766,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3775,
											"end": 3808,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 3803,
											"end": 3807,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3795,
											"end": 3801,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3775,
											"end": 3808,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 3775,
											"end": 3808,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3775,
											"end": 3808,
											"name": "tag",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 3775,
											"end": 3808,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3685,
											"end": 3814,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3685,
											"end": 3814,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3685,
											"end": 3814,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3685,
											"end": 3814,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3820,
											"end": 3895,
											"name": "tag",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 3820,
											"end": 3895,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3853,
											"end": 3859,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3886,
											"end": 3888,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3880,
											"end": 3889,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3870,
											"end": 3889,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3870,
											"end": 3889,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3820,
											"end": 3895,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3820,
											"end": 3895,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3901,
											"end": 4208,
											"name": "tag",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 3901,
											"end": 4208,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3962,
											"end": 3966,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4052,
											"end": 4070,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4044,
											"end": 4050,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4041,
											"end": 4071,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 4038,
											"end": 4094,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4038,
											"end": 4094,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 4038,
											"end": 4094,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4074,
											"end": 4092,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 4074,
											"end": 4092,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 4074,
											"end": 4092,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4074,
											"end": 4092,
											"name": "tag",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 4074,
											"end": 4092,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4038,
											"end": 4094,
											"name": "tag",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 4038,
											"end": 4094,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4112,
											"end": 4141,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 4134,
											"end": 4140,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4112,
											"end": 4141,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 4112,
											"end": 4141,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4112,
											"end": 4141,
											"name": "tag",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 4112,
											"end": 4141,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4104,
											"end": 4141,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4104,
											"end": 4141,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4196,
											"end": 4200,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4190,
											"end": 4194,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4186,
											"end": 4201,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4178,
											"end": 4201,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4178,
											"end": 4201,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3901,
											"end": 4208,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3901,
											"end": 4208,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3901,
											"end": 4208,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3901,
											"end": 4208,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4214,
											"end": 4310,
											"name": "tag",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 4214,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4251,
											"end": 4258,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4280,
											"end": 4304,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 4298,
											"end": 4303,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4280,
											"end": 4304,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 4280,
											"end": 4304,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4280,
											"end": 4304,
											"name": "tag",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 4280,
											"end": 4304,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4269,
											"end": 4304,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4269,
											"end": 4304,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4214,
											"end": 4310,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4214,
											"end": 4310,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4214,
											"end": 4310,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4214,
											"end": 4310,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4316,
											"end": 4465,
											"name": "tag",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 4316,
											"end": 4465,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4352,
											"end": 4359,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4392,
											"end": 4458,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4385,
											"end": 4390,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4381,
											"end": 4459,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4370,
											"end": 4459,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4370,
											"end": 4459,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4316,
											"end": 4465,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4316,
											"end": 4465,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4316,
											"end": 4465,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4316,
											"end": 4465,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4471,
											"end": 4597,
											"name": "tag",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 4471,
											"end": 4597,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4508,
											"end": 4515,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4548,
											"end": 4590,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4541,
											"end": 4546,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4537,
											"end": 4591,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4526,
											"end": 4591,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4526,
											"end": 4591,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4471,
											"end": 4597,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4471,
											"end": 4597,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4471,
											"end": 4597,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4471,
											"end": 4597,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4603,
											"end": 4680,
											"name": "tag",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 4603,
											"end": 4680,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4640,
											"end": 4647,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4669,
											"end": 4674,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4658,
											"end": 4674,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4658,
											"end": 4674,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4603,
											"end": 4680,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4603,
											"end": 4680,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4603,
											"end": 4680,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4603,
											"end": 4680,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4686,
											"end": 4840,
											"name": "tag",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 4686,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4770,
											"end": 4776,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4765,
											"end": 4768,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4760,
											"end": 4763,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4747,
											"end": 4777,
											"name": "CALLDATACOPY",
											"source": 5
										},
										{
											"begin": 4832,
											"end": 4833,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4823,
											"end": 4829,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4818,
											"end": 4821,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4814,
											"end": 4830,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4807,
											"end": 4834,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4686,
											"end": 4840,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4686,
											"end": 4840,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4686,
											"end": 4840,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4686,
											"end": 4840,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4846,
											"end": 5127,
											"name": "tag",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 4846,
											"end": 5127,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4929,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 4951,
											"end": 4955,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4929,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 4929,
											"end": 4956,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4929,
											"end": 4956,
											"name": "tag",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 4929,
											"end": 4956,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4921,
											"end": 4927,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4917,
											"end": 4957,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5059,
											"end": 5065,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5047,
											"end": 5057,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5044,
											"end": 5066,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 5023,
											"end": 5041,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5011,
											"end": 5021,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5008,
											"end": 5042,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 5005,
											"end": 5067,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 5002,
											"end": 5090,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5002,
											"end": 5090,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 5002,
											"end": 5090,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5070,
											"end": 5088,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 5070,
											"end": 5088,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 5070,
											"end": 5088,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5070,
											"end": 5088,
											"name": "tag",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 5070,
											"end": 5088,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5002,
											"end": 5090,
											"name": "tag",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 5002,
											"end": 5090,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5110,
											"end": 5120,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5106,
											"end": 5108,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5099,
											"end": 5121,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4889,
											"end": 5127,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4846,
											"end": 5127,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4846,
											"end": 5127,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4846,
											"end": 5127,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5133,
											"end": 5313,
											"name": "tag",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 5133,
											"end": 5313,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5181,
											"end": 5258,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5178,
											"end": 5179,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5171,
											"end": 5259,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5278,
											"end": 5282,
											"name": "PUSH",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 5275,
											"end": 5276,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5268,
											"end": 5283,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5302,
											"end": 5306,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 5299,
											"end": 5300,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5292,
											"end": 5307,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5319,
											"end": 5436,
											"name": "tag",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 5319,
											"end": 5436,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5428,
											"end": 5429,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5425,
											"end": 5426,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5418,
											"end": 5430,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5442,
											"end": 5559,
											"name": "tag",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 5442,
											"end": 5559,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5551,
											"end": 5552,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5548,
											"end": 5549,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5541,
											"end": 5553,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5565,
											"end": 5682,
											"name": "tag",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 5565,
											"end": 5682,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5674,
											"end": 5675,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5671,
											"end": 5672,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5664,
											"end": 5676,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5688,
											"end": 5805,
											"name": "tag",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 5688,
											"end": 5805,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5797,
											"end": 5798,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5794,
											"end": 5795,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5787,
											"end": 5799,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5811,
											"end": 5913,
											"name": "tag",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 5811,
											"end": 5913,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5852,
											"end": 5858,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5903,
											"end": 5905,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 5899,
											"end": 5906,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 5894,
											"end": 5896,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 5887,
											"end": 5892,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5883,
											"end": 5897,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5879,
											"end": 5907,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5869,
											"end": 5907,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5869,
											"end": 5907,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5811,
											"end": 5913,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5811,
											"end": 5913,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5811,
											"end": 5913,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5811,
											"end": 5913,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5919,
											"end": 6041,
											"name": "tag",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 5919,
											"end": 6041,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5992,
											"end": 6016,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 6010,
											"end": 6015,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5992,
											"end": 6016,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 5992,
											"end": 6016,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5992,
											"end": 6016,
											"name": "tag",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 5992,
											"end": 6016,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5985,
											"end": 5990,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5982,
											"end": 6017,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 5972,
											"end": 6035,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 5972,
											"end": 6035,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6031,
											"end": 6032,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6028,
											"end": 6029,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6021,
											"end": 6033,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5972,
											"end": 6035,
											"name": "tag",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 5972,
											"end": 6035,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5919,
											"end": 6041,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5919,
											"end": 6041,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6047,
											"end": 6169,
											"name": "tag",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 6047,
											"end": 6169,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6120,
											"end": 6144,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 6138,
											"end": 6143,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6120,
											"end": 6144,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 6120,
											"end": 6144,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6120,
											"end": 6144,
											"name": "tag",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 6120,
											"end": 6144,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6113,
											"end": 6118,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6110,
											"end": 6145,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 6100,
											"end": 6163,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 6100,
											"end": 6163,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6159,
											"end": 6160,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6156,
											"end": 6157,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6149,
											"end": 6161,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 6100,
											"end": 6163,
											"name": "tag",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 6100,
											"end": 6163,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6047,
											"end": 6169,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6047,
											"end": 6169,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"_transferERC721FundsToAddress(address,address,uint256)": "cb9354cd",
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"toAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"_transferERC721FundsToAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Pratice2nd.sol\":\"ManiTransfer\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x0d4de01fe5360c38b4ad2b0822a12722958428f5138a7ff47c1720eb6fa52bba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77724cecdfba8814632ab58737c2b0f2d4ad2d532bc614aee559b5593c1152f0\",\"dweb:/ipfs/QmUcE6gXyv7CQh4sUdcDABYKGTovTe1zLMZSEq95nkc3ph\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":{\"keccak256\":\"0x0108bf6a6ebd5f96678bed33a35947537263f96766131ee91461fb6485805028\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ae2d274bf3d56a6d49a9bbd0a4871c54997a82551eb3eb1c0c39dc98698ff8bf\",\"dweb:/ipfs/QmTT7ty5DPGAmRnx94Xu3TUDYGSPDVLN2bppJAjjedrg1e\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"Pratice2nd.sol\":{\"keccak256\":\"0xec9de01c568f85649887a41534079a7173e05b13bb4d2a486e00d84d331aaec7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8faa2859d9913999c102e57436e558dc5d62adad9f809da6994831fc63711025\",\"dweb:/ipfs/QmVNsw8ttwBMbUR6rFhby5j5ZNR279hqVJ3DTYH2CZ7D9F\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							172
						],
						"IERC721": [
							115
						]
					},
					"id": 116,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 116,
							"sourceUnit": 173,
							"src": "133:47:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 172,
										"src": "271:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "271:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "182:67:0",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 115,
							"linearizedBaseContracts": [
								115,
								172
							],
							"name": "IERC721",
							"nameLocation": "260:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 6,
										"nodeType": "StructuredDocumentation",
										"src": "285:88:0",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"id": 14,
									"name": "Transfer",
									"nameLocation": "384:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "409:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "393:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 7,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "393:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 10,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "431:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "415:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 9,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "415:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 12,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "451:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "435:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 11,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "435:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "392:67:0"
									},
									"src": "378:82:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 15,
										"nodeType": "StructuredDocumentation",
										"src": "466:94:0",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"id": 23,
									"name": "Approval",
									"nameLocation": "571:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 17,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "596:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "580:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 16,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "580:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 19,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "619:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "603:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "603:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 21,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "645:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "629:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 20,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "629:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "579:74:0"
									},
									"src": "565:89:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "660:117:0",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"id": 32,
									"name": "ApprovalForAll",
									"nameLocation": "788:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 26,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "819:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "803:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 25,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "803:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "842:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "826:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 27,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "826:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 30,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "857:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "852:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 29,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "852:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "802:64:0"
									},
									"src": "782:85:0"
								},
								{
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "873:76:0",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 40,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "963:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "981:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "973:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "973:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "972:15:0"
									},
									"returnParameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1019:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1011:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 37,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1010:17:0"
									},
									"scope": 115,
									"src": "954:74:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1034:131:0",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 48,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1179:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1195:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "1187:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 42,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1187:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1186:17:0"
									},
									"returnParameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1235:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "1227:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 45,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1227:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1226:15:0"
									},
									"scope": 115,
									"src": "1170:72:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 49,
										"nodeType": "StructuredDocumentation",
										"src": "1248:556:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 60,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1818:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1852:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "1844:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 50,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1844:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1874:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "1866:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 52,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1866:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1894:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "1886:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 54,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1926:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "1911:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 56,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1911:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1834:102:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1945:0:0"
									},
									"scope": 115,
									"src": "1809:137:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "1952:690:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 70,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2656:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2690:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "2682:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2682:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2712:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "2704:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 64,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2704:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2732:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "2724:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 66,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2724:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2672:73:0"
									},
									"returnParameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2754:0:0"
									},
									"scope": 115,
									"src": "2647:108:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 71,
										"nodeType": "StructuredDocumentation",
										"src": "2761:504:0",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 80,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3279:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3309:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "3301:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 72,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3301:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3331:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "3323:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 74,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3323:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3351:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "3343:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 76,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3343:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3291:73:0"
									},
									"returnParameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3373:0:0"
									},
									"scope": 115,
									"src": "3270:104:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "3380:452:0",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 88,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3846:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3862:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "3854:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3854:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3874:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "3866:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 84,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3866:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3853:29:0"
									},
									"returnParameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3891:0:0"
									},
									"scope": 115,
									"src": "3837:55:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 89,
										"nodeType": "StructuredDocumentation",
										"src": "3898:309:0",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 96,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4221:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4247:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "4239:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 90,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4239:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "4262:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "4257:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 92,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4257:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4238:34:0"
									},
									"returnParameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4281:0:0"
									},
									"scope": 115,
									"src": "4212:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 97,
										"nodeType": "StructuredDocumentation",
										"src": "4288:139:0",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 104,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4441:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4461:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "4453:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4453:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4452:17:0"
									},
									"returnParameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 102,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4501:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "4493:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 101,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4493:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4492:18:0"
									},
									"scope": 115,
									"src": "4432:79:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 105,
										"nodeType": "StructuredDocumentation",
										"src": "4517:138:0",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 114,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4669:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4694:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "4686:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 106,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4686:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4709:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "4701:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4701:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4685:33:0"
									},
									"returnParameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "4742:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 111,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4742:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4741:6:0"
									},
									"scope": 115,
									"src": "4660:88:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 116,
							"src": "250:4500:0",
							"usedErrors": []
						}
					],
					"src": "108:4643:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							133
						]
					},
					"id": 134,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 117,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "116:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 118,
								"nodeType": "StructuredDocumentation",
								"src": "141:152:1",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 133,
							"linearizedBaseContracts": [
								133
							],
							"name": "IERC721Receiver",
							"nameLocation": "304:15:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "326:493:1",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 132,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "833:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "867:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "859:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "859:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "893:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "885:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 122,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "885:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 125,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "915:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "907:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 124,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "907:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "947:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "932:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 126,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "932:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:108:1"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 130,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "976:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 129,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "976:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "975:8:1"
									},
									"scope": 133,
									"src": "824:160:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 134,
							"src": "294:692:1",
							"usedErrors": []
						}
					],
					"src": "116:871:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol",
					"exportedSymbols": {
						"ERC721Holder": [
							160
						],
						"IERC721Receiver": [
							133
						]
					},
					"id": 161,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 135,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "104:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"file": "../IERC721Receiver.sol",
							"id": 136,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 161,
							"sourceUnit": 134,
							"src": "129:32:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 138,
										"name": "IERC721Receiver",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 133,
										"src": "424:15:2"
									},
									"id": 139,
									"nodeType": "InheritanceSpecifier",
									"src": "424:15:2"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 137,
								"nodeType": "StructuredDocumentation",
								"src": "163:235:2",
								"text": " @dev Implementation of the {IERC721Receiver} interface.\n Accepts all token transfers.\n Make sure the contract is able to use its token with {IERC721-safeTransferFrom}, {IERC721-approve} or {IERC721-setApprovalForAll}."
							},
							"fullyImplemented": true,
							"id": 160,
							"linearizedBaseContracts": [
								160,
								133
							],
							"name": "ERC721Holder",
							"nameLocation": "408:12:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										132
									],
									"body": {
										"id": 158,
										"nodeType": "Block",
										"src": "734:54:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 154,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967268,
															"src": "751:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC721Holder_$160",
																"typeString": "contract ERC721Holder"
															}
														},
														"id": 155,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "onERC721Received",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 159,
														"src": "751:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
															"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
														}
													},
													"id": 156,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberName": "selector",
													"nodeType": "MemberAccess",
													"src": "751:30:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"functionReturnParameters": 153,
												"id": 157,
												"nodeType": "Return",
												"src": "744:37:2"
											}
										]
									},
									"documentation": {
										"id": 140,
										"nodeType": "StructuredDocumentation",
										"src": "446:137:2",
										"text": " @dev See {IERC721Receiver-onERC721Received}.\n Always returns `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 159,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "597:16:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 150,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "708:8:2"
									},
									"parameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "623:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 141,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "623:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "640:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "640:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "657:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 145,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "674:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 147,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "613:79:2"
									},
									"returnParameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "726:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 151,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "726:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "725:8:2"
									},
									"scope": 160,
									"src": "588:200:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 161,
							"src": "399:391:2",
							"usedErrors": []
						}
					],
					"src": "104:687:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							172
						]
					},
					"id": 173,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 162,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 163,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:3",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 172,
							"linearizedBaseContracts": [
								172
							],
							"name": "IERC165",
							"nameLocation": "415:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 164,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:3",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 171,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "801:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 165,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:3"
									},
									"returnParameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "844:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 168,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:3"
									},
									"scope": 172,
									"src": "774:76:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 173,
							"src": "405:447:3",
							"usedErrors": []
						}
					],
					"src": "100:753:3"
				},
				"id": 3
			},
			"Pratice2nd.sol": {
				"ast": {
					"absolutePath": "Pratice2nd.sol",
					"exportedSymbols": {
						"ERC721Holder": [
							160
						],
						"IERC165": [
							172
						],
						"IERC721": [
							115
						],
						"IERC721Receiver": [
							133
						],
						"ManiTransfer": [
							201
						]
					},
					"id": 202,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 174,
							"literals": [
								"solidity",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "32:22:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"id": 175,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 202,
							"sourceUnit": 116,
							"src": "57:58:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol",
							"file": "@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol",
							"id": 176,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 202,
							"sourceUnit": 161,
							"src": "116:69:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 177,
										"name": "ERC721Holder",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 160,
										"src": "213:12:4"
									},
									"id": 178,
									"nodeType": "InheritanceSpecifier",
									"src": "213:12:4"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 201,
							"linearizedBaseContracts": [
								201,
								160,
								133
							],
							"name": "ManiTransfer",
							"nameLocation": "197:12:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 199,
										"nodeType": "Block",
										"src": "371:90:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 193,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "428:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ManiTransfer_$201",
																		"typeString": "contract ManiTransfer"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ManiTransfer_$201",
																		"typeString": "contract ManiTransfer"
																	}
																],
																"id": 192,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "420:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 191,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "420:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 194,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "420:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 195,
															"name": "toAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 180,
															"src": "435:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 196,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 184,
															"src": "446:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 188,
																	"name": "tokenAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 182,
																	"src": "389:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 187,
																"name": "IERC721",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 115,
																"src": "381:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC721_$115_$",
																	"typeString": "type(contract IERC721)"
																}
															},
															"id": 189,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "381:21:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$115",
																"typeString": "contract IERC721"
															}
														},
														"id": 190,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 70,
														"src": "381:38:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "381:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 198,
												"nodeType": "ExpressionStatement",
												"src": "381:73:4"
											}
										]
									},
									"functionSelector": "cb9354cd",
									"id": 200,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferERC721FundsToAddress",
									"nameLocation": "246:29:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "toAddress",
												"nameLocation": "293:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "285:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 179,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "285:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "tokenAddress",
												"nameLocation": "320:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "312:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "312:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "350:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "342:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "342:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "275:88:4"
									},
									"returnParameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "371:0:4"
									},
									"scope": 201,
									"src": "237:224:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 202,
							"src": "188:275:4",
							"usedErrors": []
						}
					],
					"src": "32:431:4"
				},
				"id": 4
			}
		}
	}
}