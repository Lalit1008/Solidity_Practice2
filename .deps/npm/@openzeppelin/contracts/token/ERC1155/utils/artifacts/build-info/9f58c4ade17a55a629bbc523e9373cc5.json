{
	"id": "9f58c4ade17a55a629bbc523e9373cc5",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			".deps/npm/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC1155/utils/ERC1155Holder.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./ERC1155Receiver.sol\";\n\n/**\n * Simple implementation of `ERC1155Receiver` that will allow a contract to hold ERC1155 tokens.\n *\n * IMPORTANT: When inheriting this contract, you must include a way to use the received tokens, otherwise they will be\n * stuck.\n *\n * @dev _Available since v3.1._\n */\ncontract ERC1155Holder is ERC1155Receiver {\n    function onERC1155Received(\n        address,\n        address,\n        uint256,\n        uint256,\n        bytes memory\n    ) public virtual override returns (bytes4) {\n        return this.onERC1155Received.selector;\n    }\n\n    function onERC1155BatchReceived(\n        address,\n        address,\n        uint256[] memory,\n        uint256[] memory,\n        bytes memory\n    ) public virtual override returns (bytes4) {\n        return this.onERC1155BatchReceived.selector;\n    }\n}\n"
			},
			".deps/npm/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/utils/ERC1155Receiver.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC1155Receiver.sol\";\nimport \"../../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev _Available since v3.1._\n */\nabstract contract ERC1155Receiver is ERC165, IERC1155Receiver {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return interfaceId == type(IERC1155Receiver).interfaceId || super.supportsInterface(interfaceId);\n    }\n}\n"
			},
			".deps/npm/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			".deps/npm/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC1155/IERC1155Receiver.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev _Available since v3.1._\n */\ninterface IERC1155Receiver is IERC165 {\n    /**\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\n     *\n     * NOTE: To accept the transfer, this must return\n     * `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n     * (i.e. 0xf23a6e61, or its own function selector).\n     *\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param id The ID of the token being transferred\n     * @param value The amount of tokens being transferred\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n     */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n\n    /**\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\n     * been updated.\n     *\n     * NOTE: To accept the transfer(s), this must return\n     * `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n     * (i.e. 0xbc197c81, or its own function selector).\n     *\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n     */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			".deps/npm/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			".deps/npm/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"IERC1155Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "_Available since v3.1._",
						"kind": "dev",
						"methods": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
								"details": "Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"ids": "An array containing ids of each token being transferred (order and length must match values array)",
									"operator": "The address which initiated the batch transfer (i.e. msg.sender)",
									"values": "An array containing amounts of each token being transferred (order and length must match ids array)"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
								}
							},
							"onERC1155Received(address,address,uint256,uint256,bytes)": {
								"details": "Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"id": "The ID of the token being transferred",
									"operator": "The address which initiated the transfer (i.e. msg.sender)",
									"value": "The amount of tokens being transferred"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"_Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/npm/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/npm/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\".deps/npm/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			".deps/npm/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol": {
				"ERC1155Holder": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "_Available since v3.1._",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":451:973  contract ERC1155Holder is ERC1155Receiver {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":451:973  contract ERC1155Holder is ERC1155Receiver {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xbc197c81\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xf23a6e61\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":387:608  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_3:\n      tag_6\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      tag_9\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":724:971  function onERC1155BatchReceived(... */\n    tag_4:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":499:718  function onERC1155Received(... */\n    tag_5:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":387:608  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_9:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":489:493  bool */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":527:561  type(IERC1155Receiver).interfaceId */\n      0x4e2312e000000000000000000000000000000000000000000000000000000000\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":512:561  interfaceId == type(IERC1155Receiver).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":512:523  interfaceId */\n      dup3\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":512:561  interfaceId == type(IERC1155Receiver).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":512:601  interfaceId == type(IERC1155Receiver).interfaceId || super.supportsInterface(interfaceId) */\n      dup1\n      tag_24\n      jumpi\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":565:601  super.supportsInterface(interfaceId) */\n      tag_25\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":589:600  interfaceId */\n      dup3\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":565:588  super.supportsInterface */\n      tag_26\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":565:601  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_25:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":512:601  interfaceId == type(IERC1155Receiver).interfaceId || super.supportsInterface(interfaceId) */\n    tag_24:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":505:601  return interfaceId == type(IERC1155Receiver).interfaceId || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":387:608  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":724:971  function onERC1155BatchReceived(... */\n    tag_15:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":903:909  bytes4 */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":928:964  this.onERC1155BatchReceived.selector */\n      shl(0xe0, 0xbc197c81)\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":921:964  return this.onERC1155BatchReceived.selector */\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":724:971  function onERC1155BatchReceived(... */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":499:718  function onERC1155Received(... */\n    tag_21:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":655:661  bytes4 */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":680:711  this.onERC1155Received.selector */\n      shl(0xe0, 0xf23a6e61)\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":673:711  return this.onERC1155Received.selector */\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":499:718  function onERC1155Received(... */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_26:\n        /* \".deps/npm/@openzeppelin/contracts/utils/introspection/ERC165.sol\":914:918  bool */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/utils/introspection/ERC165.sol\":952:977  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \".deps/npm/@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \".deps/npm/@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:948  interfaceId */\n      dup3\n        /* \".deps/npm/@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \".deps/npm/@openzeppelin/contracts/utils/introspection/ERC165.sol\":930:977  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24:746   */\n    tag_31:\n        /* \"#utility.yul\":120:125   */\n      0x00\n        /* \"#utility.yul\":145:226   */\n      tag_33\n        /* \"#utility.yul\":161:225   */\n      tag_34\n        /* \"#utility.yul\":218:224   */\n      dup5\n        /* \"#utility.yul\":161:225   */\n      tag_35\n      jump\t// in\n    tag_34:\n        /* \"#utility.yul\":145:226   */\n      tag_36\n      jump\t// in\n    tag_33:\n        /* \"#utility.yul\":136:226   */\n      swap1\n      pop\n        /* \"#utility.yul\":246:251   */\n      dup1\n        /* \"#utility.yul\":275:281   */\n      dup4\n        /* \"#utility.yul\":268:273   */\n      dup3\n        /* \"#utility.yul\":261:282   */\n      mstore\n        /* \"#utility.yul\":309:313   */\n      0x20\n        /* \"#utility.yul\":302:307   */\n      dup3\n        /* \"#utility.yul\":298:314   */\n      add\n        /* \"#utility.yul\":291:314   */\n      swap1\n      pop\n        /* \"#utility.yul\":335:341   */\n      dup3\n        /* \"#utility.yul\":385:388   */\n      dup6\n        /* \"#utility.yul\":377:381   */\n      0x20\n        /* \"#utility.yul\":369:375   */\n      dup7\n        /* \"#utility.yul\":365:382   */\n      mul\n        /* \"#utility.yul\":360:363   */\n      dup3\n        /* \"#utility.yul\":356:383   */\n      add\n        /* \"#utility.yul\":353:389   */\n      gt\n        /* \"#utility.yul\":350:493   */\n      iszero\n      tag_37\n      jumpi\n        /* \"#utility.yul\":404:483   */\n      tag_38\n      tag_39\n      jump\t// in\n    tag_38:\n        /* \"#utility.yul\":350:493   */\n    tag_37:\n        /* \"#utility.yul\":517:518   */\n      0x00\n        /* \"#utility.yul\":502:740   */\n    tag_40:\n        /* \"#utility.yul\":527:533   */\n      dup6\n        /* \"#utility.yul\":524:525   */\n      dup2\n        /* \"#utility.yul\":521:534   */\n      lt\n        /* \"#utility.yul\":502:740   */\n      iszero\n      tag_42\n      jumpi\n        /* \"#utility.yul\":595:598   */\n      dup2\n        /* \"#utility.yul\":624:661   */\n      tag_43\n        /* \"#utility.yul\":657:660   */\n      dup9\n        /* \"#utility.yul\":645:655   */\n      dup3\n        /* \"#utility.yul\":624:661   */\n      tag_44\n      jump\t// in\n    tag_43:\n        /* \"#utility.yul\":619:622   */\n      dup5\n        /* \"#utility.yul\":612:662   */\n      mstore\n        /* \"#utility.yul\":691:695   */\n      0x20\n        /* \"#utility.yul\":686:689   */\n      dup5\n        /* \"#utility.yul\":682:696   */\n      add\n        /* \"#utility.yul\":675:696   */\n      swap4\n      pop\n        /* \"#utility.yul\":725:729   */\n      0x20\n        /* \"#utility.yul\":720:723   */\n      dup4\n        /* \"#utility.yul\":716:730   */\n      add\n        /* \"#utility.yul\":709:730   */\n      swap3\n      pop\n        /* \"#utility.yul\":562:740   */\n      pop\n        /* \"#utility.yul\":549:550   */\n      0x01\n        /* \"#utility.yul\":546:547   */\n      dup2\n        /* \"#utility.yul\":542:551   */\n      add\n        /* \"#utility.yul\":537:551   */\n      swap1\n      pop\n        /* \"#utility.yul\":502:740   */\n      jump(tag_40)\n    tag_42:\n        /* \"#utility.yul\":506:520   */\n      pop\n        /* \"#utility.yul\":126:746   */\n      pop\n      pop\n        /* \"#utility.yul\":24:746   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":752:1162   */\n    tag_45:\n        /* \"#utility.yul\":829:834   */\n      0x00\n        /* \"#utility.yul\":854:919   */\n      tag_47\n        /* \"#utility.yul\":870:918   */\n      tag_48\n        /* \"#utility.yul\":911:917   */\n      dup5\n        /* \"#utility.yul\":870:918   */\n      tag_49\n      jump\t// in\n    tag_48:\n        /* \"#utility.yul\":854:919   */\n      tag_36\n      jump\t// in\n    tag_47:\n        /* \"#utility.yul\":845:919   */\n      swap1\n      pop\n        /* \"#utility.yul\":942:948   */\n      dup3\n        /* \"#utility.yul\":935:940   */\n      dup2\n        /* \"#utility.yul\":928:949   */\n      mstore\n        /* \"#utility.yul\":980:984   */\n      0x20\n        /* \"#utility.yul\":973:978   */\n      dup2\n        /* \"#utility.yul\":969:985   */\n      add\n        /* \"#utility.yul\":1018:1021   */\n      dup5\n        /* \"#utility.yul\":1009:1015   */\n      dup5\n        /* \"#utility.yul\":1004:1007   */\n      dup5\n        /* \"#utility.yul\":1000:1016   */\n      add\n        /* \"#utility.yul\":997:1022   */\n      gt\n        /* \"#utility.yul\":994:1106   */\n      iszero\n      tag_50\n      jumpi\n        /* \"#utility.yul\":1025:1104   */\n      tag_51\n      tag_52\n      jump\t// in\n    tag_51:\n        /* \"#utility.yul\":994:1106   */\n    tag_50:\n        /* \"#utility.yul\":1115:1156   */\n      tag_53\n        /* \"#utility.yul\":1149:1155   */\n      dup5\n        /* \"#utility.yul\":1144:1147   */\n      dup3\n        /* \"#utility.yul\":1139:1142   */\n      dup6\n        /* \"#utility.yul\":1115:1156   */\n      tag_54\n      jump\t// in\n    tag_53:\n        /* \"#utility.yul\":835:1162   */\n      pop\n        /* \"#utility.yul\":752:1162   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1168:1307   */\n    tag_55:\n        /* \"#utility.yul\":1214:1219   */\n      0x00\n        /* \"#utility.yul\":1252:1258   */\n      dup2\n        /* \"#utility.yul\":1239:1259   */\n      calldataload\n        /* \"#utility.yul\":1230:1259   */\n      swap1\n      pop\n        /* \"#utility.yul\":1268:1301   */\n      tag_57\n        /* \"#utility.yul\":1295:1300   */\n      dup2\n        /* \"#utility.yul\":1268:1301   */\n      tag_58\n      jump\t// in\n    tag_57:\n        /* \"#utility.yul\":1168:1307   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1330:1700   */\n    tag_59:\n        /* \"#utility.yul\":1401:1406   */\n      0x00\n        /* \"#utility.yul\":1450:1453   */\n      dup3\n        /* \"#utility.yul\":1443:1447   */\n      0x1f\n        /* \"#utility.yul\":1435:1441   */\n      dup4\n        /* \"#utility.yul\":1431:1448   */\n      add\n        /* \"#utility.yul\":1427:1454   */\n      slt\n        /* \"#utility.yul\":1417:1539   */\n      tag_61\n      jumpi\n        /* \"#utility.yul\":1458:1537   */\n      tag_62\n      tag_63\n      jump\t// in\n    tag_62:\n        /* \"#utility.yul\":1417:1539   */\n    tag_61:\n        /* \"#utility.yul\":1575:1581   */\n      dup2\n        /* \"#utility.yul\":1562:1582   */\n      calldataload\n        /* \"#utility.yul\":1600:1694   */\n      tag_64\n        /* \"#utility.yul\":1690:1693   */\n      dup5\n        /* \"#utility.yul\":1682:1688   */\n      dup3\n        /* \"#utility.yul\":1675:1679   */\n      0x20\n        /* \"#utility.yul\":1667:1673   */\n      dup7\n        /* \"#utility.yul\":1663:1680   */\n      add\n        /* \"#utility.yul\":1600:1694   */\n      tag_31\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":1591:1694   */\n      swap2\n      pop\n        /* \"#utility.yul\":1407:1700   */\n      pop\n        /* \"#utility.yul\":1330:1700   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1706:1843   */\n    tag_65:\n        /* \"#utility.yul\":1751:1756   */\n      0x00\n        /* \"#utility.yul\":1789:1795   */\n      dup2\n        /* \"#utility.yul\":1776:1796   */\n      calldataload\n        /* \"#utility.yul\":1767:1796   */\n      swap1\n      pop\n        /* \"#utility.yul\":1805:1837   */\n      tag_67\n        /* \"#utility.yul\":1831:1836   */\n      dup2\n        /* \"#utility.yul\":1805:1837   */\n      tag_68\n      jump\t// in\n    tag_67:\n        /* \"#utility.yul\":1706:1843   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1862:2200   */\n    tag_69:\n        /* \"#utility.yul\":1917:1922   */\n      0x00\n        /* \"#utility.yul\":1966:1969   */\n      dup3\n        /* \"#utility.yul\":1959:1963   */\n      0x1f\n        /* \"#utility.yul\":1951:1957   */\n      dup4\n        /* \"#utility.yul\":1947:1964   */\n      add\n        /* \"#utility.yul\":1943:1970   */\n      slt\n        /* \"#utility.yul\":1933:2055   */\n      tag_71\n      jumpi\n        /* \"#utility.yul\":1974:2053   */\n      tag_72\n      tag_63\n      jump\t// in\n    tag_72:\n        /* \"#utility.yul\":1933:2055   */\n    tag_71:\n        /* \"#utility.yul\":2091:2097   */\n      dup2\n        /* \"#utility.yul\":2078:2098   */\n      calldataload\n        /* \"#utility.yul\":2116:2194   */\n      tag_73\n        /* \"#utility.yul\":2190:2193   */\n      dup5\n        /* \"#utility.yul\":2182:2188   */\n      dup3\n        /* \"#utility.yul\":2175:2179   */\n      0x20\n        /* \"#utility.yul\":2167:2173   */\n      dup7\n        /* \"#utility.yul\":2163:2180   */\n      add\n        /* \"#utility.yul\":2116:2194   */\n      tag_45\n      jump\t// in\n    tag_73:\n        /* \"#utility.yul\":2107:2194   */\n      swap2\n      pop\n        /* \"#utility.yul\":1923:2200   */\n      pop\n        /* \"#utility.yul\":1862:2200   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2206:2345   */\n    tag_44:\n        /* \"#utility.yul\":2252:2257   */\n      0x00\n        /* \"#utility.yul\":2290:2296   */\n      dup2\n        /* \"#utility.yul\":2277:2297   */\n      calldataload\n        /* \"#utility.yul\":2268:2297   */\n      swap1\n      pop\n        /* \"#utility.yul\":2306:2339   */\n      tag_75\n        /* \"#utility.yul\":2333:2338   */\n      dup2\n        /* \"#utility.yul\":2306:2339   */\n      tag_76\n      jump\t// in\n    tag_75:\n        /* \"#utility.yul\":2206:2345   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2351:3860   */\n    tag_14:\n        /* \"#utility.yul\":2505:2511   */\n      0x00\n        /* \"#utility.yul\":2513:2519   */\n      dup1\n        /* \"#utility.yul\":2521:2527   */\n      0x00\n        /* \"#utility.yul\":2529:2535   */\n      dup1\n        /* \"#utility.yul\":2537:2543   */\n      0x00\n        /* \"#utility.yul\":2586:2589   */\n      0xa0\n        /* \"#utility.yul\":2574:2583   */\n      dup7\n        /* \"#utility.yul\":2565:2572   */\n      dup9\n        /* \"#utility.yul\":2561:2584   */\n      sub\n        /* \"#utility.yul\":2557:2590   */\n      slt\n        /* \"#utility.yul\":2554:2674   */\n      iszero\n      tag_78\n      jumpi\n        /* \"#utility.yul\":2593:2672   */\n      tag_79\n      tag_80\n      jump\t// in\n    tag_79:\n        /* \"#utility.yul\":2554:2674   */\n    tag_78:\n        /* \"#utility.yul\":2713:2714   */\n      0x00\n        /* \"#utility.yul\":2738:2791   */\n      tag_81\n        /* \"#utility.yul\":2783:2790   */\n      dup9\n        /* \"#utility.yul\":2774:2780   */\n      dup3\n        /* \"#utility.yul\":2763:2772   */\n      dup10\n        /* \"#utility.yul\":2759:2781   */\n      add\n        /* \"#utility.yul\":2738:2791   */\n      tag_55\n      jump\t// in\n    tag_81:\n        /* \"#utility.yul\":2728:2791   */\n      swap6\n      pop\n        /* \"#utility.yul\":2684:2801   */\n      pop\n        /* \"#utility.yul\":2840:2842   */\n      0x20\n        /* \"#utility.yul\":2866:2919   */\n      tag_82\n        /* \"#utility.yul\":2911:2918   */\n      dup9\n        /* \"#utility.yul\":2902:2908   */\n      dup3\n        /* \"#utility.yul\":2891:2900   */\n      dup10\n        /* \"#utility.yul\":2887:2909   */\n      add\n        /* \"#utility.yul\":2866:2919   */\n      tag_55\n      jump\t// in\n    tag_82:\n        /* \"#utility.yul\":2856:2919   */\n      swap5\n      pop\n        /* \"#utility.yul\":2811:2929   */\n      pop\n        /* \"#utility.yul\":2996:2998   */\n      0x40\n        /* \"#utility.yul\":2985:2994   */\n      dup7\n        /* \"#utility.yul\":2981:2999   */\n      add\n        /* \"#utility.yul\":2968:3000   */\n      calldataload\n        /* \"#utility.yul\":3027:3045   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3019:3025   */\n      dup2\n        /* \"#utility.yul\":3016:3046   */\n      gt\n        /* \"#utility.yul\":3013:3130   */\n      iszero\n      tag_83\n      jumpi\n        /* \"#utility.yul\":3049:3128   */\n      tag_84\n      tag_85\n      jump\t// in\n    tag_84:\n        /* \"#utility.yul\":3013:3130   */\n    tag_83:\n        /* \"#utility.yul\":3154:3232   */\n      tag_86\n        /* \"#utility.yul\":3224:3231   */\n      dup9\n        /* \"#utility.yul\":3215:3221   */\n      dup3\n        /* \"#utility.yul\":3204:3213   */\n      dup10\n        /* \"#utility.yul\":3200:3222   */\n      add\n        /* \"#utility.yul\":3154:3232   */\n      tag_59\n      jump\t// in\n    tag_86:\n        /* \"#utility.yul\":3144:3232   */\n      swap4\n      pop\n        /* \"#utility.yul\":2939:3242   */\n      pop\n        /* \"#utility.yul\":3309:3311   */\n      0x60\n        /* \"#utility.yul\":3298:3307   */\n      dup7\n        /* \"#utility.yul\":3294:3312   */\n      add\n        /* \"#utility.yul\":3281:3313   */\n      calldataload\n        /* \"#utility.yul\":3340:3358   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3332:3338   */\n      dup2\n        /* \"#utility.yul\":3329:3359   */\n      gt\n        /* \"#utility.yul\":3326:3443   */\n      iszero\n      tag_87\n      jumpi\n        /* \"#utility.yul\":3362:3441   */\n      tag_88\n      tag_85\n      jump\t// in\n    tag_88:\n        /* \"#utility.yul\":3326:3443   */\n    tag_87:\n        /* \"#utility.yul\":3467:3545   */\n      tag_89\n        /* \"#utility.yul\":3537:3544   */\n      dup9\n        /* \"#utility.yul\":3528:3534   */\n      dup3\n        /* \"#utility.yul\":3517:3526   */\n      dup10\n        /* \"#utility.yul\":3513:3535   */\n      add\n        /* \"#utility.yul\":3467:3545   */\n      tag_59\n      jump\t// in\n    tag_89:\n        /* \"#utility.yul\":3457:3545   */\n      swap3\n      pop\n        /* \"#utility.yul\":3252:3555   */\n      pop\n        /* \"#utility.yul\":3622:3625   */\n      0x80\n        /* \"#utility.yul\":3611:3620   */\n      dup7\n        /* \"#utility.yul\":3607:3626   */\n      add\n        /* \"#utility.yul\":3594:3627   */\n      calldataload\n        /* \"#utility.yul\":3654:3672   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3646:3652   */\n      dup2\n        /* \"#utility.yul\":3643:3673   */\n      gt\n        /* \"#utility.yul\":3640:3757   */\n      iszero\n      tag_90\n      jumpi\n        /* \"#utility.yul\":3676:3755   */\n      tag_91\n      tag_85\n      jump\t// in\n    tag_91:\n        /* \"#utility.yul\":3640:3757   */\n    tag_90:\n        /* \"#utility.yul\":3781:3843   */\n      tag_92\n        /* \"#utility.yul\":3835:3842   */\n      dup9\n        /* \"#utility.yul\":3826:3832   */\n      dup3\n        /* \"#utility.yul\":3815:3824   */\n      dup10\n        /* \"#utility.yul\":3811:3833   */\n      add\n        /* \"#utility.yul\":3781:3843   */\n      tag_69\n      jump\t// in\n    tag_92:\n        /* \"#utility.yul\":3771:3843   */\n      swap2\n      pop\n        /* \"#utility.yul\":3565:3853   */\n      pop\n        /* \"#utility.yul\":2351:3860   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3866:4955   */\n    tag_20:\n        /* \"#utility.yul\":3970:3976   */\n      0x00\n        /* \"#utility.yul\":3978:3984   */\n      dup1\n        /* \"#utility.yul\":3986:3992   */\n      0x00\n        /* \"#utility.yul\":3994:4000   */\n      dup1\n        /* \"#utility.yul\":4002:4008   */\n      0x00\n        /* \"#utility.yul\":4051:4054   */\n      0xa0\n        /* \"#utility.yul\":4039:4048   */\n      dup7\n        /* \"#utility.yul\":4030:4037   */\n      dup9\n        /* \"#utility.yul\":4026:4049   */\n      sub\n        /* \"#utility.yul\":4022:4055   */\n      slt\n        /* \"#utility.yul\":4019:4139   */\n      iszero\n      tag_94\n      jumpi\n        /* \"#utility.yul\":4058:4137   */\n      tag_95\n      tag_80\n      jump\t// in\n    tag_95:\n        /* \"#utility.yul\":4019:4139   */\n    tag_94:\n        /* \"#utility.yul\":4178:4179   */\n      0x00\n        /* \"#utility.yul\":4203:4256   */\n      tag_96\n        /* \"#utility.yul\":4248:4255   */\n      dup9\n        /* \"#utility.yul\":4239:4245   */\n      dup3\n        /* \"#utility.yul\":4228:4237   */\n      dup10\n        /* \"#utility.yul\":4224:4246   */\n      add\n        /* \"#utility.yul\":4203:4256   */\n      tag_55\n      jump\t// in\n    tag_96:\n        /* \"#utility.yul\":4193:4256   */\n      swap6\n      pop\n        /* \"#utility.yul\":4149:4266   */\n      pop\n        /* \"#utility.yul\":4305:4307   */\n      0x20\n        /* \"#utility.yul\":4331:4384   */\n      tag_97\n        /* \"#utility.yul\":4376:4383   */\n      dup9\n        /* \"#utility.yul\":4367:4373   */\n      dup3\n        /* \"#utility.yul\":4356:4365   */\n      dup10\n        /* \"#utility.yul\":4352:4374   */\n      add\n        /* \"#utility.yul\":4331:4384   */\n      tag_55\n      jump\t// in\n    tag_97:\n        /* \"#utility.yul\":4321:4384   */\n      swap5\n      pop\n        /* \"#utility.yul\":4276:4394   */\n      pop\n        /* \"#utility.yul\":4433:4435   */\n      0x40\n        /* \"#utility.yul\":4459:4512   */\n      tag_98\n        /* \"#utility.yul\":4504:4511   */\n      dup9\n        /* \"#utility.yul\":4495:4501   */\n      dup3\n        /* \"#utility.yul\":4484:4493   */\n      dup10\n        /* \"#utility.yul\":4480:4502   */\n      add\n        /* \"#utility.yul\":4459:4512   */\n      tag_44\n      jump\t// in\n    tag_98:\n        /* \"#utility.yul\":4449:4512   */\n      swap4\n      pop\n        /* \"#utility.yul\":4404:4522   */\n      pop\n        /* \"#utility.yul\":4561:4563   */\n      0x60\n        /* \"#utility.yul\":4587:4640   */\n      tag_99\n        /* \"#utility.yul\":4632:4639   */\n      dup9\n        /* \"#utility.yul\":4623:4629   */\n      dup3\n        /* \"#utility.yul\":4612:4621   */\n      dup10\n        /* \"#utility.yul\":4608:4630   */\n      add\n        /* \"#utility.yul\":4587:4640   */\n      tag_44\n      jump\t// in\n    tag_99:\n        /* \"#utility.yul\":4577:4640   */\n      swap3\n      pop\n        /* \"#utility.yul\":4532:4650   */\n      pop\n        /* \"#utility.yul\":4717:4720   */\n      0x80\n        /* \"#utility.yul\":4706:4715   */\n      dup7\n        /* \"#utility.yul\":4702:4721   */\n      add\n        /* \"#utility.yul\":4689:4722   */\n      calldataload\n        /* \"#utility.yul\":4749:4767   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4741:4747   */\n      dup2\n        /* \"#utility.yul\":4738:4768   */\n      gt\n        /* \"#utility.yul\":4735:4852   */\n      iszero\n      tag_100\n      jumpi\n        /* \"#utility.yul\":4771:4850   */\n      tag_101\n      tag_85\n      jump\t// in\n    tag_101:\n        /* \"#utility.yul\":4735:4852   */\n    tag_100:\n        /* \"#utility.yul\":4876:4938   */\n      tag_102\n        /* \"#utility.yul\":4930:4937   */\n      dup9\n        /* \"#utility.yul\":4921:4927   */\n      dup3\n        /* \"#utility.yul\":4910:4919   */\n      dup10\n        /* \"#utility.yul\":4906:4928   */\n      add\n        /* \"#utility.yul\":4876:4938   */\n      tag_69\n      jump\t// in\n    tag_102:\n        /* \"#utility.yul\":4866:4938   */\n      swap2\n      pop\n        /* \"#utility.yul\":4660:4948   */\n      pop\n        /* \"#utility.yul\":3866:4955   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4961:5288   */\n    tag_8:\n        /* \"#utility.yul\":5019:5025   */\n      0x00\n        /* \"#utility.yul\":5068:5070   */\n      0x20\n        /* \"#utility.yul\":5056:5065   */\n      dup3\n        /* \"#utility.yul\":5047:5054   */\n      dup5\n        /* \"#utility.yul\":5043:5066   */\n      sub\n        /* \"#utility.yul\":5039:5071   */\n      slt\n        /* \"#utility.yul\":5036:5155   */\n      iszero\n      tag_104\n      jumpi\n        /* \"#utility.yul\":5074:5153   */\n      tag_105\n      tag_80\n      jump\t// in\n    tag_105:\n        /* \"#utility.yul\":5036:5155   */\n    tag_104:\n        /* \"#utility.yul\":5194:5195   */\n      0x00\n        /* \"#utility.yul\":5219:5271   */\n      tag_106\n        /* \"#utility.yul\":5263:5270   */\n      dup5\n        /* \"#utility.yul\":5254:5260   */\n      dup3\n        /* \"#utility.yul\":5243:5252   */\n      dup6\n        /* \"#utility.yul\":5239:5261   */\n      add\n        /* \"#utility.yul\":5219:5271   */\n      tag_65\n      jump\t// in\n    tag_106:\n        /* \"#utility.yul\":5209:5271   */\n      swap2\n      pop\n        /* \"#utility.yul\":5165:5281   */\n      pop\n        /* \"#utility.yul\":4961:5288   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5294:5403   */\n    tag_107:\n        /* \"#utility.yul\":5375:5396   */\n      tag_109\n        /* \"#utility.yul\":5390:5395   */\n      dup2\n        /* \"#utility.yul\":5375:5396   */\n      tag_110\n      jump\t// in\n    tag_109:\n        /* \"#utility.yul\":5370:5373   */\n      dup3\n        /* \"#utility.yul\":5363:5397   */\n      mstore\n        /* \"#utility.yul\":5294:5403   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5409:5524   */\n    tag_111:\n        /* \"#utility.yul\":5494:5517   */\n      tag_113\n        /* \"#utility.yul\":5511:5516   */\n      dup2\n        /* \"#utility.yul\":5494:5517   */\n      tag_114\n      jump\t// in\n    tag_113:\n        /* \"#utility.yul\":5489:5492   */\n      dup3\n        /* \"#utility.yul\":5482:5518   */\n      mstore\n        /* \"#utility.yul\":5409:5524   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5530:5740   */\n    tag_11:\n        /* \"#utility.yul\":5617:5621   */\n      0x00\n        /* \"#utility.yul\":5655:5657   */\n      0x20\n        /* \"#utility.yul\":5644:5653   */\n      dup3\n        /* \"#utility.yul\":5640:5658   */\n      add\n        /* \"#utility.yul\":5632:5658   */\n      swap1\n      pop\n        /* \"#utility.yul\":5668:5733   */\n      tag_116\n        /* \"#utility.yul\":5730:5731   */\n      0x00\n        /* \"#utility.yul\":5719:5728   */\n      dup4\n        /* \"#utility.yul\":5715:5732   */\n      add\n        /* \"#utility.yul\":5706:5712   */\n      dup5\n        /* \"#utility.yul\":5668:5733   */\n      tag_107\n      jump\t// in\n    tag_116:\n        /* \"#utility.yul\":5530:5740   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5746:5964   */\n    tag_17:\n        /* \"#utility.yul\":5837:5841   */\n      0x00\n        /* \"#utility.yul\":5875:5877   */\n      0x20\n        /* \"#utility.yul\":5864:5873   */\n      dup3\n        /* \"#utility.yul\":5860:5878   */\n      add\n        /* \"#utility.yul\":5852:5878   */\n      swap1\n      pop\n        /* \"#utility.yul\":5888:5957   */\n      tag_118\n        /* \"#utility.yul\":5954:5955   */\n      0x00\n        /* \"#utility.yul\":5943:5952   */\n      dup4\n        /* \"#utility.yul\":5939:5956   */\n      add\n        /* \"#utility.yul\":5930:5936   */\n      dup5\n        /* \"#utility.yul\":5888:5957   */\n      tag_111\n      jump\t// in\n    tag_118:\n        /* \"#utility.yul\":5746:5964   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5970:6099   */\n    tag_36:\n        /* \"#utility.yul\":6004:6010   */\n      0x00\n        /* \"#utility.yul\":6031:6051   */\n      tag_120\n      tag_121\n      jump\t// in\n    tag_120:\n        /* \"#utility.yul\":6021:6051   */\n      swap1\n      pop\n        /* \"#utility.yul\":6060:6093   */\n      tag_122\n        /* \"#utility.yul\":6088:6092   */\n      dup3\n        /* \"#utility.yul\":6080:6086   */\n      dup3\n        /* \"#utility.yul\":6060:6093   */\n      tag_123\n      jump\t// in\n    tag_122:\n        /* \"#utility.yul\":5970:6099   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6105:6180   */\n    tag_121:\n        /* \"#utility.yul\":6138:6144   */\n      0x00\n        /* \"#utility.yul\":6171:6173   */\n      0x40\n        /* \"#utility.yul\":6165:6174   */\n      mload\n        /* \"#utility.yul\":6155:6174   */\n      swap1\n      pop\n        /* \"#utility.yul\":6105:6180   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":6186:6497   */\n    tag_35:\n        /* \"#utility.yul\":6263:6267   */\n      0x00\n        /* \"#utility.yul\":6353:6371   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6345:6351   */\n      dup3\n        /* \"#utility.yul\":6342:6372   */\n      gt\n        /* \"#utility.yul\":6339:6395   */\n      iszero\n      tag_126\n      jumpi\n        /* \"#utility.yul\":6375:6393   */\n      tag_127\n      tag_128\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":6339:6395   */\n    tag_126:\n        /* \"#utility.yul\":6425:6429   */\n      0x20\n        /* \"#utility.yul\":6417:6423   */\n      dup3\n        /* \"#utility.yul\":6413:6430   */\n      mul\n        /* \"#utility.yul\":6405:6430   */\n      swap1\n      pop\n        /* \"#utility.yul\":6485:6489   */\n      0x20\n        /* \"#utility.yul\":6479:6483   */\n      dup2\n        /* \"#utility.yul\":6475:6490   */\n      add\n        /* \"#utility.yul\":6467:6490   */\n      swap1\n      pop\n        /* \"#utility.yul\":6186:6497   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6503:6810   */\n    tag_49:\n        /* \"#utility.yul\":6564:6568   */\n      0x00\n        /* \"#utility.yul\":6654:6672   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6646:6652   */\n      dup3\n        /* \"#utility.yul\":6643:6673   */\n      gt\n        /* \"#utility.yul\":6640:6696   */\n      iszero\n      tag_130\n      jumpi\n        /* \"#utility.yul\":6676:6694   */\n      tag_131\n      tag_128\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":6640:6696   */\n    tag_130:\n        /* \"#utility.yul\":6714:6743   */\n      tag_132\n        /* \"#utility.yul\":6736:6742   */\n      dup3\n        /* \"#utility.yul\":6714:6743   */\n      tag_133\n      jump\t// in\n    tag_132:\n        /* \"#utility.yul\":6706:6743   */\n      swap1\n      pop\n        /* \"#utility.yul\":6798:6802   */\n      0x20\n        /* \"#utility.yul\":6792:6796   */\n      dup2\n        /* \"#utility.yul\":6788:6803   */\n      add\n        /* \"#utility.yul\":6780:6803   */\n      swap1\n      pop\n        /* \"#utility.yul\":6503:6810   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6816:6912   */\n    tag_134:\n        /* \"#utility.yul\":6853:6860   */\n      0x00\n        /* \"#utility.yul\":6882:6906   */\n      tag_136\n        /* \"#utility.yul\":6900:6905   */\n      dup3\n        /* \"#utility.yul\":6882:6906   */\n      tag_137\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":6871:6906   */\n      swap1\n      pop\n        /* \"#utility.yul\":6816:6912   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6918:7008   */\n    tag_110:\n        /* \"#utility.yul\":6952:6959   */\n      0x00\n        /* \"#utility.yul\":6995:7000   */\n      dup2\n        /* \"#utility.yul\":6988:7001   */\n      iszero\n        /* \"#utility.yul\":6981:7002   */\n      iszero\n        /* \"#utility.yul\":6970:7002   */\n      swap1\n      pop\n        /* \"#utility.yul\":6918:7008   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7014:7163   */\n    tag_114:\n        /* \"#utility.yul\":7050:7057   */\n      0x00\n        /* \"#utility.yul\":7090:7156   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7083:7088   */\n      dup3\n        /* \"#utility.yul\":7079:7157   */\n      and\n        /* \"#utility.yul\":7068:7157   */\n      swap1\n      pop\n        /* \"#utility.yul\":7014:7163   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7169:7295   */\n    tag_137:\n        /* \"#utility.yul\":7206:7213   */\n      0x00\n        /* \"#utility.yul\":7246:7288   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":7239:7244   */\n      dup3\n        /* \"#utility.yul\":7235:7289   */\n      and\n        /* \"#utility.yul\":7224:7289   */\n      swap1\n      pop\n        /* \"#utility.yul\":7169:7295   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7301:7378   */\n    tag_141:\n        /* \"#utility.yul\":7338:7345   */\n      0x00\n        /* \"#utility.yul\":7367:7372   */\n      dup2\n        /* \"#utility.yul\":7356:7372   */\n      swap1\n      pop\n        /* \"#utility.yul\":7301:7378   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7384:7538   */\n    tag_54:\n        /* \"#utility.yul\":7468:7474   */\n      dup3\n        /* \"#utility.yul\":7463:7466   */\n      dup2\n        /* \"#utility.yul\":7458:7461   */\n      dup4\n        /* \"#utility.yul\":7445:7475   */\n      calldatacopy\n        /* \"#utility.yul\":7530:7531   */\n      0x00\n        /* \"#utility.yul\":7521:7527   */\n      dup4\n        /* \"#utility.yul\":7516:7519   */\n      dup4\n        /* \"#utility.yul\":7512:7528   */\n      add\n        /* \"#utility.yul\":7505:7532   */\n      mstore\n        /* \"#utility.yul\":7384:7538   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7544:7825   */\n    tag_123:\n        /* \"#utility.yul\":7627:7654   */\n      tag_145\n        /* \"#utility.yul\":7649:7653   */\n      dup3\n        /* \"#utility.yul\":7627:7654   */\n      tag_133\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":7619:7625   */\n      dup2\n        /* \"#utility.yul\":7615:7655   */\n      add\n        /* \"#utility.yul\":7757:7763   */\n      dup2\n        /* \"#utility.yul\":7745:7755   */\n      dup2\n        /* \"#utility.yul\":7742:7764   */\n      lt\n        /* \"#utility.yul\":7721:7739   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7709:7719   */\n      dup3\n        /* \"#utility.yul\":7706:7740   */\n      gt\n        /* \"#utility.yul\":7703:7765   */\n      or\n        /* \"#utility.yul\":7700:7788   */\n      iszero\n      tag_146\n      jumpi\n        /* \"#utility.yul\":7768:7786   */\n      tag_147\n      tag_128\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":7700:7788   */\n    tag_146:\n        /* \"#utility.yul\":7808:7818   */\n      dup1\n        /* \"#utility.yul\":7804:7806   */\n      0x40\n        /* \"#utility.yul\":7797:7819   */\n      mstore\n        /* \"#utility.yul\":7587:7825   */\n      pop\n        /* \"#utility.yul\":7544:7825   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7831:8011   */\n    tag_128:\n        /* \"#utility.yul\":7879:7956   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7876:7877   */\n      0x00\n        /* \"#utility.yul\":7869:7957   */\n      mstore\n        /* \"#utility.yul\":7976:7980   */\n      0x41\n        /* \"#utility.yul\":7973:7974   */\n      0x04\n        /* \"#utility.yul\":7966:7981   */\n      mstore\n        /* \"#utility.yul\":8000:8004   */\n      0x24\n        /* \"#utility.yul\":7997:7998   */\n      0x00\n        /* \"#utility.yul\":7990:8005   */\n      revert\n        /* \"#utility.yul\":8017:8134   */\n    tag_63:\n        /* \"#utility.yul\":8126:8127   */\n      0x00\n        /* \"#utility.yul\":8123:8124   */\n      dup1\n        /* \"#utility.yul\":8116:8128   */\n      revert\n        /* \"#utility.yul\":8140:8257   */\n    tag_39:\n        /* \"#utility.yul\":8249:8250   */\n      0x00\n        /* \"#utility.yul\":8246:8247   */\n      dup1\n        /* \"#utility.yul\":8239:8251   */\n      revert\n        /* \"#utility.yul\":8263:8380   */\n    tag_52:\n        /* \"#utility.yul\":8372:8373   */\n      0x00\n        /* \"#utility.yul\":8369:8370   */\n      dup1\n        /* \"#utility.yul\":8362:8374   */\n      revert\n        /* \"#utility.yul\":8386:8503   */\n    tag_85:\n        /* \"#utility.yul\":8495:8496   */\n      0x00\n        /* \"#utility.yul\":8492:8493   */\n      dup1\n        /* \"#utility.yul\":8485:8497   */\n      revert\n        /* \"#utility.yul\":8509:8626   */\n    tag_80:\n        /* \"#utility.yul\":8618:8619   */\n      0x00\n        /* \"#utility.yul\":8615:8616   */\n      dup1\n        /* \"#utility.yul\":8608:8620   */\n      revert\n        /* \"#utility.yul\":8632:8734   */\n    tag_133:\n        /* \"#utility.yul\":8673:8679   */\n      0x00\n        /* \"#utility.yul\":8724:8726   */\n      0x1f\n        /* \"#utility.yul\":8720:8727   */\n      not\n        /* \"#utility.yul\":8715:8717   */\n      0x1f\n        /* \"#utility.yul\":8708:8713   */\n      dup4\n        /* \"#utility.yul\":8704:8718   */\n      add\n        /* \"#utility.yul\":8700:8728   */\n      and\n        /* \"#utility.yul\":8690:8728   */\n      swap1\n      pop\n        /* \"#utility.yul\":8632:8734   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8740:8862   */\n    tag_58:\n        /* \"#utility.yul\":8813:8837   */\n      tag_156\n        /* \"#utility.yul\":8831:8836   */\n      dup2\n        /* \"#utility.yul\":8813:8837   */\n      tag_134\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":8806:8811   */\n      dup2\n        /* \"#utility.yul\":8803:8838   */\n      eq\n        /* \"#utility.yul\":8793:8856   */\n      tag_157\n      jumpi\n        /* \"#utility.yul\":8852:8853   */\n      0x00\n        /* \"#utility.yul\":8849:8850   */\n      dup1\n        /* \"#utility.yul\":8842:8854   */\n      revert\n        /* \"#utility.yul\":8793:8856   */\n    tag_157:\n        /* \"#utility.yul\":8740:8862   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8868:8988   */\n    tag_68:\n        /* \"#utility.yul\":8940:8963   */\n      tag_159\n        /* \"#utility.yul\":8957:8962   */\n      dup2\n        /* \"#utility.yul\":8940:8963   */\n      tag_114\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":8933:8938   */\n      dup2\n        /* \"#utility.yul\":8930:8964   */\n      eq\n        /* \"#utility.yul\":8920:8982   */\n      tag_160\n      jumpi\n        /* \"#utility.yul\":8978:8979   */\n      0x00\n        /* \"#utility.yul\":8975:8976   */\n      dup1\n        /* \"#utility.yul\":8968:8980   */\n      revert\n        /* \"#utility.yul\":8920:8982   */\n    tag_160:\n        /* \"#utility.yul\":8868:8988   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8994:9116   */\n    tag_76:\n        /* \"#utility.yul\":9067:9091   */\n      tag_162\n        /* \"#utility.yul\":9085:9090   */\n      dup2\n        /* \"#utility.yul\":9067:9091   */\n      tag_141\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":9060:9065   */\n      dup2\n        /* \"#utility.yul\":9057:9092   */\n      eq\n        /* \"#utility.yul\":9047:9110   */\n      tag_163\n      jumpi\n        /* \"#utility.yul\":9106:9107   */\n      0x00\n        /* \"#utility.yul\":9103:9104   */\n      dup1\n        /* \"#utility.yul\":9096:9108   */\n      revert\n        /* \"#utility.yul\":9047:9110   */\n    tag_163:\n        /* \"#utility.yul\":8994:9116   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122087b5aa8ded40721b42927872f82318a1b7a214a95f52aafd0b100d780174021864736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610722806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806301ffc9a714610046578063bc197c8114610076578063f23a6e61146100a6575b600080fd5b610060600480360381019061005b9190610497565b6100d6565b60405161006d91906104e2565b60405180910390f35b610090600480360381019061008b9190610331565b610150565b60405161009d91906104fd565b60405180910390f35b6100c060048036038101906100bb9190610400565b610165565b6040516100cd91906104fd565b60405180910390f35b60007f4e2312e0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061014957506101488261017a565b5b9050919050565b600063bc197c8160e01b905095945050505050565b600063f23a6e6160e01b905095945050505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60006101f76101f28461053d565b610518565b9050808382526020820190508285602086028201111561021a57610219610682565b5b60005b8581101561024a5781610230888261031c565b84526020840193506020830192505060018101905061021d565b5050509392505050565b600061026761026284610569565b610518565b90508281526020810184848401111561028357610282610687565b5b61028e84828561060e565b509392505050565b6000813590506102a5816106a7565b92915050565b600082601f8301126102c0576102bf61067d565b5b81356102d08482602086016101e4565b91505092915050565b6000813590506102e8816106be565b92915050565b600082601f8301126103035761030261067d565b5b8135610313848260208601610254565b91505092915050565b60008135905061032b816106d5565b92915050565b600080600080600060a0868803121561034d5761034c610691565b5b600061035b88828901610296565b955050602061036c88828901610296565b945050604086013567ffffffffffffffff81111561038d5761038c61068c565b5b610399888289016102ab565b935050606086013567ffffffffffffffff8111156103ba576103b961068c565b5b6103c6888289016102ab565b925050608086013567ffffffffffffffff8111156103e7576103e661068c565b5b6103f3888289016102ee565b9150509295509295909350565b600080600080600060a0868803121561041c5761041b610691565b5b600061042a88828901610296565b955050602061043b88828901610296565b945050604061044c8882890161031c565b935050606061045d8882890161031c565b925050608086013567ffffffffffffffff81111561047e5761047d61068c565b5b61048a888289016102ee565b9150509295509295909350565b6000602082840312156104ad576104ac610691565b5b60006104bb848285016102d9565b91505092915050565b6104cd816105ac565b82525050565b6104dc816105b8565b82525050565b60006020820190506104f760008301846104c4565b92915050565b600060208201905061051260008301846104d3565b92915050565b6000610522610533565b905061052e828261061d565b919050565b6000604051905090565b600067ffffffffffffffff8211156105585761055761064e565b5b602082029050602081019050919050565b600067ffffffffffffffff8211156105845761058361064e565b5b61058d82610696565b9050602081019050919050565b60006105a5826105e4565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b61062682610696565b810181811067ffffffffffffffff821117156106455761064461064e565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b6106b08161059a565b81146106bb57600080fd5b50565b6106c7816105b8565b81146106d257600080fd5b50565b6106de81610604565b81146106e957600080fd5b5056fea264697066735822122087b5aa8ded40721b42927872f82318a1b7a214a95f52aafd0b100d780174021864736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x722 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0xBC197C81 EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0xA6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x497 JUMP JUMPDEST PUSH2 0xD6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D SWAP2 SWAP1 PUSH2 0x4E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x90 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x331 JUMP JUMPDEST PUSH2 0x150 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9D SWAP2 SWAP1 PUSH2 0x4FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBB SWAP2 SWAP1 PUSH2 0x400 JUMP JUMPDEST PUSH2 0x165 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCD SWAP2 SWAP1 PUSH2 0x4FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x4E2312E000000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x149 JUMPI POP PUSH2 0x148 DUP3 PUSH2 0x17A JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F7 PUSH2 0x1F2 DUP5 PUSH2 0x53D JUMP JUMPDEST PUSH2 0x518 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x21A JUMPI PUSH2 0x219 PUSH2 0x682 JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x24A JUMPI DUP2 PUSH2 0x230 DUP9 DUP3 PUSH2 0x31C JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x21D JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x267 PUSH2 0x262 DUP5 PUSH2 0x569 JUMP JUMPDEST PUSH2 0x518 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x283 JUMPI PUSH2 0x282 PUSH2 0x687 JUMP JUMPDEST JUMPDEST PUSH2 0x28E DUP5 DUP3 DUP6 PUSH2 0x60E JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2A5 DUP2 PUSH2 0x6A7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2C0 JUMPI PUSH2 0x2BF PUSH2 0x67D JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2D0 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1E4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2E8 DUP2 PUSH2 0x6BE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x303 JUMPI PUSH2 0x302 PUSH2 0x67D JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x313 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x254 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x32B DUP2 PUSH2 0x6D5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x34D JUMPI PUSH2 0x34C PUSH2 0x691 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x35B DUP9 DUP3 DUP10 ADD PUSH2 0x296 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x36C DUP9 DUP3 DUP10 ADD PUSH2 0x296 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x38D JUMPI PUSH2 0x38C PUSH2 0x68C JUMP JUMPDEST JUMPDEST PUSH2 0x399 DUP9 DUP3 DUP10 ADD PUSH2 0x2AB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3BA JUMPI PUSH2 0x3B9 PUSH2 0x68C JUMP JUMPDEST JUMPDEST PUSH2 0x3C6 DUP9 DUP3 DUP10 ADD PUSH2 0x2AB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3E7 JUMPI PUSH2 0x3E6 PUSH2 0x68C JUMP JUMPDEST JUMPDEST PUSH2 0x3F3 DUP9 DUP3 DUP10 ADD PUSH2 0x2EE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x41C JUMPI PUSH2 0x41B PUSH2 0x691 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x42A DUP9 DUP3 DUP10 ADD PUSH2 0x296 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x43B DUP9 DUP3 DUP10 ADD PUSH2 0x296 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x44C DUP9 DUP3 DUP10 ADD PUSH2 0x31C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x45D DUP9 DUP3 DUP10 ADD PUSH2 0x31C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x47E JUMPI PUSH2 0x47D PUSH2 0x68C JUMP JUMPDEST JUMPDEST PUSH2 0x48A DUP9 DUP3 DUP10 ADD PUSH2 0x2EE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4AD JUMPI PUSH2 0x4AC PUSH2 0x691 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4BB DUP5 DUP3 DUP6 ADD PUSH2 0x2D9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4CD DUP2 PUSH2 0x5AC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x4DC DUP2 PUSH2 0x5B8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4F7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4C4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x512 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4D3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x522 PUSH2 0x533 JUMP JUMPDEST SWAP1 POP PUSH2 0x52E DUP3 DUP3 PUSH2 0x61D JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x558 JUMPI PUSH2 0x557 PUSH2 0x64E JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x584 JUMPI PUSH2 0x583 PUSH2 0x64E JUMP JUMPDEST JUMPDEST PUSH2 0x58D DUP3 PUSH2 0x696 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5A5 DUP3 PUSH2 0x5E4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH2 0x626 DUP3 PUSH2 0x696 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x645 JUMPI PUSH2 0x644 PUSH2 0x64E JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6B0 DUP2 PUSH2 0x59A JUMP JUMPDEST DUP2 EQ PUSH2 0x6BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x6C7 DUP2 PUSH2 0x5B8 JUMP JUMPDEST DUP2 EQ PUSH2 0x6D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x6DE DUP2 PUSH2 0x604 JUMP JUMPDEST DUP2 EQ PUSH2 0x6E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP8 0xB5 0xAA DUP14 0xED BLOCKHASH PUSH19 0x1B42927872F82318A1B7A214A95F52AAFD0B10 0xD PUSH25 0x174021864736F6C6343000807003300000000000000000000 ",
							"sourceMap": "451:522:1:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@onERC1155BatchReceived_90": {
									"entryPoint": 336,
									"id": 90,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"@onERC1155Received_67": {
									"entryPoint": 357,
									"id": 67,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"@supportsInterface_124": {
									"entryPoint": 214,
									"id": 124,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_148": {
									"entryPoint": 378,
									"id": 148,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 484,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 596,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 662,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 683,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 729,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 750,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 796,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr": {
									"entryPoint": 817,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr": {
									"entryPoint": 1024,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 1175,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 1220,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes4_to_t_bytes4_fromStack": {
									"entryPoint": 1235,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 1250,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
									"entryPoint": 1277,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 1304,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 1331,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 1341,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 1385,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1434,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 1452,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 1464,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1508,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1540,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory": {
									"entryPoint": 1550,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"finalize_allocation": {
									"entryPoint": 1565,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1614,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 1661,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 1666,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 1671,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 1676,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1681,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 1686,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 1703,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 1726,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1749,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:9119:5",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "126:620:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "136:90:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "218:6:5"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "161:56:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "161:64:5"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "145:15:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "145:81:5"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "136:5:5"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "235:16:5",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "246:5:5"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "239:3:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "268:5:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "275:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "261:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "261:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "261:21:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "291:23:5",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "302:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "309:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "298:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "298:16:5"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "291:3:5"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "324:17:5",
															"value": {
																"name": "offset",
																"nodeType": "YulIdentifier",
																"src": "335:6:5"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "328:3:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "390:103:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "404:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "404:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "404:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "360:3:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "369:6:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "377:4:5",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "365:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "365:17:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "356:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "356:27:5"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "385:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "353:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "353:36:5"
															},
															"nodeType": "YulIf",
															"src": "350:143:5"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "562:178:5",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "577:21:5",
																		"value": {
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "595:3:5"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "581:10:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "619:3:5"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "645:10:5"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "657:3:5"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_uint256",
																						"nodeType": "YulIdentifier",
																						"src": "624:20:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "624:37:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "612:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "612:50:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "612:50:5"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "675:21:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "686:3:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "691:4:5",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "682:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "682:14:5"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "675:3:5"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "709:21:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "720:3:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "725:4:5",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "716:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "716:14:5"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "709:3:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "524:1:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "527:6:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "521:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "521:13:5"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "535:18:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "537:14:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "546:1:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "549:1:5",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "542:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "542:9:5"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "537:1:5"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "506:14:5",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "508:10:5",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "517:1:5",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "512:1:5",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "502:238:5"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "96:6:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "104:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "112:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "120:5:5",
														"type": ""
													}
												],
												"src": "24:722:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "835:327:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "845:74:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "911:6:5"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "870:40:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "870:48:5"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "854:15:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "854:65:5"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "845:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "935:5:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "942:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "928:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "928:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "928:21:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "958:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "973:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "980:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "969:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "969:16:5"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "962:3:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1023:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "1025:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1025:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1025:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "1004:3:5"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1009:6:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1000:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1000:16:5"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1018:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "997:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "997:25:5"
															},
															"nodeType": "YulIf",
															"src": "994:112:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "1139:3:5"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "1144:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1149:6:5"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1115:23:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1115:41:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1115:41:5"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "808:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "813:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "821:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "829:5:5",
														"type": ""
													}
												],
												"src": "752:410:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1220:87:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1230:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1252:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1239:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1239:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1230:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1295:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1268:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1268:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1268:33:5"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1198:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1206:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1214:5:5",
														"type": ""
													}
												],
												"src": "1168:139:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1407:293:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1456:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "1458:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1458:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1458:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1435:6:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1443:4:5",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1431:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1431:17:5"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "1450:3:5"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1427:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1427:27:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1420:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1420:35:5"
															},
															"nodeType": "YulIf",
															"src": "1417:122:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1548:34:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1575:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1562:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1562:20:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1552:6:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1591:103:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1667:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1675:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1663:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1663:17:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1682:6:5"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1690:3:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "1600:62:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1600:94:5"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1591:5:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1385:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1393:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1401:5:5",
														"type": ""
													}
												],
												"src": "1330:370:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1757:86:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1767:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1789:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1776:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1776:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1767:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1831:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "1805:25:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1805:32:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1805:32:5"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1735:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1743:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1751:5:5",
														"type": ""
													}
												],
												"src": "1706:137:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1923:277:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1972:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "1974:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1974:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1974:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1951:6:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1959:4:5",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1947:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1947:17:5"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "1966:3:5"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1943:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1943:27:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1936:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1936:35:5"
															},
															"nodeType": "YulIf",
															"src": "1933:122:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2064:34:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2091:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2078:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2078:20:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2068:6:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2107:87:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2167:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2175:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2163:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2163:17:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2182:6:5"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2190:3:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2116:46:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2116:78:5"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2107:5:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1901:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1909:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1917:5:5",
														"type": ""
													}
												],
												"src": "1862:338:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2258:87:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2268:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2290:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2277:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2277:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2268:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2333:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2306:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2306:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2306:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2236:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2244:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2252:5:5",
														"type": ""
													}
												],
												"src": "2206:139:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2544:1316:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2591:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2593:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2593:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2593:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2565:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2574:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2561:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2561:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2586:3:5",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2557:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2557:33:5"
															},
															"nodeType": "YulIf",
															"src": "2554:120:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "2684:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2699:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2713:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2703:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2728:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2763:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2774:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2759:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2759:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2783:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2738:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2738:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2728:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2811:118:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2826:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2840:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2830:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2856:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2891:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2902:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2887:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2887:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2911:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2866:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2866:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2856:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2939:303:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2954:46:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2985:9:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2996:2:5",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2981:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2981:18:5"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "2968:12:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2968:32:5"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2958:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3047:83:5",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3049:77:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3049:79:5"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3049:79:5"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3019:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3027:18:5",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3016:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3016:30:5"
																	},
																	"nodeType": "YulIf",
																	"src": "3013:117:5"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3144:88:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3204:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3215:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3200:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3200:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3224:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "3154:45:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3154:78:5"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "3144:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3252:303:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3267:46:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3298:9:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3309:2:5",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3294:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3294:18:5"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "3281:12:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3281:32:5"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3271:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3360:83:5",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3362:77:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3362:79:5"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3362:79:5"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3332:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3340:18:5",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3329:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3329:30:5"
																	},
																	"nodeType": "YulIf",
																	"src": "3326:117:5"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3457:88:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3517:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3528:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3513:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3513:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3537:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "3467:45:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3467:78:5"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "3457:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3565:288:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3580:47:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3611:9:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3622:3:5",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3607:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3607:19:5"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "3594:12:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3594:33:5"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3584:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3674:83:5",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3676:77:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3676:79:5"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3676:79:5"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3646:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3654:18:5",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3643:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3643:30:5"
																	},
																	"nodeType": "YulIf",
																	"src": "3640:117:5"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3771:72:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3815:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3826:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3811:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3811:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3835:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "3781:29:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3781:62:5"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "3771:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2482:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2493:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2505:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2513:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2521:6:5",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "2529:6:5",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "2537:6:5",
														"type": ""
													}
												],
												"src": "2351:1509:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4009:946:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4056:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4058:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4058:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4058:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4030:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4039:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4026:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4026:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4051:3:5",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4022:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4022:33:5"
															},
															"nodeType": "YulIf",
															"src": "4019:120:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "4149:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4164:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4178:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4168:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4193:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4228:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4239:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4224:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4224:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4248:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4203:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4203:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4193:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4276:118:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4291:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4305:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4295:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4321:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4356:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4367:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4352:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4352:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4376:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4331:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4331:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4321:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4404:118:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4419:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4433:2:5",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4423:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4449:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4484:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4495:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4480:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4480:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4504:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4459:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4459:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "4449:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4532:118:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4547:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4561:2:5",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4551:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4577:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4612:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4623:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4608:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4608:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4632:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4587:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4587:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "4577:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4660:288:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4675:47:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4706:9:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4717:3:5",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4702:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4702:19:5"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "4689:12:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4689:33:5"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4679:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "4769:83:5",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "4771:77:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4771:79:5"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4771:79:5"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4741:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4749:18:5",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4738:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4738:30:5"
																	},
																	"nodeType": "YulIf",
																	"src": "4735:117:5"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4866:72:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4910:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4921:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4906:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4906:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4930:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "4876:29:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4876:62:5"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "4866:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3947:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3958:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3970:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3978:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3986:6:5",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3994:6:5",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "4002:6:5",
														"type": ""
													}
												],
												"src": "3866:1089:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5026:262:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5072:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5074:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5074:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5074:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5047:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5056:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5043:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5043:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5068:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5039:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5039:32:5"
															},
															"nodeType": "YulIf",
															"src": "5036:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "5165:116:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5180:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5194:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5184:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5209:62:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5243:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5254:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5239:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5239:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5263:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "5219:19:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5219:52:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5209:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4996:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5007:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5019:6:5",
														"type": ""
													}
												],
												"src": "4961:327:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5353:50:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5370:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5390:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "5375:14:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5375:21:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5363:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5363:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5363:34:5"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5341:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5348:3:5",
														"type": ""
													}
												],
												"src": "5294:109:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5472:52:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5489:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5511:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "5494:16:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5494:23:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5482:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5482:36:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5482:36:5"
														}
													]
												},
												"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5460:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5467:3:5",
														"type": ""
													}
												],
												"src": "5409:115:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5622:118:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5632:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5644:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5655:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5640:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5640:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5632:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5706:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5719:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5730:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5715:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5715:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5668:37:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5668:65:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5668:65:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5594:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5606:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5617:4:5",
														"type": ""
													}
												],
												"src": "5530:210:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5842:122:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5852:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5864:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5875:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5860:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5860:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5852:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5930:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5943:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5954:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5939:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5939:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5888:41:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5888:69:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5888:69:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5814:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5826:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5837:4:5",
														"type": ""
													}
												],
												"src": "5746:218:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6011:88:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6021:30:5",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "6031:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6031:20:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "6021:6:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "6080:6:5"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "6088:4:5"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "6060:19:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6060:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6060:33:5"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "5995:4:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6004:6:5",
														"type": ""
													}
												],
												"src": "5970:129:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6145:35:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6155:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6171:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6165:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6165:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "6155:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6138:6:5",
														"type": ""
													}
												],
												"src": "6105:75:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6268:229:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6373:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "6375:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6375:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6375:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6345:6:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6353:18:5",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6342:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6342:30:5"
															},
															"nodeType": "YulIf",
															"src": "6339:56:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6405:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6417:6:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6425:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "6413:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6413:17:5"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "6405:4:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6467:23:5",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "6479:4:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6485:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6475:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6475:15:5"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "6467:4:5"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6252:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "6263:4:5",
														"type": ""
													}
												],
												"src": "6186:311:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6569:241:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6674:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "6676:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6676:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6676:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6646:6:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6654:18:5",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6643:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6643:30:5"
															},
															"nodeType": "YulIf",
															"src": "6640:56:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6706:37:5",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6736:6:5"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "6714:21:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6714:29:5"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "6706:4:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6780:23:5",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "6792:4:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6798:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6788:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6788:15:5"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "6780:4:5"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6553:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "6564:4:5",
														"type": ""
													}
												],
												"src": "6503:307:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6861:51:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6871:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6900:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "6882:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6882:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "6871:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6843:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "6853:7:5",
														"type": ""
													}
												],
												"src": "6816:96:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6960:48:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6970:32:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6995:5:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "6988:6:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6988:13:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6981:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6981:21:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "6970:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6942:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "6952:7:5",
														"type": ""
													}
												],
												"src": "6918:90:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7058:105:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7068:89:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7083:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7090:66:5",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "7079:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7079:78:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "7068:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7040:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "7050:7:5",
														"type": ""
													}
												],
												"src": "7014:149:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7214:81:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7224:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7239:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7246:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "7235:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7235:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "7224:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7196:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "7206:7:5",
														"type": ""
													}
												],
												"src": "7169:126:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7346:32:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7356:16:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "7367:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "7356:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7328:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "7338:7:5",
														"type": ""
													}
												],
												"src": "7301:77:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7435:103:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "7458:3:5"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "7463:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7468:6:5"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "7445:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7445:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7445:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "7516:3:5"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "7521:6:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7512:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7512:16:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7530:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7505:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7505:27:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7505:27:5"
														}
													]
												},
												"name": "copy_calldata_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "7417:3:5",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "7422:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7427:6:5",
														"type": ""
													}
												],
												"src": "7384:154:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7587:238:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7597:58:5",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "7619:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "7649:4:5"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "7627:21:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7627:27:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7615:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7615:40:5"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "7601:10:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7766:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7768:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7768:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7768:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "7709:10:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7721:18:5",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "7706:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7706:34:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "7745:10:5"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7757:6:5"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "7742:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7742:22:5"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7703:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7703:62:5"
															},
															"nodeType": "YulIf",
															"src": "7700:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7804:2:5",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "7808:10:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7797:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7797:22:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7797:22:5"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7573:6:5",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7581:4:5",
														"type": ""
													}
												],
												"src": "7544:281:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7859:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7876:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7879:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7869:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7869:88:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7869:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7973:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7976:4:5",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7966:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7966:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7966:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7997:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8000:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7990:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7990:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7990:15:5"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "7831:180:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8106:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8123:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8126:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8116:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8116:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8116:12:5"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "8017:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8229:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8246:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8249:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8239:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8239:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8239:12:5"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nodeType": "YulFunctionDefinition",
												"src": "8140:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8352:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8369:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8372:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8362:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8362:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8362:12:5"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "8263:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8475:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8492:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8495:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8485:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8485:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8485:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "8386:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8598:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8615:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8618:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8608:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8608:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8608:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "8509:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8680:54:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8690:38:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8708:5:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8715:2:5",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8704:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8704:14:5"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8724:2:5",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "8720:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8720:7:5"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "8700:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8700:28:5"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "8690:6:5"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8663:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "8673:6:5",
														"type": ""
													}
												],
												"src": "8632:102:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8783:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8840:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8849:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8852:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8842:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8842:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8842:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8806:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "8831:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "8813:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8813:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "8803:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8803:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8796:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8796:43:5"
															},
															"nodeType": "YulIf",
															"src": "8793:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8776:5:5",
														"type": ""
													}
												],
												"src": "8740:122:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8910:78:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8966:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8975:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8978:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8968:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8968:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8968:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8933:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "8957:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nodeType": "YulIdentifier",
																					"src": "8940:16:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8940:23:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "8930:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8930:34:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8923:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8923:42:5"
															},
															"nodeType": "YulIf",
															"src": "8920:62:5"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8903:5:5",
														"type": ""
													}
												],
												"src": "8868:120:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9037:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9094:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9103:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9106:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9096:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9096:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9096:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9060:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "9085:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "9067:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9067:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "9057:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9057:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9050:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9050:43:5"
															},
															"nodeType": "YulIf",
															"src": "9047:63:5"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9030:5:5",
														"type": ""
													}
												],
												"src": "8994:122:5"
											}
										]
									},
									"contents": "{\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let src := offset\n        if gt(add(src, mul(length, 0x20)), end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n            src := add(src, 0x20)\n        }\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes4(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c806301ffc9a714610046578063bc197c8114610076578063f23a6e61146100a6575b600080fd5b610060600480360381019061005b9190610497565b6100d6565b60405161006d91906104e2565b60405180910390f35b610090600480360381019061008b9190610331565b610150565b60405161009d91906104fd565b60405180910390f35b6100c060048036038101906100bb9190610400565b610165565b6040516100cd91906104fd565b60405180910390f35b60007f4e2312e0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061014957506101488261017a565b5b9050919050565b600063bc197c8160e01b905095945050505050565b600063f23a6e6160e01b905095945050505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60006101f76101f28461053d565b610518565b9050808382526020820190508285602086028201111561021a57610219610682565b5b60005b8581101561024a5781610230888261031c565b84526020840193506020830192505060018101905061021d565b5050509392505050565b600061026761026284610569565b610518565b90508281526020810184848401111561028357610282610687565b5b61028e84828561060e565b509392505050565b6000813590506102a5816106a7565b92915050565b600082601f8301126102c0576102bf61067d565b5b81356102d08482602086016101e4565b91505092915050565b6000813590506102e8816106be565b92915050565b600082601f8301126103035761030261067d565b5b8135610313848260208601610254565b91505092915050565b60008135905061032b816106d5565b92915050565b600080600080600060a0868803121561034d5761034c610691565b5b600061035b88828901610296565b955050602061036c88828901610296565b945050604086013567ffffffffffffffff81111561038d5761038c61068c565b5b610399888289016102ab565b935050606086013567ffffffffffffffff8111156103ba576103b961068c565b5b6103c6888289016102ab565b925050608086013567ffffffffffffffff8111156103e7576103e661068c565b5b6103f3888289016102ee565b9150509295509295909350565b600080600080600060a0868803121561041c5761041b610691565b5b600061042a88828901610296565b955050602061043b88828901610296565b945050604061044c8882890161031c565b935050606061045d8882890161031c565b925050608086013567ffffffffffffffff81111561047e5761047d61068c565b5b61048a888289016102ee565b9150509295509295909350565b6000602082840312156104ad576104ac610691565b5b60006104bb848285016102d9565b91505092915050565b6104cd816105ac565b82525050565b6104dc816105b8565b82525050565b60006020820190506104f760008301846104c4565b92915050565b600060208201905061051260008301846104d3565b92915050565b6000610522610533565b905061052e828261061d565b919050565b6000604051905090565b600067ffffffffffffffff8211156105585761055761064e565b5b602082029050602081019050919050565b600067ffffffffffffffff8211156105845761058361064e565b5b61058d82610696565b9050602081019050919050565b60006105a5826105e4565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b61062682610696565b810181811067ffffffffffffffff821117156106455761064461064e565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b6106b08161059a565b81146106bb57600080fd5b50565b6106c7816105b8565b81146106d257600080fd5b50565b6106de81610604565b81146106e957600080fd5b5056fea264697066735822122087b5aa8ded40721b42927872f82318a1b7a214a95f52aafd0b100d780174021864736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0xBC197C81 EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0xA6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x497 JUMP JUMPDEST PUSH2 0xD6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D SWAP2 SWAP1 PUSH2 0x4E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x90 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x331 JUMP JUMPDEST PUSH2 0x150 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9D SWAP2 SWAP1 PUSH2 0x4FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBB SWAP2 SWAP1 PUSH2 0x400 JUMP JUMPDEST PUSH2 0x165 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCD SWAP2 SWAP1 PUSH2 0x4FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x4E2312E000000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x149 JUMPI POP PUSH2 0x148 DUP3 PUSH2 0x17A JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F7 PUSH2 0x1F2 DUP5 PUSH2 0x53D JUMP JUMPDEST PUSH2 0x518 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x21A JUMPI PUSH2 0x219 PUSH2 0x682 JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x24A JUMPI DUP2 PUSH2 0x230 DUP9 DUP3 PUSH2 0x31C JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x21D JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x267 PUSH2 0x262 DUP5 PUSH2 0x569 JUMP JUMPDEST PUSH2 0x518 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x283 JUMPI PUSH2 0x282 PUSH2 0x687 JUMP JUMPDEST JUMPDEST PUSH2 0x28E DUP5 DUP3 DUP6 PUSH2 0x60E JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2A5 DUP2 PUSH2 0x6A7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2C0 JUMPI PUSH2 0x2BF PUSH2 0x67D JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2D0 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1E4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2E8 DUP2 PUSH2 0x6BE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x303 JUMPI PUSH2 0x302 PUSH2 0x67D JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x313 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x254 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x32B DUP2 PUSH2 0x6D5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x34D JUMPI PUSH2 0x34C PUSH2 0x691 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x35B DUP9 DUP3 DUP10 ADD PUSH2 0x296 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x36C DUP9 DUP3 DUP10 ADD PUSH2 0x296 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x38D JUMPI PUSH2 0x38C PUSH2 0x68C JUMP JUMPDEST JUMPDEST PUSH2 0x399 DUP9 DUP3 DUP10 ADD PUSH2 0x2AB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3BA JUMPI PUSH2 0x3B9 PUSH2 0x68C JUMP JUMPDEST JUMPDEST PUSH2 0x3C6 DUP9 DUP3 DUP10 ADD PUSH2 0x2AB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3E7 JUMPI PUSH2 0x3E6 PUSH2 0x68C JUMP JUMPDEST JUMPDEST PUSH2 0x3F3 DUP9 DUP3 DUP10 ADD PUSH2 0x2EE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x41C JUMPI PUSH2 0x41B PUSH2 0x691 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x42A DUP9 DUP3 DUP10 ADD PUSH2 0x296 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x43B DUP9 DUP3 DUP10 ADD PUSH2 0x296 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x44C DUP9 DUP3 DUP10 ADD PUSH2 0x31C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x45D DUP9 DUP3 DUP10 ADD PUSH2 0x31C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x47E JUMPI PUSH2 0x47D PUSH2 0x68C JUMP JUMPDEST JUMPDEST PUSH2 0x48A DUP9 DUP3 DUP10 ADD PUSH2 0x2EE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4AD JUMPI PUSH2 0x4AC PUSH2 0x691 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4BB DUP5 DUP3 DUP6 ADD PUSH2 0x2D9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4CD DUP2 PUSH2 0x5AC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x4DC DUP2 PUSH2 0x5B8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4F7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4C4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x512 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4D3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x522 PUSH2 0x533 JUMP JUMPDEST SWAP1 POP PUSH2 0x52E DUP3 DUP3 PUSH2 0x61D JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x558 JUMPI PUSH2 0x557 PUSH2 0x64E JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x584 JUMPI PUSH2 0x583 PUSH2 0x64E JUMP JUMPDEST JUMPDEST PUSH2 0x58D DUP3 PUSH2 0x696 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5A5 DUP3 PUSH2 0x5E4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH2 0x626 DUP3 PUSH2 0x696 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x645 JUMPI PUSH2 0x644 PUSH2 0x64E JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6B0 DUP2 PUSH2 0x59A JUMP JUMPDEST DUP2 EQ PUSH2 0x6BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x6C7 DUP2 PUSH2 0x5B8 JUMP JUMPDEST DUP2 EQ PUSH2 0x6D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x6DE DUP2 PUSH2 0x604 JUMP JUMPDEST DUP2 EQ PUSH2 0x6E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP8 0xB5 0xAA DUP14 0xED BLOCKHASH PUSH19 0x1B42927872F82318A1B7A214A95F52AAFD0B10 0xD PUSH25 0x174021864736F6C6343000807003300000000000000000000 ",
							"sourceMap": "451:522:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;387:221:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;724:247:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;499:219;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;387:221:2;489:4;527:34;512:49;;;:11;:49;;;;:89;;;;565:36;589:11;565:23;:36::i;:::-;512:89;505:96;;387:221;;;:::o;724:247:1:-;903:6;928:36;;;921:43;;724:247;;;;;;;:::o;499:219::-;655:6;680:31;;;673:38;;499:219;;;;;;;:::o;829:155:3:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;24:722:5:-;120:5;145:81;161:64;218:6;161:64;:::i;:::-;145:81;:::i;:::-;136:90;;246:5;275:6;268:5;261:21;309:4;302:5;298:16;291:23;;335:6;385:3;377:4;369:6;365:17;360:3;356:27;353:36;350:143;;;404:79;;:::i;:::-;350:143;517:1;502:238;527:6;524:1;521:13;502:238;;;595:3;624:37;657:3;645:10;624:37;:::i;:::-;619:3;612:50;691:4;686:3;682:14;675:21;;725:4;720:3;716:14;709:21;;562:178;549:1;546;542:9;537:14;;502:238;;;506:14;126:620;;24:722;;;;;:::o;752:410::-;829:5;854:65;870:48;911:6;870:48;:::i;:::-;854:65;:::i;:::-;845:74;;942:6;935:5;928:21;980:4;973:5;969:16;1018:3;1009:6;1004:3;1000:16;997:25;994:112;;;1025:79;;:::i;:::-;994:112;1115:41;1149:6;1144:3;1139;1115:41;:::i;:::-;835:327;752:410;;;;;:::o;1168:139::-;1214:5;1252:6;1239:20;1230:29;;1268:33;1295:5;1268:33;:::i;:::-;1168:139;;;;:::o;1330:370::-;1401:5;1450:3;1443:4;1435:6;1431:17;1427:27;1417:122;;1458:79;;:::i;:::-;1417:122;1575:6;1562:20;1600:94;1690:3;1682:6;1675:4;1667:6;1663:17;1600:94;:::i;:::-;1591:103;;1407:293;1330:370;;;;:::o;1706:137::-;1751:5;1789:6;1776:20;1767:29;;1805:32;1831:5;1805:32;:::i;:::-;1706:137;;;;:::o;1862:338::-;1917:5;1966:3;1959:4;1951:6;1947:17;1943:27;1933:122;;1974:79;;:::i;:::-;1933:122;2091:6;2078:20;2116:78;2190:3;2182:6;2175:4;2167:6;2163:17;2116:78;:::i;:::-;2107:87;;1923:277;1862:338;;;;:::o;2206:139::-;2252:5;2290:6;2277:20;2268:29;;2306:33;2333:5;2306:33;:::i;:::-;2206:139;;;;:::o;2351:1509::-;2505:6;2513;2521;2529;2537;2586:3;2574:9;2565:7;2561:23;2557:33;2554:120;;;2593:79;;:::i;:::-;2554:120;2713:1;2738:53;2783:7;2774:6;2763:9;2759:22;2738:53;:::i;:::-;2728:63;;2684:117;2840:2;2866:53;2911:7;2902:6;2891:9;2887:22;2866:53;:::i;:::-;2856:63;;2811:118;2996:2;2985:9;2981:18;2968:32;3027:18;3019:6;3016:30;3013:117;;;3049:79;;:::i;:::-;3013:117;3154:78;3224:7;3215:6;3204:9;3200:22;3154:78;:::i;:::-;3144:88;;2939:303;3309:2;3298:9;3294:18;3281:32;3340:18;3332:6;3329:30;3326:117;;;3362:79;;:::i;:::-;3326:117;3467:78;3537:7;3528:6;3517:9;3513:22;3467:78;:::i;:::-;3457:88;;3252:303;3622:3;3611:9;3607:19;3594:33;3654:18;3646:6;3643:30;3640:117;;;3676:79;;:::i;:::-;3640:117;3781:62;3835:7;3826:6;3815:9;3811:22;3781:62;:::i;:::-;3771:72;;3565:288;2351:1509;;;;;;;;:::o;3866:1089::-;3970:6;3978;3986;3994;4002;4051:3;4039:9;4030:7;4026:23;4022:33;4019:120;;;4058:79;;:::i;:::-;4019:120;4178:1;4203:53;4248:7;4239:6;4228:9;4224:22;4203:53;:::i;:::-;4193:63;;4149:117;4305:2;4331:53;4376:7;4367:6;4356:9;4352:22;4331:53;:::i;:::-;4321:63;;4276:118;4433:2;4459:53;4504:7;4495:6;4484:9;4480:22;4459:53;:::i;:::-;4449:63;;4404:118;4561:2;4587:53;4632:7;4623:6;4612:9;4608:22;4587:53;:::i;:::-;4577:63;;4532:118;4717:3;4706:9;4702:19;4689:33;4749:18;4741:6;4738:30;4735:117;;;4771:79;;:::i;:::-;4735:117;4876:62;4930:7;4921:6;4910:9;4906:22;4876:62;:::i;:::-;4866:72;;4660:288;3866:1089;;;;;;;;:::o;4961:327::-;5019:6;5068:2;5056:9;5047:7;5043:23;5039:32;5036:119;;;5074:79;;:::i;:::-;5036:119;5194:1;5219:52;5263:7;5254:6;5243:9;5239:22;5219:52;:::i;:::-;5209:62;;5165:116;4961:327;;;;:::o;5294:109::-;5375:21;5390:5;5375:21;:::i;:::-;5370:3;5363:34;5294:109;;:::o;5409:115::-;5494:23;5511:5;5494:23;:::i;:::-;5489:3;5482:36;5409:115;;:::o;5530:210::-;5617:4;5655:2;5644:9;5640:18;5632:26;;5668:65;5730:1;5719:9;5715:17;5706:6;5668:65;:::i;:::-;5530:210;;;;:::o;5746:218::-;5837:4;5875:2;5864:9;5860:18;5852:26;;5888:69;5954:1;5943:9;5939:17;5930:6;5888:69;:::i;:::-;5746:218;;;;:::o;5970:129::-;6004:6;6031:20;;:::i;:::-;6021:30;;6060:33;6088:4;6080:6;6060:33;:::i;:::-;5970:129;;;:::o;6105:75::-;6138:6;6171:2;6165:9;6155:19;;6105:75;:::o;6186:311::-;6263:4;6353:18;6345:6;6342:30;6339:56;;;6375:18;;:::i;:::-;6339:56;6425:4;6417:6;6413:17;6405:25;;6485:4;6479;6475:15;6467:23;;6186:311;;;:::o;6503:307::-;6564:4;6654:18;6646:6;6643:30;6640:56;;;6676:18;;:::i;:::-;6640:56;6714:29;6736:6;6714:29;:::i;:::-;6706:37;;6798:4;6792;6788:15;6780:23;;6503:307;;;:::o;6816:96::-;6853:7;6882:24;6900:5;6882:24;:::i;:::-;6871:35;;6816:96;;;:::o;6918:90::-;6952:7;6995:5;6988:13;6981:21;6970:32;;6918:90;;;:::o;7014:149::-;7050:7;7090:66;7083:5;7079:78;7068:89;;7014:149;;;:::o;7169:126::-;7206:7;7246:42;7239:5;7235:54;7224:65;;7169:126;;;:::o;7301:77::-;7338:7;7367:5;7356:16;;7301:77;;;:::o;7384:154::-;7468:6;7463:3;7458;7445:30;7530:1;7521:6;7516:3;7512:16;7505:27;7384:154;;;:::o;7544:281::-;7627:27;7649:4;7627:27;:::i;:::-;7619:6;7615:40;7757:6;7745:10;7742:22;7721:18;7709:10;7706:34;7703:62;7700:88;;;7768:18;;:::i;:::-;7700:88;7808:10;7804:2;7797:22;7587:238;7544:281;;:::o;7831:180::-;7879:77;7876:1;7869:88;7976:4;7973:1;7966:15;8000:4;7997:1;7990:15;8017:117;8126:1;8123;8116:12;8140:117;8249:1;8246;8239:12;8263:117;8372:1;8369;8362:12;8386:117;8495:1;8492;8485:12;8509:117;8618:1;8615;8608:12;8632:102;8673:6;8724:2;8720:7;8715:2;8708:5;8704:14;8700:28;8690:38;;8632:102;;;:::o;8740:122::-;8813:24;8831:5;8813:24;:::i;:::-;8806:5;8803:35;8793:63;;8852:1;8849;8842:12;8793:63;8740:122;:::o;8868:120::-;8940:23;8957:5;8940:23;:::i;:::-;8933:5;8930:34;8920:62;;8978:1;8975;8968:12;8920:62;8868:120;:::o;8994:122::-;9067:24;9085:5;9067:24;:::i;:::-;9060:5;9057:35;9047:63;;9106:1;9103;9096:12;9047:63;8994:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "365200",
								"executionCost": "405",
								"totalCost": "365605"
							},
							"external": {
								"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "infinite",
								"onERC1155Received(address,address,uint256,uint256,bytes)": "infinite",
								"supportsInterface(bytes4)": "705"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 451,
									"end": 973,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 451,
									"end": 973,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 451,
									"end": 973,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 451,
									"end": 973,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 451,
									"end": 973,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 451,
									"end": 973,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 451,
									"end": 973,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 451,
									"end": 973,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 451,
									"end": 973,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 451,
									"end": 973,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 451,
									"end": 973,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 451,
									"end": 973,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 451,
									"end": 973,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 451,
									"end": 973,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 451,
									"end": 973,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 451,
									"end": 973,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 451,
									"end": 973,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 451,
									"end": 973,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 451,
									"end": 973,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 451,
									"end": 973,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 451,
									"end": 973,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122087b5aa8ded40721b42927872f82318a1b7a214a95f52aafd0b100d780174021864736f6c63430008070033",
									".code": [
										{
											"begin": 451,
											"end": 973,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 451,
											"end": 973,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 451,
											"end": 973,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 451,
											"end": 973,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 451,
											"end": 973,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 451,
											"end": 973,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 451,
											"end": 973,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 451,
											"end": 973,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 451,
											"end": 973,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 451,
											"end": 973,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 451,
											"end": 973,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 451,
											"end": 973,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 451,
											"end": 973,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 451,
											"end": 973,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 451,
											"end": 973,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 451,
											"end": 973,
											"name": "PUSH",
											"source": 1,
											"value": "1FFC9A7"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 451,
											"end": 973,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 451,
											"end": 973,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 451,
											"end": 973,
											"name": "PUSH",
											"source": 1,
											"value": "BC197C81"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 451,
											"end": 973,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 451,
											"end": 973,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 451,
											"end": 973,
											"name": "PUSH",
											"source": 1,
											"value": "F23A6E61"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 451,
											"end": 973,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 451,
											"end": 973,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 451,
											"end": 973,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 451,
											"end": 973,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 387,
											"end": 608,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 387,
											"end": 608,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 387,
											"end": 608,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 387,
											"end": 608,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 387,
											"end": 608,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 387,
											"end": 608,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 724,
											"end": 971,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 724,
											"end": 971,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 724,
											"end": 971,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 724,
											"end": 971,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 724,
											"end": 971,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 499,
											"end": 718,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 499,
											"end": 718,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 499,
											"end": 718,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 499,
											"end": 718,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 499,
											"end": 718,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 499,
											"end": 718,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 387,
											"end": 608,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 489,
											"end": 493,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 527,
											"end": 561,
											"name": "PUSH",
											"source": 2,
											"value": "4E2312E000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 512,
											"end": 561,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 512,
											"end": 561,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 512,
											"end": 561,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 512,
											"end": 523,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 512,
											"end": 561,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 512,
											"end": 561,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 512,
											"end": 561,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 512,
											"end": 561,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 512,
											"end": 601,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 512,
											"end": 601,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 512,
											"end": 601,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 512,
											"end": 601,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 565,
											"end": 601,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 589,
											"end": 600,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 565,
											"end": 588,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 565,
											"end": 601,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 565,
											"end": 601,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 565,
											"end": 601,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 512,
											"end": 601,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 512,
											"end": 601,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 505,
											"end": 601,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 505,
											"end": 601,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 387,
											"end": 608,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 903,
											"end": 909,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 928,
											"end": 964,
											"name": "PUSH",
											"source": 1,
											"value": "BC197C81"
										},
										{
											"begin": 928,
											"end": 964,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 928,
											"end": 964,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 921,
											"end": 964,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 921,
											"end": 964,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 724,
											"end": 971,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 724,
											"end": 971,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 724,
											"end": 971,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 724,
											"end": 971,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 724,
											"end": 971,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 724,
											"end": 971,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 655,
											"end": 661,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 711,
											"name": "PUSH",
											"source": 1,
											"value": "F23A6E61"
										},
										{
											"begin": 680,
											"end": 711,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 680,
											"end": 711,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 673,
											"end": 711,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 673,
											"end": 711,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 499,
											"end": 718,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 499,
											"end": 718,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 499,
											"end": 718,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 499,
											"end": 718,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 499,
											"end": 718,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 499,
											"end": 718,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 914,
											"end": 918,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 952,
											"end": 977,
											"name": "PUSH",
											"source": 3,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 937,
											"end": 948,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 937,
											"end": 977,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 937,
											"end": 977,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 930,
											"end": 977,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 930,
											"end": 977,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 829,
											"end": 984,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 829,
											"end": 984,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 24,
											"end": 746,
											"name": "tag",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 24,
											"end": 746,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 120,
											"end": 125,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 145,
											"end": 226,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 161,
											"end": 225,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 218,
											"end": 224,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 161,
											"end": 225,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 161,
											"end": 225,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 161,
											"end": 225,
											"name": "tag",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 161,
											"end": 225,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 145,
											"end": 226,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 145,
											"end": 226,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 145,
											"end": 226,
											"name": "tag",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 145,
											"end": 226,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 136,
											"end": 226,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 136,
											"end": 226,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 246,
											"end": 251,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 275,
											"end": 281,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 268,
											"end": 273,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 261,
											"end": 282,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 309,
											"end": 313,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 302,
											"end": 307,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 298,
											"end": 314,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 291,
											"end": 314,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 291,
											"end": 314,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 335,
											"end": 341,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 385,
											"end": 388,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 377,
											"end": 381,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 369,
											"end": 375,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 365,
											"end": 382,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 360,
											"end": 363,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 356,
											"end": 383,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 353,
											"end": 389,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 350,
											"end": 493,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 350,
											"end": 493,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 350,
											"end": 493,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 404,
											"end": 483,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 404,
											"end": 483,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 404,
											"end": 483,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 404,
											"end": 483,
											"name": "tag",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 404,
											"end": 483,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 350,
											"end": 493,
											"name": "tag",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 350,
											"end": 493,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 517,
											"end": 518,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 502,
											"end": 740,
											"name": "tag",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 502,
											"end": 740,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 527,
											"end": 533,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 524,
											"end": 525,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 521,
											"end": 534,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 502,
											"end": 740,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 502,
											"end": 740,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 502,
											"end": 740,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 595,
											"end": 598,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 624,
											"end": 661,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 657,
											"end": 660,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 645,
											"end": 655,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 624,
											"end": 661,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 624,
											"end": 661,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 624,
											"end": 661,
											"name": "tag",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 624,
											"end": 661,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 619,
											"end": 622,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 612,
											"end": 662,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 691,
											"end": 695,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 686,
											"end": 689,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 682,
											"end": 696,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 675,
											"end": 696,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 675,
											"end": 696,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 725,
											"end": 729,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 720,
											"end": 723,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 716,
											"end": 730,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 709,
											"end": 730,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 709,
											"end": 730,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 562,
											"end": 740,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 549,
											"end": 550,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 546,
											"end": 547,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 542,
											"end": 551,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 537,
											"end": 551,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 537,
											"end": 551,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 502,
											"end": 740,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 502,
											"end": 740,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 502,
											"end": 740,
											"name": "tag",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 502,
											"end": 740,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 506,
											"end": 520,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 126,
											"end": 746,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 126,
											"end": 746,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 24,
											"end": 746,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 24,
											"end": 746,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 24,
											"end": 746,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 24,
											"end": 746,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 24,
											"end": 746,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 24,
											"end": 746,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 752,
											"end": 1162,
											"name": "tag",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 752,
											"end": 1162,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 829,
											"end": 834,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 854,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 870,
											"end": 918,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 911,
											"end": 917,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 870,
											"end": 918,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 870,
											"end": 918,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 870,
											"end": 918,
											"name": "tag",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 870,
											"end": 918,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 854,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 854,
											"end": 919,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 854,
											"end": 919,
											"name": "tag",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 854,
											"end": 919,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 845,
											"end": 919,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 845,
											"end": 919,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 942,
											"end": 948,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 935,
											"end": 940,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 928,
											"end": 949,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 980,
											"end": 984,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 973,
											"end": 978,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 969,
											"end": 985,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1018,
											"end": 1021,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1009,
											"end": 1015,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 1007,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1000,
											"end": 1016,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 997,
											"end": 1022,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 994,
											"end": 1106,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 994,
											"end": 1106,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 994,
											"end": 1106,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1025,
											"end": 1104,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 1025,
											"end": 1104,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 1025,
											"end": 1104,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1025,
											"end": 1104,
											"name": "tag",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 1025,
											"end": 1104,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 994,
											"end": 1106,
											"name": "tag",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 994,
											"end": 1106,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1115,
											"end": 1156,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 1149,
											"end": 1155,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1144,
											"end": 1147,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1142,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1115,
											"end": 1156,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 1115,
											"end": 1156,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1115,
											"end": 1156,
											"name": "tag",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 1115,
											"end": 1156,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 835,
											"end": 1162,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 752,
											"end": 1162,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 752,
											"end": 1162,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 752,
											"end": 1162,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 752,
											"end": 1162,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 752,
											"end": 1162,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 752,
											"end": 1162,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1168,
											"end": 1307,
											"name": "tag",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 1168,
											"end": 1307,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1214,
											"end": 1219,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1252,
											"end": 1258,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1239,
											"end": 1259,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1230,
											"end": 1259,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1230,
											"end": 1259,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1268,
											"end": 1301,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 1295,
											"end": 1300,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1268,
											"end": 1301,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 1268,
											"end": 1301,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1268,
											"end": 1301,
											"name": "tag",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 1268,
											"end": 1301,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1168,
											"end": 1307,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1168,
											"end": 1307,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1168,
											"end": 1307,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1168,
											"end": 1307,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1168,
											"end": 1307,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1330,
											"end": 1700,
											"name": "tag",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 1330,
											"end": 1700,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1401,
											"end": 1406,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1450,
											"end": 1453,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1443,
											"end": 1447,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1435,
											"end": 1441,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1431,
											"end": 1448,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1427,
											"end": 1454,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1417,
											"end": 1539,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 1417,
											"end": 1539,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1458,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 1458,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 1458,
											"end": 1537,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1458,
											"end": 1537,
											"name": "tag",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 1458,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1417,
											"end": 1539,
											"name": "tag",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 1417,
											"end": 1539,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1575,
											"end": 1581,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1562,
											"end": 1582,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1600,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 1690,
											"end": 1693,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1682,
											"end": 1688,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1675,
											"end": 1679,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1667,
											"end": 1673,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1663,
											"end": 1680,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1600,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 1600,
											"end": 1694,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1600,
											"end": 1694,
											"name": "tag",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 1600,
											"end": 1694,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1591,
											"end": 1694,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1591,
											"end": 1694,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1407,
											"end": 1700,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1330,
											"end": 1700,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1330,
											"end": 1700,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1330,
											"end": 1700,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1330,
											"end": 1700,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1330,
											"end": 1700,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1706,
											"end": 1843,
											"name": "tag",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 1706,
											"end": 1843,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1751,
											"end": 1756,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1789,
											"end": 1795,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1776,
											"end": 1796,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1767,
											"end": 1796,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1767,
											"end": 1796,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1805,
											"end": 1837,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 1831,
											"end": 1836,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1805,
											"end": 1837,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 1805,
											"end": 1837,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1805,
											"end": 1837,
											"name": "tag",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 1805,
											"end": 1837,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1706,
											"end": 1843,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1706,
											"end": 1843,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1706,
											"end": 1843,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1706,
											"end": 1843,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1706,
											"end": 1843,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1862,
											"end": 2200,
											"name": "tag",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 1862,
											"end": 2200,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1917,
											"end": 1922,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1966,
											"end": 1969,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1959,
											"end": 1963,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1951,
											"end": 1957,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1947,
											"end": 1964,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1943,
											"end": 1970,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1933,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 1933,
											"end": 2055,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1974,
											"end": 2053,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 1974,
											"end": 2053,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 1974,
											"end": 2053,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1974,
											"end": 2053,
											"name": "tag",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 1974,
											"end": 2053,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1933,
											"end": 2055,
											"name": "tag",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 1933,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2091,
											"end": 2097,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 2116,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 2190,
											"end": 2193,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2182,
											"end": 2188,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2175,
											"end": 2179,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2167,
											"end": 2173,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2163,
											"end": 2180,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2116,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 2116,
											"end": 2194,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2116,
											"end": 2194,
											"name": "tag",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 2116,
											"end": 2194,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2107,
											"end": 2194,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2107,
											"end": 2194,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 2200,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1862,
											"end": 2200,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1862,
											"end": 2200,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1862,
											"end": 2200,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1862,
											"end": 2200,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1862,
											"end": 2200,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2206,
											"end": 2345,
											"name": "tag",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 2206,
											"end": 2345,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2252,
											"end": 2257,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2290,
											"end": 2296,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2277,
											"end": 2297,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 2268,
											"end": 2297,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2268,
											"end": 2297,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2306,
											"end": 2339,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2306,
											"end": 2339,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 2306,
											"end": 2339,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2306,
											"end": 2339,
											"name": "tag",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 2306,
											"end": 2339,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2206,
											"end": 2345,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2206,
											"end": 2345,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2206,
											"end": 2345,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2206,
											"end": 2345,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2206,
											"end": 2345,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2351,
											"end": 3860,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 2351,
											"end": 3860,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2505,
											"end": 2511,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2513,
											"end": 2519,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2521,
											"end": 2527,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2529,
											"end": 2535,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2537,
											"end": 2543,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2586,
											"end": 2589,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 2574,
											"end": 2583,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2565,
											"end": 2572,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 2561,
											"end": 2584,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2557,
											"end": 2590,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2554,
											"end": 2674,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2554,
											"end": 2674,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 2554,
											"end": 2674,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2593,
											"end": 2672,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 2593,
											"end": 2672,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 2593,
											"end": 2672,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2593,
											"end": 2672,
											"name": "tag",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 2593,
											"end": 2672,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2554,
											"end": 2674,
											"name": "tag",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 2554,
											"end": 2674,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 2714,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2738,
											"end": 2791,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 2783,
											"end": 2790,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 2774,
											"end": 2780,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2763,
											"end": 2772,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 2759,
											"end": 2781,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2738,
											"end": 2791,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 2738,
											"end": 2791,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2738,
											"end": 2791,
											"name": "tag",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 2738,
											"end": 2791,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2728,
											"end": 2791,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 2728,
											"end": 2791,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2684,
											"end": 2801,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2840,
											"end": 2842,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2866,
											"end": 2919,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 2911,
											"end": 2918,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 2902,
											"end": 2908,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2891,
											"end": 2900,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 2887,
											"end": 2909,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2866,
											"end": 2919,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 2866,
											"end": 2919,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2866,
											"end": 2919,
											"name": "tag",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 2866,
											"end": 2919,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2856,
											"end": 2919,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 2856,
											"end": 2919,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2811,
											"end": 2929,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2996,
											"end": 2998,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2985,
											"end": 2994,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2981,
											"end": 2999,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2968,
											"end": 3000,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 3027,
											"end": 3045,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3019,
											"end": 3025,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3016,
											"end": 3046,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 3013,
											"end": 3130,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3013,
											"end": 3130,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 3013,
											"end": 3130,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3049,
											"end": 3128,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 3049,
											"end": 3128,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 3049,
											"end": 3128,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3049,
											"end": 3128,
											"name": "tag",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 3049,
											"end": 3128,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3013,
											"end": 3130,
											"name": "tag",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 3013,
											"end": 3130,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3154,
											"end": 3232,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 3224,
											"end": 3231,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 3215,
											"end": 3221,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3204,
											"end": 3213,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 3200,
											"end": 3222,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3154,
											"end": 3232,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 3154,
											"end": 3232,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3154,
											"end": 3232,
											"name": "tag",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 3154,
											"end": 3232,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3144,
											"end": 3232,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3144,
											"end": 3232,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2939,
											"end": 3242,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3309,
											"end": 3311,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 3298,
											"end": 3307,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3294,
											"end": 3312,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3281,
											"end": 3313,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 3340,
											"end": 3358,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3332,
											"end": 3338,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3329,
											"end": 3359,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 3326,
											"end": 3443,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3326,
											"end": 3443,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 3326,
											"end": 3443,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3362,
											"end": 3441,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 3362,
											"end": 3441,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 3362,
											"end": 3441,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3362,
											"end": 3441,
											"name": "tag",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 3362,
											"end": 3441,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3326,
											"end": 3443,
											"name": "tag",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 3326,
											"end": 3443,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3467,
											"end": 3545,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 3537,
											"end": 3544,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 3528,
											"end": 3534,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3517,
											"end": 3526,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 3513,
											"end": 3535,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3467,
											"end": 3545,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 3467,
											"end": 3545,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3467,
											"end": 3545,
											"name": "tag",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 3467,
											"end": 3545,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3457,
											"end": 3545,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3457,
											"end": 3545,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3252,
											"end": 3555,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3622,
											"end": 3625,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 3611,
											"end": 3620,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3607,
											"end": 3626,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3594,
											"end": 3627,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 3654,
											"end": 3672,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3646,
											"end": 3652,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3643,
											"end": 3673,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 3640,
											"end": 3757,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3640,
											"end": 3757,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 3640,
											"end": 3757,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3676,
											"end": 3755,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 3676,
											"end": 3755,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 3676,
											"end": 3755,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3676,
											"end": 3755,
											"name": "tag",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 3676,
											"end": 3755,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3640,
											"end": 3757,
											"name": "tag",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 3640,
											"end": 3757,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3781,
											"end": 3843,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 3835,
											"end": 3842,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 3826,
											"end": 3832,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3815,
											"end": 3824,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 3811,
											"end": 3833,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3781,
											"end": 3843,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 3781,
											"end": 3843,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3781,
											"end": 3843,
											"name": "tag",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 3781,
											"end": 3843,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3771,
											"end": 3843,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3771,
											"end": 3843,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3565,
											"end": 3853,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2351,
											"end": 3860,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2351,
											"end": 3860,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 2351,
											"end": 3860,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2351,
											"end": 3860,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2351,
											"end": 3860,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 2351,
											"end": 3860,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2351,
											"end": 3860,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2351,
											"end": 3860,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2351,
											"end": 3860,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3866,
											"end": 4955,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3866,
											"end": 4955,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3970,
											"end": 3976,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3978,
											"end": 3984,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3986,
											"end": 3992,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3994,
											"end": 4000,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4002,
											"end": 4008,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4051,
											"end": 4054,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 4039,
											"end": 4048,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 4030,
											"end": 4037,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 4026,
											"end": 4049,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4022,
											"end": 4055,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 4019,
											"end": 4139,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4019,
											"end": 4139,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 4019,
											"end": 4139,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4058,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 4058,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 4058,
											"end": 4137,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4058,
											"end": 4137,
											"name": "tag",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 4058,
											"end": 4137,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4019,
											"end": 4139,
											"name": "tag",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 4019,
											"end": 4139,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4178,
											"end": 4179,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4203,
											"end": 4256,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 4248,
											"end": 4255,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 4239,
											"end": 4245,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4228,
											"end": 4237,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 4224,
											"end": 4246,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4203,
											"end": 4256,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 4203,
											"end": 4256,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4203,
											"end": 4256,
											"name": "tag",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 4203,
											"end": 4256,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4193,
											"end": 4256,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 4193,
											"end": 4256,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4149,
											"end": 4266,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4305,
											"end": 4307,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4331,
											"end": 4384,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 4376,
											"end": 4383,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 4367,
											"end": 4373,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4356,
											"end": 4365,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 4352,
											"end": 4374,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4331,
											"end": 4384,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 4331,
											"end": 4384,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4331,
											"end": 4384,
											"name": "tag",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 4331,
											"end": 4384,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4321,
											"end": 4384,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 4321,
											"end": 4384,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4394,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4433,
											"end": 4435,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4459,
											"end": 4512,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 4504,
											"end": 4511,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 4495,
											"end": 4501,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4484,
											"end": 4493,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 4480,
											"end": 4502,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4459,
											"end": 4512,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 4459,
											"end": 4512,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4459,
											"end": 4512,
											"name": "tag",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 4459,
											"end": 4512,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4449,
											"end": 4512,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 4449,
											"end": 4512,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4404,
											"end": 4522,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4561,
											"end": 4563,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 4587,
											"end": 4640,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 4632,
											"end": 4639,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 4623,
											"end": 4629,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4612,
											"end": 4621,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 4608,
											"end": 4630,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4587,
											"end": 4640,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 4587,
											"end": 4640,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4587,
											"end": 4640,
											"name": "tag",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 4587,
											"end": 4640,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4577,
											"end": 4640,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4577,
											"end": 4640,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4532,
											"end": 4650,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4717,
											"end": 4720,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 4706,
											"end": 4715,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 4702,
											"end": 4721,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4689,
											"end": 4722,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 4749,
											"end": 4767,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4741,
											"end": 4747,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4738,
											"end": 4768,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 4735,
											"end": 4852,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4735,
											"end": 4852,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 4735,
											"end": 4852,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4771,
											"end": 4850,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 4771,
											"end": 4850,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 4771,
											"end": 4850,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4771,
											"end": 4850,
											"name": "tag",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 4771,
											"end": 4850,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4735,
											"end": 4852,
											"name": "tag",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 4735,
											"end": 4852,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4876,
											"end": 4938,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 4930,
											"end": 4937,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 4921,
											"end": 4927,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4910,
											"end": 4919,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 4906,
											"end": 4928,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4876,
											"end": 4938,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 4876,
											"end": 4938,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4876,
											"end": 4938,
											"name": "tag",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 4876,
											"end": 4938,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4866,
											"end": 4938,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4866,
											"end": 4938,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4660,
											"end": 4948,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3866,
											"end": 4955,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3866,
											"end": 4955,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 3866,
											"end": 4955,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3866,
											"end": 4955,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3866,
											"end": 4955,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 3866,
											"end": 4955,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3866,
											"end": 4955,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3866,
											"end": 4955,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3866,
											"end": 4955,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4961,
											"end": 5288,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 4961,
											"end": 5288,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5019,
											"end": 5025,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5068,
											"end": 5070,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5056,
											"end": 5065,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5047,
											"end": 5054,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5043,
											"end": 5066,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5039,
											"end": 5071,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 5036,
											"end": 5155,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5036,
											"end": 5155,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 5036,
											"end": 5155,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5074,
											"end": 5153,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 5074,
											"end": 5153,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 5074,
											"end": 5153,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5074,
											"end": 5153,
											"name": "tag",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 5074,
											"end": 5153,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5036,
											"end": 5155,
											"name": "tag",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 5036,
											"end": 5155,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5194,
											"end": 5195,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5219,
											"end": 5271,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 5263,
											"end": 5270,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5254,
											"end": 5260,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5243,
											"end": 5252,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5239,
											"end": 5261,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5219,
											"end": 5271,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 5219,
											"end": 5271,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5219,
											"end": 5271,
											"name": "tag",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 5219,
											"end": 5271,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5209,
											"end": 5271,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5209,
											"end": 5271,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5165,
											"end": 5281,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4961,
											"end": 5288,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4961,
											"end": 5288,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4961,
											"end": 5288,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4961,
											"end": 5288,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4961,
											"end": 5288,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5294,
											"end": 5403,
											"name": "tag",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 5294,
											"end": 5403,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5375,
											"end": 5396,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 5390,
											"end": 5395,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5375,
											"end": 5396,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 5375,
											"end": 5396,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5375,
											"end": 5396,
											"name": "tag",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 5375,
											"end": 5396,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5370,
											"end": 5373,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5363,
											"end": 5397,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5294,
											"end": 5403,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5294,
											"end": 5403,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5294,
											"end": 5403,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5409,
											"end": 5524,
											"name": "tag",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 5409,
											"end": 5524,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5494,
											"end": 5517,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 5511,
											"end": 5516,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5494,
											"end": 5517,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 5494,
											"end": 5517,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5494,
											"end": 5517,
											"name": "tag",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 5494,
											"end": 5517,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5489,
											"end": 5492,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5482,
											"end": 5518,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5409,
											"end": 5524,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5409,
											"end": 5524,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5409,
											"end": 5524,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5530,
											"end": 5740,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 5530,
											"end": 5740,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5617,
											"end": 5621,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5655,
											"end": 5657,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5644,
											"end": 5653,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5640,
											"end": 5658,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5632,
											"end": 5658,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5632,
											"end": 5658,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5668,
											"end": 5733,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 5730,
											"end": 5731,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5719,
											"end": 5728,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5715,
											"end": 5732,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5706,
											"end": 5712,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5668,
											"end": 5733,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 5668,
											"end": 5733,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5668,
											"end": 5733,
											"name": "tag",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 5668,
											"end": 5733,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5530,
											"end": 5740,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5530,
											"end": 5740,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5530,
											"end": 5740,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5530,
											"end": 5740,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5530,
											"end": 5740,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5746,
											"end": 5964,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 5746,
											"end": 5964,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5837,
											"end": 5841,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5875,
											"end": 5877,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5864,
											"end": 5873,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5860,
											"end": 5878,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5852,
											"end": 5878,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5852,
											"end": 5878,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5888,
											"end": 5957,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 5954,
											"end": 5955,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5943,
											"end": 5952,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5939,
											"end": 5956,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5930,
											"end": 5936,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5888,
											"end": 5957,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 5888,
											"end": 5957,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5888,
											"end": 5957,
											"name": "tag",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 5888,
											"end": 5957,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5746,
											"end": 5964,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5746,
											"end": 5964,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5746,
											"end": 5964,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5746,
											"end": 5964,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5746,
											"end": 5964,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5970,
											"end": 6099,
											"name": "tag",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 5970,
											"end": 6099,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6004,
											"end": 6010,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6031,
											"end": 6051,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 6031,
											"end": 6051,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 6031,
											"end": 6051,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6031,
											"end": 6051,
											"name": "tag",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 6031,
											"end": 6051,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6021,
											"end": 6051,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6021,
											"end": 6051,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6060,
											"end": 6093,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 6088,
											"end": 6092,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6080,
											"end": 6086,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6060,
											"end": 6093,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 6060,
											"end": 6093,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6060,
											"end": 6093,
											"name": "tag",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 6060,
											"end": 6093,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5970,
											"end": 6099,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5970,
											"end": 6099,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5970,
											"end": 6099,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5970,
											"end": 6099,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6105,
											"end": 6180,
											"name": "tag",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 6105,
											"end": 6180,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6138,
											"end": 6144,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6171,
											"end": 6173,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6165,
											"end": 6174,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6155,
											"end": 6174,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6155,
											"end": 6174,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6105,
											"end": 6180,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6105,
											"end": 6180,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6186,
											"end": 6497,
											"name": "tag",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 6186,
											"end": 6497,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6263,
											"end": 6267,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6353,
											"end": 6371,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6345,
											"end": 6351,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6342,
											"end": 6372,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 6339,
											"end": 6395,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6339,
											"end": 6395,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 6339,
											"end": 6395,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6375,
											"end": 6393,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 6375,
											"end": 6393,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 6375,
											"end": 6393,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6375,
											"end": 6393,
											"name": "tag",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 6375,
											"end": 6393,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6339,
											"end": 6395,
											"name": "tag",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 6339,
											"end": 6395,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6425,
											"end": 6429,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6417,
											"end": 6423,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6413,
											"end": 6430,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 6405,
											"end": 6430,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6405,
											"end": 6430,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6485,
											"end": 6489,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6479,
											"end": 6483,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6467,
											"end": 6490,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6467,
											"end": 6490,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6186,
											"end": 6497,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6186,
											"end": 6497,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6186,
											"end": 6497,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6186,
											"end": 6497,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6503,
											"end": 6810,
											"name": "tag",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 6503,
											"end": 6810,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6564,
											"end": 6568,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6654,
											"end": 6672,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6646,
											"end": 6652,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6643,
											"end": 6673,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 6640,
											"end": 6696,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6640,
											"end": 6696,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 6640,
											"end": 6696,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6676,
											"end": 6694,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 6676,
											"end": 6694,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 6676,
											"end": 6694,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6676,
											"end": 6694,
											"name": "tag",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 6676,
											"end": 6694,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6640,
											"end": 6696,
											"name": "tag",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 6640,
											"end": 6696,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6714,
											"end": 6743,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 6736,
											"end": 6742,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6714,
											"end": 6743,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 6714,
											"end": 6743,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6714,
											"end": 6743,
											"name": "tag",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 6714,
											"end": 6743,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6706,
											"end": 6743,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6706,
											"end": 6743,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6798,
											"end": 6802,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6792,
											"end": 6796,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6788,
											"end": 6803,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6780,
											"end": 6803,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6780,
											"end": 6803,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6503,
											"end": 6810,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6503,
											"end": 6810,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6503,
											"end": 6810,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6503,
											"end": 6810,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6816,
											"end": 6912,
											"name": "tag",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 6816,
											"end": 6912,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6853,
											"end": 6860,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6882,
											"end": 6906,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 6900,
											"end": 6905,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6882,
											"end": 6906,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 6882,
											"end": 6906,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6882,
											"end": 6906,
											"name": "tag",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 6882,
											"end": 6906,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6871,
											"end": 6906,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6871,
											"end": 6906,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6816,
											"end": 6912,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6816,
											"end": 6912,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6816,
											"end": 6912,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6816,
											"end": 6912,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6918,
											"end": 7008,
											"name": "tag",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 6918,
											"end": 7008,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6952,
											"end": 6959,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6995,
											"end": 7000,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6988,
											"end": 7001,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6981,
											"end": 7002,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6970,
											"end": 7002,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6970,
											"end": 7002,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6918,
											"end": 7008,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6918,
											"end": 7008,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6918,
											"end": 7008,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6918,
											"end": 7008,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7014,
											"end": 7163,
											"name": "tag",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 7014,
											"end": 7163,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7050,
											"end": 7057,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7090,
											"end": 7156,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7083,
											"end": 7088,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7079,
											"end": 7157,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7068,
											"end": 7157,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7068,
											"end": 7157,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7014,
											"end": 7163,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7014,
											"end": 7163,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7014,
											"end": 7163,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7014,
											"end": 7163,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7169,
											"end": 7295,
											"name": "tag",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 7169,
											"end": 7295,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7206,
											"end": 7213,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7246,
											"end": 7288,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7239,
											"end": 7244,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7235,
											"end": 7289,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7224,
											"end": 7289,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7224,
											"end": 7289,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7169,
											"end": 7295,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7169,
											"end": 7295,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7169,
											"end": 7295,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7169,
											"end": 7295,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7301,
											"end": 7378,
											"name": "tag",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 7301,
											"end": 7378,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7338,
											"end": 7345,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7367,
											"end": 7372,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7356,
											"end": 7372,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7356,
											"end": 7372,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7301,
											"end": 7378,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7301,
											"end": 7378,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7301,
											"end": 7378,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7301,
											"end": 7378,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7384,
											"end": 7538,
											"name": "tag",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 7384,
											"end": 7538,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7468,
											"end": 7474,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7463,
											"end": 7466,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7458,
											"end": 7461,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7445,
											"end": 7475,
											"name": "CALLDATACOPY",
											"source": 5
										},
										{
											"begin": 7530,
											"end": 7531,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7521,
											"end": 7527,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7516,
											"end": 7519,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7512,
											"end": 7528,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7505,
											"end": 7532,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7384,
											"end": 7538,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7384,
											"end": 7538,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7384,
											"end": 7538,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7384,
											"end": 7538,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7544,
											"end": 7825,
											"name": "tag",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 7544,
											"end": 7825,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7627,
											"end": 7654,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 7649,
											"end": 7653,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7627,
											"end": 7654,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 7627,
											"end": 7654,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7627,
											"end": 7654,
											"name": "tag",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 7627,
											"end": 7654,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7619,
											"end": 7625,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7615,
											"end": 7655,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7757,
											"end": 7763,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7745,
											"end": 7755,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7742,
											"end": 7764,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 7721,
											"end": 7739,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7709,
											"end": 7719,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7706,
											"end": 7740,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 7703,
											"end": 7765,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 7700,
											"end": 7788,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7700,
											"end": 7788,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 7700,
											"end": 7788,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7768,
											"end": 7786,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 7768,
											"end": 7786,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 7768,
											"end": 7786,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7768,
											"end": 7786,
											"name": "tag",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 7768,
											"end": 7786,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7700,
											"end": 7788,
											"name": "tag",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 7700,
											"end": 7788,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7808,
											"end": 7818,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7804,
											"end": 7806,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7797,
											"end": 7819,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7587,
											"end": 7825,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7544,
											"end": 7825,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7544,
											"end": 7825,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7544,
											"end": 7825,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7831,
											"end": 8011,
											"name": "tag",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 7831,
											"end": 8011,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7879,
											"end": 7956,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7876,
											"end": 7877,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7869,
											"end": 7957,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7976,
											"end": 7980,
											"name": "PUSH",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 7973,
											"end": 7974,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7966,
											"end": 7981,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8000,
											"end": 8004,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 7997,
											"end": 7998,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7990,
											"end": 8005,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 8017,
											"end": 8134,
											"name": "tag",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 8017,
											"end": 8134,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8126,
											"end": 8127,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8123,
											"end": 8124,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8116,
											"end": 8128,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 8140,
											"end": 8257,
											"name": "tag",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 8140,
											"end": 8257,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8249,
											"end": 8250,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8246,
											"end": 8247,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8239,
											"end": 8251,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 8263,
											"end": 8380,
											"name": "tag",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 8263,
											"end": 8380,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8372,
											"end": 8373,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8369,
											"end": 8370,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8362,
											"end": 8374,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 8386,
											"end": 8503,
											"name": "tag",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 8386,
											"end": 8503,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8495,
											"end": 8496,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8492,
											"end": 8493,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8485,
											"end": 8497,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 8509,
											"end": 8626,
											"name": "tag",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 8509,
											"end": 8626,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8618,
											"end": 8619,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8615,
											"end": 8616,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8608,
											"end": 8620,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 8632,
											"end": 8734,
											"name": "tag",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 8632,
											"end": 8734,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8673,
											"end": 8679,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8724,
											"end": 8726,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 8720,
											"end": 8727,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 8715,
											"end": 8717,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 8708,
											"end": 8713,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8704,
											"end": 8718,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8700,
											"end": 8728,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8690,
											"end": 8728,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8690,
											"end": 8728,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8632,
											"end": 8734,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8632,
											"end": 8734,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8632,
											"end": 8734,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8632,
											"end": 8734,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 8740,
											"end": 8862,
											"name": "tag",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 8740,
											"end": 8862,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8813,
											"end": 8837,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 8831,
											"end": 8836,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8813,
											"end": 8837,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 8813,
											"end": 8837,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 8813,
											"end": 8837,
											"name": "tag",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 8813,
											"end": 8837,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8806,
											"end": 8811,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8803,
											"end": 8838,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 8793,
											"end": 8856,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 8793,
											"end": 8856,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8852,
											"end": 8853,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8849,
											"end": 8850,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8842,
											"end": 8854,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 8793,
											"end": 8856,
											"name": "tag",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 8793,
											"end": 8856,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8740,
											"end": 8862,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8740,
											"end": 8862,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 8868,
											"end": 8988,
											"name": "tag",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 8868,
											"end": 8988,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8940,
											"end": 8963,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 8957,
											"end": 8962,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8940,
											"end": 8963,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 8940,
											"end": 8963,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 8940,
											"end": 8963,
											"name": "tag",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 8940,
											"end": 8963,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8933,
											"end": 8938,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8930,
											"end": 8964,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 8920,
											"end": 8982,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 8920,
											"end": 8982,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8978,
											"end": 8979,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8975,
											"end": 8976,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8968,
											"end": 8980,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 8920,
											"end": 8982,
											"name": "tag",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 8920,
											"end": 8982,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8868,
											"end": 8988,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8868,
											"end": 8988,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 8994,
											"end": 9116,
											"name": "tag",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 8994,
											"end": 9116,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9067,
											"end": 9091,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 9085,
											"end": 9090,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9067,
											"end": 9091,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 9067,
											"end": 9091,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 9067,
											"end": 9091,
											"name": "tag",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 9067,
											"end": 9091,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9060,
											"end": 9065,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9057,
											"end": 9092,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 9047,
											"end": 9110,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 9047,
											"end": 9110,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9106,
											"end": 9107,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9103,
											"end": 9104,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9096,
											"end": 9108,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 9047,
											"end": 9110,
											"name": "tag",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 9047,
											"end": 9110,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8994,
											"end": 9116,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8994,
											"end": 9116,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"_Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Simple implementation of `ERC1155Receiver` that will allow a contract to hold ERC1155 tokens. IMPORTANT: When inheriting this contract, you must include a way to use the received tokens, otherwise they will be stuck.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/npm/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":\"ERC1155Holder\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/npm/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\".deps/npm/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":{\"keccak256\":\"0x2e024ca51ce5abe16c0d34e6992a1104f356e2244eb4ccbec970435e8b3405e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a74009db3c6fc8db851ba69ddb6795b5c1ef1120c5a00fd1a8dc3a717dd9d519\",\"dweb:/ipfs/QmZMk8Yh2X3gPS51ckUVLEXjZUhMSEeGApnA53WtjvLb9h\"]},\".deps/npm/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":{\"keccak256\":\"0x3dd5e1a66a56f30302108a1da97d677a42b1daa60e503696b2bcbbf3e4c95bcb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0808de0ae4918c664643c885ca7fa6503e8ef2bd75609dfc85152c0128a3422d\",\"dweb:/ipfs/QmNrhFC1XgBKuuxfahFeiwi1MCdu3FLNpHj2uStgmf4iJj\"]},\".deps/npm/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\".deps/npm/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Simple implementation of `ERC1155Receiver` that will allow a contract to hold ERC1155 tokens. IMPORTANT: When inheriting this contract, you must include a way to use the received tokens, otherwise they will be stuck.",
						"version": 1
					}
				}
			},
			".deps/npm/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol": {
				"ERC1155Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "_Available since v3.1._",
						"kind": "dev",
						"methods": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
								"details": "Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"ids": "An array containing ids of each token being transferred (order and length must match values array)",
									"operator": "The address which initiated the batch transfer (i.e. msg.sender)",
									"values": "An array containing amounts of each token being transferred (order and length must match ids array)"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
								}
							},
							"onERC1155Received(address,address,uint256,uint256,bytes)": {
								"details": "Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"id": "The ID of the token being transferred",
									"operator": "The address which initiated the transfer (i.e. msg.sender)",
									"value": "The amount of tokens being transferred"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"_Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/npm/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":\"ERC1155Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/npm/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\".deps/npm/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":{\"keccak256\":\"0x3dd5e1a66a56f30302108a1da97d677a42b1daa60e503696b2bcbbf3e4c95bcb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0808de0ae4918c664643c885ca7fa6503e8ef2bd75609dfc85152c0128a3422d\",\"dweb:/ipfs/QmNrhFC1XgBKuuxfahFeiwi1MCdu3FLNpHj2uStgmf4iJj\"]},\".deps/npm/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\".deps/npm/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			".deps/npm/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/npm/@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/npm/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\".deps/npm/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			".deps/npm/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/npm/@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/npm/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			".deps/npm/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"ast": {
					"absolutePath": ".deps/npm/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
					"exportedSymbols": {
						"IERC1155Receiver": [
							40
						],
						"IERC165": [
							161
						]
					},
					"id": 41,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "118:23:0"
						},
						{
							"absolutePath": ".deps/npm/@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 41,
							"sourceUnit": 162,
							"src": "143:47:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 161,
										"src": "262:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "262:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "192:39:0",
								"text": " @dev _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 40,
							"linearizedBaseContracts": [
								40,
								161
							],
							"name": "IERC1155Receiver",
							"nameLocation": "242:16:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 6,
										"nodeType": "StructuredDocumentation",
										"src": "276:826:0",
										"text": " @dev Handles the receipt of a single ERC1155 token type. This function is\n called at the end of a `safeTransferFrom` after the balance has been updated.\n NOTE: To accept the transfer, this must return\n `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n (i.e. 0xf23a6e61, or its own function selector).\n @param operator The address which initiated the transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param id The ID of the token being transferred\n @param value The amount of tokens being transferred\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "f23a6e61",
									"id": 21,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155Received",
									"nameLocation": "1116:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1151:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1143:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 7,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1143:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1177:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1169:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 9,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1169:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1199:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1191:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 11,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1191:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1219:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1211:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1249:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1234:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 15,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1234:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1133:126:0"
									},
									"returnParameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1278:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 18,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1278:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1277:8:0"
									},
									"scope": 40,
									"src": "1107:179:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "1292:994:0",
										"text": " @dev Handles the receipt of a multiple ERC1155 token types. This function\n is called at the end of a `safeBatchTransferFrom` after the balances have\n been updated.\n NOTE: To accept the transfer(s), this must return\n `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n (i.e. 0xbc197c81, or its own function selector).\n @param operator The address which initiated the batch transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param ids An array containing ids of each token being transferred (order and length must match values array)\n @param values An array containing amounts of each token being transferred (order and length must match ids array)\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "bc197c81",
									"id": 39,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155BatchReceived",
									"nameLocation": "2300:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2340:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "2332:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2332:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2366:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "2358:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 25,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2358:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2399:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "2380:22:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 27,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2380:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 28,
													"nodeType": "ArrayTypeName",
													"src": "2380:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "2431:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "2412:25:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 30,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2412:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 31,
													"nodeType": "ArrayTypeName",
													"src": "2412:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2462:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "2447:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 33,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2447:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:150:0"
									},
									"returnParameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "2491:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 36,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2491:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2490:8:0"
									},
									"scope": 40,
									"src": "2291:208:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 41,
							"src": "232:2269:0",
							"usedErrors": []
						}
					],
					"src": "118:2384:0"
				},
				"id": 0
			},
			".deps/npm/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol": {
				"ast": {
					"absolutePath": ".deps/npm/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol",
					"exportedSymbols": {
						"ERC1155Holder": [
							91
						],
						"ERC1155Receiver": [
							125
						],
						"ERC165": [
							149
						],
						"IERC1155Receiver": [
							40
						],
						"IERC165": [
							161
						]
					},
					"id": 92,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 42,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "121:23:1"
						},
						{
							"absolutePath": ".deps/npm/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol",
							"file": "./ERC1155Receiver.sol",
							"id": 43,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 92,
							"sourceUnit": 126,
							"src": "146:31:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 45,
										"name": "ERC1155Receiver",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 125,
										"src": "477:15:1"
									},
									"id": 46,
									"nodeType": "InheritanceSpecifier",
									"src": "477:15:1"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 44,
								"nodeType": "StructuredDocumentation",
								"src": "179:271:1",
								"text": " Simple implementation of `ERC1155Receiver` that will allow a contract to hold ERC1155 tokens.\n IMPORTANT: When inheriting this contract, you must include a way to use the received tokens, otherwise they will be\n stuck.\n @dev _Available since v3.1._"
							},
							"fullyImplemented": true,
							"id": 91,
							"linearizedBaseContracts": [
								91,
								125,
								40,
								149,
								161
							],
							"name": "ERC1155Holder",
							"nameLocation": "460:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										21
									],
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "663:55:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 62,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967268,
															"src": "680:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC1155Holder_$91",
																"typeString": "contract ERC1155Holder"
															}
														},
														"id": 63,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "onERC1155Received",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 67,
														"src": "680:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
															"typeString": "function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"
														}
													},
													"id": 64,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberName": "selector",
													"nodeType": "MemberAccess",
													"src": "680:31:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"functionReturnParameters": 61,
												"id": 65,
												"nodeType": "Return",
												"src": "673:38:1"
											}
										]
									},
									"functionSelector": "f23a6e61",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155Received",
									"nameLocation": "508:17:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 58,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "637:8:1"
									},
									"parameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 48,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "535:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 47,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "535:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "552:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 49,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "552:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "569:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "569:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "586:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 53,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "586:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "603:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 55,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "603:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "525:96:1"
									},
									"returnParameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 60,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "655:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 59,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "655:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:8:1"
									},
									"scope": 91,
									"src": "499:219:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										39
									],
									"body": {
										"id": 89,
										"nodeType": "Block",
										"src": "911:60:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 85,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967268,
															"src": "928:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC1155Holder_$91",
																"typeString": "contract ERC1155Holder"
															}
														},
														"id": 86,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "onERC1155BatchReceived",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 90,
														"src": "928:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"
														}
													},
													"id": 87,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberName": "selector",
													"nodeType": "MemberAccess",
													"src": "928:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"functionReturnParameters": 84,
												"id": 88,
												"nodeType": "Return",
												"src": "921:43:1"
											}
										]
									},
									"functionSelector": "bc197c81",
									"id": 90,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155BatchReceived",
									"nameLocation": "733:22:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 81,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "885:8:1"
									},
									"parameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "765:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "765:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "782:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "782:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "799:16:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 72,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "799:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 73,
													"nodeType": "ArrayTypeName",
													"src": "799:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "825:16:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 75,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "825:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 76,
													"nodeType": "ArrayTypeName",
													"src": "825:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "851:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 78,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "851:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "755:114:1"
									},
									"returnParameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "903:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 82,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "903:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "902:8:1"
									},
									"scope": 91,
									"src": "724:247:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 92,
							"src": "451:522:1",
							"usedErrors": []
						}
					],
					"src": "121:853:1"
				},
				"id": 1
			},
			".deps/npm/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol": {
				"ast": {
					"absolutePath": ".deps/npm/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol",
					"exportedSymbols": {
						"ERC1155Receiver": [
							125
						],
						"ERC165": [
							149
						],
						"IERC1155Receiver": [
							40
						],
						"IERC165": [
							161
						]
					},
					"id": 126,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 93,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:2"
						},
						{
							"absolutePath": ".deps/npm/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
							"file": "../IERC1155Receiver.sol",
							"id": 94,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 126,
							"sourceUnit": 41,
							"src": "133:33:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": ".deps/npm/@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../../utils/introspection/ERC165.sol",
							"id": 95,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 126,
							"sourceUnit": 150,
							"src": "167:49:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 97,
										"name": "ERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 149,
										"src": "295:6:2"
									},
									"id": 98,
									"nodeType": "InheritanceSpecifier",
									"src": "295:6:2"
								},
								{
									"baseName": {
										"id": 99,
										"name": "IERC1155Receiver",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 40,
										"src": "303:16:2"
									},
									"id": 100,
									"nodeType": "InheritanceSpecifier",
									"src": "303:16:2"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 96,
								"nodeType": "StructuredDocumentation",
								"src": "218:39:2",
								"text": " @dev _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 125,
							"linearizedBaseContracts": [
								125,
								40,
								149,
								161
							],
							"name": "ERC1155Receiver",
							"nameLocation": "276:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										148,
										160
									],
									"body": {
										"id": 123,
										"nodeType": "Block",
										"src": "495:113:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 116,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 111,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 103,
															"src": "512:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 113,
																		"name": "IERC1155Receiver",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 40,
																		"src": "532:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$40_$",
																			"typeString": "type(contract IERC1155Receiver)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$40_$",
																			"typeString": "type(contract IERC1155Receiver)"
																		}
																	],
																	"id": 112,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "527:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 114,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "527:22:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155Receiver_$40",
																	"typeString": "type(contract IERC1155Receiver)"
																}
															},
															"id": 115,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "527:34:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "512:49:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 119,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 103,
																"src": "589:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 117,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "565:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC1155Receiver_$125_$",
																	"typeString": "type(contract super ERC1155Receiver)"
																}
															},
															"id": 118,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 148,
															"src": "565:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 120,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "565:36:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "512:89:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 110,
												"id": 122,
												"nodeType": "Return",
												"src": "505:96:2"
											}
										]
									},
									"documentation": {
										"id": 101,
										"nodeType": "StructuredDocumentation",
										"src": "326:56:2",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 124,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "396:17:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 107,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 105,
												"name": "ERC165",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 149,
												"src": "463:6:2"
											},
											{
												"id": 106,
												"name": "IERC165",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 161,
												"src": "471:7:2"
											}
										],
										"src": "454:25:2"
									},
									"parameters": {
										"id": 104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 103,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "421:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "414:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 102,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "414:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "413:20:2"
									},
									"returnParameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "489:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 108,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "489:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "488:6:2"
									},
									"scope": 125,
									"src": "387:221:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 126,
							"src": "258:352:2",
							"usedErrors": []
						}
					],
					"src": "108:503:2"
				},
				"id": 2
			},
			".deps/npm/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": ".deps/npm/@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							149
						],
						"IERC165": [
							161
						]
					},
					"id": 150,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 127,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "99:23:3"
						},
						{
							"absolutePath": ".deps/npm/@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 128,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 150,
							"sourceUnit": 162,
							"src": "124:23:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 130,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 161,
										"src": "754:7:3"
									},
									"id": 131,
									"nodeType": "InheritanceSpecifier",
									"src": "754:7:3"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 129,
								"nodeType": "StructuredDocumentation",
								"src": "149:576:3",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 149,
							"linearizedBaseContracts": [
								149,
								161
							],
							"name": "ERC165",
							"nameLocation": "744:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										160
									],
									"body": {
										"id": 147,
										"nodeType": "Block",
										"src": "920:64:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 140,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 134,
														"src": "937:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 142,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 161,
																	"src": "957:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$161_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$161_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 141,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "952:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 143,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "952:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$161",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 144,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "952:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "937:40:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 139,
												"id": 146,
												"nodeType": "Return",
												"src": "930:47:3"
											}
										]
									},
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "768:56:3",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 148,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "838:17:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 136,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "896:8:3"
									},
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "863:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "856:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 133,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "856:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "855:20:3"
									},
									"returnParameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "914:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 137,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "914:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "913:6:3"
									},
									"scope": 149,
									"src": "829:155:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 150,
							"src": "726:260:3",
							"usedErrors": []
						}
					],
					"src": "99:888:3"
				},
				"id": 3
			},
			".deps/npm/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": ".deps/npm/@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							161
						]
					},
					"id": 162,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 151,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 152,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:4",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 161,
							"linearizedBaseContracts": [
								161
							],
							"name": "IERC165",
							"nameLocation": "415:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 153,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:4",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 160,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "801:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 154,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:4"
									},
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "844:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 157,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:4"
									},
									"scope": 161,
									"src": "774:76:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 162,
							"src": "405:447:4",
							"usedErrors": []
						}
					],
					"src": "100:753:4"
				},
				"id": 4
			}
		}
	}
}